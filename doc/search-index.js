var searchIndex = JSON.parse('{\
"acpi_tables":{"doc":"","i":[[0,"aml","acpi_tables","",null,null],[8,"Aml","acpi_tables::aml","The trait Aml can be implemented by the ACPI objects to …",null,null],[10,"to_aml_bytes","","Translate an ACPI object into AML code and append to the …",0,[[["vec",3]]]],[17,"ZERO","","Zero object in ASL.",null,null],[3,"Zero","","",null,null],[17,"ONE","","One object in ASL.",null,null],[3,"One","","",null,null],[17,"ONES","","Ones object represents all bits 1.",null,null],[3,"Ones","","",null,null],[3,"Path","","Represents Namestring to construct ACPI objects like …",null,null],[11,"new","","Per ACPI Spec, the Namestring split by \\\".\\\" has 4 bytes …",1,[[["str",15]]]],[6,"Byte","","",null,null],[6,"Word","","",null,null],[6,"DWord","","",null,null],[6,"QWord","","",null,null],[3,"Name","","Name object. bytes represents the raw AML data for it.",null,null],[11,"new","","Create Name object:",2,[[["path",3],["aml",8]]]],[3,"Package","","Package object. \'children\' represents the ACPI objects …",null,null],[11,"new","","Create Package object:",3,[[["aml",8],["vec",3]]]],[3,"EISAName","","EISAName object. \'value\' means the encoded u32 …",null,null],[11,"new","","Per ACPI Spec, the EisaIdString must be a String object …",4,[[["str",15]]]],[6,"Usize","","",null,null],[6,"AmlStr","","implement Aml trait for \'str\' so that \'str\' can be …",null,null],[6,"AmlString","","implement Aml trait for \'String\'. So purpose with str.",null,null],[3,"ResourceTemplate","","ResouceTemplate object. \'children\' represents the ACPI …",null,null],[11,"new","","Create ResouceTemplate object",5,[[["aml",8],["vec",3]]]],[3,"Memory32Fixed","","Memory32Fixed object with read_write accessing type, and …",null,null],[11,"new","","Create Memory32Fixed object.",6,[[["bool",15],["u32",15]]]],[4,"AddressSpaceCachable","","AddressSpaceCachable represent cache types for …",null,null],[13,"NotCacheable","","",7,null],[13,"Cacheable","","",7,null],[13,"WriteCombining","","",7,null],[13,"PreFetchable","","",7,null],[3,"AddressSpace","","AddressSpace structure with type, resouce range and flags …",null,null],[11,"new_memory","","Create DWordMemory/QWordMemory object",8,[[["bool",15],["addressspacecachable",4]]]],[11,"new_io","","Create WordIO/DWordIO/QWordIO object",8,[[]]],[11,"new_bus_number","","Create WordBusNumber object",8,[[]]],[3,"IO","","IO resouce object with the IO range, alignment and length",null,null],[11,"new","","Create IO object",9,[[["u16",15],["u8",15]]]],[3,"Interrupt","","Interrupt resouce object with the interrupt characters.",null,null],[11,"new","","Create Interrupt object",10,[[["bool",15],["u32",15]]]],[3,"Device","","Device object with its device name and children objects …",null,null],[11,"new","","Create Device object",11,[[["path",3],["aml",8],["vec",3]]]],[3,"Scope","","Scope object with its name and children objects in it.",null,null],[11,"new","","Create Scope object",12,[[["path",3],["aml",8],["vec",3]]]],[3,"Method","","Method object with its name, children objects, arguments …",null,null],[11,"new","","Create Method object.",13,[[["aml",8],["u8",15],["path",3],["bool",15],["vec",3]]]],[3,"Return","","Return object with its return value.",null,null],[11,"new","","Create Return object",14,[[["aml",8]]]],[4,"FieldAccessType","","FiledAccessType defines the filed accessing types.",null,null],[13,"Any","","",15,null],[13,"Byte","","",15,null],[13,"Word","","",15,null],[13,"DWord","","",15,null],[13,"QWord","","",15,null],[13,"Buffer","","",15,null],[4,"FieldUpdateRule","","FiledUpdateRule defines the rules to update the filed.",null,null],[13,"Preserve","","",16,null],[13,"WriteAsOnes","","",16,null],[13,"WriteAsZeroes","","",16,null],[4,"FieldEntry","","FiledEntry defines the filed entry.",null,null],[13,"Named","","",17,null],[13,"Reserved","","",17,null],[3,"Field","","Field object with the region name, filed entries, access …",null,null],[11,"new","","Create Field object",18,[[["fieldaccesstype",4],["fieldupdaterule",4],["fieldentry",4],["path",3],["vec",3]]]],[4,"OpRegionSpace","","The space type for OperationRegion object",null,null],[13,"SystemMemory","","",19,null],[13,"SystemIO","","",19,null],[13,"PCIConfig","","",19,null],[13,"EmbeddedControl","","",19,null],[13,"SMBus","","",19,null],[13,"SystemCMOS","","",19,null],[13,"PciBarTarget","","",19,null],[13,"IPMI","","",19,null],[13,"GeneralPurposeIO","","",19,null],[13,"GenericSerialBus","","",19,null],[3,"OpRegion","","OperationRegion object with region name, region space …",null,null],[11,"new","","Create OperationRegion object.",20,[[["usize",15],["opregionspace",4],["path",3]]]],[3,"If","","If object with the if condition(predicate) and the body …",null,null],[11,"new","","Create If object.",21,[[["aml",8],["vec",3]]]],[3,"Equal","","Equal object with its right part and left part, which are …",null,null],[11,"new","","Create Equal object.",22,[[["aml",8]]]],[3,"LessThan","","LessThan object with its right part and left part, which …",null,null],[11,"new","","Create LessThan object.",23,[[["aml",8]]]],[3,"Arg","","Argx object.",null,null],[12,"0","","",24,null],[3,"Local","","Localx object.",null,null],[12,"0","","",25,null],[3,"Store","","Store object with the ACPI object name which can be …",null,null],[11,"new","","Create Store object.",26,[[["aml",8]]]],[3,"Mutex","","Mutex object with a mutex name and a synchronization …",null,null],[11,"new","","Create Mutex object.",27,[[["path",3],["u8",15]]]],[3,"Acquire","","Acquire object with a Mutex object and timeout value.",null,null],[11,"new","","Create Acquire object.",28,[[["path",3],["u16",15]]]],[3,"Release","","Release object with a Mutex object to release.",null,null],[11,"new","","Create Release object.",29,[[["path",3]]]],[3,"Notify","","Notify object with an object which is to be notified with …",null,null],[11,"new","","Create Notify object.",30,[[["aml",8]]]],[3,"While","","While object with the while condition objects(predicate) …",null,null],[11,"new","","Create While object.",31,[[["aml",8],["vec",3]]]],[3,"Add","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",32,[[["aml",8]]]],[3,"Concat","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",33,[[["aml",8]]]],[3,"Subtract","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",34,[[["aml",8]]]],[3,"Multiply","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",35,[[["aml",8]]]],[3,"ShiftLeft","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",36,[[["aml",8]]]],[3,"ShiftRight","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",37,[[["aml",8]]]],[3,"And","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",38,[[["aml",8]]]],[3,"Nand","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",39,[[["aml",8]]]],[3,"Or","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",40,[[["aml",8]]]],[3,"Nor","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",41,[[["aml",8]]]],[3,"Xor","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",42,[[["aml",8]]]],[3,"ConcatRes","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",43,[[["aml",8]]]],[3,"Mod","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",44,[[["aml",8]]]],[3,"Index","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",45,[[["aml",8]]]],[3,"ToString","","General operation object with the operator a/b and a …",null,null],[11,"new","","Create the object.",46,[[["aml",8]]]],[3,"MethodCall","","MethodCall object with the method name and parameter …",null,null],[11,"new","","Create MethodCall object.",47,[[["path",3],["aml",8],["vec",3]]]],[3,"Buffer","","Buffer object with the data in it.",null,null],[11,"new","","Create Buffer object.",48,[[["vec",3],["u8",15]]]],[0,"facs","acpi_tables","",null,null],[3,"FACS","acpi_tables::facs","",null,null],[12,"signature","","",49,null],[12,"length","","",49,null],[12,"hardware_signature","","",49,null],[12,"waking","","",49,null],[12,"lock","","",49,null],[12,"flags","","",49,null],[12,"x_waking","","",49,null],[12,"version","","",49,null],[12,"_reserved1","","",49,null],[12,"ospm_flags","","",49,null],[12,"_reserved2","","",49,null],[11,"new","","",49,[[]]],[11,"len","","",49,[[],["usize",15]]],[0,"rsdp","acpi_tables","",null,null],[3,"RSDP","acpi_tables::rsdp","",null,null],[12,"signature","","",50,null],[12,"checksum","","",50,null],[12,"oem_id","","",50,null],[12,"revision","","",50,null],[12,"length","","",50,null],[12,"xsdt_addr","","",50,null],[12,"extended_checksum","","",50,null],[11,"new","","",50,[[["u64",15]]]],[11,"len","","",50,[[],["usize",15]]],[0,"sdt","acpi_tables","",null,null],[3,"SDT","acpi_tables::sdt","SDT represents for System Description Table. The …",null,null],[17,"HEADER_LEN","","",null,null],[11,"new","","Set up the ACPI table header at the front of the SDT. The …",51,[[["u32",15],["u8",15]]]],[11,"from_file","","Set up the ACPI table from file content. Verify file …",51,[[["path",3]],["result",6]]],[11,"is_signature","","",51,[[],["bool",15]]],[11,"as_slice","","",51,[[]]],[11,"append","","",51,[[["datainit",8]]]],[11,"append_slice","","",51,[[]]],[11,"write","","Write a value at the given offset",51,[[["usize",15],["datainit",8]]]],[11,"len","","",51,[[],["usize",15]]],[11,"from","acpi_tables::aml","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","acpi_tables::facs","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","acpi_tables::rsdp","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","acpi_tables::sdt","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"to_aml_bytes","acpi_tables::aml","",52,[[["vec",3]]]],[11,"to_aml_bytes","","",53,[[["vec",3]]]],[11,"to_aml_bytes","","",54,[[["vec",3]]]],[11,"to_aml_bytes","","",1,[[["vec",3]]]],[11,"to_aml_bytes","acpi_tables","",55,[[["vec",3]]]],[11,"to_aml_bytes","","",56,[[["vec",3]]]],[11,"to_aml_bytes","","",57,[[["vec",3]]]],[11,"to_aml_bytes","","",58,[[["vec",3]]]],[11,"to_aml_bytes","acpi_tables::aml","",2,[[["vec",3]]]],[11,"to_aml_bytes","","",3,[[["vec",3]]]],[11,"to_aml_bytes","","",4,[[["vec",3]]]],[11,"to_aml_bytes","acpi_tables","",59,[[["vec",3]]]],[11,"to_aml_bytes","","",60,[[["vec",3]]]],[11,"to_aml_bytes","","",61,[[["vec",3]]]],[11,"to_aml_bytes","acpi_tables::aml","",5,[[["vec",3]]]],[11,"to_aml_bytes","","",6,[[["vec",3]]]],[11,"to_aml_bytes","","",8,[[["vec",3]]]],[11,"to_aml_bytes","","",8,[[["vec",3]]]],[11,"to_aml_bytes","","",8,[[["vec",3]]]],[11,"to_aml_bytes","","",9,[[["vec",3]]]],[11,"to_aml_bytes","","",10,[[["vec",3]]]],[11,"to_aml_bytes","","",11,[[["vec",3]]]],[11,"to_aml_bytes","","",12,[[["vec",3]]]],[11,"to_aml_bytes","","",13,[[["vec",3]]]],[11,"to_aml_bytes","","",14,[[["vec",3]]]],[11,"to_aml_bytes","","",18,[[["vec",3]]]],[11,"to_aml_bytes","","",20,[[["vec",3]]]],[11,"to_aml_bytes","","",21,[[["vec",3]]]],[11,"to_aml_bytes","","",22,[[["vec",3]]]],[11,"to_aml_bytes","","",23,[[["vec",3]]]],[11,"to_aml_bytes","","Per ACPI spec, there is maximum 7 Argx objects from Arg0 …",24,[[["vec",3]]]],[11,"to_aml_bytes","","Per ACPI spec, there is maximum 8 Localx objects from …",25,[[["vec",3]]]],[11,"to_aml_bytes","","",26,[[["vec",3]]]],[11,"to_aml_bytes","","",27,[[["vec",3]]]],[11,"to_aml_bytes","","",28,[[["vec",3]]]],[11,"to_aml_bytes","","",29,[[["vec",3]]]],[11,"to_aml_bytes","","",30,[[["vec",3]]]],[11,"to_aml_bytes","","",31,[[["vec",3]]]],[11,"to_aml_bytes","","",32,[[["vec",3]]]],[11,"to_aml_bytes","","",33,[[["vec",3]]]],[11,"to_aml_bytes","","",34,[[["vec",3]]]],[11,"to_aml_bytes","","",35,[[["vec",3]]]],[11,"to_aml_bytes","","",36,[[["vec",3]]]],[11,"to_aml_bytes","","",37,[[["vec",3]]]],[11,"to_aml_bytes","","",38,[[["vec",3]]]],[11,"to_aml_bytes","","",39,[[["vec",3]]]],[11,"to_aml_bytes","","",40,[[["vec",3]]]],[11,"to_aml_bytes","","",41,[[["vec",3]]]],[11,"to_aml_bytes","","",42,[[["vec",3]]]],[11,"to_aml_bytes","","",43,[[["vec",3]]]],[11,"to_aml_bytes","","",44,[[["vec",3]]]],[11,"to_aml_bytes","","",45,[[["vec",3]]]],[11,"to_aml_bytes","","",46,[[["vec",3]]]],[11,"to_aml_bytes","","",47,[[["vec",3]]]],[11,"to_aml_bytes","","",48,[[["vec",3]]]],[11,"from","","",1,[[["str",15]]]],[11,"clone","","",7,[[],["addressspacecachable",4]]],[11,"clone","","",15,[[],["fieldaccesstype",4]]],[11,"clone","","",16,[[],["fieldupdaterule",4]]],[11,"clone","","",19,[[],["opregionspace",4]]],[11,"clone","acpi_tables::facs","",49,[[],["facs",3]]],[11,"clone","acpi_tables::rsdp","",50,[[],["rsdp",3]]],[11,"clone","acpi_tables::sdt","",51,[[],["sdt",3]]],[11,"default","acpi_tables::facs","",49,[[],["facs",3]]],[11,"default","acpi_tables::rsdp","",50,[[],["rsdp",3]]]],"p":[[8,"Aml"],[3,"Path"],[3,"Name"],[3,"Package"],[3,"EISAName"],[3,"ResourceTemplate"],[3,"Memory32Fixed"],[4,"AddressSpaceCachable"],[3,"AddressSpace"],[3,"IO"],[3,"Interrupt"],[3,"Device"],[3,"Scope"],[3,"Method"],[3,"Return"],[4,"FieldAccessType"],[4,"FieldUpdateRule"],[4,"FieldEntry"],[3,"Field"],[4,"OpRegionSpace"],[3,"OpRegion"],[3,"If"],[3,"Equal"],[3,"LessThan"],[3,"Arg"],[3,"Local"],[3,"Store"],[3,"Mutex"],[3,"Acquire"],[3,"Release"],[3,"Notify"],[3,"While"],[3,"Add"],[3,"Concat"],[3,"Subtract"],[3,"Multiply"],[3,"ShiftLeft"],[3,"ShiftRight"],[3,"And"],[3,"Nand"],[3,"Or"],[3,"Nor"],[3,"Xor"],[3,"ConcatRes"],[3,"Mod"],[3,"Index"],[3,"ToString"],[3,"MethodCall"],[3,"Buffer"],[3,"FACS"],[3,"RSDP"],[3,"SDT"],[3,"Zero"],[3,"One"],[3,"Ones"],[6,"Byte"],[6,"Word"],[6,"DWord"],[6,"QWord"],[6,"Usize"],[6,"AmlStr"],[6,"AmlString"]]},\
"anyhow":{"doc":"github crates-io docs-rs","i":[[3,"Error","anyhow","The <code>Error</code> type, a wrapper around a dynamic error type.",null,null],[3,"Chain","","Iterator of a chain of source errors.",null,null],[6,"Result","","<code>Result<T, Error></code>",null,null],[8,"Context","","Provides the <code>context</code> method for <code>Result</code>.",null,null],[10,"context","","Wrap the error value with additional context.",0,[[],[["result",6],["error",3]]]],[10,"with_context","","Wrap the error value with additional context that is …",0,[[],[["result",6],["error",3]]]],[14,"bail","","Return early with an error.",null,null],[14,"ensure","","Return early with an error if a condition is not …",null,null],[14,"anyhow","","Construct an ad-hoc error from a string or existing non-…",null,null],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"drop","","",1,[[]]],[11,"as_ref","","",1,[[],["stderror",8]]],[11,"as_ref","","",1,[[],["stderror",8]]],[11,"from","","",1,[[]]],[11,"next_back","","",2,[[],["option",4]]],[11,"len","","",2,[[],["usize",15]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"clone","","",2,[[],["chain",3]]],[11,"default","","",2,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"new","","",2,[[["stderror",8]]]],[11,"new","","Create a new error object from any error type.",1,[[]]],[11,"msg","","Create a new error object from a printable error message.",1,[[]]],[11,"context","","Wrap the error value with additional context.",1,[[]]],[11,"chain","","An iterator of the chain of source errors contained by …",1,[[],["chain",3]]],[11,"root_cause","","The lowest level cause of this error — this error\'s …",1,[[],["stderror",8]]],[11,"is","","Returns true if <code>E</code> is the type held by this error object.",1,[[],["bool",15]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",1,[[],["result",4]]],[11,"downcast_ref","","Downcast this error object by reference.",1,[[],["option",4]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",1,[[],["option",4]]]],"p":[[8,"Context"],[3,"Error"],[3,"Chain"]]},\
"arch":{"doc":"","i":[[0,"android","arch","",null,null],[5,"create_android_fdt","arch::android","Creates a flattened device tree containing all of the …",null,[[["fdtwriter",3],["file",3]],["result",6]]],[0,"fdt","arch","This module writes Flattened Devicetree blobs as defined …",null,null],[4,"Error","arch::fdt","",null,null],[13,"FdtFileParseError","","",0,null],[13,"FdtGuestMemoryWriteError","","",0,null],[13,"FdtIoError","","",0,null],[13,"InvalidString","","",0,null],[13,"OutOfOrderEndNode","","",0,null],[13,"PropertyAfterEndNode","","",0,null],[13,"PropertyValueTooLarge","","",0,null],[13,"TotalSizeTooLarge","","",0,null],[13,"UnclosedNode","","",0,null],[6,"Result","","",null,null],[3,"FdtWriter","","Interface for writing a Flattened Devicetree (FDT) and …",null,null],[3,"FdtReserveEntry","","Reserved physical memory region.",null,null],[12,"address","","Physical address of the beginning of the reserved region.",1,null],[12,"size","","Size of the reserved region in bytes.",1,null],[3,"FdtWriterNode","","Handle to an open node created by <code>FdtWriter::begin_node</code>.",null,null],[11,"new","","Create a new Flattened Devicetree writer instance.",2,[[]]],[11,"set_boot_cpuid_phys","","Set the <code>boot_cpuid_phys</code> field of the devicetree header.",2,[[["u32",15]]]],[11,"begin_node","","Open a new FDT node.",2,[[["str",15]],[["result",6],["fdtwriternode",3]]]],[11,"end_node","","Close a node previously opened with <code>begin_node</code>.",2,[[["fdtwriternode",3]],["result",6]]],[11,"property","","Write a property.",2,[[["str",15]],["result",6]]],[11,"property_null","","Write an empty property.",2,[[["str",15]],["result",6]]],[11,"property_string","","Write a string property.",2,[[["str",15]],["result",6]]],[11,"property_string_list","","Write a stringlist property.",2,[[["string",3],["vec",3],["str",15]],["result",6]]],[11,"property_u32","","Write a 32-bit unsigned integer property.",2,[[["u32",15],["str",15]],["result",6]]],[11,"property_u64","","Write a 64-bit unsigned integer property.",2,[[["u64",15],["str",15]],["result",6]]],[11,"property_array_u32","","Write a property containing an array of 32-bit unsigned …",2,[[["str",15]],["result",6]]],[11,"property_array_u64","","Write a property containing an array of 64-bit unsigned …",2,[[["str",15]],["result",6]]],[11,"finish","","Finish writing the Devicetree Blob (DTB).",2,[[["usize",15]],[["result",6],["vec",3]]]],[0,"pstore","arch","",null,null],[4,"Error","arch::pstore","Error for pstore.",null,null],[13,"IoError","","",3,null],[13,"MmapError","","",3,null],[13,"ResourcesError","","",3,null],[13,"SysUtilError","","",3,null],[3,"RamoopsRegion","","",null,null],[12,"address","","",4,null],[12,"size","","",4,null],[5,"create_memory_region","","Creates a mmio memory region for pstore.",null,[[["systemallocator",3],["pstore",3]],[["ramoopsregion",3],["error",4],["result",4]]]],[5,"add_ramoops_kernel_cmdline","","",null,[[["ramoopsregion",3],["cmdline",3]],[["result",4],["error",4]]]],[0,"serial","arch","",null,null],[5,"set_default_serial_parameters","arch::serial","Add the default serial parameters for serial ports that …",null,[[["btreemap",3]]]],[17,"SERIAL_ADDR","","Address for Serial ports in x86",null,null],[5,"add_serial_devices","","Adds serial devices to the provided bus based on the …",null,[[["option",4],["bus",3],["event",3],["protectiontype",4],["btreemap",3],["minijail",3]],[["result",4],["deviceregistrationerror",4]]]],[4,"GetSerialCmdlineError","","",null,null],[13,"KernelCmdline","","",5,null],[13,"UnsupportedEarlyconHardware","","",5,null],[6,"GetSerialCmdlineResult","","",null,null],[5,"get_serial_cmdline","","Add serial options to the provided <code>cmdline</code> based on …",null,[[["str",15],["btreemap",3],["cmdline",3]],["getserialcmdlineresult",6]]],[4,"VmImage","arch","",null,null],[13,"Kernel","","",6,null],[13,"Bios","","",6,null],[3,"Pstore","","",null,null],[12,"path","","",7,null],[12,"size","","",7,null],[4,"VcpuAffinity","","Mapping of guest VCPU threads to host CPU cores.",null,null],[13,"Global","","All VCPU threads will be pinned to the same set of host …",8,null],[13,"PerVcpu","","Each VCPU may be pinned to a set of host CPU cores. The …",8,null],[3,"VmComponents","","Holds the pieces needed to build a VM. Passed to <code>build_vm</code> …",null,null],[12,"memory_size","","",9,null],[12,"swiotlb","","",9,null],[12,"vcpu_count","","",9,null],[12,"vcpu_affinity","","",9,null],[12,"cpu_clusters","","",9,null],[12,"cpu_capacity","","",9,null],[12,"no_smt","","",9,null],[12,"hugepages","","",9,null],[12,"vm_image","","",9,null],[12,"android_fstab","","",9,null],[12,"pstore","","",9,null],[12,"initrd_image","","",9,null],[12,"extra_kernel_params","","",9,null],[12,"acpi_sdts","","",9,null],[12,"rt_cpus","","",9,null],[12,"delay_rt","","",9,null],[12,"protected_vm","","",9,null],[12,"gdb","","",9,null],[12,"dmi_path","","",9,null],[12,"no_legacy","","",9,null],[3,"RunnableLinuxVm","","Holds the elements needed to run a Linux VM. Created by …",null,null],[12,"vm","","",10,null],[12,"vcpu_count","","",10,null],[12,"vcpus","","If vcpus is None, then it\'s the responsibility of the …",10,null],[12,"vcpu_affinity","","",10,null],[12,"no_smt","","",10,null],[12,"irq_chip","","",10,null],[12,"has_bios","","",10,null],[12,"io_bus","","",10,null],[12,"mmio_bus","","",10,null],[12,"pid_debug_label_map","","",10,null],[12,"suspend_evt","","",10,null],[12,"rt_cpus","","",10,null],[12,"delay_rt","","",10,null],[12,"bat_control","","",10,null],[12,"gdb","","",10,null],[12,"resume_notify_devices","","Devices to be notified before the system resumes from the …",10,null],[12,"root_config","","",10,null],[12,"hotplug_bus","","",10,null],[3,"VirtioDeviceStub","","The device and optional jail.",null,null],[12,"dev","","",11,null],[12,"jail","","",11,null],[8,"LinuxArch","","Trait which is implemented for each Linux Architecture in …",null,null],[16,"Error","","",12,null],[10,"guest_memory_layout","","Returns a Vec of the valid memory addresses as pairs of …",12,[[["vmcomponents",3]],[["result",4],["vec",3]]]],[10,"create_system_allocator","","Creates a new <code>SystemAllocator</code> that fits the given …",12,[[["guestmemory",3]],["systemallocator",3]]],[10,"get_phys_max_addr","","",12,[[],["u64",15]]],[10,"build_vm","","Takes <code>VmComponents</code> and generates a <code>RunnableLinuxVm</code>.",12,[[["option",4],["btreemap",3],["ramoopsregion",3],["vec",3],["irqchiparch",8],["event",3],["systemallocator",3],["option",4],["minijail",3],["vmcomponents",3]],[["runnablelinuxvm",3],["result",4]]]],[10,"configure_vcpu","","Configures the vcpu and should be called once per vcpu …",12,[[["guestmemory",3],["hypervisorarch",8],["usize",15],["bool",15],["irqchiparch",8],["vcpuarch",8]],["result",4]]],[10,"register_pci_device","","Configures and add a pci device into vm",12,[[["option",4],["pcidevice",8],["runnablelinuxvm",3],["minijail",3],["systemallocator",3],["box",3]],[["result",4],["pciaddress",3]]]],[10,"debug_read_registers","","Reads vCPU\'s registers.",12,[[],[["gdbstubregs",3],["result",4]]]],[10,"debug_write_registers","","Writes vCPU\'s registers.",12,[[["gdbstubregs",3]],["result",4]]],[10,"debug_read_memory","","Reads bytes from the guest memory.",12,[[["guestmemory",3],["usize",15],["guestaddress",3]],[["vec",3],["result",4]]]],[10,"debug_write_memory","","Writes bytes to the specified guest memory.",12,[[["guestmemory",3],["guestaddress",3]],["result",4]]],[10,"debug_enable_singlestep","","Make the next vCPU\'s run single-step.",12,[[],["result",4]]],[10,"debug_set_hw_breakpoints","","Set hardware breakpoints at the given addresses.",12,[[],["result",4]]],[4,"DeviceRegistrationError","","Errors for device manager.",null,null],[13,"AddrsExhausted","","No more MMIO space available.",13,null],[13,"AllocateDeviceAddrs","","Could not allocate device address space for the device.",13,null],[13,"AllocateIoAddrs","","Could not allocate IO space for the device.",13,null],[13,"AllocateIoResource","","Could not allocate MMIO or IO resource for the device.",13,null],[13,"AllocateIrq","","Could not allocate an IRQ number.",13,null],[13,"AllocateIrqResource","","Could not allocate IRQ resource for the device.",13,null],[13,"CloneJail","","Unable to clone a jail for the device.",13,null],[13,"Cmdline","","Appending to kernel command line failed.",13,null],[13,"CreatePipe","","",13,null],[13,"CreateSerialDevice","","",13,null],[13,"CreateTube","","",13,null],[13,"EventClone","","Could not clone an event.",13,null],[13,"EventCreate","","Could not create an event.",13,null],[13,"IrqsExhausted","","No more IRQs are available.",13,null],[13,"MissingRequiredSerialDevice","","Missing a required serial device.",13,null],[13,"MmioInsert","","Could not add a device to the mmio bus.",13,null],[13,"ProxyDeviceCreation","","Failed to initialize proxy device for jailed device.",13,null],[13,"RegisterBattery","","Failed to register battery device.",13,null],[13,"RegisterDeviceCapabilities","","Could not register PCI device capabilities.",13,null],[13,"RegisterIoevent","","Failed to register ioevent with VM.",13,null],[13,"RegisterIrqfd","","Failed to register irq event with VM.",13,null],[5,"configure_pci_device","","Config a PCI device for used by this vm.",null,[[["option",4],["pcidevice",8],["runnablelinuxvm",3],["minijail",3],["systemallocator",3],["box",3]],[["result",4],["deviceregistrationerror",4],["pciaddress",3]]]],[5,"generate_platform_bus","","Creates a platform device for use by this Vm.",null,[[["bus",3],["systemallocator",3],["vec",3],["irqchip",8]],[["deviceregistrationerror",4],["result",4],["btreemap",3]]]],[5,"generate_pci_root","","Creates a root PCI device for use by this Vm.",null,[[["usize",15],["bus",3],["vec",3],["systemallocator",3],["irqchip",8]],[["result",4],["deviceregistrationerror",4]]]],[5,"add_goldfish_battery","","Adds goldfish battery return the platform needed resouces …",null,[[["vec",3],["option",4],["bus",3],["u32",15],["systemallocator",3],["minijail",3],["irqchip",8]],[["deviceregistrationerror",4],["result",4],["tube",3]]]],[4,"LoadImageError","","Errors for image loading.",null,null],[13,"BadAlignment","","",14,null],[13,"ImageSizeTooLarge","","",14,null],[13,"ReadToMemory","","",14,null],[13,"Seek","","",14,null],[5,"load_image","","Load an image from a file into guest memory.",null,[[["guestmemory",3],["u64",15],["guestaddress",3]],[["usize",15],["result",4],["loadimageerror",4]]]],[5,"load_image_high","","Load an image from a file into guest memory at the …",null,[[["guestmemory",3],["u64",15],["guestaddress",3]],[["loadimageerror",4],["result",4]]]],[11,"from","arch::fdt","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","arch::pstore","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","arch::serial","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","arch","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"clone","","",7,[[],["pstore",3]]],[11,"clone","","",8,[[],["vcpuaffinity",4]]],[11,"eq","","",8,[[["vcpuaffinity",4]],["bool",15]]],[11,"ne","","",8,[[["vcpuaffinity",4]],["bool",15]]],[11,"fmt","arch::fdt","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","arch::pstore","",3,[[["formatter",3]],["result",6]]],[11,"fmt","arch::serial","",5,[[["formatter",3]],["result",6]]],[11,"fmt","arch","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","arch::fdt","",0,[[["formatter",3]],["result",6]]],[11,"fmt","arch::pstore","",3,[[["formatter",3]],["result",6]]],[11,"fmt","arch::serial","",5,[[["formatter",3]],["result",6]]],[11,"fmt","arch","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"],[3,"FdtReserveEntry"],[3,"FdtWriter"],[4,"Error"],[3,"RamoopsRegion"],[4,"GetSerialCmdlineError"],[4,"VmImage"],[3,"Pstore"],[4,"VcpuAffinity"],[3,"VmComponents"],[3,"RunnableLinuxVm"],[3,"VirtioDeviceStub"],[8,"LinuxArch"],[4,"DeviceRegistrationError"],[4,"LoadImageError"],[3,"FdtWriterNode"]]},\
"assertions":{"doc":"Macros that assert properties of code at compile time.","i":[[14,"const_assert","assertions","Macro that fails to compile if a given const expression …",null,null]],"p":[]},\
"async_task":{"doc":"Task abstraction for building executors.","i":[[5,"spawn","async_task","Creates a new task.",null,[[]]],[5,"spawn_unchecked","","Creates a new task without [<code>Send</code>], [<code>Sync</code>], and <code>\'static</code> …",null,[[]]],[3,"Runnable","","A handle to a runnable task.",null,null],[3,"Task","","A spawned task.",null,null],[5,"spawn_local","","Creates a new thread-local task.",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_future","","",1,[[]]],[11,"drop","","",0,[[]]],[11,"drop","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"poll","","",1,[[["pin",3],["context",3]],["poll",4]]],[11,"schedule","","Schedules the task.",0,[[]]],[11,"run","","Runs the task by polling its future.",0,[[],["bool",15]]],[11,"waker","","Returns a waker associated with this task.",0,[[],["waker",3]]],[11,"detach","","Detaches the task to let it keep running in the …",1,[[]]],[11,"cancel","","Cancels the task and waits for it to stop running.",1,[[]]]],"p":[[3,"Runnable"],[3,"Task"]]},\
"async_trait":{"doc":"github crates-io docs-rs","i":[[23,"async_trait","async_trait","",null,null]],"p":[]},\
"audio_streams":{"doc":"Provides an interface for playing and recording audio.","i":[[0,"capture","audio_streams","",null,null],[8,"CaptureBufferStream","audio_streams::capture","<code>CaptureBufferStream</code> provides <code>CaptureBuffer</code>s to read with …",null,null],[10,"next_capture_buffer","","",0,[[],[["capturebuffer",3],["result",4],["boxerror",6]]]],[11,"read_capture_buffer","","Call <code>f</code> with a <code>CaptureBuffer</code>, and trigger the buffer done …",0,[[["fnmut",8]],[["boxerror",6],["result",4]]]],[8,"AsyncCaptureBufferStream","","",null,null],[10,"next_capture_buffer","","",1,[[["executor",4]],[["pin",3],["box",3]]]],[3,"CaptureBuffer","","<code>CaptureBuffer</code> contains a block of audio samples got from …",null,null],[3,"AsyncCaptureBuffer","","Async version of \'CaptureBuffer`",null,null],[4,"CaptureBufferError","","Errors that are possible from a <code>CaptureBuffer</code>.",null,null],[13,"InvalidLength","","",2,null],[11,"new","","Creates a new <code>CaptureBuffer</code> that holds a reference to the …",3,[[["usize",15]],[["result",4],["capturebuffererror",4]]]],[11,"frame_capacity","","Returns the number of audio frames that fit in the buffer.",3,[[],["usize",15]]],[11,"commit","","This triggers the callback of <code>BufferCommit</code>. This should …",3,[[]]],[11,"copy_cb","","Reads up to <code>size</code> bytes directly from this buffer inside …",3,[[["usize",15],["fnonce",8]],[["usize",15],["result",6]]]],[11,"new","","Creates a new <code>AsyncCaptureBuffer</code> that holds a reference …",4,[[["usize",15]],[["result",4],["capturebuffererror",4]]]],[11,"frame_capacity","","Returns the number of audio frames that fit in the buffer.",4,[[],["usize",15]]],[11,"commit","","This triggers the callback of <code>AsyncBufferCommit</code>. This …",4,[[]]],[11,"copy_cb","","Reads up to <code>size</code> bytes directly from this buffer inside …",4,[[["usize",15],["fnonce",8]],[["usize",15],["result",6]]]],[3,"NoopCaptureStream","","Stream that provides null capture samples.",null,null],[11,"new","","",5,[[["usize",15],["u32",15],["sampleformat",4]]]],[5,"async_read_capture_buffer","","Call <code>f</code> with a <code>AsyncCaptureBuffer</code>, and trigger the buffer …",null,[[["asynccapturebufferstream",8],["executor",4]]]],[0,"shm_streams","audio_streams","",null,null],[8,"BufferSet","audio_streams::shm_streams","<code>BufferSet</code> is used as a callback mechanism for …",null,null],[10,"callback","","Called when the client sets a buffer offset and length.",6,[[["usize",15]],[["boxerror",6],["result",4]]]],[10,"ignore","","Called when the client ignores a request from the server.",6,[[],[["boxerror",6],["result",4]]]],[4,"Error","","",null,null],[13,"TooManyFrames","","",7,null],[3,"ServerRequest","","<code>ServerRequest</code> represents an active request from the …",null,null],[11,"new","","Create a new ServerRequest object",8,[[["usize",15]]]],[11,"requested_frames","","Get the number of frames of audio data requested by the …",8,[[],["usize",15]]],[11,"set_buffer_offset_and_frames","","Sets the buffer offset and length for the requested …",8,[[["usize",15]],[["boxerror",6],["result",4]]]],[11,"ignore_request","","Ignore this request",8,[[],[["boxerror",6],["result",4]]]],[8,"ShmStream","","<code>ShmStream</code> allows a client to interact with an active CRAS …",null,null],[10,"frame_size","","Get the size of a frame of audio data for this stream.",9,[[],["usize",15]]],[10,"num_channels","","Get the number of channels of audio data for this stream.",9,[[],["usize",15]]],[10,"frame_rate","","Get the frame rate of audio data for this stream.",9,[[],["u32",15]]],[10,"wait_for_next_action_with_timeout","","Waits until the next server message indicating action is …",9,[[["duration",3]],[["result",4],["boxerror",6],["option",4]]]],[8,"ShmStreamSource","","<code>ShmStreamSource</code> creates streams for playback or capture …",null,null],[10,"new_stream","","Creates a new <code>ShmStream</code>",10,[[["usize",15],["u32",15],["sampleformat",4],["streamdirection",4],["sharedmemory",3]],[["result",4],["box",3],["boxerror",6]]]],[11,"keep_fds","","Get a list of file descriptors used by the implementation.",10,[[],[["vec",3],["rawfd",6]]]],[3,"NullShmStream","","Class that implements ShmStream trait but does nothing …",null,null],[11,"new","","Attempt to create a new NullShmStream with the given …",11,[[["usize",15],["u32",15],["sampleformat",4]]]],[3,"NullShmStreamSource","","Source of <code>NullShmStream</code> objects.",null,null],[11,"new","","",12,[[]]],[3,"MockShmStream","","",null,null],[11,"new","","Attempt to create a new MockShmStream with the given …",13,[[["usize",15],["u32",15],["sampleformat",4]]]],[11,"trigger_callback_with_timeout","","Call to request data from the stream, causing it to …",13,[[["duration",3]],["bool",15]]],[3,"MockShmStreamSource","","Source of <code>MockShmStream</code> objects.",null,null],[11,"new","","",14,[[]]],[11,"get_last_stream","","Get the last stream that has been created from this …",14,[[],["mockshmstream",3]]],[4,"SampleFormat","audio_streams","",null,null],[13,"U8","","",15,null],[13,"S16LE","","",15,null],[13,"S24LE","","",15,null],[13,"S32LE","","",15,null],[11,"sample_bytes","","",15,[[],["usize",15]]],[4,"StreamDirection","","Valid directions of an audio stream.",null,null],[13,"Playback","","",16,null],[13,"Capture","","",16,null],[4,"StreamEffect","","Valid effects for an audio stream.",null,null],[13,"NoEffect","","",17,null],[13,"EchoCancellation","","",17,null],[6,"BoxError","","Errors that can pass across threads.",null,null],[4,"StreamEffectError","","Errors that are possible from a <code>StreamEffect</code>.",null,null],[13,"InvalidEffect","","",18,null],[4,"Error","","",null,null],[13,"Unimplemented","","",19,null],[8,"StreamSource","","<code>StreamSource</code> creates streams for playback or capture of …",null,null],[10,"new_playback_stream","","Returns a stream control and buffer generator object. …",20,[[["usize",15],["u32",15],["sampleformat",4]],[["result",4],["boxerror",6]]]],[11,"new_async_playback_stream","","Returns a stream control and async buffer generator …",20,[[["usize",15],["u32",15],["sampleformat",4],["executor",4]],[["result",4],["boxerror",6]]]],[11,"new_capture_stream","","Returns a stream control and buffer generator object. …",20,[[["usize",15],["u32",15],["sampleformat",4]],[["boxerror",6],["result",4]]]],[11,"new_async_capture_stream","","Returns a stream control and async buffer generator …",20,[[["usize",15],["u32",15],["sampleformat",4],["executor",4]],[["result",4],["boxerror",6]]]],[11,"keep_fds","","Returns any open file descriptors needed by the …",20,[[],[["option",4],["vec",3]]]],[8,"PlaybackBufferStream","","<code>PlaybackBufferStream</code> provides <code>PlaybackBuffer</code>s to fill …",null,null],[10,"next_playback_buffer","","",21,[[],[["result",4],["playbackbuffer",3],["boxerror",6]]]],[11,"write_playback_buffer","","Call <code>f</code> with a <code>PlaybackBuffer</code>, and trigger the buffer done …",21,[[["fnmut",8]],[["boxerror",6],["result",4]]]],[8,"AsyncPlaybackBufferStream","","<code>PlaybackBufferStream</code> provides <code>PlaybackBuffer</code>s …",null,null],[10,"next_playback_buffer","","",22,[[["executor",4]],[["pin",3],["box",3]]]],[5,"async_write_playback_buffer","","Call <code>f</code> with a <code>AsyncPlaybackBuffer</code>, and trigger the buffer …",null,[[["asyncplaybackbufferstream",8],["executor",4]]]],[8,"StreamControl","","<code>StreamControl</code> provides a way to set the volume and mute …",null,null],[11,"set_volume","","",23,[[["f64",15]]]],[11,"set_mute","","",23,[[["bool",15]]]],[8,"BufferCommit","","<code>BufferCommit</code> is a cleanup funcion that must be called …",null,null],[10,"commit","","<code>write_playback_buffer</code> or <code>read_capture_buffer</code> would …",24,[[["usize",15]]]],[8,"AsyncBufferCommit","","<code>AsyncBufferCommit</code> is a cleanup funcion that must be …",null,null],[10,"commit","","<code>async_write_playback_buffer</code> or <code>async_read_capture_buffer</code> …",25,[[["usize",15]],[["box",3],["pin",3]]]],[4,"PlaybackBufferError","","Errors that are possible from a <code>PlaybackBuffer</code>.",null,null],[13,"InvalidLength","","",26,null],[3,"PlaybackBuffer","","<code>PlaybackBuffer</code> is one buffer that holds buffer_size audio …",null,null],[11,"new","","Creates a new <code>PlaybackBuffer</code> that holds a reference to …",27,[[["usize",15]],[["result",4],["playbackbuffererror",4]]]],[11,"frame_capacity","","Returns the number of audio frames that fit in the buffer.",27,[[],["usize",15]]],[11,"commit","","This triggers the commit of <code>BufferCommit</code>. This should be …",27,[[]]],[11,"copy_cb","","Writes up to <code>size</code> bytes directly to this buffer inside of …",27,[[["usize",15],["fnonce",8]],[["usize",15],["result",6]]]],[3,"AsyncPlaybackBuffer","","<code>AsyncPlaybackBuffer</code> is the async version of <code>PlaybackBuffer</code>…",null,null],[11,"new","","Creates a new <code>AsyncPlaybackBuffer</code> that holds a reference …",28,[[["usize",15]],[["result",4],["playbackbuffererror",4]]]],[11,"frame_capacity","","Returns the number of audio frames that fit in the buffer.",28,[[],["usize",15]]],[11,"commit","","This triggers the callback of <code>AsyncBufferCommit</code>. This …",28,[[]]],[11,"copy_cb","","Writes up to <code>size</code> bytes directly to this buffer inside of …",28,[[["usize",15],["fnonce",8]],[["usize",15],["result",6]]]],[3,"NoopStream","","Stream that accepts playback samples but drops them.",null,null],[11,"new","","",29,[[["usize",15],["u32",15],["sampleformat",4]]]],[3,"NoopStreamControl","","No-op control for <code>NoopStream</code>s.",null,null],[11,"new","","",30,[[]]],[3,"NoopStreamSource","","Source of <code>NoopStream</code> and <code>NoopStreamControl</code> objects.",null,null],[11,"new","","",31,[[]]],[11,"from","audio_streams::capture","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","audio_streams::shm_streams","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","audio_streams","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"next_capture_buffer","audio_streams::capture","",5,[[],[["capturebuffer",3],["result",4],["boxerror",6]]]],[11,"callback","audio_streams::shm_streams","",11,[[["usize",15]],[["boxerror",6],["result",4]]]],[11,"ignore","","",11,[[],[["boxerror",6],["result",4]]]],[11,"callback","","",13,[[["usize",15]],[["boxerror",6],["result",4]]]],[11,"ignore","","",13,[[],[["boxerror",6],["result",4]]]],[11,"frame_size","","",11,[[],["usize",15]]],[11,"num_channels","","",11,[[],["usize",15]]],[11,"frame_rate","","",11,[[],["u32",15]]],[11,"wait_for_next_action_with_timeout","","",11,[[["duration",3]],[["result",4],["boxerror",6],["option",4]]]],[11,"frame_size","","",13,[[],["usize",15]]],[11,"num_channels","","",13,[[],["usize",15]]],[11,"frame_rate","","",13,[[],["u32",15]]],[11,"wait_for_next_action_with_timeout","","",13,[[["duration",3]],[["result",4],["boxerror",6],["option",4]]]],[11,"new_stream","","",12,[[["usize",15],["u32",15],["sampleformat",4],["streamdirection",4],["sharedmemory",3]],[["result",4],["box",3],["boxerror",6]]]],[11,"new_stream","","",14,[[["usize",15],["u32",15],["sampleformat",4],["streamdirection",4],["sharedmemory",3]],[["result",4],["box",3],["boxerror",6]]]],[11,"new_playback_stream","audio_streams","",31,[[["usize",15],["u32",15],["sampleformat",4]],[["result",4],["boxerror",6]]]],[11,"new_async_playback_stream","","",31,[[["usize",15],["u32",15],["sampleformat",4],["executor",4]],[["result",4],["boxerror",6]]]],[11,"next_playback_buffer","","",29,[[],[["result",4],["playbackbuffer",3],["boxerror",6]]]],[11,"next_capture_buffer","audio_streams::capture","",5,[[["executor",4]],[["pin",3],["box",3]]]],[11,"next_playback_buffer","audio_streams","",29,[[["executor",4]],[["pin",3],["box",3]]]],[11,"clone","","",15,[[],["sampleformat",4]]],[11,"clone","","",16,[[],["streamdirection",4]]],[11,"clone","","",17,[[],["streameffect",4]]],[11,"clone","audio_streams::shm_streams","",13,[[],["mockshmstream",3]]],[11,"clone","","",14,[[],["mockshmstreamsource",3]]],[11,"default","","",12,[[],["nullshmstreamsource",3]]],[11,"default","","",14,[[],["mockshmstreamsource",3]]],[11,"default","audio_streams","",17,[[]]],[11,"default","","",30,[[],["noopstreamcontrol",3]]],[11,"default","","",31,[[],["noopstreamsource",3]]],[11,"eq","","",15,[[["sampleformat",4]],["bool",15]]],[11,"eq","","",16,[[["streamdirection",4]],["bool",15]]],[11,"eq","","",17,[[["streameffect",4]],["bool",15]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","audio_streams::capture","",2,[[["formatter",3]],["result",6]]],[11,"fmt","audio_streams::shm_streams","",7,[[["formatter",3]],["result",6]]],[11,"fmt","audio_streams","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","audio_streams::capture","",2,[[["formatter",3]],["result",6]]],[11,"fmt","audio_streams::shm_streams","",7,[[["formatter",3]],["result",6]]],[11,"fmt","audio_streams","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"from_str","","",17,[[["str",15]],["result",4]]],[11,"read","audio_streams::capture","",3,[[],[["usize",15],["result",6]]]],[11,"read","","",4,[[],[["usize",15],["result",6]]]],[11,"write","audio_streams","",27,[[],[["usize",15],["result",6]]]],[11,"flush","","",27,[[],["result",6]]],[11,"write","","",28,[[],[["usize",15],["result",6]]]],[11,"flush","","",28,[[],["result",6]]]],"p":[[8,"CaptureBufferStream"],[8,"AsyncCaptureBufferStream"],[4,"CaptureBufferError"],[3,"CaptureBuffer"],[3,"AsyncCaptureBuffer"],[3,"NoopCaptureStream"],[8,"BufferSet"],[4,"Error"],[3,"ServerRequest"],[8,"ShmStream"],[8,"ShmStreamSource"],[3,"NullShmStream"],[3,"NullShmStreamSource"],[3,"MockShmStream"],[3,"MockShmStreamSource"],[4,"SampleFormat"],[4,"StreamDirection"],[4,"StreamEffect"],[4,"StreamEffectError"],[4,"Error"],[8,"StreamSource"],[8,"PlaybackBufferStream"],[8,"AsyncPlaybackBufferStream"],[8,"StreamControl"],[8,"BufferCommit"],[8,"AsyncBufferCommit"],[4,"PlaybackBufferError"],[3,"PlaybackBuffer"],[3,"AsyncPlaybackBuffer"],[3,"NoopStream"],[3,"NoopStreamControl"],[3,"NoopStreamSource"]]},\
"base":{"doc":"","i":[[0,"handle_eintr","base","Macro and helper trait for handling interrupted routines.",null,null],[8,"InterruptibleResult","base::handle_eintr","Trait for determining if a result indicates the operation …",null,null],[10,"is_interrupted","","Returns <code>true</code> if this result indicates the operation was …",0,[[],["bool",15]]],[0,"ioctl","base","Macros and wrapper functions for dealing with ioctls.",null,null],[17,"_IOC_NRBITS","base::ioctl","",null,null],[17,"_IOC_TYPEBITS","","",null,null],[17,"_IOC_SIZEBITS","","",null,null],[17,"_IOC_DIRBITS","","",null,null],[17,"_IOC_NRMASK","","",null,null],[17,"_IOC_TYPEMASK","","",null,null],[17,"_IOC_SIZEMASK","","",null,null],[17,"_IOC_DIRMASK","","",null,null],[17,"_IOC_NRSHIFT","","",null,null],[17,"_IOC_TYPESHIFT","","",null,null],[17,"_IOC_SIZESHIFT","","",null,null],[17,"_IOC_DIRSHIFT","","",null,null],[17,"_IOC_NONE","","",null,null],[17,"_IOC_WRITE","","",null,null],[17,"_IOC_READ","","",null,null],[17,"IOC_IN","","",null,null],[17,"IOC_OUT","","",null,null],[17,"IOC_INOUT","","",null,null],[17,"IOCSIZE_MASK","","",null,null],[17,"IOCSIZE_SHIFT","","",null,null],[6,"IoctlNr","","",null,null],[5,"ioctl","","Run an ioctl with no arguments.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_val","","Run an ioctl with a single value argument.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_ref","","Run an ioctl with an immutable reference.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_mut_ref","","Run an ioctl with a mutable reference.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_ptr","","Run an ioctl with a raw pointer.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_mut_ptr","","Run an ioctl with a mutable raw pointer.",null,[[["u64",15]],["i32",15]]],[0,"syslog","base","Facilities for sending log message to syslog.",null,null],[4,"Priority","base::syslog","The priority (i.e. severity) of a syslog message.",null,null],[13,"Emergency","","",1,null],[13,"Alert","","",1,null],[13,"Critical","","",1,null],[13,"Error","","",1,null],[13,"Warning","","",1,null],[13,"Notice","","",1,null],[13,"Info","","",1,null],[13,"Debug","","",1,null],[4,"Facility","","The facility of a syslog message.",null,null],[13,"Kernel","","",2,null],[13,"User","","",2,null],[13,"Mail","","",2,null],[13,"Daemon","","",2,null],[13,"Auth","","",2,null],[13,"Syslog","","",2,null],[13,"Lpr","","",2,null],[13,"News","","",2,null],[13,"Uucp","","",2,null],[13,"Local0","","",2,null],[13,"Local1","","",2,null],[13,"Local2","","",2,null],[13,"Local3","","",2,null],[13,"Local4","","",2,null],[13,"Local5","","",2,null],[13,"Local6","","",2,null],[13,"Local7","","",2,null],[4,"Error","","Errors returned by <code>syslog::init()</code>.",null,null],[13,"Connect","","Error while attempting to connect socket.",3,null],[13,"GetLowestFd","","There was an error using <code>open</code> to get the lowest file …",3,null],[13,"InvalidFd","","The guess of libc\'s file descriptor for the syslog …",3,null],[13,"NeverInitialized","","Initialization was never attempted.",3,null],[13,"Poisoned","","Initialization has previously failed and can not be …",3,null],[13,"Socket","","Error while creating socket.",3,null],[5,"init","","Initialize the syslog connection and internal variables.",null,[[],[["error",4],["result",4]]]],[5,"set_proc_name","","Replaces the process name reported in each syslog message.",null,[[]]],[5,"echo_syslog","","Enables or disables echoing log messages to the syslog.",null,[[["bool",15]],[["error",4],["result",4]]]],[5,"echo_file","","Replaces the optional <code>File</code> to echo log messages to.",null,[[["option",4],["file",3]]]],[5,"echo_stderr","","Enables or disables echoing log messages to the …",null,[[["bool",15]]]],[5,"push_fds","","Retrieves the file descriptors owned by the global …",null,[[["vec",3]]]],[5,"push_descriptors","","Does the same as push_fds, but using the RawDescriptorType",null,[[["vec",3]]]],[5,"log","","Records a log message with the given details.",null,[[["priority",4],["facility",4],["option",4],["arguments",3]]]],[3,"Syslogger","","",null,null],[0,"file_traits","base","",null,null],[8,"FileSync","base::file_traits","A trait for flushing the contents of a file to disk. This …",null,null],[10,"fsync","","",4,[[],[["result",4],["error",3]]]],[8,"FileSetLen","","A trait for setting the size of a file. This is …",null,null],[10,"set_len","","",5,[[["u64",15]],[["result",4],["error",3]]]],[8,"FileGetLen","","A trait for getting the size of a file. This is …",null,null],[10,"get_len","","Get the current length of the file in bytes.",6,[[],[["result",4],["error",3],["u64",15]]]],[8,"FileAllocate","","A trait for allocating disk space in a sparse file. This …",null,null],[10,"allocate","","Allocate storage for the region of the file starting at …",7,[[["u64",15]],[["result",4],["error",3]]]],[8,"FileReadWriteVolatile","","A trait similar to <code>Read</code> and <code>Write</code>, but uses volatile …",null,null],[10,"read_volatile","","Read bytes from this file into the given slice, returning …",8,[[["volatileslice",3]],[["usize",15],["result",4],["error",3]]]],[11,"read_vectored_volatile","","Like <code>read_volatile</code>, except it reads to a slice of …",8,[[],[["usize",15],["result",4],["error",3]]]],[11,"read_exact_volatile","","Reads bytes from this into the given slice until all …",8,[[["volatileslice",3]],[["result",4],["error",3]]]],[10,"write_volatile","","Write bytes from the slice to the given file, returning …",8,[[["volatileslice",3]],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored_volatile","","Like <code>write_volatile</code>, except that it writes from a slice …",8,[[],[["usize",15],["result",4],["error",3]]]],[11,"write_all_volatile","","Write bytes from the slice to the given file until all …",8,[[["volatileslice",3]],[["result",4],["error",3]]]],[8,"FileReadWriteAtVolatile","","A trait similar to the unix <code>ReadExt</code> and <code>WriteExt</code> traits, …",null,null],[10,"read_at_volatile","","Reads bytes from this file at <code>offset</code> into the given …",9,[[["volatileslice",3],["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"read_vectored_at_volatile","","Like <code>read_at_volatile</code>, except it reads to a slice of …",9,[[["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"read_exact_at_volatile","","Reads bytes from this file at <code>offset</code> into the given slice …",9,[[["volatileslice",3],["u64",15]],[["result",4],["error",3]]]],[10,"write_at_volatile","","Writes bytes from this file at <code>offset</code> into the given …",9,[[["volatileslice",3],["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored_at_volatile","","Like <code>write_at_at_volatile</code>, except that it writes from a …",9,[[["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"write_all_at_volatile","","Writes bytes from this file at <code>offset</code> into the given …",9,[[["volatileslice",3],["u64",15]],[["result",4],["error",3]]]],[0,"lib","","",null,null],[6,"c_int","base::file_traits::lib","",null,null],[4,"c_void","","Equivalent to C\'s <code>void</code> type when used as a pointer.",null,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[6,"off64_t","","",null,null],[5,"pread64","","",null,[[["usize",15],["i64",15],["i32",15]],["isize",15]]],[5,"preadv64","","",null,[[["i64",15],["i32",15]],["isize",15]]],[5,"pwrite64","","",null,[[["usize",15],["i64",15],["i32",15]],["isize",15]]],[5,"pwritev64","","",null,[[["i64",15],["i32",15]],["isize",15]]],[5,"read","","",null,[[["usize",15],["i32",15]],["isize",15]]],[5,"readv","","",null,[[["i32",15]],["isize",15]]],[6,"size_t","","",null,null],[5,"write","","",null,[[["usize",15],["i32",15]],["isize",15]]],[5,"writev","","",null,[[["i32",15]],["isize",15]]],[3,"VolatileSlice","","A slice of raw memory that supports volatile access. Like …",null,null],[8,"AsRawFds","base::file_traits","A trait similar to <code>AsRawFd</code> but supports an arbitrary …",null,null],[10,"as_raw_fds","","",11,[[],[["global",3],["vec",3],["i32",15]]]],[0,"net","base","",null,null],[4,"InetVersion","base::net","Assist in handling both IP version 4 and IP version 6.",null,null],[13,"V4","","",12,null],[13,"V6","","",12,null],[3,"TcpSocket","","A TCP socket.",null,null],[3,"UnixSeqpacket","","A Unix <code>SOCK_SEQPACKET</code> socket point to given <code>path</code>",null,null],[3,"UnixSeqpacketListener","","Like a <code>UnixListener</code> but for accepting <code>UnixSeqpacket</code> type …",null,null],[3,"UnlinkUnixSeqpacketListener","","Used to attempt to clean up a <code>UnixSeqpacketListener</code> after …",null,null],[12,"0","","",13,null],[0,"rand","base","Rust implementation of functionality parallel to …",null,null],[4,"Source","base::rand","Represents whether or not the random bytes are pulled …",null,null],[13,"Pseudorandom","","",14,null],[13,"Random","","",14,null],[5,"rand_bytes","","Fills <code>output</code> completely with random bytes from the …",null,[[["source",4]],[["error",3],["result",4]]]],[5,"rand_vec","","Allocates a vector of length <code>len</code> filled with random bytes …",null,[[["usize",15],["source",4]],[["vec",3],["result",4],["error",3]]]],[0,"read_dir","base","",null,null],[3,"DirEntry","base::read_dir","",null,null],[12,"ino","","",15,null],[12,"offset","","",15,null],[12,"type_","","",15,null],[12,"name","","",15,null],[3,"ReadDir","","",null,null],[5,"read_dir","","",null,[[["i64",15]],[["readdir",3],["error",3],["result",4]]]],[0,"scoped_path","base","",null,null],[5,"get_temp_path","base::scoped_path","Returns a stable path based on the label, pid, and tid. …",null,[[["option",4],["str",15]],["pathbuf",3]]],[3,"ScopedPath","","Automatically deletes the path it contains when it goes …",null,null],[0,"scoped_signal_handler","base","Provides a struct for registering signal handlers that …",null,null],[4,"Error","base::scoped_signal_handler","",null,null],[13,"AlreadyWaiting","","Already waiting for interrupt.",16,null],[13,"HandlerAlreadySet","","Signal already has a handler.",16,null],[13,"HasDefaultSignalHandler","","Failed to check if signal has the default signal handler.",16,null],[13,"RegisterSignalHandler","","Failed to register a signal handler.",16,null],[13,"Sigaction","","Sigaction failed.",16,null],[13,"WaitForSignal","","Failed to wait for signal.",16,null],[6,"Result","","",null,null],[8,"SignalHandler","","The interface used by Scoped Signal handler.",null,null],[10,"handle_signal","","A function that is called to handle the passed signal.",17,[[["signal",4]]]],[3,"ScopedSignalHandler","","Represents a signal handler that is registered with a set …",null,null],[3,"EmptySignalHandler","","A signal handler that does nothing.",null,null],[5,"wait_for_interrupt","","Blocks until SIGINT is received, which often happens …",null,[[],[["result",4],["error",4]]]],[0,"signal","base","",null,null],[4,"Error","base::signal","",null,null],[13,"BlockSignal","","The signal could not be blocked.",18,null],[13,"ClearCheckPending","","Failed to check if given signal is in the set of pending …",18,null],[13,"ClearGetPending","","Failed to get pending signals.",18,null],[13,"ClearWaitPending","","Failed to wait for given signal.",18,null],[13,"CompareBlockedSignals","","Failed to check if the requested signal is in the blocked …",18,null],[13,"CreateSigset","","Couldn\'t create a sigset.",18,null],[13,"GetSid","","Failed to get session id.",18,null],[13,"Kill","","Failed to send signal to pid.",18,null],[13,"RetrieveSignalMask","","The signal mask could not be retrieved.",18,null],[13,"RtSignumGreaterThanMax","","Converted signum greater than SIGRTMAX.",18,null],[13,"SignalAlreadyBlocked","","The wrapped signal has already been blocked.",18,null],[13,"TimedOut","","Timeout reached.",18,null],[13,"UnblockSignal","","The signal could not be unblocked.",18,null],[13,"UnrecognizedSignum","","Failed to convert signum to Signal.",18,null],[13,"WaitForSignal","","Failed to wait for signal.",18,null],[13,"WaitPid","","Failed to wait for pid.",18,null],[4,"Signal","","",null,null],[13,"Abort","","",19,null],[13,"Alarm","","",19,null],[13,"Bus","","",19,null],[13,"Child","","",19,null],[13,"Continue","","",19,null],[13,"ExceededFileSize","","",19,null],[13,"FloatingPointException","","",19,null],[13,"HangUp","","",19,null],[13,"IllegalInstruction","","",19,null],[13,"Interrupt","","",19,null],[13,"Io","","",19,null],[13,"Kill","","",19,null],[13,"Pipe","","",19,null],[13,"Power","","",19,null],[13,"Profile","","",19,null],[13,"Quit","","",19,null],[13,"SegmentationViolation","","",19,null],[13,"StackFault","","",19,null],[13,"Stop","","",19,null],[13,"Sys","","",19,null],[13,"Trap","","",19,null],[13,"Terminate","","",19,null],[13,"TtyIn","","",19,null],[13,"TtyOut","","",19,null],[13,"TtyStop","","",19,null],[13,"Urgent","","",19,null],[13,"User1","","",19,null],[13,"User2","","",19,null],[13,"VtAlarm","","",19,null],[13,"Winch","","",19,null],[13,"Xcpu","","",19,null],[13,"Rt0","","",19,null],[13,"Rt1","","",19,null],[13,"Rt2","","",19,null],[13,"Rt3","","",19,null],[13,"Rt4","","",19,null],[13,"Rt5","","",19,null],[13,"Rt6","","",19,null],[13,"Rt7","","",19,null],[13,"Rt8","","",19,null],[13,"Rt9","","",19,null],[13,"Rt10","","",19,null],[13,"Rt11","","",19,null],[13,"Rt12","","",19,null],[13,"Rt13","","",19,null],[13,"Rt14","","",19,null],[13,"Rt15","","",19,null],[13,"Rt16","","",19,null],[13,"Rt17","","",19,null],[13,"Rt18","","",19,null],[13,"Rt19","","",19,null],[13,"Rt20","","",19,null],[13,"Rt21","","",19,null],[13,"Rt22","","",19,null],[13,"Rt23","","",19,null],[13,"Rt24","","",19,null],[13,"Rt25","","",19,null],[13,"Rt26","","",19,null],[13,"Rt27","","",19,null],[13,"Rt28","","",19,null],[13,"Rt29","","",19,null],[13,"Rt30","","",19,null],[13,"Rt31","","",19,null],[6,"SignalResult","","",null,null],[5,"SIGRTMIN","","Returns the minimum (inclusive) real-time signal number.",null,[[],["i32",15]]],[5,"SIGRTMAX","","Returns the maximum (inclusive) real-time signal number.",null,[[],["i32",15]]],[5,"register_signal_handler","","Registers <code>handler</code> as the signal handler of signum <code>num</code>.",null,[[["i32",15]],[["error",3],["result",4]]]],[5,"clear_signal_handler","","Resets the signal handler of signum <code>num</code> back to the …",null,[[["i32",15]],[["error",3],["result",4]]]],[5,"has_default_signal_handler","","Returns true if the signal handler for signum <code>num</code> is the …",null,[[["i32",15]],[["bool",15],["error",3],["result",4]]]],[5,"register_rt_signal_handler","","Registers <code>handler</code> as the signal handler for the real-time …",null,[[["i32",15]],[["error",3],["result",4]]]],[5,"create_sigset","","Creates <code>sigset</code> from an array of signal numbers.",null,[[],[["sigset_t",3],["error",3],["result",4]]]],[5,"wait_for_signal","","Wait for signal before continuing. The signal number of …",null,[[["option",4],["duration",3]],[["result",4],["error",3],["i32",15]]]],[5,"get_blocked_signals","","Retrieves the signal mask of the current thread as a …",null,[[],[["error",4],["result",4],["vec",3]]]],[5,"block_signal","","Masks given signal.",null,[[["i32",15]],[["result",4],["error",4]]]],[5,"unblock_signal","","Unmasks given signal.",null,[[["i32",15]],[["result",4],["error",4]]]],[5,"clear_signal","","Clears pending signal.",null,[[["i32",15]],[["result",4],["error",4]]]],[5,"kill","","SafetyThis is marked unsafe because it allows signals to …",null,[[["i32",15]],[["error",3],["result",4]]]],[8,"Killable","","Trait for threads that can be signalled via <code>pthread_kill</code>.",null,null],[10,"pthread_handle","","",20,[[],["u64",15]]],[11,"kill","","Sends the signal <code>num</code> to this killable thread.",20,[[["i32",15]],[["error",3],["result",4]]]],[5,"kill_tree","","Terminates and reaps a child process. If the child …",null,[[["child",3],["duration",3]],[["result",4],["error",4]]]],[3,"KillOnDrop","","Wraps a Child process, and calls kill_tree for its …",null,null],[0,"vsock","base","",null,null],[17,"VMADDR_PORT_ANY","base::vsock","Vsock equivalent of binding on port 0. Binds to a random …",null,null],[3,"AddrParseError","","",null,null],[4,"VsockCid","","The vsock equivalent of an IP address.",null,null],[13,"Any","","Vsock equivalent of INADDR_ANY. Indicates the context id …",21,null],[13,"Hypervisor","","An address that refers to the bare-metal machine that …",21,null],[13,"Local","","The loopback address.",21,null],[13,"Host","","The parent machine. It may not be the hypervisor for …",21,null],[13,"Cid","","An assigned CID that serves as the address for VSOCK.",21,null],[3,"SocketAddr","","An address associated with a virtual socket.",null,null],[12,"cid","","",22,null],[12,"port","","",22,null],[8,"ToSocketAddr","","",null,null],[10,"to_socket_addr","","",23,[[],[["result",4],["socketaddr",3],["addrparseerror",3]]]],[3,"VsockSocket","","A virtual socket.",null,null],[3,"VsockStream","","A virtual stream socket.",null,null],[3,"VsockListener","","Represents a virtual socket server.",null,null],[6,"Pid","base","Re-export libc types that are part of the API.",null,null],[6,"Uid","","",null,null],[6,"Gid","","",null,null],[6,"Mode","","",null,null],[6,"UnsyncMarker","","Used to mark types as !Sync.",null,null],[5,"pagesize","","Safe wrapper for <code>sysconf(_SC_PAGESIZE)</code>.",null,[[],["usize",15]]],[5,"iov_max","","Safe wrapper for <code>sysconf(_SC_IOV_MAX)</code>.",null,[[],["usize",15]]],[5,"round_up_to_page_size","","Uses the system\'s page size in bytes to round the given …",null,[[["usize",15]],["usize",15]]],[5,"getpid","","This bypasses <code>libc</code>\'s caching <code>getpid(2)</code> wrapper which can …",null,[[],["i32",15]]],[5,"gettid","","Safe wrapper for the gettid Linux systemcall.",null,[[],["i32",15]]],[5,"getsid","","Safe wrapper for <code>getsid(2)</code>.",null,[[["option",4],["i32",15]],[["result",4],["error",3],["i32",15]]]],[5,"setsid","","Wrapper for <code>setsid(2)</code>.",null,[[],[["result",4],["error",3],["i32",15]]]],[5,"geteuid","","Safe wrapper for <code>geteuid(2)</code>.",null,[[],["u32",15]]],[5,"getegid","","Safe wrapper for <code>getegid(2)</code>.",null,[[],["u32",15]]],[5,"chown","","Safe wrapper for chown(2).",null,[[["u32",15],["cstr",3]],[["error",3],["result",4]]]],[5,"fchmod","","Safe wrapper for fchmod(2).",null,[[["u32",15]],[["error",3],["result",4]]]],[5,"fchown","","Safe wrapper for fchown(2).",null,[[["u32",15]],[["error",3],["result",4]]]],[4,"FlockOperation","","The operation to perform with <code>flock</code>.",null,null],[13,"LockShared","","",24,null],[13,"LockExclusive","","",24,null],[13,"Unlock","","",24,null],[5,"flock","","Safe wrapper for flock(2) with the operation <code>op</code> and …",null,[[["bool",15],["asrawfd",8],["flockoperation",4]],[["error",3],["result",4]]]],[4,"FallocateMode","","The operation to perform with <code>fallocate</code>.",null,null],[13,"PunchHole","","",25,null],[13,"ZeroRange","","",25,null],[13,"Allocate","","",25,null],[5,"fallocate","","Safe wrapper for <code>fallocate()</code>.",null,[[["fallocatemode",4],["asrawfd",8],["u64",15],["bool",15]],[["error",3],["result",4]]]],[8,"AsRawPid","","A trait used to abstract types that provide a process id …",null,null],[10,"as_raw_pid","","",26,[[],["i32",15]]],[4,"WaitStatus","","A logical set of the values *status can take from …",null,null],[13,"Continued","","",27,null],[13,"Exited","","",27,null],[13,"Running","","",27,null],[13,"Signaled","","",27,null],[13,"Stopped","","",27,null],[5,"wait_for_pid","","A safe wrapper around waitpid.",null,[[["i32",15]],[["error",3],["result",4]]]],[5,"reap_child","","Reaps a child process that has terminated.",null,[[],[["result",4],["error",3],["i32",15]]]],[5,"kill_process_group","","Kill all processes in the current process group.",null,[[],[["error",3],["result",4]]]],[5,"pipe","","Spawns a pipe pair where the first pipe is the read end …",null,[[["bool",15]],[["error",3],["result",4]]]],[5,"set_pipe_size","","Sets the pipe signified with fd to <code>size</code>.",null,[[["usize",15],["i32",15]],[["usize",15],["result",4],["error",3]]]],[5,"new_pipe_full","","Test-only function used to create a pipe that is full. …",null,[[],[["error",3],["result",4]]]],[3,"UnlinkUnixDatagram","","Used to attempt to clean up a named pipe after it is no …",null,null],[12,"0","","",28,null],[3,"UnlinkUnixListener","","Used to attempt to clean up a named pipe after it is no …",null,null],[12,"0","","",29,null],[5,"validate_raw_fd","","Verifies that |raw_fd| is actually owned by this process …",null,[[["i32",15]],[["result",4],["error",3],["i32",15]]]],[5,"poll_in","","Utility function that returns true if the given FD is …",null,[[["asrawfd",8]],["bool",15]]],[5,"add_fd_flags","","Performs a logical OR of the given flags with the FD\'s …",null,[[["i32",15]],[["error",3],["result",4]]]],[5,"clear_fd_flags","","Clears the given flags in the FD\'s flags.",null,[[["i32",15]],[["error",3],["result",4]]]],[5,"duration_to_timespec","","Return a timespec filed with the specified Duration …",null,[[["duration",3]],["timespec",3]]],[5,"max_timeout","","Return the maximum Duration that can be used with …",null,[[],["duration",3]]],[5,"safe_descriptor_from_path","","If the given path is of the form /proc/self/fd/N for some …",null,[[],[["error",3],["result",4],["option",4]]]],[5,"open_file","","Open the file with the given path, or if it is of the …",null,[[["bool",15]],[["file",3],["error",3],["result",4]]]],[5,"get_max_open_files","","Get the max number of open files allowed by the …",null,[[],[["error",3],["result",4],["u64",15]]]],[14,"handle_eintr","","Macro that retries the given expression every time its …",null,null],[14,"handle_eintr_rc","","Macro that retries the given expression every time its …",null,null],[14,"handle_eintr_errno","","Macro that retries the given expression every time its …",null,null],[14,"ioctl_expr","","Raw macro to declare the expression that calculates an …",null,null],[14,"ioctl_ioc_nr","","Raw macro to declare a function that returns an ioctl …",null,null],[14,"ioctl_io_nr","","Declare an ioctl that transfers no data.",null,null],[14,"ioctl_ior_nr","","Declare an ioctl that reads data.",null,null],[14,"ioctl_iow_nr","","Declare an ioctl that writes data.",null,null],[14,"ioctl_iowr_nr","","Declare an ioctl that reads and writes data.",null,null],[14,"log","","A macro for logging at an arbitrary priority level.",null,null],[14,"error","","A macro for logging an error.",null,null],[14,"warn","","A macro for logging a warning.",null,null],[14,"info","","A macro for logging info.",null,null],[14,"debug","","A macro for logging debug information.",null,null],[14,"volatile_impl","","",null,null],[14,"volatile_at_impl","","",null,null],[3,"LayoutAllocation","","A contiguous memory allocation with a specified size and …",null,null],[5,"drop_capabilities","","Drops all capabilities (permitted, inheritable, and …",null,[[],[["error",3],["result",4]]]],[3,"Clock","","",null,null],[3,"FakeClock","","A fake clock that can be used in tests to give exact …",null,null],[5,"errno_result","","Returns the last errno as a Result that is always an …",null,[[],[["error",3],["result",4]]]],[3,"Error","","An error number, retrieved from errno (man 3 errno), set …",null,null],[6,"Result","","",null,null],[5,"deserialize_with_descriptors","","Allows the use of any serde deserializer within a closure …",null,[[["vec",3]],["result",4]]],[0,"with_as_descriptor","","Module that exports <code>serialize</code>/<code>deserialize</code> functions for …",null,null],[5,"serialize","base::with_as_descriptor","",null,[[["asrawdescriptor",8]],["result",4]]],[5,"deserialize","","",null,[[],["result",4]]],[0,"with_raw_descriptor","base","Module that exports <code>serialize</code>/<code>deserialize</code> functions for …",null,null],[5,"deserialize","base::with_raw_descriptor","",null,[[],[["result",4],["i32",15]]]],[5,"serialize","","Serializes a descriptor for later retrieval in a parent …",null,[[["i32",15]],["result",4]]],[3,"FileSerdeWrapper","base","A simple wrapper around <code>File</code> that implements <code>Serialize</code>/…",null,null],[12,"0","","",30,null],[3,"SerializeDescriptors","","Wrapper for a <code>Serialize</code> value which will capture any …",null,null],[4,"ExternalMappingError","","",null,null],[13,"InvalidSize","","",31,null],[13,"LibraryError","","",31,null],[13,"NullAddress","","",31,null],[13,"Unsupported","","",31,null],[6,"ExternalMappingResult","","",null,null],[8,"AsRawFds","","A trait similar to <code>AsRawFd</code> but supports an arbitrary …",null,null],[10,"as_raw_fds","","",11,[[],[["global",3],["vec",3],["i32",15]]]],[8,"FileAllocate","","A trait for allocating disk space in a sparse file. This …",null,null],[10,"allocate","","Allocate storage for the region of the file starting at …",7,[[["u64",15]],[["result",4],["error",3]]]],[8,"FileGetLen","","A trait for getting the size of a file. This is …",null,null],[10,"get_len","","Get the current length of the file in bytes.",6,[[],[["result",4],["error",3],["u64",15]]]],[8,"FileReadWriteAtVolatile","","A trait similar to the unix <code>ReadExt</code> and <code>WriteExt</code> traits, …",null,null],[10,"read_at_volatile","","Reads bytes from this file at <code>offset</code> into the given …",9,[[["volatileslice",3],["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"read_vectored_at_volatile","","Like <code>read_at_volatile</code>, except it reads to a slice of …",9,[[["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"read_exact_at_volatile","","Reads bytes from this file at <code>offset</code> into the given slice …",9,[[["volatileslice",3],["u64",15]],[["result",4],["error",3]]]],[10,"write_at_volatile","","Writes bytes from this file at <code>offset</code> into the given …",9,[[["volatileslice",3],["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored_at_volatile","","Like <code>write_at_at_volatile</code>, except that it writes from a …",9,[[["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"write_all_at_volatile","","Writes bytes from this file at <code>offset</code> into the given …",9,[[["volatileslice",3],["u64",15]],[["result",4],["error",3]]]],[8,"FileReadWriteVolatile","","A trait similar to <code>Read</code> and <code>Write</code>, but uses volatile …",null,null],[10,"read_volatile","","Read bytes from this file into the given slice, returning …",8,[[["volatileslice",3]],[["usize",15],["result",4],["error",3]]]],[11,"read_vectored_volatile","","Like <code>read_volatile</code>, except it reads to a slice of …",8,[[],[["usize",15],["result",4],["error",3]]]],[11,"read_exact_volatile","","Reads bytes from this into the given slice until all …",8,[[["volatileslice",3]],[["result",4],["error",3]]]],[10,"write_volatile","","Write bytes from the slice to the given file, returning …",8,[[["volatileslice",3]],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored_volatile","","Like <code>write_volatile</code>, except that it writes from a slice …",8,[[],[["usize",15],["result",4],["error",3]]]],[11,"write_all_volatile","","Write bytes from the slice to the given file until all …",8,[[["volatileslice",3]],[["result",4],["error",3]]]],[8,"FileSetLen","","A trait for setting the size of a file. This is …",null,null],[10,"set_len","","",5,[[["u64",15]],[["result",4],["error",3]]]],[8,"FileSync","","A trait for flushing the contents of a file to disk. This …",null,null],[10,"fsync","","",4,[[],[["result",4],["error",3]]]],[4,"MmapError","","",null,null],[13,"AddFdMappingIsUnsupported","","",32,null],[13,"InvalidAddress","","",32,null],[13,"InvalidArgument","","",32,null],[13,"InvalidOffset","","",32,null],[13,"InvalidRange","","",32,null],[13,"NotPageAligned","","",32,null],[13,"ReadToMemory","","",32,null],[13,"RemoveMappingIsUnsupported","","",32,null],[13,"SystemCallFailed","","",32,null],[13,"WriteFromMemory","","",32,null],[8,"SeekHole","","A trait for seeking to the next hole or non-hole position …",null,null],[10,"seek_hole","","Seek to the first hole in a file at a position greater …",33,[[["u64",15]],[["error",3],["result",4],["option",4]]]],[10,"seek_data","","Seek to the first data in a file at a position greater …",33,[[["u64",15]],[["error",3],["result",4],["option",4]]]],[4,"SignalFdError","","",null,null],[13,"CreateBlockSignal","","Failed to block the signal when creating signalfd.",34,null],[13,"CreateSignalFd","","Failed to create a new signalfd.",34,null],[13,"CreateSigset","","Failed to construct sigset when creating signalfd.",34,null],[13,"SignalFdPartialRead","","Signalfd could be read, but didn\'t return a full siginfo …",34,null],[13,"SignalFdRead","","Unable to read from signalfd.",34,null],[8,"PunchHole","","A trait for deallocating space in a file.",null,null],[10,"punch_hole","","Replace a range of bytes with a hole.",35,[[["u64",15]],[["result",4],["error",3]]]],[8,"WriteZeroes","","A trait for writing zeroes to a stream.",null,null],[10,"write_zeroes","","Write up to <code>length</code> bytes of zeroes to the stream, …",36,[[["usize",15]],[["usize",15],["result",4],["error",3]]]],[11,"write_zeroes_all","","Write zeroes to the stream until <code>length</code> bytes have been …",36,[[["usize",15]],[["result",4],["error",3]]]],[8,"WriteZeroesAt","","A trait for writing zeroes to an arbitrary position in a …",null,null],[10,"write_zeroes_at","","Write up to <code>length</code> bytes of zeroes starting at <code>offset</code>, …",37,[[["usize",15],["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"write_zeroes_all_at","","Write zeroes starting at <code>offset</code> until <code>length</code> bytes have …",37,[[["usize",15],["u64",15]],[["result",4],["error",3]]]],[14,"syscall","","",null,null],[6,"RawDescriptor","","",null,null],[3,"EventFd","","A safe wrapper around a Linux eventfd (man 2 eventfd).",null,null],[8,"PollToken","","Trait for a token that can be associated with an <code>fd</code> in a …",null,null],[10,"as_raw_token","","Converts this token into a u64 that can be turned back …",38,[[],["u64",15]]],[10,"from_raw_token","","Converts a raw token as returned from <code>as_raw_token</code> back …",38,[[["u64",15]]]],[24,"PollToken","","Implements the PollToken trait for a given <code>enum</code>.",null,null],[3,"SafeDescriptor","","Wraps a RawDescriptor and safely closes it when self …",null,null],[8,"IntoRawDescriptor","","Trait for forfeiting ownership of the current raw …",null,null],[10,"into_raw_descriptor","","",39,[[],["i32",15]]],[8,"AsRawDescriptor","","Trait for returning the underlying raw descriptor, …",null,null],[10,"as_raw_descriptor","","",40,[[],["i32",15]]],[8,"FromRawDescriptor","","",null,null],[10,"from_raw_descriptor","","SafetySafe only if the caller ensures nothing has access …",41,[[["i32",15]]]],[8,"MappedRegion","","A range of memory that can be msynced, for abstracting …",null,null],[10,"as_ptr","","Returns a pointer to the beginning of the memory region. …",42,[[]]],[10,"size","","Returns the size of the memory region in bytes.",42,[[],["usize",15]]],[11,"add_fd_mapping","","Maps <code>size</code> bytes starting at <code>fd_offset</code> bytes from within …",42,[[["usize",15],["asrawfd",8],["u64",15],["protection",3]],[["error",4],["result",4]]]],[11,"remove_mapping","","Remove <code>size</code>-byte mapping starting at <code>offset</code>.",42,[[["usize",15]],[["error",4],["result",4]]]],[5,"clone_descriptor","","Clones <code>descriptor</code>, returning a new <code>RawDescriptor</code> that …",null,[[["asrawdescriptor",8]],[["result",4],["error",3],["i32",15]]]],[5,"clone_fd","","Clones <code>fd</code>, returning a new file descriptor that refers to …",null,[[["asrawfd",8]],[["result",4],["error",3],["i32",15]]]],[3,"ScopedEvent","","An <code>EventFd</code> wrapper which triggers when it goes out of …",null,null],[6,"Map","","",null,null],[6,"Unmap","","",null,null],[4,"CloneNamespace","","Controls what namespace <code>clone_process</code> will have. See …",null,null],[13,"Inherit","","The new process will inherit the namespace from the old …",43,null],[13,"NewUserPid","","The new process with be in a new user and PID namespace.",43,null],[5,"clone_process","","Clones this process and calls a closure in the new …",null,[[["clonenamespace",4]],[["cloneerror",4],["result",4],["i32",15]]]],[5,"get_filesystem_type","","Obtain file system type of the file system that the file …",null,[[["file",3]],[["i64",15],["error",3],["result",4]]]],[17,"_IOC_NRBITS","","",null,null],[17,"_IOC_TYPEBITS","","",null,null],[17,"_IOC_SIZEBITS","","",null,null],[17,"_IOC_DIRBITS","","",null,null],[17,"_IOC_NRMASK","","",null,null],[17,"_IOC_TYPEMASK","","",null,null],[17,"_IOC_SIZEMASK","","",null,null],[17,"_IOC_DIRMASK","","",null,null],[17,"_IOC_NRSHIFT","","",null,null],[17,"_IOC_TYPESHIFT","","",null,null],[17,"_IOC_SIZESHIFT","","",null,null],[17,"_IOC_DIRSHIFT","","",null,null],[17,"_IOC_NONE","","",null,null],[17,"_IOC_WRITE","","",null,null],[17,"_IOC_READ","","",null,null],[17,"IOC_IN","","",null,null],[17,"IOC_OUT","","",null,null],[17,"IOC_INOUT","","",null,null],[17,"IOCSIZE_MASK","","",null,null],[17,"IOCSIZE_SHIFT","","",null,null],[6,"IoctlNr","","",null,null],[5,"ioctl","","Run an ioctl with no arguments.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_val","","Run an ioctl with a single value argument.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_ref","","Run an ioctl with an immutable reference.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_mut_ref","","Run an ioctl with a mutable reference.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_ptr","","Run an ioctl with a raw pointer.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_mut_ptr","","Run an ioctl with a mutable raw pointer.",null,[[["u64",15]],["i32",15]]],[3,"MemoryMappingArena","","Tracks Fixed Memory Maps within an anonymous …",null,null],[3,"EpollEvents","","EpollEvents wraps raw epoll_events, it should only be …",null,null],[3,"PollEvent","","An event returned by <code>PollContext::wait</code>.",null,null],[3,"PollEventIter","","An iterator over some (sub)set of events returned by …",null,null],[3,"PollEvents","","The list of event returned by <code>PollContext::wait</code>.",null,null],[3,"PollEventsOwned","","A deep copy of the event records from <code>PollEvents</code>.",null,null],[3,"WatchingEvents","","Watching events taken by PollContext.",null,null],[3,"EpollContext","","EpollContext wraps linux epoll. It provides similar …",null,null],[3,"PollContext","","Used to poll multiple objects that have file descriptors.",null,null],[5,"set_rt_prio_limit","","Enables real time thread priorities in the current thread …",null,[[["u64",15]],[["error",3],["result",4]]]],[5,"set_rt_round_robin","","Sets the current thread to be scheduled using the round …",null,[[["i32",15]],[["error",3],["result",4]]]],[3,"Fd","","",null,null],[12,"0","","",44,null],[5,"set_cpu_affinity","","Set the CPU affinity of the current thread to a given set …",null,[[],[["error",3],["result",4]]]],[5,"enable_core_scheduling","","Enable experimental core scheduling for the current …",null,[[],[["error",3],["result",4]]]],[8,"SignalHandler","","The interface used by Scoped Signal handler.",null,null],[10,"handle_signal","","A function that is called to handle the passed signal.",17,[[["signal",4]]]],[3,"ScopedSignalHandler","","Represents a signal handler that is registered with a set …",null,null],[3,"EmptySignalHandler","","A signal handler that does nothing.",null,null],[5,"wait_for_interrupt","","Blocks until SIGINT is received, which often happens …",null,[[],[["result",4],["error",4]]]],[5,"kernel_has_memfd","","Checks if the kernel we are running on has memfd_create. …",null,[[],["bool",15]]],[6,"SignalResult","","",null,null],[5,"SIGRTMIN","","Returns the minimum (inclusive) real-time signal number.",null,[[],["i32",15]]],[5,"SIGRTMAX","","Returns the maximum (inclusive) real-time signal number.",null,[[],["i32",15]]],[5,"register_signal_handler","","Registers <code>handler</code> as the signal handler of signum <code>num</code>.",null,[[["i32",15]],[["error",3],["result",4]]]],[5,"clear_signal_handler","","Resets the signal handler of signum <code>num</code> back to the …",null,[[["i32",15]],[["error",3],["result",4]]]],[5,"has_default_signal_handler","","Returns true if the signal handler for signum <code>num</code> is the …",null,[[["i32",15]],[["bool",15],["error",3],["result",4]]]],[5,"register_rt_signal_handler","","Registers <code>handler</code> as the signal handler for the real-time …",null,[[["i32",15]],[["error",3],["result",4]]]],[5,"create_sigset","","Creates <code>sigset</code> from an array of signal numbers.",null,[[],[["sigset_t",3],["error",3],["result",4]]]],[5,"wait_for_signal","","Wait for signal before continuing. The signal number of …",null,[[["option",4],["duration",3]],[["result",4],["error",3],["i32",15]]]],[5,"get_blocked_signals","","Retrieves the signal mask of the current thread as a …",null,[[],[["error",4],["result",4],["vec",3]]]],[5,"block_signal","","Masks given signal.",null,[[["i32",15]],[["result",4],["error",4]]]],[5,"unblock_signal","","Unmasks given signal.",null,[[["i32",15]],[["result",4],["error",4]]]],[5,"clear_signal","","Clears pending signal.",null,[[["i32",15]],[["result",4],["error",4]]]],[5,"kill","","SafetyThis is marked unsafe because it allows signals to …",null,[[["i32",15]],[["error",3],["result",4]]]],[8,"Killable","","Trait for threads that can be signalled via <code>pthread_kill</code>.",null,null],[10,"pthread_handle","","",20,[[],["u64",15]]],[11,"kill","","Sends the signal <code>num</code> to this killable thread.",20,[[["i32",15]],[["error",3],["result",4]]]],[5,"kill_tree","","Terminates and reaps a child process. If the child …",null,[[["child",3],["duration",3]],[["result",4],["error",4]]]],[3,"KillOnDrop","","Wraps a Child process, and calls kill_tree for its …",null,null],[3,"SignalFd","","A safe wrapper around a Linux signalfd (man 2 signalfd).",null,null],[17,"SCM_SOCKET_MAX_FD_COUNT","","The maximum number of FDs that can be sent in a single …",null,null],[8,"ScmSocket","","Trait for file descriptors can send and receive socket …",null,null],[10,"socket_fd","","Gets the file descriptor of this socket.",45,[[],["i32",15]]],[11,"send_with_fd","","Sends the given data and file descriptor over the socket.",45,[[["i32",15]],[["usize",15],["result",4],["error",3]]]],[11,"send_with_fds","","Sends the given data and file descriptors over the socket.",45,[[],[["usize",15],["result",4],["error",3]]]],[11,"send_bufs_with_fd","","Sends the given data and file descriptor over the socket.",45,[[["i32",15]],[["usize",15],["result",4],["error",3]]]],[11,"send_bufs_with_fds","","Sends the given data and file descriptors over the socket.",45,[[],[["usize",15],["result",4],["error",3]]]],[11,"recv_with_fd","","Receives data and potentially a file descriptor from the …",45,[[],[["result",4],["error",3]]]],[11,"recv_with_fds","","Receives data and file descriptors from the socket.",45,[[],[["error",3],["result",4]]]],[11,"recv_iovecs_with_fds","","Receives data and file descriptors from the socket.",45,[[],[["error",3],["result",4]]]],[8,"AsIobuf","","Trait for types that can be converted into an <code>iovec</code> that …",null,null],[10,"as_iobuf","","Returns a <code>iovec</code> that describes a contiguous region of …",46,[[],["iovec",3]]],[10,"as_iobuf_slice","","Returns a slice of <code>iovec</code>s that each describe a contiguous …",46,[[]]],[5,"read_raw_stdin","","Read raw bytes from stdin.",null,[[],[["usize",15],["result",4],["error",3]]]],[8,"Terminal","","Trait for file descriptors that are TTYs, according to …",null,null],[10,"tty_fd","","Gets the file descriptor of the TTY.",47,[[],["i32",15]]],[11,"set_canon_mode","","Set this terminal\'s mode to canonical mode (…",47,[[],[["error",3],["result",4]]]],[11,"set_raw_mode","","Set this terminal\'s mode to raw mode (…",47,[[],[["error",3],["result",4]]]],[11,"set_non_block","","Sets the non-blocking mode of this terminal\'s file …",47,[[["bool",15]],[["error",3],["result",4]]]],[3,"TimerFd","","A safe wrapper around a Linux timerfd (man 2 …",null,null],[3,"FakeTimerFd","","FakeTimerFd: For use in tests.",null,null],[3,"Descriptor","","For use cases where a simple wrapper around a …",null,null],[12,"0","","",48,null],[4,"EventReadResult","","Wrapper around the return value of doing a read on an …",null,null],[13,"Count","","",49,null],[13,"Timeout","","",49,null],[3,"ExternalMapping","","ExternalMapping wraps an external library mapping.  This …",null,null],[4,"FileFlags","","",null,null],[13,"Read","","",50,null],[13,"Write","","",50,null],[13,"ReadWrite","","",50,null],[4,"CloneError","","",null,null],[13,"IterateTasks","","There was an error trying to iterate this process\'s …",51,null],[13,"Multithreaded","","There are multiple threads running. The <code>usize</code> indicates …",51,null],[13,"Sys","","There was an error while cloning.",51,null],[3,"Protection","","Memory access type for anonymous shared memory mapping.",null,null],[3,"MemoryMapping","","Wraps an anonymous shared memory mapping in the current …",null,null],[3,"SharedMemory","","A shared memory file descriptor and its size.",null,null],[3,"MemfdSeals","","A set of memfd seals.",null,null],[4,"Signal","","",null,null],[13,"Abort","","",19,null],[13,"Alarm","","",19,null],[13,"Bus","","",19,null],[13,"Child","","",19,null],[13,"Continue","","",19,null],[13,"ExceededFileSize","","",19,null],[13,"FloatingPointException","","",19,null],[13,"HangUp","","",19,null],[13,"IllegalInstruction","","",19,null],[13,"Interrupt","","",19,null],[13,"Io","","",19,null],[13,"Kill","","",19,null],[13,"Pipe","","",19,null],[13,"Power","","",19,null],[13,"Profile","","",19,null],[13,"Quit","","",19,null],[13,"SegmentationViolation","","",19,null],[13,"StackFault","","",19,null],[13,"Stop","","",19,null],[13,"Sys","","",19,null],[13,"Trap","","",19,null],[13,"Terminate","","",19,null],[13,"TtyIn","","",19,null],[13,"TtyOut","","",19,null],[13,"TtyStop","","",19,null],[13,"Urgent","","",19,null],[13,"User1","","",19,null],[13,"User2","","",19,null],[13,"VtAlarm","","",19,null],[13,"Winch","","",19,null],[13,"Xcpu","","",19,null],[13,"Rt0","","",19,null],[13,"Rt1","","",19,null],[13,"Rt2","","",19,null],[13,"Rt3","","",19,null],[13,"Rt4","","",19,null],[13,"Rt5","","",19,null],[13,"Rt6","","",19,null],[13,"Rt7","","",19,null],[13,"Rt8","","",19,null],[13,"Rt9","","",19,null],[13,"Rt10","","",19,null],[13,"Rt11","","",19,null],[13,"Rt12","","",19,null],[13,"Rt13","","",19,null],[13,"Rt14","","",19,null],[13,"Rt15","","",19,null],[13,"Rt16","","",19,null],[13,"Rt17","","",19,null],[13,"Rt18","","",19,null],[13,"Rt19","","",19,null],[13,"Rt20","","",19,null],[13,"Rt21","","",19,null],[13,"Rt22","","",19,null],[13,"Rt23","","",19,null],[13,"Rt24","","",19,null],[13,"Rt25","","",19,null],[13,"Rt26","","",19,null],[13,"Rt27","","",19,null],[13,"Rt28","","",19,null],[13,"Rt29","","",19,null],[13,"Rt30","","",19,null],[13,"Rt31","","",19,null],[8,"DescriptorIntoAsync","","Like <code>cros_async::IntoAsync</code>, except for use with crosvm\'s …",null,null],[3,"DescriptorAdapter","","To use an IO struct with cros_async, the type must be …",null,null],[12,"0","","",52,null],[3,"Event","","See EventFd for struct- and method-level documentation.",null,null],[12,"0","","",53,null],[4,"EventReadResult","","Wrapper around the return value of doing a read on an …",null,null],[13,"Count","","",49,null],[13,"Timeout","","",49,null],[3,"ScopedEvent","","See ScopedEvent for struct- and method-level …",null,null],[5,"ioctl","","Run an ioctl with no arguments.",null,[[["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_mut_ptr","","Run an ioctl with a mutable raw pointer.",null,[[["asrawdescriptor",8],["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_mut_ref","","Run an ioctl with a mutable reference.",null,[[["asrawdescriptor",8],["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_ptr","","Run an ioctl with a raw pointer.",null,[[["asrawdescriptor",8],["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_ref","","Run an ioctl with an immutable reference.",null,[[["asrawdescriptor",8],["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_val","","Run an ioctl with a single value argument.",null,[[["asrawdescriptor",8],["ioctlnr",6],["c_ulong",6]],["c_int",6]]],[8,"MemoryMappingUnix","","",null,null],[10,"remove_range","","",54,[[["usize",15]],[["mmaperror",4],["result",4]]]],[3,"MemoryMapping","","See MemoryMapping for struct- and method-level …",null,null],[3,"MemoryMappingBuilder","","",null,null],[8,"MemoryMappingBuilderUnix","","",null,null],[10,"from_descriptor","","",55,[[["asrawdescriptor",8]],["memorymappingbuilder",3]]],[3,"SharedMemory","","See SharedMemory for struct- and method-level …",null,null],[8,"SharedMemoryUnix","","",null,null],[11,"from_safe_descriptor","","Creates a SharedMemory instance from a SafeDescriptor …",56,[[["safedescriptor",3]],[["sharedmemory",3],["result",6]]]],[11,"from_file","","",56,[[["file",3]],[["sharedmemory",3],["result",6]]]],[10,"get_seals","","",56,[[],[["memfdseals",3],["result",6]]]],[10,"add_seals","","",56,[[["memfdseals",3]],["result",6]]],[17,"_IOC_NRBITS","","",null,null],[17,"_IOC_TYPEBITS","","",null,null],[17,"_IOC_SIZEBITS","","",null,null],[17,"_IOC_DIRBITS","","",null,null],[17,"_IOC_NRMASK","","",null,null],[17,"_IOC_TYPEMASK","","",null,null],[17,"_IOC_SIZEMASK","","",null,null],[17,"_IOC_DIRMASK","","",null,null],[17,"_IOC_NRSHIFT","","",null,null],[17,"_IOC_TYPESHIFT","","",null,null],[17,"_IOC_SIZESHIFT","","",null,null],[17,"_IOC_DIRSHIFT","","",null,null],[17,"_IOC_NONE","","",null,null],[17,"_IOC_WRITE","","",null,null],[17,"_IOC_READ","","",null,null],[17,"IOC_IN","","",null,null],[17,"IOC_OUT","","",null,null],[17,"IOC_INOUT","","",null,null],[17,"IOCSIZE_MASK","","",null,null],[17,"IOCSIZE_SHIFT","","",null,null],[6,"IoctlNr","","",null,null],[5,"ioctl","","Run an ioctl with no arguments.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_val","","Run an ioctl with a single value argument.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_ref","","Run an ioctl with an immutable reference.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_mut_ref","","Run an ioctl with a mutable reference.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_ptr","","Run an ioctl with a raw pointer.",null,[[["u64",15]],["i32",15]]],[5,"ioctl_with_mut_ptr","","Run an ioctl with a mutable raw pointer.",null,[[["u64",15]],["i32",15]]],[14,"volatile_at_impl","","",null,null],[14,"volatile_impl","","",null,null],[8,"FileAllocate","","A trait for allocating disk space in a sparse file. This …",null,null],[10,"allocate","","Allocate storage for the region of the file starting at …",7,[[["u64",15]],[["result",4],["error",3]]]],[8,"FileGetLen","","A trait for getting the size of a file. This is …",null,null],[10,"get_len","","Get the current length of the file in bytes.",6,[[],[["result",4],["error",3],["u64",15]]]],[8,"FileReadWriteAtVolatile","","A trait similar to the unix <code>ReadExt</code> and <code>WriteExt</code> traits, …",null,null],[10,"read_at_volatile","","Reads bytes from this file at <code>offset</code> into the given …",9,[[["volatileslice",3],["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"read_vectored_at_volatile","","Like <code>read_at_volatile</code>, except it reads to a slice of …",9,[[["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"read_exact_at_volatile","","Reads bytes from this file at <code>offset</code> into the given slice …",9,[[["volatileslice",3],["u64",15]],[["result",4],["error",3]]]],[10,"write_at_volatile","","Writes bytes from this file at <code>offset</code> into the given …",9,[[["volatileslice",3],["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored_at_volatile","","Like <code>write_at_at_volatile</code>, except that it writes from a …",9,[[["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"write_all_at_volatile","","Writes bytes from this file at <code>offset</code> into the given …",9,[[["volatileslice",3],["u64",15]],[["result",4],["error",3]]]],[8,"FileReadWriteVolatile","","A trait similar to <code>Read</code> and <code>Write</code>, but uses volatile …",null,null],[10,"read_volatile","","Read bytes from this file into the given slice, returning …",8,[[["volatileslice",3]],[["usize",15],["result",4],["error",3]]]],[11,"read_vectored_volatile","","Like <code>read_volatile</code>, except it reads to a slice of …",8,[[],[["usize",15],["result",4],["error",3]]]],[11,"read_exact_volatile","","Reads bytes from this into the given slice until all …",8,[[["volatileslice",3]],[["result",4],["error",3]]]],[10,"write_volatile","","Write bytes from the slice to the given file, returning …",8,[[["volatileslice",3]],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored_volatile","","Like <code>write_volatile</code>, except that it writes from a slice …",8,[[],[["usize",15],["result",4],["error",3]]]],[11,"write_all_volatile","","Write bytes from the slice to the given file until all …",8,[[["volatileslice",3]],[["result",4],["error",3]]]],[8,"FileSetLen","","A trait for setting the size of a file. This is …",null,null],[10,"set_len","","",5,[[["u64",15]],[["result",4],["error",3]]]],[8,"FileSync","","A trait for flushing the contents of a file to disk. This …",null,null],[10,"fsync","","",4,[[],[["result",4],["error",3]]]],[8,"SeekHole","","A trait for seeking to the next hole or non-hole position …",null,null],[10,"seek_hole","","Seek to the first hole in a file at a position greater …",33,[[["u64",15]],[["error",3],["result",4],["option",4]]]],[10,"seek_data","","Seek to the first data in a file at a position greater …",33,[[["u64",15]],[["error",3],["result",4],["option",4]]]],[8,"WriteZeroesAt","","A trait for writing zeroes to an arbitrary position in a …",null,null],[10,"write_zeroes_at","","Write up to <code>length</code> bytes of zeroes starting at <code>offset</code>, …",37,[[["usize",15],["u64",15]],[["usize",15],["result",4],["error",3]]]],[11,"write_zeroes_all_at","","Write zeroes starting at <code>offset</code> until <code>length</code> bytes have …",37,[[["usize",15],["u64",15]],[["result",4],["error",3]]]],[3,"FakeTimer","","See FakeTimerFd for struct- and method-level …",null,null],[3,"Timer","","See TimerFd for struct- and method-level documentation.",null,null],[12,"0","","",57,null],[3,"AsyncTube","","",null,null],[4,"TubeError","","",null,null],[13,"Clone","","",58,null],[13,"CreateAsync","","",58,null],[13,"Disconnected","","",58,null],[13,"Json","","",58,null],[13,"Pair","","",58,null],[13,"Recv","","",58,null],[13,"Send","","",58,null],[13,"SetRecvTimeout","","",58,null],[13,"SetSendTimeout","","",58,null],[6,"TubeResult","","",null,null],[3,"Tube","","Bidirectional tube that support both send and recv.",null,null],[8,"EventToken","","",null,null],[4,"EventType","","Represents types of events to watch for.",null,null],[13,"None","","",59,null],[13,"Read","","",59,null],[13,"Write","","",59,null],[13,"ReadWrite","","",59,null],[3,"TriggeredEvent","","Represents an event that has been signaled and waited for …",null,null],[12,"token","","",60,null],[12,"is_readable","","",60,null],[12,"is_writable","","",60,null],[12,"is_hungup","","",60,null],[3,"WaitContext","","Used to wait for multiple objects which are eligible for …",null,null],[5,"wrap_descriptor","","Wraps an AsRawDescriptor in the simple Descriptor struct, …",null,[[["asrawdescriptor",8]],["descriptor",3]]],[5,"validate_raw_descriptor","","Verifies that |raw_descriptor| is actually owned by this …",null,[[["rawdescriptor",6]],[["rawdescriptor",6],["result",6]]]],[8,"AsRawDescriptors","","A trait similar to <code>AsRawDescriptor</code> but supports an …",null,null],[10,"as_raw_descriptors","","",61,[[],[["rawdescriptor",6],["vec",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"as_raw_fds","","",52,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"as_raw_descriptors","","",53,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"as_raw_descriptors","","",65,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"as_raw_descriptors","","",57,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"as_raw_descriptors","","",66,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"as_raw_descriptors","","",67,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"as_raw_fds","","",67,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"as_raw_descriptors","","",69,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","base::syslog","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","base::file_traits::lib","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","base::net","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"as_raw_fds","","",73,[[],[["global",3],["vec",3],["i32",15]]]],[11,"as_raw_descriptors","","",74,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"as_raw_fds","","",74,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"as_raw_fds","","",75,[[],[["global",3],["vec",3],["i32",15]]]],[11,"as_raw_descriptors","","",13,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"as_raw_fds","","",13,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","base::rand","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","base::read_dir","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","base::scoped_path","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","base::scoped_signal_handler","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","base","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","base::signal","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","base","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","base::vsock","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"as_raw_fds","","",82,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"as_raw_fds","","",83,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"as_raw_fds","","",84,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","base","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"as_raw_descriptors","","",90,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"as_raw_fds","","",90,[[],[["global",3],["vec",3],["i32",15]]]],[11,"as_raw_descriptors","","",91,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"as_raw_fds","","",91,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"into_iter","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"as_raw_fds","","",100,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"as_raw_fds","","",101,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"as_raw_fds","","",44,[[],[["global",3],["vec",3],["i32",15]]]],[11,"as_raw_descriptors","","",102,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"as_raw_fds","","",102,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"as_raw_fds","","",103,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"as_raw_fds","","",104,[[],[["global",3],["vec",3],["i32",15]]]],[11,"as_raw_descriptors","","",48,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"as_raw_fds","","",48,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"as_raw_fds","","",108,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"fmt","base::file_traits::lib","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","base","",19,[[["i32",15]],[["signal",4],["result",4]]]],[11,"try_from","","",91,[[["asrawfd",8]],[["safedescriptor",3],["result",4]]]],[11,"deref","","",29,[[],["unixlistener",3]]],[11,"deref","","",30,[[]]],[11,"deref","base::net","",13,[[]]],[11,"deref","base::scoped_path","",77,[[]]],[11,"deref","base","",92,[[],["eventfd",3]]],[11,"deref","","",80,[[]]],[11,"fmt","base::syslog","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::vsock","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::syslog","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::vsock","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::scoped_signal_handler","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::signal","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"handle_signal","","",79,[[["signal",4]]]],[11,"hash","","",48,[[]]],[11,"hash","base::vsock","",21,[[]]],[11,"hash","","",22,[[]]],[11,"seek","base","",108,[[["seekfrom",4]],[["result",4],["error",3],["u64",15]]]],[11,"from","base::vsock","",21,[[["u32",15]],["vsockcid",4]]],[11,"from","base","",93,[[["memorymapping",3]],["memorymappingarena",3]]],[11,"from","","",106,[[["i32",15]],["protection",3]]],[11,"from","","",27,[[["i32",15]],["waitstatus",4]]],[11,"from","","",80,[[["child",3]],["killondrop",3]]],[11,"from","","",92,[[["eventfd",3]],["scopedevent",3]]],[11,"from","","",90,[[["scopedevent",3]],["eventfd",3]]],[11,"from","","",88,[[["error",3]],["error",3]]],[11,"from","","",91,[[["file",3]],["safedescriptor",3]]],[11,"from","","",30,[[["file",3]],["fileserdewrapper",3]]],[11,"as_mut","","",80,[[],["child",3]]],[11,"clone","","",86,[[],["clock",3]]],[11,"clone","base::net","",12,[[],["inetversion",4]]],[11,"clone","base::vsock","",21,[[],["vsockcid",4]]],[11,"clone","base","",48,[[],["descriptor",3]]],[11,"clone","base::syslog","",2,[[],["facility",4]]],[11,"clone","base","",106,[[],["protection",3]]],[11,"clone","base::vsock","",22,[[],["socketaddr",3]]],[11,"clone","base::rand","",14,[[],["source",4]]],[11,"clone","base","",109,[[],["memfdseals",3]]],[11,"clone","","",88,[[],["error",3]]],[11,"clone","","",50,[[],["fileflags",4]]],[11,"clone","","",19,[[],["signal",4]]],[11,"clone","base::syslog","",1,[[],["priority",4]]],[11,"to_socket_addr","base::vsock","",22,[[],[["result",4],["socketaddr",3],["addrparseerror",3]]]],[11,"as_raw_fd","base","",44,[[],["i32",15]]],[11,"as_raw_fd","base::vsock","",84,[[],["i32",15]]],[11,"as_raw_fd","base","",101,[[],["i32",15]]],[11,"as_raw_fd","base::net","",74,[[],["i32",15]]],[11,"as_raw_fd","","",75,[[],["i32",15]]],[11,"as_raw_fd","base","",90,[[],["i32",15]]],[11,"as_raw_fd","base::vsock","",83,[[],["i32",15]]],[11,"as_raw_fd","base","",103,[[],["i32",15]]],[11,"as_raw_fd","","",102,[[],["i32",15]]],[11,"as_raw_fd","","",48,[[],["i32",15]]],[11,"as_raw_fd","","",108,[[],["i32",15]]],[11,"as_raw_fd","base::net","",73,[[],["i32",15]]],[11,"as_raw_fd","base","",100,[[],["i32",15]]],[11,"as_raw_fd","","",104,[[],["i32",15]]],[11,"as_raw_fd","base::vsock","",82,[[],["i32",15]]],[11,"as_raw_fd","base","",91,[[],["i32",15]]],[11,"as_raw_fd","base::net","",13,[[],["i32",15]]],[11,"from_str","base::vsock","",21,[[["str",15]],[["result",4],["vsockcid",4]]]],[11,"from_str","","Parse a vsock SocketAddr from a string. vsock socket …",22,[[["str",15]],[["result",4],["socketaddr",3],["addrparseerror",3]]]],[11,"into_raw_fd","base","",103,[[],["i32",15]]],[11,"into_raw_fd","","",90,[[],["i32",15]]],[11,"into_raw_fd","base::vsock","",82,[[],["i32",15]]],[11,"into_raw_fd","base","",100,[[],["i32",15]]],[11,"into_raw_fd","","",108,[[],["i32",15]]],[11,"into_raw_fd","","",104,[[],["i32",15]]],[11,"into_raw_fd","base::net","",73,[[],["i32",15]]],[11,"into_raw_fd","base::vsock","",83,[[],["i32",15]]],[11,"into_raw_fd","base","",101,[[],["i32",15]]],[11,"from_raw_descriptor","base::net","",74,[[["i32",15]],["unixseqpacket",3]]],[11,"from_raw_descriptor","base","",91,[[["i32",15]],["safedescriptor",3]]],[11,"as_iobuf","base::file_traits::lib","",72,[[],["iovec",3]]],[11,"as_iobuf_slice","","",72,[[]]],[11,"deserialize","base::net","",74,[[],[["unixseqpacket",3],["result",4]]]],[11,"deserialize","base","",108,[[],[["result",4],["sharedmemory",3]]]],[11,"deserialize","","",91,[[],[["safedescriptor",3],["result",4]]]],[11,"deserialize","","",90,[[],[["result",4],["eventfd",3]]]],[11,"deserialize","","",30,[[],[["fileserdewrapper",3],["result",4]]]],[11,"deserialize","","",88,[[],[["error",3],["result",4]]]],[11,"as_raw_token","","",48,[[],["u64",15]]],[11,"from_raw_token","","",48,[[["u64",15]],["descriptor",3]]],[11,"socket_fd","base::net","",74,[[],["i32",15]]],[11,"source","base","",32,[[],[["option",4],["error",8]]]],[11,"next","","",96,[[],["option",4]]],[11,"as_ptr","","",93,[[]]],[11,"size","","",93,[[],["usize",15]]],[11,"add_fd_mapping","","",93,[[["usize",15],["asrawfd",8],["u64",15],["protection",3]],[["error",4],["result",4]]]],[11,"remove_mapping","","",93,[[["usize",15]],[["error",4],["result",4]]]],[11,"as_ptr","","used for passing this region to ioctls for setting guest …",105,[[]]],[11,"size","","Returns the size of the memory region in bytes.",105,[[],["usize",15]]],[11,"as_ptr","","",107,[[]]],[11,"size","","",107,[[],["usize",15]]],[11,"eq","","",105,[[["externalmapping",3]],["bool",15]]],[11,"ne","","",105,[[["externalmapping",3]],["bool",15]]],[11,"eq","base::vsock","",21,[[["vsockcid",4]],["bool",15]]],[11,"ne","","",21,[[["vsockcid",4]],["bool",15]]],[11,"eq","base","",19,[[["signal",4]],["bool",15]]],[11,"eq","","",48,[[["descriptor",3]],["bool",15]]],[11,"ne","","",48,[[["descriptor",3]],["bool",15]]],[11,"eq","","",31,[[["error",4]],["bool",15]]],[11,"ne","","",31,[[["error",4]],["bool",15]]],[11,"eq","","",91,[[["safedescriptor",3]],["bool",15]]],[11,"eq","base::net","",12,[[["inetversion",4]],["bool",15]]],[11,"eq","base","",88,[[["error",3]],["bool",15]]],[11,"ne","","",88,[[["error",3]],["bool",15]]],[11,"eq","","",106,[[["protection",3]],["bool",15]]],[11,"ne","","",106,[[["protection",3]],["bool",15]]],[11,"eq","base::rand","",14,[[["source",4]],["bool",15]]],[11,"eq","base::vsock","",22,[[["socketaddr",3]],["bool",15]]],[11,"ne","","",22,[[["socketaddr",3]],["bool",15]]],[11,"eq","base","",50,[[["fileflags",4]],["bool",15]]],[11,"eq","","",90,[[["eventfd",3]],["bool",15]]],[11,"ne","","",90,[[["eventfd",3]],["bool",15]]],[11,"eq","","",49,[[["eventreadresult",4]],["bool",15]]],[11,"ne","","",49,[[["eventreadresult",4]],["bool",15]]],[11,"serialize","","",88,[[],["result",4]]],[11,"serialize","","",91,[[],["result",4]]],[11,"serialize","","",108,[[],["result",4]]],[11,"serialize","","",89,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",90,[[],["result",4]]],[11,"serialize","base::net","",74,[[],["result",4]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::vsock","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::net","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::vsock","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::syslog","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::rand","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::vsock","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::vsock","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::scoped_signal_handler","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::vsock","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::signal","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base::syslog","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","base::vsock","",22,[[["socketaddr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["socketaddr",3]],["bool",15]]],[11,"le","","",22,[[["socketaddr",3]],["bool",15]]],[11,"gt","","",22,[[["socketaddr",3]],["bool",15]]],[11,"ge","","",22,[[["socketaddr",3]],["bool",15]]],[11,"partial_cmp","base","",48,[[["descriptor",3]],[["option",4],["ordering",4]]]],[11,"lt","","",48,[[["descriptor",3]],["bool",15]]],[11,"le","","",48,[[["descriptor",3]],["bool",15]]],[11,"gt","","",48,[[["descriptor",3]],["bool",15]]],[11,"ge","","",48,[[["descriptor",3]],["bool",15]]],[11,"partial_cmp","base::vsock","",21,[[["vsockcid",4]],[["option",4],["ordering",4]]]],[11,"lt","","",21,[[["vsockcid",4]],["bool",15]]],[11,"le","","",21,[[["vsockcid",4]],["bool",15]]],[11,"gt","","",21,[[["vsockcid",4]],["bool",15]]],[11,"ge","","",21,[[["vsockcid",4]],["bool",15]]],[11,"deref_mut","base","",30,[[]]],[11,"deref_mut","","",80,[[]]],[11,"write","","",108,[[],[["usize",15],["result",4],["error",3]]]],[11,"flush","","",108,[[],[["result",4],["error",3]]]],[11,"write","base::vsock","",83,[[],[["usize",15],["result",4],["error",3]]]],[11,"flush","","",83,[[],[["result",4],["error",3]]]],[11,"write","base::syslog","",70,[[],[["usize",15],["result",4],["error",3]]]],[11,"flush","","",70,[[],[["result",4],["error",3]]]],[11,"into_raw_descriptor","base","",91,[[],["i32",15]]],[11,"read","base::vsock","",83,[[],[["usize",15],["result",4],["error",3]]]],[11,"read","base","",108,[[],[["usize",15],["result",4],["error",3]]]],[11,"as_ref","base::net","",13,[[],["unixseqpacketlistener",3]]],[11,"as_ref","base","",28,[[],["unixdatagram",3]]],[11,"as_ref","","",29,[[],["unixlistener",3]]],[11,"as_ref","base::scoped_path","",77,[[],["path",3]]],[11,"as_ref","base","",80,[[],["child",3]]],[11,"default","base::rand","",14,[[],["source",4]]],[11,"default","base","",94,[[],["epollevents",3]]],[11,"default","","",86,[[],["clock",3]]],[11,"default","","",87,[[],["fakeclock",3]]],[11,"default","","",109,[[],["memfdseals",3]]],[11,"cmp","","",48,[[["descriptor",3]],["ordering",4]]],[11,"cmp","base::vsock","",22,[[["socketaddr",3]],["ordering",4]]],[11,"cmp","","",21,[[["vsockcid",4]],["ordering",4]]],[11,"from_raw_fd","base::net","",74,[[["i32",15]],["unixseqpacket",3]]],[11,"from_raw_fd","","",75,[[["i32",15]],["unixseqpacketlistener",3]]],[11,"from_raw_fd","base","",103,[[["i32",15]],["timerfd",3]]],[11,"from_raw_fd","","",90,[[["i32",15]],["eventfd",3]]],[11,"as_raw_descriptor","","",91,[[],["i32",15]]],[11,"as_raw_descriptor","","",48,[[],["i32",15]]],[11,"as_raw_descriptor","base::net","",13,[[],["i32",15]]],[11,"as_raw_descriptor","base","",102,[[],["i32",15]]],[11,"as_raw_descriptor","","",90,[[],["i32",15]]],[11,"as_raw_descriptor","base::net","",74,[[],["i32",15]]],[11,"drop","","",13,[[]]],[11,"drop","","",75,[[]]],[11,"drop","base::scoped_path","",77,[[]]],[11,"drop","base","",80,[[]]],[11,"drop","","",28,[[]]],[11,"drop","","",105,[[]]],[11,"drop","base::net","",74,[[]]],[11,"drop","base","",78,[[]]],[11,"drop","base::net","",73,[[]]],[11,"drop","base","",29,[[]]],[11,"drop","","",85,[[]]],[11,"drop","","",102,[[]]],[11,"drop","base::vsock","",82,[[]]],[11,"drop","base","",92,[[]]],[11,"drop","","",91,[[]]],[11,"drop","","",107,[[]]],[11,"drop","","",93,[[]]],[11,"get_slice","","",107,[[["usize",15]],[["volatilememoryerror",4],["volatileslice",3],["result",4]]]],[11,"clone","base::file_traits::lib","",10,[[],["iovec",3]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",72,[[],["volatileslice",3]]],[11,"get_slice","","",72,[[["usize",15]],[["volatilememoryerror",4],["volatileslice",3],["result",4]]]],[11,"remove_range","base","",63,[[["usize",15]],[["mmaperror",4],["result",4]]]],[11,"from_descriptor","","Build the memory mapping given the specified descriptor …",64,[[["asrawdescriptor",8]],["memorymappingbuilder",3]]],[11,"get_seals","","",65,[[],[["memfdseals",3],["result",6]]]],[11,"add_seals","","",65,[[["memfdseals",3]],["result",6]]],[11,"drop","","",62,[[]]],[11,"from","","",62,[[["event",3]]]],[11,"from","","",53,[[["scopedevent",3]]]],[11,"from","","",91,[[["sharedmemory",3]],["safedescriptor",3]]],[11,"from","","",67,[[["asynctube",3]],["tube",3]]],[11,"clone","","",60,[[],["triggeredevent",3]]],[11,"eq","","",53,[[["event",3]],["bool",15]]],[11,"ne","","",53,[[["event",3]],["bool",15]]],[11,"deref","","",62,[[],["event",3]]],[11,"deref","","",68,[[]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"as_raw_fd","","",52,[[],["rawfd",6]]],[11,"as_raw_fd","","",67,[[],["rawfd",6]]],[11,"into_raw_descriptor","","",53,[[],["rawdescriptor",6]]],[11,"into_raw_descriptor","","",65,[[],["rawdescriptor",6]]],[11,"into_raw_descriptor","","",57,[[],["rawdescriptor",6]]],[11,"into_raw_descriptor","","",66,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",53,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",65,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",57,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",66,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",67,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",69,[[],["rawdescriptor",6]]],[11,"from_raw_descriptor","","",53,[[["rawdescriptor",6]]]],[11,"from_raw_descriptor","","",57,[[["rawdescriptor",6]]]],[11,"from_raw_descriptor","","",67,[[["rawdescriptor",6]]]],[11,"deserialize","","",53,[[],["result",4]]],[11,"deserialize","","",65,[[],["result",4]]],[11,"serialize","","",53,[[],["result",4]]],[11,"serialize","","",65,[[],["result",4]]],[11,"as_ptr","","",63,[[]]],[11,"size","","",63,[[],["usize",15]]],[11,"get_slice","","",63,[[["usize",15]],[["volatilememoryresult",6],["volatileslice",3]]]],[11,"new","","",53,[[],[["result",6],["event",3]]]],[11,"write","","",53,[[["u64",15]],["result",6]]],[11,"read","","",53,[[],[["u64",15],["result",6]]]],[11,"read_timeout","","",53,[[["duration",3]],[["eventreadresult",4],["result",6]]]],[11,"try_clone","","",53,[[],[["result",6],["event",3]]]],[11,"new","","",62,[[],[["result",6],["scopedevent",3]]]],[11,"write_slice","","",63,[[["usize",15]],[["usize",15],["mmaperror",4],["result",4]]]],[11,"read_slice","","",63,[[["usize",15]],[["usize",15],["mmaperror",4],["result",4]]]],[11,"write_obj","","",63,[[["datainit",8],["usize",15]],[["mmaperror",4],["result",4]]]],[11,"read_obj","","",63,[[["usize",15]],[["datainit",8],["mmaperror",4],["result",4]]]],[11,"msync","","",63,[[],[["mmaperror",4],["result",4]]]],[11,"use_hugepages","","",63,[[],[["mmaperror",4],["result",4]]]],[11,"read_to_memory","","",63,[[["usize",15],["asrawdescriptor",8]],[["mmaperror",4],["result",4]]]],[11,"write_from_memory","","",63,[[["usize",15],["asrawdescriptor",8]],[["mmaperror",4],["result",4]]]],[11,"new","","Creates a new builder specifying size of the memory …",64,[[["usize",15]],["memorymappingbuilder",3]]],[11,"from_file","","Build the memory mapping given the specified File to …",64,[[["file",3]],["memorymappingbuilder",3]]],[11,"from_shared_memory","","Build the memory mapping given the specified SharedMemory …",64,[[["sharedmemory",3]],["memorymappingbuilder",3]]],[11,"offset","","Offset in bytes from the beginning of the mapping to …",64,[[["u64",15]],["memorymappingbuilder",3]]],[11,"protection","","Protection (e.g. readable/writable) of the memory region.",64,[[["protection",3]],["memorymappingbuilder",3]]],[11,"populate","","Request that the mapped pages are pre-populated",64,[[],["memorymappingbuilder",3]]],[11,"build","","Build a MemoryMapping from the provided options.",64,[[],[["result",4],["memorymapping",3],["mmaperror",4]]]],[11,"build_fixed","","Build a MemoryMapping from the provided options at a …",64,[[],[["result",4],["memorymapping",3],["mmaperror",4]]]],[11,"named","","",65,[[["u64",15],["vec",3],["into",8]],[["sharedmemory",3],["result",6]]]],[11,"anon","","",65,[[["u64",15]],[["sharedmemory",3],["result",6]]]],[11,"new","","",65,[[["option",4],["cstr",3],["u64",15]],[["sharedmemory",3],["result",6]]]],[11,"size","","",65,[[],["u64",15]]],[11,"inner","","Unwraps the sys_util::SharedMemory stored within this …",65,[[],["sysutilsharedmemory",3]]],[11,"from_safe_descriptor","","Creates a SharedMemory instance from a SafeDescriptor …",56,[[["safedescriptor",3]],[["sharedmemory",3],["result",6]]]],[11,"from_file","","",56,[[["file",3]],[["sharedmemory",3],["result",6]]]],[11,"new","","",57,[[],[["result",6],["timer",3]]]],[11,"new","","",66,[[["mutex",3],["arc",3]]]],[11,"reset","","",57,[[["option",4],["duration",3]],["result",6]]],[11,"wait","","",57,[[],["result",6]]],[11,"is_armed","","",57,[[],[["bool",15],["result",6]]]],[11,"clear","","",57,[[],["result",6]]],[11,"resolution","","",57,[[],[["result",6],["duration",3]]]],[11,"reset","","",66,[[["option",4],["duration",3]],["result",6]]],[11,"wait","","",66,[[],["result",6]]],[11,"is_armed","","",66,[[],[["bool",15],["result",6]]]],[11,"clear","","",66,[[],["result",6]]],[11,"resolution","","",66,[[],[["result",6],["duration",3]]]],[11,"pair","","Create a pair of connected tubes. Request is send in one …",67,[[],["result",6]]],[11,"new","","",67,[[["unixseqpacket",3]],["tube",3]]],[11,"into_async_tube","","",67,[[["executor",4]],[["result",6],["asynctube",3]]]],[11,"try_clone","","",67,[[],["result",6]]],[11,"send","","",67,[[],["result",6]]],[11,"recv","","",67,[[],[["result",6],["deserializeowned",8]]]],[11,"set_send_timeout","","",67,[[["option",4],["duration",3]],["result",6]]],[11,"set_recv_timeout","","",67,[[["option",4],["duration",3]],["result",6]]],[11,"next","","",68,[[]]],[11,"new","","Creates a new WaitContext.",69,[[],[["waitcontext",3],["result",6]]]],[11,"build_with","","Creates a new WaitContext with the the associated …",69,[[],[["waitcontext",3],["result",6]]]],[11,"add","","Adds a trigger to the WaitContext.",69,[[["asrawdescriptor",8]],["result",6]]],[11,"add_for_event","","Adds a trigger to the WaitContext watching for a specific …",69,[[["asrawdescriptor",8],["eventtype",4]],["result",6]]],[11,"add_many","","Adds multiple triggers to the WaitContext.",69,[[],["result",6]]],[11,"modify","","Modifies a trigger already added to the WaitContext. If …",69,[[["asrawdescriptor",8],["eventtype",4]],["result",6]]],[11,"delete","","Removes the given handle from triggers registered in the …",69,[[["asrawdescriptor",8]],["result",6]]],[11,"wait","","Waits for one or more of the registered triggers to …",69,[[],[["smallvec",3],["result",6]]]],[11,"wait_timeout","","Waits for one or more of the registered triggers to …",69,[[["duration",3]],[["smallvec",3],["result",6]]]],[11,"new","base::syslog","",70,[[["facility",4],["priority",4]],["syslogger",3]]],[11,"new","base::file_traits::lib","Creates a slice of raw memory that must support volatile …",72,[[],["volatileslice",3]]],[11,"from_raw_parts","","Creates a <code>VolatileSlice</code> from a pointer and a length.",72,[[["usize",15]],["volatileslice",3]]],[11,"as_ptr","","Gets a const pointer to this slice\'s memory.",72,[[]]],[11,"as_mut_ptr","","Gets a mutable pointer to this slice\'s memory.",72,[[]]],[11,"size","","Gets the size of this slice.",72,[[],["usize",15]]],[11,"as_iobuf","","Returns this <code>VolatileSlice</code> as an <code>iovec</code>.",72,[[],["iovec",3]]],[11,"as_iobufs","","Converts a slice of <code>VolatileSlice</code>s into a slice of <code>iovec</code>s",72,[[]]],[11,"offset","","Creates a copy of this slice with the address increased …",72,[[["usize",15]],[["volatilememoryerror",4],["volatileslice",3],["result",4]]]],[11,"sub_slice","","Similar to <code>get_slice</code> but the returned slice outlives this …",72,[[["usize",15]],[["volatilememoryerror",4],["volatileslice",3],["result",4]]]],[11,"write_bytes","","Sets each byte of this slice with the given byte, similar …",72,[[["u8",15]]]],[11,"copy_to","","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> …",72,[[]]],[11,"copy_to_volatile_slice","","Copies <code>self.size()</code> or <code>slice.size()</code> bytes, whichever is …",72,[[["volatileslice",3]]]],[11,"copy_from","","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> …",72,[[]]],[11,"from_sockaddr","base::net","",12,[[["socketaddr",4]],["inetversion",4]]],[11,"new","","",73,[[["inetversion",4]],[["result",4],["tcpsocket",3],["error",3]]]],[11,"bind","","",73,[[],[["result",4],["error",3]]]],[11,"connect","","",73,[[],[["result",4],["tcpstream",3],["error",3]]]],[11,"listen","","",73,[[],[["result",4],["tcplistener",3],["error",3]]]],[11,"local_port","","Returns the port that this socket is bound to. This can …",73,[[],[["error",3],["result",4],["u16",15]]]],[11,"connect","","Open a <code>SOCK_SEQPACKET</code> connection to socket named by <code>path</code>.",74,[[],[["result",4],["unixseqpacket",3],["error",3]]]],[11,"pair","","Creates a pair of connected <code>SOCK_SEQPACKET</code> sockets.",74,[[],[["result",4],["error",3]]]],[11,"try_clone","","Clone the underlying FD.",74,[[],[["result",4],["unixseqpacket",3],["error",3]]]],[11,"get_readable_bytes","","Gets the number of bytes that can be read from this …",74,[[],[["usize",15],["result",4],["error",3]]]],[11,"next_packet_size","","Gets the number of bytes in the next packet. This blocks …",74,[[],[["usize",15],["result",4],["error",3]]]],[11,"send","","Write data from a given buffer to the socket fd",74,[[],[["usize",15],["result",4],["error",3]]]],[11,"recv","","Read data from the socket fd to a given buffer",74,[[],[["usize",15],["result",4],["error",3]]]],[11,"recv_to_vec","","Read data from the socket fd to a given <code>Vec</code>, resizing it …",74,[[["vec",3]],[["result",4],["error",3]]]],[11,"recv_as_vec","","Read data from the socket fd to a new <code>Vec</code>.",74,[[],[["result",4],["vec",3],["error",3]]]],[11,"recv_as_vec_with_fds","","Read data and fds from the socket fd to a new pair of <code>Vec</code>.",74,[[],[["error",3],["result",4]]]],[11,"set_read_timeout","","Sets or removes the timeout for read/recv operations on …",74,[[["option",4],["duration",3]],[["result",4],["error",3]]]],[11,"set_write_timeout","","Sets or removes the timeout for write/send operations on …",74,[[["option",4],["duration",3]],[["result",4],["error",3]]]],[11,"bind","","Creates a new <code>UnixSeqpacketListener</code> bound to the given …",75,[[],[["unixseqpacketlistener",3],["error",3],["result",4]]]],[11,"accept","","Blocks for and accepts a new incoming connection and …",75,[[],[["result",4],["unixseqpacket",3],["error",3]]]],[11,"path","","Gets the path that this listener is bound to.",75,[[],[["pathbuf",3],["result",4],["error",3]]]],[11,"next","base::read_dir","Return the next directory entry. This is implemented as a …",76,[[],[["option",4],["result",4]]]],[11,"create","base::scoped_path","",77,[[],[["scopedpath",3],["result",4],["error",3]]]],[11,"new","base","Attempts to register <code>handler</code> with the provided <code>signals</code>. …",78,[[],[["scopedsignalhandler",3],["result",4],["error",4]]]],[11,"timeout","","Get the timeout. See timeout_mut() for more details.",80,[[],["duration",3]]],[11,"timeout_mut","","Change the timeout for how long child processes are …",80,[[],["duration",3]]],[11,"new","base::vsock","",82,[[],[["error",3],["vsocksocket",3],["result",4]]]],[11,"bind","","",82,[[],[["result",4],["error",3]]]],[11,"connect","","",82,[[],[["result",4],["vsockstream",3],["error",3]]]],[11,"listen","","",82,[[],[["result",4],["vsocklistener",3],["error",3]]]],[11,"local_port","","Returns the port that this socket is bound to. This can …",82,[[],[["result",4],["u32",15],["error",3]]]],[11,"try_clone","","",82,[[],[["error",3],["vsocksocket",3],["result",4]]]],[11,"set_nonblocking","","",82,[[["bool",15]],[["result",4],["error",3]]]],[11,"connect","","",83,[[],[["result",4],["vsockstream",3],["error",3]]]],[11,"local_port","","Returns the port that this stream is bound to.",83,[[],[["result",4],["u32",15],["error",3]]]],[11,"try_clone","","",83,[[],[["result",4],["vsockstream",3],["error",3]]]],[11,"set_nonblocking","","",83,[[["bool",15]],[["result",4],["error",3]]]],[11,"bind","","Creates a new <code>VsockListener</code> bound to the specified port …",84,[[],[["result",4],["vsocklistener",3],["error",3]]]],[11,"local_port","","Returns the port that this listener is bound to.",84,[[],[["result",4],["u32",15],["error",3]]]],[11,"accept","","Accepts a new incoming connection on this listener.  …",84,[[],[["result",4],["error",3]]]],[11,"set_nonblocking","","",84,[[["bool",15]],[["result",4],["error",3]]]],[11,"uninitialized","base","Allocates memory with the specified size and alignment. …",85,[[["layout",3]],["layoutallocation",3]]],[11,"zeroed","","Allocates memory with the specified size and alignment …",85,[[["layout",3]],["layoutallocation",3]]],[11,"as_ptr","","Returns a raw pointer to the allocated data.",85,[[]]],[11,"as_ref","","Returns a shared reference to the allocated data.",85,[[]]],[11,"as_mut","","Returns an exclusive reference to the allocated data.",85,[[]]],[11,"new","","",86,[[],["clock",3]]],[11,"now","","",86,[[],["clock",3]]],[11,"duration_since","","",86,[[["clock",3]],["duration",3]]],[11,"elapsed","","",86,[[],["duration",3]]],[11,"checked_sub","","",86,[[["duration",3]],[["clock",3],["option",4]]]],[11,"new","","",87,[[],["fakeclock",3]]],[11,"now","","Get the current time, according to this clock.",87,[[],["fakeclock",3]]],[11,"nanos","","Get the current time in ns, according to this clock.",87,[[],["u64",15]]],[11,"duration_since","","Get the duration since |earlier|, assuming that earlier < …",87,[[["fakeclock",3]],["duration",3]]],[11,"elapsed","","Get the time that has elapsed since this clock was made. …",87,[[],["duration",3]]],[11,"checked_sub","","",87,[[["duration",3]],[["option",4],["fakeclock",3]]]],[11,"add_event_fd","","Register the event fd for a notification when self\'s time …",87,[[["eventfd",3],["u64",15]]]],[11,"add_ns","","",87,[[["u64",15]]]],[11,"new","","Constructs a new error with the given errno.",88,[[["i32",15]],["error",3]]],[11,"last","","Constructs an error from the current errno.",88,[[],["error",3]]],[11,"errno","","Gets the errno for this error",88,[[],["i32",15]]],[11,"new","","",89,[[],["serializedescriptors",3]]],[11,"into_descriptors","","",89,[[],[["global",3],["vec",3],["i32",15]]]],[11,"new","","Creates a new blocking EventFd with an initial value of 0.",90,[[],[["result",4],["eventfd",3],["error",3]]]],[11,"write","","Adds <code>v</code> to the eventfd\'s count, blocking until this won\'t …",90,[[["u64",15]],[["error",3],["result",4]]]],[11,"read","","Blocks until the the eventfd\'s count is non-zero, then …",90,[[],[["error",3],["result",4],["u64",15]]]],[11,"read_timeout","","Blocks for a maximum of <code>timeout</code> duration until the the …",90,[[["duration",3]],[["eventreadresult",4],["error",3],["result",4]]]],[11,"try_clone","","Clones this EventFd, internally creating a new file …",90,[[],[["result",4],["eventfd",3],["error",3]]]],[11,"try_clone","","Clones this descriptor, internally creating a new …",91,[[],[["safedescriptor",3],["error",3],["result",4]]]],[11,"msync","","Calls msync with MS_SYNC on a mapping of <code>size</code> bytes …",42,[[["usize",15]],[["error",4],["result",4]]]],[11,"new","","Creates a new <code>ScopedEvent</code> which triggers when it goes out …",92,[[],[["result",4],["scopedevent",3],["error",3]]]],[11,"new","","Creates an mmap arena of <code>size</code> bytes.",93,[[["usize",15]],[["result",4],["memorymappingarena",3],["error",4]]]],[11,"add_anon_protection","","Anonymously maps <code>size</code> bytes at <code>offset</code> bytes from the …",93,[[["usize",15],["protection",3]],[["error",4],["result",4]]]],[11,"add_anon","","Anonymously maps <code>size</code> bytes at <code>offset</code> bytes from the …",93,[[["usize",15]],[["error",4],["result",4]]]],[11,"add_fd","","Maps <code>size</code> bytes from the start of the given <code>fd</code> at <code>offset</code> …",93,[[["usize",15],["asrawfd",8]],[["error",4],["result",4]]]],[11,"add_fd_offset","","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …",93,[[["usize",15],["asrawfd",8],["u64",15]],[["error",4],["result",4]]]],[11,"add_fd_offset_protection","","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …",93,[[["usize",15],["asrawfd",8],["u64",15],["protection",3]],[["error",4],["result",4]]]],[11,"remove","","Removes <code>size</code> bytes at <code>offset</code> bytes from the start of the …",93,[[["usize",15]],[["error",4],["result",4]]]],[11,"new","","",94,[[],["epollevents",3]]],[11,"token","","Gets the token associated in <code>PollContext::add</code> with this …",95,[[]]],[11,"readable","","True if the <code>fd</code> associated with this token in …",95,[[],["bool",15]]],[11,"writable","","True if the <code>fd</code> associated with this token in …",95,[[],["bool",15]]],[11,"hungup","","True if the <code>fd</code> associated with this token in …",95,[[],["bool",15]]],[11,"to_owned","","Copies the events to an owned structure so the reference …",97,[[],["polleventsowned",3]]],[11,"iter","","Iterates over each event.",97,[[],[["polleventiter",3],["iter",3]]]],[11,"iter_readable","","Iterates over each readable event.",97,[[],[["polleventiter",3],["iter",3]]]],[11,"iter_writable","","Iterates over each writable event.",97,[[],[["polleventiter",3],["iter",3]]]],[11,"iter_hungup","","Iterates over each hungup event.",97,[[],[["polleventiter",3],["iter",3]]]],[11,"as_ref","","Takes a reference to the events so that they can be …",98,[[],["pollevents",3]]],[11,"empty","","Returns empty Events.",99,[[],["watchingevents",3]]],[11,"new","","Build Events from raw epoll events (defined in …",99,[[["u32",15]],["watchingevents",3]]],[11,"set_read","","Set read events.",99,[[],["watchingevents",3]]],[11,"set_write","","Set write events.",99,[[],["watchingevents",3]]],[11,"get_raw","","Get the underlying epoll events.",99,[[],["u32",15]]],[11,"new","","Creates a new <code>EpollContext</code>.",100,[[],[["result",4],["epollcontext",3],["error",3]]]],[11,"build_with","","Creates a new <code>EpollContext</code> and adds the slice of <code>fd</code> and …",100,[[],[["result",4],["epollcontext",3],["error",3]]]],[11,"add_many","","Adds the given slice of <code>fd</code> and <code>token</code> tuples to this …",100,[[],[["error",3],["result",4]]]],[11,"add","","Adds the given <code>fd</code> to this context and associates the …",100,[[["asrawfd",8]],[["error",3],["result",4]]]],[11,"add_fd_with_events","","Adds the given <code>fd</code> to this context, watching for the …",100,[[["asrawfd",8],["watchingevents",3]],[["error",3],["result",4]]]],[11,"modify","","If <code>fd</code> was previously added to this context, the watched …",100,[[["asrawfd",8],["watchingevents",3]],[["error",3],["result",4]]]],[11,"delete","","Deletes the given <code>fd</code> from this context.",100,[[["asrawfd",8]],[["error",3],["result",4]]]],[11,"wait","","Waits for any events to occur in FDs that were previously …",100,[[["epollevents",3]],[["result",4],["pollevents",3],["error",3]]]],[11,"wait_timeout","","Like <code>wait</code> except will only block for a maximum of the …",100,[[["epollevents",3],["duration",3]],[["result",4],["pollevents",3],["error",3]]]],[11,"new","","Creates a new <code>PollContext</code>.",101,[[],[["result",4],["pollcontext",3],["error",3]]]],[11,"build_with","","Creates a new <code>PollContext</code> and adds the slice of <code>fd</code> and …",101,[[],[["result",4],["pollcontext",3],["error",3]]]],[11,"add_many","","Adds the given slice of <code>fd</code> and <code>token</code> tuples to this …",101,[[],[["error",3],["result",4]]]],[11,"add","","Adds the given <code>fd</code> to this context and associates the …",101,[[["asrawfd",8]],[["error",3],["result",4]]]],[11,"add_fd_with_events","","Adds the given <code>fd</code> to this context, watching for the …",101,[[["asrawfd",8],["watchingevents",3]],[["error",3],["result",4]]]],[11,"modify","","If <code>fd</code> was previously added to this context, the watched …",101,[[["asrawfd",8],["watchingevents",3]],[["error",3],["result",4]]]],[11,"delete","","Deletes the given <code>fd</code> from this context.",101,[[["asrawfd",8]],[["error",3],["result",4]]]],[11,"wait","","Waits for any events to occur in FDs that were previously …",101,[[],[["pollevents",3],["result",4],["error",3]]]],[11,"wait_timeout","","Like <code>wait</code> except will only block for a maximum of the …",101,[[["duration",3]],[["pollevents",3],["result",4],["error",3]]]],[11,"new","","Creates a new SignalFd for the given signal, blocking the …",102,[[["i32",15]],[["error",4],["signalfd",3],["result",4]]]],[11,"read","","Read a siginfo struct from the signalfd, if available.",102,[[],[["result",4],["error",4],["option",4]]]],[11,"new","","Creates a new timerfd.  The timer is initally disarmed …",103,[[],[["error",3],["result",4],["timerfd",3]]]],[11,"try_clone","","Creates a new <code>TimerFd</code> instance that shares the same …",103,[[],[["error",3],["result",4],["timerfd",3]]]],[11,"reset","","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …",103,[[["duration",3],["option",4]],[["error",3],["result",4]]]],[11,"wait","","Waits until the timer expires.  The return value …",103,[[],[["error",3],["result",4],["u64",15]]]],[11,"is_armed","","Returns <code>true</code> if the timer is currently armed.",103,[[],[["bool",15],["error",3],["result",4]]]],[11,"clear","","Disarms the timer.",103,[[],[["error",3],["result",4]]]],[11,"resolution","","Returns the resolution of timers on the host.",103,[[],[["error",3],["duration",3],["result",4]]]],[11,"new","","Creates a new fake timerfd.  The timer is initally …",104,[[["mutex",3],["arc",3]],["faketimerfd",3]]],[11,"reset","","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …",104,[[["duration",3],["option",4]],[["error",3],["result",4]]]],[11,"wait","","Waits until the timer expires.  The return value …",104,[[],[["error",3],["result",4],["u64",15]]]],[11,"is_armed","","Returns <code>true</code> if the timer is currently armed.",104,[[],[["bool",15],["error",3],["result",4]]]],[11,"clear","","Disarms the timer.",104,[[],[["error",3],["result",4]]]],[11,"resolution","","Returns the resolution of timers on the host.",104,[[],[["error",3],["duration",3],["result",4]]]],[11,"new","","Creates an ExternalMapping given a library-specific …",105,[[["u32",15]],[["error",4],["result",4],["externalmapping",3]]]],[11,"from_file","","",50,[[["asrawfd",8]],[["result",4],["fileflags",4],["error",3]]]],[11,"none","","Returns Protection allowing no access.",106,[[],["protection",3]]],[11,"read_write","","Returns Protection allowing read/write access.",106,[[],["protection",3]]],[11,"read","","Returns Protection allowing read access.",106,[[],["protection",3]]],[11,"set_read","","Set read events.",106,[[],["protection",3]]],[11,"set_write","","Set write events.",106,[[],["protection",3]]],[11,"new","","Creates an anonymous shared, read/write mapping of <code>size</code> …",107,[[["usize",15]],[["error",4],["result",4],["memorymapping",3]]]],[11,"new_protection","","Creates an anonymous shared mapping of <code>size</code> bytes with …",107,[[["usize",15],["protection",3]],[["error",4],["result",4],["memorymapping",3]]]],[11,"from_fd","","Maps the first <code>size</code> bytes of the given <code>fd</code> as read/write.",107,[[["usize",15],["asrawfd",8]],[["error",4],["result",4],["memorymapping",3]]]],[11,"from_fd_offset","","",107,[[["usize",15],["asrawfd",8],["u64",15]],[["error",4],["result",4],["memorymapping",3]]]],[11,"from_fd_offset_protection","","Maps the <code>size</code> bytes starting at <code>offset</code> bytes of the given …",107,[[["usize",15],["asrawfd",8],["u64",15],["protection",3]],[["error",4],["result",4],["memorymapping",3]]]],[11,"from_fd_offset_protection_populate","","Maps <code>size</code> bytes starting at <code>offset</code> from the given <code>fd</code> as …",107,[[["usize",15],["asrawfd",8],["u64",15],["bool",15],["protection",3]],[["error",4],["result",4],["memorymapping",3]]]],[11,"new_protection_fixed","","Creates an anonymous shared mapping of <code>size</code> bytes with …",107,[[["usize",15],["protection",3]],[["error",4],["result",4],["memorymapping",3]]]],[11,"from_fd_offset_protection_fixed","","Maps the <code>size</code> bytes starting at <code>offset</code> bytes of the given …",107,[[["usize",15],["asrawfd",8],["u64",15],["protection",3]],[["error",4],["result",4],["memorymapping",3]]]],[11,"use_hugepages","","Madvise the kernel to use Huge Pages for this mapping.",107,[[],[["error",4],["result",4]]]],[11,"msync","","Calls msync with MS_SYNC on the mapping.",107,[[],[["error",4],["result",4]]]],[11,"write_slice","","Writes a slice to the memory region at the specified …",107,[[["usize",15]],[["usize",15],["error",4],["result",4]]]],[11,"read_slice","","Reads to a slice from the memory region at the specified …",107,[[["usize",15]],[["usize",15],["error",4],["result",4]]]],[11,"write_obj","","Writes an object to the memory region at the specified …",107,[[["usize",15]],[["error",4],["result",4]]]],[11,"read_obj","","Reads on object from the memory region at the given …",107,[[["usize",15]],[["result",4],["error",4]]]],[11,"read_to_memory","","Reads data from a file descriptor and writes it to guest …",107,[[["usize",15],["asrawfd",8]],[["error",4],["result",4]]]],[11,"write_from_memory","","Writes data from memory to a file descriptor.",107,[[["usize",15],["asrawfd",8]],[["error",4],["result",4]]]],[11,"remove_range","","Uses madvise to tell the kernel to remove the specified …",107,[[["usize",15]],[["error",4],["result",4]]]],[11,"named","","Convenience function for <code>SharedMemory::new</code> that is always …",108,[[],[["sharedmemory",3],["error",3],["result",4]]]],[11,"anon","","Convenience function for <code>SharedMemory::new</code> that has an …",108,[[],[["sharedmemory",3],["error",3],["result",4]]]],[11,"new","","Creates a new shared memory file descriptor with zero …",108,[[["option",4],["cstr",3]],[["sharedmemory",3],["error",3],["result",4]]]],[11,"from_file","","Constructs a <code>SharedMemory</code> instance from a <code>File</code> that …",108,[[["file",3]],[["sharedmemory",3],["error",3],["result",4]]]],[11,"get_seals","","Gets the memfd seals that have already been added to this.",108,[[],[["error",3],["result",4],["memfdseals",3]]]],[11,"add_seals","","Adds the given set of memfd seals.",108,[[["memfdseals",3]],[["error",3],["result",4]]]],[11,"size","","Gets the size in bytes of the shared memory.",108,[[],["u64",15]]],[11,"set_size","","Sets the size in bytes of the shared memory.",108,[[["u64",15]],[["error",3],["result",4]]]],[11,"read_name","","Reads the name from the underlying file as a <code>String</code>.",108,[[],[["string",3],["result",4],["error",3]]]],[11,"new","","Returns an empty set of memfd seals.",109,[[],["memfdseals",3]]],[11,"bitmask","","Gets the raw bitmask of seals enumerated in <code>fcntl(2)</code>.",109,[[],["i32",15]]],[11,"grow_seal","","True of the grow seal bit is present.",109,[[],["bool",15]]],[11,"set_grow_seal","","Sets the grow seal bit.",109,[[]]],[11,"shrink_seal","","True of the shrink seal bit is present.",109,[[],["bool",15]]],[11,"set_shrink_seal","","Sets the shrink seal bit.",109,[[]]],[11,"write_seal","","True of the write seal bit is present.",109,[[],["bool",15]]],[11,"set_write_seal","","Sets the write seal bit.",109,[[]]],[11,"seal_seal","","True of the seal seal bit is present.",109,[[],["bool",15]]],[11,"set_seal_seal","","Sets the seal seal bit.",109,[[]]]],"p":[[8,"InterruptibleResult"],[4,"Priority"],[4,"Facility"],[4,"Error"],[8,"FileSync"],[8,"FileSetLen"],[8,"FileGetLen"],[8,"FileAllocate"],[8,"FileReadWriteVolatile"],[8,"FileReadWriteAtVolatile"],[3,"iovec"],[8,"AsRawFds"],[4,"InetVersion"],[3,"UnlinkUnixSeqpacketListener"],[4,"Source"],[3,"DirEntry"],[4,"Error"],[8,"SignalHandler"],[4,"Error"],[4,"Signal"],[8,"Killable"],[4,"VsockCid"],[3,"SocketAddr"],[8,"ToSocketAddr"],[4,"FlockOperation"],[4,"FallocateMode"],[8,"AsRawPid"],[4,"WaitStatus"],[3,"UnlinkUnixDatagram"],[3,"UnlinkUnixListener"],[3,"FileSerdeWrapper"],[4,"ExternalMappingError"],[4,"MmapError"],[8,"SeekHole"],[4,"SignalFdError"],[8,"PunchHole"],[8,"WriteZeroes"],[8,"WriteZeroesAt"],[8,"PollToken"],[8,"IntoRawDescriptor"],[8,"AsRawDescriptor"],[8,"FromRawDescriptor"],[8,"MappedRegion"],[4,"CloneNamespace"],[3,"Fd"],[8,"ScmSocket"],[8,"AsIobuf"],[8,"Terminal"],[3,"Descriptor"],[4,"EventReadResult"],[4,"FileFlags"],[4,"CloneError"],[3,"DescriptorAdapter"],[3,"Event"],[8,"MemoryMappingUnix"],[8,"MemoryMappingBuilderUnix"],[8,"SharedMemoryUnix"],[3,"Timer"],[4,"TubeError"],[4,"EventType"],[3,"TriggeredEvent"],[8,"AsRawDescriptors"],[3,"ScopedEvent"],[3,"MemoryMapping"],[3,"MemoryMappingBuilder"],[3,"SharedMemory"],[3,"FakeTimer"],[3,"Tube"],[3,"AsyncTube"],[3,"WaitContext"],[3,"Syslogger"],[4,"c_void"],[3,"VolatileSlice"],[3,"TcpSocket"],[3,"UnixSeqpacket"],[3,"UnixSeqpacketListener"],[3,"ReadDir"],[3,"ScopedPath"],[3,"ScopedSignalHandler"],[3,"EmptySignalHandler"],[3,"KillOnDrop"],[3,"AddrParseError"],[3,"VsockSocket"],[3,"VsockStream"],[3,"VsockListener"],[3,"LayoutAllocation"],[3,"Clock"],[3,"FakeClock"],[3,"Error"],[3,"SerializeDescriptors"],[3,"EventFd"],[3,"SafeDescriptor"],[3,"ScopedEvent"],[3,"MemoryMappingArena"],[3,"EpollEvents"],[3,"PollEvent"],[3,"PollEventIter"],[3,"PollEvents"],[3,"PollEventsOwned"],[3,"WatchingEvents"],[3,"EpollContext"],[3,"PollContext"],[3,"SignalFd"],[3,"TimerFd"],[3,"FakeTimerFd"],[3,"ExternalMapping"],[3,"Protection"],[3,"MemoryMapping"],[3,"SharedMemory"],[3,"MemfdSeals"]]},\
"bit_field":{"doc":"This crate provides a <code>#[bitfield]</code> attribute macro for …","i":[[23,"bitfield","bit_field","The function that derives the actual implementation.",null,null],[3,"Error","","Error type for bit field get.",null,null],[11,"new","","",0,[[["str",15],["u64",15]],["error",3]]],[11,"raw_val","","",0,[[],["u64",15]]],[3,"BitField0","","",null,null],[3,"BitField1","","",null,null],[3,"BitField2","","",null,null],[3,"BitField3","","",null,null],[3,"BitField4","","",null,null],[3,"BitField5","","",null,null],[3,"BitField6","","",null,null],[3,"BitField7","","",null,null],[3,"BitField8","","",null,null],[3,"BitField9","","",null,null],[3,"BitField10","","",null,null],[3,"BitField11","","",null,null],[3,"BitField12","","",null,null],[3,"BitField13","","",null,null],[3,"BitField14","","",null,null],[3,"BitField15","","",null,null],[3,"BitField16","","",null,null],[3,"BitField17","","",null,null],[3,"BitField18","","",null,null],[3,"BitField19","","",null,null],[3,"BitField20","","",null,null],[3,"BitField21","","",null,null],[3,"BitField22","","",null,null],[3,"BitField23","","",null,null],[3,"BitField24","","",null,null],[3,"BitField25","","",null,null],[3,"BitField26","","",null,null],[3,"BitField27","","",null,null],[3,"BitField28","","",null,null],[3,"BitField29","","",null,null],[3,"BitField30","","",null,null],[3,"BitField31","","",null,null],[3,"BitField32","","",null,null],[3,"BitField33","","",null,null],[3,"BitField34","","",null,null],[3,"BitField35","","",null,null],[3,"BitField36","","",null,null],[3,"BitField37","","",null,null],[3,"BitField38","","",null,null],[3,"BitField39","","",null,null],[3,"BitField40","","",null,null],[3,"BitField41","","",null,null],[3,"BitField42","","",null,null],[3,"BitField43","","",null,null],[3,"BitField44","","",null,null],[3,"BitField45","","",null,null],[3,"BitField46","","",null,null],[3,"BitField47","","",null,null],[3,"BitField48","","",null,null],[3,"BitField49","","",null,null],[3,"BitField50","","",null,null],[3,"BitField51","","",null,null],[3,"BitField52","","",null,null],[3,"BitField53","","",null,null],[3,"BitField54","","",null,null],[3,"BitField55","","",null,null],[3,"BitField56","","",null,null],[3,"BitField57","","",null,null],[3,"BitField58","","",null,null],[3,"BitField59","","",null,null],[3,"BitField60","","",null,null],[3,"BitField61","","",null,null],[3,"BitField62","","",null,null],[3,"BitField63","","",null,null],[3,"BitField64","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Error"],[3,"BitField0"],[3,"BitField1"],[3,"BitField2"],[3,"BitField3"],[3,"BitField4"],[3,"BitField5"],[3,"BitField6"],[3,"BitField7"],[3,"BitField8"],[3,"BitField9"],[3,"BitField10"],[3,"BitField11"],[3,"BitField12"],[3,"BitField13"],[3,"BitField14"],[3,"BitField15"],[3,"BitField16"],[3,"BitField17"],[3,"BitField18"],[3,"BitField19"],[3,"BitField20"],[3,"BitField21"],[3,"BitField22"],[3,"BitField23"],[3,"BitField24"],[3,"BitField25"],[3,"BitField26"],[3,"BitField27"],[3,"BitField28"],[3,"BitField29"],[3,"BitField30"],[3,"BitField31"],[3,"BitField32"],[3,"BitField33"],[3,"BitField34"],[3,"BitField35"],[3,"BitField36"],[3,"BitField37"],[3,"BitField38"],[3,"BitField39"],[3,"BitField40"],[3,"BitField41"],[3,"BitField42"],[3,"BitField43"],[3,"BitField44"],[3,"BitField45"],[3,"BitField46"],[3,"BitField47"],[3,"BitField48"],[3,"BitField49"],[3,"BitField50"],[3,"BitField51"],[3,"BitField52"],[3,"BitField53"],[3,"BitField54"],[3,"BitField55"],[3,"BitField56"],[3,"BitField57"],[3,"BitField58"],[3,"BitField59"],[3,"BitField60"],[3,"BitField61"],[3,"BitField62"],[3,"BitField63"],[3,"BitField64"]]},\
"bit_field_derive":{"doc":"","i":[[23,"bitfield","bit_field_derive","The function that derives the actual implementation.",null,null]],"p":[]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","i":[[14,"bitflags","bitflags","The macro used to generate the flag structures.",null,null]],"p":[]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate …",null,null]],"p":[]},\
"crc32fast":{"doc":"Example","i":[[3,"Hasher","crc32fast","Represents an in-progress CRC32 computation.",null,null],[11,"new","","Create a new <code>Hasher</code>.",0,[[]]],[11,"new_with_initial","","Create a new <code>Hasher</code> with an initial CRC32 state.",0,[[["u32",15]]]],[11,"update","","Process the given byte slice and update the hash state.",0,[[]]],[11,"finalize","","Finalize the hash state and return the computed CRC32 …",0,[[],["u32",15]]],[11,"reset","","Reset the hash state.",0,[[]]],[11,"combine","","Combine the hash state with the hash state for the …",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["hasher",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"write","","",0,[[]]],[11,"finish","","",0,[[],["u64",15]]]],"p":[[3,"Hasher"]]},\
"cros_async":{"doc":"An Executor and future combinators based on operations …","i":[[0,"mem","cros_async","",null,null],[4,"Error","cros_async::mem","",null,null],[13,"InvalidOffset","","Invalid offset or length given for an iovec in backing …",0,null],[6,"Result","","",null,null],[3,"MemRegion","","Used to index subslices of backing memory. Like an iovec, …",null,null],[12,"offset","","",1,null],[12,"len","","",1,null],[8,"BackingMemory","","Trait for memory that can yeild both iovecs in to the …",null,null],[10,"get_volatile_slice","","Returns VolatileSlice pointing to the backing memory. …",2,[[["memregion",3]],[["result",6],["volatileslice",3]]]],[0,"sync","cros_async","",null,null],[3,"Condvar","cros_async::sync","A primitive to wait for an event to occur without …",null,null],[3,"Mutex","","A high-level primitive that provides safe, mutable access …",null,null],[3,"SpinLock","","A primitive that provides safe, mutable access to a …",null,null],[5,"block_on","cros_async","Run a future to completion on the current thread.",null,[[["future",8]]]],[3,"BlockingPool","","A thread pool for running work that may block.",null,null],[3,"EventAsync","","An async version of <code>sys_util::EventFd</code>.",null,null],[4,"Executor","","An executor for scheduling tasks that poll futures to …",null,null],[13,"Uring","","",3,null],[13,"Fd","","",3,null],[3,"FdExecutor","","",null,null],[3,"AsyncWrapper","","Simple wrapper struct to implement IntoAsync on foreign …",null,null],[4,"AsyncError","","",null,null],[13,"Poll","","An error with a polled(FD) source.",4,null],[13,"Uring","","An error with a uring source.",4,null],[8,"IntoAsync","","Marker trait signifying that the implementor is suitable …",null,null],[8,"IoSourceExt","","Subtrait for general async IO.",null,null],[10,"into_source","","Yields the underlying IO source.",5,[[["box",3]]]],[10,"as_source_mut","","Provides a mutable ref to the underlying IO source.",5,[[]]],[10,"as_source","","Provides a ref to the underlying IO source.",5,[[]]],[8,"ReadAsync","","Ergonomic methods for async reads.",null,null],[10,"read_to_vec","","Reads from the iosource at <code>file_offset</code> and fill the given …",6,[[["vec",3],["option",4],["u64",15],["u8",15]],[["box",3],["pin",3]]]],[10,"read_to_mem","","Reads to the given <code>mem</code> at the given offsets from the file …",6,[[["option",4],["u64",15],["backingmemory",8],["arc",3]],[["pin",3],["box",3]]]],[10,"wait_readable","","Wait for the FD of <code>self</code> to be readable.",6,[[],[["pin",3],["box",3]]]],[10,"read_u64","","Reads a single u64 from the current offset.",6,[[],[["box",3],["pin",3]]]],[6,"AsyncResult","","",null,null],[8,"WriteAsync","","Ergonomic methods for async writes.",null,null],[10,"write_from_vec","","Writes from the given <code>vec</code> to the file starting at …",7,[[["vec",3],["option",4],["u64",15],["u8",15]],[["box",3],["pin",3]]]],[10,"write_from_mem","","Writes from the given <code>mem</code> from the given offsets to the …",7,[[["option",4],["u64",15],["backingmemory",8],["arc",3]],[["pin",3],["box",3]]]],[10,"fallocate","","See <code>fallocate(2)</code>. Note this op is synchronous when using …",7,[[["u32",15],["u64",15]],[["pin",3],["box",3]]]],[10,"fsync","","Sync all completed write operations to the backing …",7,[[],[["pin",3],["box",3]]]],[3,"PollSource","","Async wrapper for an IO source that uses the FD executor …",null,null],[4,"SelectResult","","",null,null],[13,"Pending","","",8,null],[13,"Finished","","",8,null],[3,"TimerAsync","","An async version of sys_util::TimerFd.",null,null],[3,"URingExecutor","","An executor that uses io_uring for its asynchronous I/O …",null,null],[3,"UringSource","","<code>UringSource</code> wraps FD backed IO sources for use with …",null,null],[4,"Error","","",null,null],[13,"FdExecutor","","Error from the FD executor.",9,null],[13,"TimerAsync","","Error from TimerFd.",9,null],[13,"TimerFd","","Error from TimerFd.",9,null],[13,"URingExecutor","","Error from the uring executor.",9,null],[6,"Result","","",null,null],[3,"Empty","","",null,null],[5,"empty","","",null,[[],["empty",3]]],[5,"run_one","","Creates an Executor that runs one future to completion.",null,[[["future",8]],["result",6]]],[5,"run_one_uring","","Creates a URingExecutor that runs one future to …",null,[[["future",8]],["result",6]]],[5,"run_one_poll","","Creates a FdExecutor that runs one future to completion.",null,[[["future",8]],["result",6]]],[5,"select2","","Creates a combinator that runs the two given futures …",null,[[["unpin",8],["future",8]]]],[5,"select3","","Creates a combinator that runs the three given futures …",null,[[["unpin",8],["future",8]]]],[5,"select4","","Creates a combinator that runs the four given futures …",null,[[["unpin",8],["future",8]]]],[5,"select5","","Creates a combinator that runs the five given futures …",null,[[["unpin",8],["future",8]]]],[5,"select6","","Creates a combinator that runs the six given futures …",null,[[["unpin",8],["future",8]]]],[5,"complete2","","Creates a combinator that runs the two given futures to …",null,[[]]],[5,"complete3","","Creates a combinator that runs the three given futures to …",null,[[]]],[5,"complete4","","Creates a combinator that runs the four given futures to …",null,[[]]],[5,"complete5","","Creates a combinator that runs the five given futures to …",null,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"as_raw_fds","","",13,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","cros_async::mem","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","cros_async","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","cros_async::sync","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","cros_async","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_future","","",21,[[]]],[11,"try_poll","","",21,[[["pin",3],["context",3]],["poll",4]]],[11,"read_to_vec","","Reads from the iosource at <code>file_offset</code> and fill the given …",14,[[["vec",3],["option",4],["u64",15],["u8",15]],[["pin",3],["box",3]]]],[11,"read_to_mem","","Reads to the given <code>mem</code> at the given offsets from the file …",14,[[["option",4],["u64",15],["backingmemory",8],["arc",3]],[["box",3],["pin",3]]]],[11,"wait_readable","","Wait for the FD of <code>self</code> to be readable.",14,[[],[["box",3],["pin",3]]]],[11,"read_u64","","",14,[[],[["pin",3],["box",3]]]],[11,"read_to_vec","","Reads from the iosource at <code>file_offset</code> and fill the given …",20,[[["vec",3],["option",4],["u64",15],["u8",15]],[["pin",3],["box",3]]]],[11,"wait_readable","","Wait for the FD of <code>self</code> to be readable.",20,[[],[["box",3],["pin",3]]]],[11,"read_u64","","Reads a single u64 (e.g. from an eventfd).",20,[[],[["pin",3],["box",3]]]],[11,"read_to_mem","","Reads to the given <code>mem</code> at the given offsets from the file …",20,[[["option",4],["u64",15],["backingmemory",8],["arc",3]],[["box",3],["pin",3]]]],[11,"write_from_vec","","Writes from the given <code>vec</code> to the file starting at …",14,[[["vec",3],["option",4],["u64",15],["u8",15]],[["pin",3],["box",3]]]],[11,"write_from_mem","","Writes from the given <code>mem</code> from the given offsets to the …",14,[[["option",4],["u64",15],["backingmemory",8],["arc",3]],[["box",3],["pin",3]]]],[11,"fallocate","","See <code>fallocate(2)</code> for details.",14,[[["u32",15],["u64",15]],[["box",3],["pin",3]]]],[11,"fsync","","Sync all completed write operations to the backing …",14,[[],[["box",3],["pin",3]]]],[11,"write_from_vec","","Writes from the given <code>vec</code> to the file starting at …",20,[[["vec",3],["option",4],["u64",15],["u8",15]],[["pin",3],["box",3]]]],[11,"write_from_mem","","Writes from the given <code>mem</code> from the given offsets to the …",20,[[["option",4],["u64",15],["backingmemory",8],["arc",3]],[["box",3],["pin",3]]]],[11,"fallocate","","See <code>fallocate(2)</code>. Note this op is synchronous when using …",20,[[["u32",15],["u64",15]],[["box",3],["pin",3]]]],[11,"fsync","","Sync all completed write operations to the backing …",20,[[],[["box",3],["pin",3]]]],[11,"into_source","","Yields the underlying IO source.",14,[[["box",3]]]],[11,"as_source_mut","","Provides a mutable ref to the underlying IO source.",14,[[]]],[11,"as_source","","Provides a ref to the underlying IO source.",14,[[]]],[11,"into_source","","Yields the underlying IO source.",20,[[["box",3]]]],[11,"as_source","","Provides a mutable ref to the underlying IO source.",20,[[]]],[11,"as_source_mut","","Provides a ref to the underlying IO source.",20,[[]]],[11,"drop","","",10,[[]]],[11,"from","cros_async::sync","",16,[[]]],[11,"from","","",17,[[]]],[11,"clone","cros_async","",3,[[],["executor",4]]],[11,"clone","","",12,[[],["fdexecutor",3]]],[11,"clone","cros_async::mem","",1,[[],["memregion",3]]],[11,"clone","cros_async","",19,[[],["uringexecutor",3]]],[11,"default","","",10,[[],["blockingpool",3]]],[11,"default","cros_async::sync","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"deref","cros_async","",13,[[]]],[11,"deref","","",14,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",13,[[]]],[11,"deref_mut","","",14,[[]]],[11,"deref_mut","","",20,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","cros_async::mem","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","cros_async","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","cros_async::mem","",0,[[["formatter",3]],["result",6]]],[11,"fmt","cros_async","",9,[[["formatter",3]],["result",6]]],[11,"source","","",4,[[],[["option",4],["error",8]]]],[11,"as_raw_fd","","",13,[[],["rawfd",6]]],[11,"poll","","",21,[[["pin",3],["context",3]],["poll",4]]],[11,"new","","Create a new <code>BlockingPool</code>.",10,[[["usize",15],["duration",3]],["blockingpool",3]]],[11,"with_capacity","","Like new but with pre-allocating capacity for up to …",10,[[["usize",15],["duration",3]],["blockingpool",3]]],[11,"spawn","","Spawn a task to run in the <code>BlockingPool</code>.",10,[[],["task",3]]],[11,"shutdown","","Shut down the <code>BlockingPool</code>.",10,[[["instant",3],["option",4]],[["result",4],["shutdowntimedout",3]]]],[11,"new","","",11,[[["executor",4],["eventfd",3]],[["asyncresult",6],["eventasync",3]]]],[11,"next_val","","Gets the next value from the eventfd.",11,[[]]],[11,"new","","Create a new <code>Executor</code>.",3,[[],["asyncresult",6]]],[11,"async_from","","Create a new <code>Box<dyn IoSourceExt<F>></code> associated with <code>self</code>…",3,[[["intoasync",8],["send",8]],[["asyncresult",6],["box",3]]]],[11,"spawn","","Spawn a new future for this executor to run to …",3,[[],["task",3]]],[11,"spawn_local","","Spawn a thread-local task for this executor to drive to …",3,[[],["task",3]]],[11,"spawn_blocking","","Run the provided closure on a dedicated thread where …",3,[[],["task",3]]],[11,"run","","Run the executor indefinitely, driving all spawned …",3,[[],["asyncresult",6]]],[11,"run_until","","Drive all futures spawned in this executor until <code>f</code> …",3,[[["future",8]],["asyncresult",6]]],[11,"new","","",12,[[],[["error",4],["fdexecutor",3],["result",4]]]],[11,"spawn","","",12,[[],["task",3]]],[11,"spawn_local","","",12,[[],["task",3]]],[11,"spawn_blocking","","",12,[[],["task",3]]],[11,"run","","",12,[[],[["result",4],["error",4]]]],[11,"run_until","","",12,[[["future",8]],[["result",4],["error",4]]]],[11,"new","","Create a new <code>AsyncWrapper</code> that wraps <code>val</code>.",13,[[]]],[11,"into_inner","","Consumes the <code>AsyncWrapper</code>, returning the inner struct.",13,[[]]],[11,"new","","Create a new <code>PollSource</code> from the given IO source.",14,[[["fdexecutor",3]],[["error",4],["result",4]]]],[11,"into_source","","Return the inner source.",14,[[]]],[11,"new","cros_async::sync","Creates a new condition variable ready to be waited on …",15,[[],["condvar",3]]],[11,"wait","","Block the current thread until this <code>Condvar</code> is notified …",15,[[["mutexguard",3]]]],[11,"wait_read","","Like <code>wait()</code> but takes and returns a <code>MutexReadGuard</code> …",15,[[["mutexreadguard",3]]]],[11,"notify_one","","Notify at most one thread currently waiting on the <code>Condvar</code>…",15,[[]]],[11,"notify_all","","Notify all threads currently waiting on the <code>Condvar</code>.",15,[[]]],[11,"new","","Create a new, unlocked <code>Mutex</code> ready for use.",16,[[],["mutex",3]]],[11,"into_inner","","Consume the <code>Mutex</code> and return the contained value. This …",16,[[]]],[11,"lock","","Acquires exclusive, mutable access to the resource …",16,[[]]],[11,"read_lock","","Acquires shared, immutable access to the resource …",16,[[]]],[11,"get_mut","","",16,[[]]],[11,"new","","Creates a new, unlocked <code>SpinLock</code> that\'s ready for use.",17,[[],["spinlock",3]]],[11,"into_inner","","Consumes the <code>SpinLock</code> and returns the value guarded by …",17,[[]]],[11,"lock","","Acquires exclusive, mutable access to the resource …",17,[[],["spinlockguard",3]]],[11,"get_mut","","Returns a mutable reference to the contained value. This …",17,[[]]],[11,"new","cros_async","",18,[[["timerfd",3],["executor",4]],[["asyncresult",6],["timerasync",3]]]],[11,"next_val","","Gets the next value from the timer.",18,[[]]],[11,"sleep","","Async sleep for the given duration",18,[[["executor",4],["duration",3]]]],[11,"reset","","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …",18,[[["option",4],["duration",3]],["sysresult",6]]],[11,"new","","",19,[[],[["error",4],["uringexecutor",3],["result",4]]]],[11,"spawn","","",19,[[],["task",3]]],[11,"spawn_local","","",19,[[],["task",3]]],[11,"spawn_blocking","","",19,[[],["task",3]]],[11,"run","","",19,[[],[["result",4],["error",4]]]],[11,"run_until","","",19,[[["future",8]],[["error",4],["result",4]]]],[11,"new","","Creates a new <code>UringSource</code> that wraps the given <code>io_source</code> …",20,[[["uringexecutor",3]],[["error",4],["uringsource",3],["result",4]]]],[11,"into_source","","Consume <code>self</code> and return the object used to create it.",20,[[]]]],"p":[[4,"Error"],[3,"MemRegion"],[8,"BackingMemory"],[4,"Executor"],[4,"AsyncError"],[8,"IoSourceExt"],[8,"ReadAsync"],[8,"WriteAsync"],[4,"SelectResult"],[4,"Error"],[3,"BlockingPool"],[3,"EventAsync"],[3,"FdExecutor"],[3,"AsyncWrapper"],[3,"PollSource"],[3,"Condvar"],[3,"Mutex"],[3,"SpinLock"],[3,"TimerAsync"],[3,"URingExecutor"],[3,"UringSource"],[3,"Empty"]]},\
"crosvm":{"doc":"The root level module that includes the config and …","i":[[0,"argument","crosvm","Handles argument parsing.",null,null],[4,"Error","crosvm::argument","An error with argument parsing.",null,null],[13,"ExpectedArgument","","The argument was required.",0,null],[13,"ExpectedValue","","The argument expects a value.",0,null],[13,"InvalidValue","","The argument\'s given value is invalid.",0,null],[12,"value","crosvm::argument::Error","",1,null],[12,"expected","","",1,null],[13,"PrintHelp","crosvm::argument","The help information was requested",0,null],[13,"Syntax","","There was a syntax error with the argument.",0,null],[13,"TooManyArguments","","The argument was already given and none more are expected.",0,null],[13,"UnexpectedValue","","The argument does not expect a value.",0,null],[13,"UnknownArgument","","The argument\'s name is unused.",0,null],[6,"Result","","Result of a argument parsing.",null,null],[4,"ArgumentValueMode","","",null,null],[13,"Required","","Specifies that an argument requires a value and that an …",2,null],[13,"Disallowed","","Specifies that an argument does not allow a value and …",2,null],[13,"Optional","","Specifies that an argument may have a value during …",2,null],[3,"Argument","","Information about an argument expected from the command …",null,null],[12,"value","","The name of the value to display in the usage information.",3,null],[12,"value_mode","","Specifies how values should be handled for this this …",3,null],[12,"short","","Optional single character shortened argument name.",3,null],[12,"long","","The long name of this argument.",3,null],[12,"help","","Helpfuly usage information for this argument to display …",3,null],[11,"positional","","",3,[[["str",15]],["argument",3]]],[11,"value","","",3,[[["str",15]],["argument",3]]],[11,"short_value","","",3,[[["str",15],["char",15]],["argument",3]]],[11,"flag","","",3,[[["str",15]],["argument",3]]],[11,"short_flag","","",3,[[["str",15],["char",15]],["argument",3]]],[11,"flag_or_value","","",3,[[["str",15]],["argument",3]]],[5,"set_arguments","","Parses the given <code>args</code> against the list of know arguments …",null,[[],["result",6]]],[5,"print_help","","Prints command line usage information to stdout.",null,[[["str",15]]]],[0,"error","crosvm","",null,null],[4,"Error","crosvm::error","",null,null],[13,"AddGpuDeviceMemory","","",4,null],[13,"AddIrqChipVcpu","","",4,null],[13,"AddPmemDeviceMemory","","",4,null],[13,"AllocateGpuDeviceAddress","","",4,null],[13,"AllocatePmemDeviceAddress","","",4,null],[13,"BalloonDeviceNew","","",4,null],[13,"BlockDeviceNew","","",4,null],[13,"BlockSignal","","",4,null],[13,"BuildVm","","",4,null],[13,"ChownTpmStorage","","",4,null],[13,"CloneEvent","","",4,null],[13,"CloneTube","","",4,null],[13,"CloneVcpu","","",4,null],[13,"ConfigureHotPlugDevice","","",4,null],[13,"ConfigureVcpu","","",4,null],[13,"ConnectTube","","",4,null],[13,"CreateAc97","","",4,null],[13,"CreateAsyncDiskError","","",4,null],[13,"CreateConsole","","",4,null],[13,"CreateControlServer","","",4,null],[13,"CreateDiskCheckAsyncOkError","","",4,null],[13,"CreateDiskError","","",4,null],[13,"CreateEvent","","",4,null],[13,"CreateGrallocError","","",4,null],[13,"CreateGuestMemory","","",4,null],[13,"CreateIrqChip","","",4,null],[13,"CreateKvm","","",4,null],[13,"CreateSignalFd","","",4,null],[13,"CreateSocket","","",4,null],[13,"CreateTapDevice","","",4,null],[13,"CreateTimer","","",4,null],[13,"CreateTpmStorage","","",4,null],[13,"CreateTube","","",4,null],[13,"CreateUsbProvider","","",4,null],[13,"CreateVcpu","","",4,null],[13,"CreateVfioDevice","","",4,null],[13,"CreateVirtioIommu","","",4,null],[13,"CreateVm","","",4,null],[13,"CreateWaitContext","","",4,null],[13,"DeviceJail","","",4,null],[13,"DevicePivotRoot","","",4,null],[13,"DirectIo","","",4,null],[13,"DirectIrq","","",4,null],[13,"Disk","","",4,null],[13,"DiskImageLock","","",4,null],[13,"DropCapabilities","","",4,null],[13,"FsDeviceNew","","",4,null],[13,"GenerateAcpi","","",4,null],[13,"GetMaxOpenFiles","","",4,null],[13,"GetSignalMask","","",4,null],[13,"GuestMemoryLayout","","",4,null],[13,"HandleDebugCommand","","",4,null],[13,"InputDeviceNew","","",4,null],[13,"InputEventsOpen","","",4,null],[13,"InvalidHotPlugKey","","",4,null],[13,"InvalidVfioPath","","",4,null],[13,"InvalidWaylandPath","","",4,null],[13,"IoJail","","",4,null],[13,"LoadKernel","","",4,null],[13,"MemoryTooLarge","","",4,null],[13,"NetDeviceNew","","",4,null],[13,"NoHotPlugBus","","",4,null],[13,"OpenAcpiTable","","",4,null],[13,"OpenAndroidFstab","","",4,null],[13,"OpenBios","","",4,null],[13,"OpenInitrd","","",4,null],[13,"OpenKernel","","",4,null],[13,"OpenVinput","","",4,null],[13,"P9DeviceNew","","",4,null],[13,"ParseMaxOpenFiles","","",4,null],[13,"PivotRootDoesntExist","","",4,null],[13,"PmemDeviceImageTooBig","","",4,null],[13,"PmemDeviceNew","","",4,null],[13,"Pstore","","",4,null],[13,"ReadMemAvailable","","",4,null],[13,"ReadStatm","","",4,null],[13,"RegisterBalloon","","",4,null],[13,"RegisterBlock","","",4,null],[13,"RegisterGpu","","",4,null],[13,"RegisterNet","","",4,null],[13,"RegisterP9","","",4,null],[13,"RegisterRng","","",4,null],[13,"RegisterSignalHandler","","",4,null],[13,"RegisterWayland","","",4,null],[13,"ReserveGpuMemory","","",4,null],[13,"ReserveMemory","","",4,null],[13,"ReservePmemMemory","","",4,null],[13,"ResetTimer","","",4,null],[13,"RngDeviceNew","","",4,null],[13,"RunnableVcpu","","",4,null],[13,"SendDebugStatus","","",4,null],[13,"SettingGidMap","","",4,null],[13,"SettingMaxOpenFiles","","",4,null],[13,"SettingSignalMask","","",4,null],[13,"SettingUidMap","","",4,null],[13,"SignalFd","","",4,null],[13,"SoundDeviceNew","","",4,null],[13,"SpawnGdbServer","","",4,null],[13,"SpawnVcpu","","",4,null],[13,"SwiotlbTooLarge","","",4,null],[13,"Timer","","",4,null],[13,"ValidateRawDescriptor","","",4,null],[13,"VhostNetDeviceNew","","",4,null],[13,"VhostUserBlockDeviceNew","","",4,null],[13,"VhostUserConsoleDeviceNew","","",4,null],[13,"VhostUserFsDeviceNew","","",4,null],[13,"VhostUserGpuDeviceNew","","",4,null],[13,"VhostUserMac80211HwsimNew","","",4,null],[13,"VhostUserNetDeviceNew","","",4,null],[13,"VhostUserNetWithNetArgs","","",4,null],[13,"VhostUserVsockDeviceNew","","",4,null],[13,"VhostUserWlDeviceNew","","",4,null],[13,"VhostVsockDeviceNew","","",4,null],[13,"VirtioPciDev","","",4,null],[13,"VirtioVhostUserDeviceNew","","",4,null],[13,"WaitContextAdd","","",4,null],[13,"WaitContextDelete","","",4,null],[13,"WaylandDeviceNew","","",4,null],[6,"Result","","",null,null],[0,"gdb","crosvm","",null,null],[5,"gdb_thread","crosvm::gdb","",null,[[["u32",15],["gdbstub",3]]]],[3,"GdbStub","","",null,null],[11,"new","","",5,[[["tube",3],["receiver",3],["vec",3],["vcpudebugstatusmessage",3],["sender",3]]]],[0,"platform","crosvm","",null,null],[5,"run_config","crosvm::platform","",null,[[["config",3]],["result",6]]],[0,"plugin","crosvm","",null,null],[4,"Error","crosvm::plugin","An error that occurs during the lifetime of a plugin …",null,null],[13,"CloneEvent","","",6,null],[13,"CloneVcpuPipe","","",6,null],[13,"CreateEvent","","",6,null],[13,"CreateIrqChip","","",6,null],[13,"CreateJail","","",6,null],[13,"CreateKvm","","",6,null],[13,"CreateMainSocket","","",6,null],[13,"CreatePIT","","",6,null],[13,"CreateSignalFd","","",6,null],[13,"CreateSocketPair","","",6,null],[13,"CreateStderrPipe","","",6,null],[13,"CreateTapFd","","",6,null],[13,"CreateVcpu","","",6,null],[13,"CreateVcpuSocket","","",6,null],[13,"CreateVm","","",6,null],[13,"CreateWaitContext","","",6,null],[13,"DecodeRequest","","",6,null],[13,"DropCapabilities","","",6,null],[13,"EncodeResponse","","",6,null],[13,"Mount","","",6,null],[13,"MountDev","","",6,null],[13,"MountLib","","",6,null],[13,"MountLib64","","",6,null],[13,"MountPlugin","","",6,null],[13,"MountPluginLib","","",6,null],[13,"MountProc","","",6,null],[13,"MountRoot","","",6,null],[13,"NoRootDir","","",6,null],[13,"ParsePivotRoot","","",6,null],[13,"ParseSeccomp","","",6,null],[13,"PluginFailed","","",6,null],[13,"PluginKill","","",6,null],[13,"PluginKilled","","",6,null],[13,"PluginRunJail","","",6,null],[13,"PluginSocketHup","","",6,null],[13,"PluginSocketPoll","","",6,null],[13,"PluginSocketRecv","","",6,null],[13,"PluginSocketSend","","",6,null],[13,"PluginSpawn","","",6,null],[13,"PluginTimeout","","",6,null],[13,"PluginWait","","",6,null],[13,"Poll","","",6,null],[13,"RootNotAbsolute","","",6,null],[13,"RootNotDir","","",6,null],[13,"SetGidMap","","",6,null],[13,"SetUidMap","","",6,null],[13,"SigChild","","",6,null],[12,"pid","crosvm::plugin::Error","",7,null],[12,"signo","","",7,null],[12,"status","","",7,null],[12,"code","","",7,null],[13,"SignalFd","crosvm::plugin","",6,null],[13,"SpawnVcpu","","",6,null],[13,"StderrNonblock","","",6,null],[13,"TapEnable","","",6,null],[13,"TapOpen","","",6,null],[13,"TapSetIp","","",6,null],[13,"TapSetMacAddress","","",6,null],[13,"TapSetNetmask","","",6,null],[13,"ValidateTapFd","","",6,null],[13,"WaitContextAdd","","",6,null],[5,"run_vcpus","","",null,[[["kvm",3],["vm",3],["process",3],["u32",15],["arc",3],["vec",3],["event",3]],[["error",4],["result",4]]]],[5,"run_config","","Run a VM with a plugin process specified by <code>cfg</code>.",null,[[["config",3]],[["error",4],["result",4]]]],[4,"Executable","crosvm","Indicates the location and kind of executable kernel for …",null,null],[13,"Bios","","An executable intended to be run as a BIOS directly.",8,null],[13,"Kernel","","A elf linux kernel, loaded and executed by crosvm.",8,null],[13,"Plugin","","Path to a plugin executable that is forked by crosvm.",8,null],[17,"DISK_ID_LEN","","Maximum length of a <code>DiskOption</code> identifier.",null,null],[3,"DiskOption","","",null,null],[12,"path","","",9,null],[12,"read_only","","",9,null],[12,"sparse","","",9,null],[12,"o_direct","","",9,null],[12,"block_size","","",9,null],[12,"id","","",9,null],[3,"VhostUserOption","","",null,null],[12,"socket","","",10,null],[3,"VhostUserFsOption","","",null,null],[12,"socket","","",11,null],[12,"tag","","",11,null],[3,"VhostUserWlOption","","",null,null],[12,"socket","","",12,null],[12,"vm_tube","","",12,null],[3,"BindMount","","A bind mount for directories in the plugin process.",null,null],[12,"src","","",13,null],[12,"dst","","",13,null],[12,"writable","","",13,null],[3,"GidMap","","A mapping of linux group IDs for the plugin process.",null,null],[12,"inner","","",14,null],[12,"outer","","",14,null],[12,"count","","",14,null],[3,"DirectIoOption","","Direct IO forwarding options",null,null],[12,"path","","",15,null],[12,"ranges","","",15,null],[17,"DEFAULT_TOUCH_DEVICE_HEIGHT","","",null,null],[17,"DEFAULT_TOUCH_DEVICE_WIDTH","","",null,null],[3,"TouchDeviceOption","","",null,null],[11,"new","","",16,[[["pathbuf",3]],["touchdeviceoption",3]]],[11,"get_path","","Getter for the path to the input event streams.",16,[[],["path",3]]],[11,"set_default_size","","When a user specifies the parameters for a touch device, …",16,[[["u32",15]]]],[11,"set_width","","Setter for the width specified by the user.",16,[[["u32",15]]]],[11,"set_height","","Setter for the height specified by the user.",16,[[["u32",15]]]],[11,"get_size","","If the user specifies the size, use it. Otherwise, use …",16,[[]]],[4,"SharedDirKind","","",null,null],[13,"FS","","",17,null],[13,"P9","","",17,null],[3,"SharedDir","","",null,null],[12,"src","","",18,null],[12,"tag","","",18,null],[12,"kind","","",18,null],[12,"uid_map","","",18,null],[12,"gid_map","","",18,null],[12,"fs_cfg","","",18,null],[12,"p9_cfg","","",18,null],[4,"VfioType","","Vfio device type, recognized based on command line option.",null,null],[13,"Pci","","",19,null],[13,"Platform","","",19,null],[3,"VfioCommand","","VFIO device structure for creating a new instance based …",null,null],[11,"new","","",20,[[["vfiotype",4],["str",15]],[["result",6],["vfiocommand",3]]]],[11,"get_type","","",20,[[],["vfiotype",4]]],[11,"iommu_enabled","","",20,[[],["bool",15]]],[3,"Config","","Aggregate of all configurable options for a running VM.",null,null],[12,"kvm_device_path","","",21,null],[12,"vhost_vsock_device_path","","",21,null],[12,"vhost_net_device_path","","",21,null],[12,"vcpu_count","","",21,null],[12,"rt_cpus","","",21,null],[12,"vcpu_affinity","","",21,null],[12,"cpu_clusters","","",21,null],[12,"cpu_capacity","","",21,null],[12,"per_vm_core_scheduling","","",21,null],[12,"delay_rt","","",21,null],[12,"no_smt","","",21,null],[12,"memory","","",21,null],[12,"swiotlb","","",21,null],[12,"hugepages","","",21,null],[12,"memory_file","","",21,null],[12,"executable_path","","",21,null],[12,"android_fstab","","",21,null],[12,"initrd_path","","",21,null],[12,"params","","",21,null],[12,"socket_path","","",21,null],[12,"plugin_root","","",21,null],[12,"plugin_mounts","","",21,null],[12,"plugin_gid_maps","","",21,null],[12,"disks","","",21,null],[12,"pmem_devices","","",21,null],[12,"pstore","","",21,null],[12,"host_ip","","",21,null],[12,"netmask","","",21,null],[12,"mac_address","","",21,null],[12,"net_vq_pairs","","",21,null],[12,"vhost_net","","",21,null],[12,"tap_fd","","",21,null],[12,"cid","","",21,null],[12,"wayland_socket_paths","","",21,null],[12,"x_display","","",21,null],[12,"shared_dirs","","",21,null],[12,"sandbox","","",21,null],[12,"seccomp_policy_dir","","",21,null],[12,"seccomp_log_failures","","",21,null],[12,"gpu_parameters","","",21,null],[12,"software_tpm","","",21,null],[12,"display_window_keyboard","","",21,null],[12,"display_window_mouse","","",21,null],[12,"ac97_parameters","","",21,null],[12,"sound","","",21,null],[12,"serial_parameters","","",21,null],[12,"syslog_tag","","",21,null],[12,"virtio_single_touch","","",21,null],[12,"virtio_multi_touch","","",21,null],[12,"virtio_trackpad","","",21,null],[12,"virtio_mice","","",21,null],[12,"virtio_keyboard","","",21,null],[12,"virtio_switches","","",21,null],[12,"virtio_input_evdevs","","",21,null],[12,"split_irqchip","","",21,null],[12,"vfio","","",21,null],[12,"video_dec","","",21,null],[12,"video_enc","","",21,null],[12,"acpi_tables","","",21,null],[12,"protected_vm","","",21,null],[12,"battery_type","","",21,null],[12,"gdb","","",21,null],[12,"balloon_bias","","",21,null],[12,"vhost_user_blk","","",21,null],[12,"vhost_user_console","","",21,null],[12,"vhost_user_fs","","",21,null],[12,"vhost_user_gpu","","",21,null],[12,"vhost_user_mac80211_hwsim","","",21,null],[12,"vhost_user_net","","",21,null],[12,"vhost_user_vsock","","",21,null],[12,"vhost_user_wl","","",21,null],[12,"direct_pmio","","",21,null],[12,"direct_level_irq","","",21,null],[12,"direct_edge_irq","","",21,null],[12,"dmi_path","","",21,null],[12,"no_legacy","","",21,null],[11,"from","crosvm::argument","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",3,[[]]],[11,"from","crosvm::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"vzip","","",4,[[]]],[11,"from","crosvm::gdb","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"vzip","","",5,[[]]],[11,"from","crosvm::plugin","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",6,[[]]],[11,"from","crosvm","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_any","","",17,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any","","",18,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any","","",19,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",21,[[]]],[11,"from","crosvm::error","",4,[[["error",4]]]],[11,"clone","crosvm","",19,[[],["vfiotype",4]]],[11,"default","","",17,[[],["shareddirkind",4]]],[11,"default","","",18,[[],["shareddir",3]]],[11,"default","","",21,[[],["config",3]]],[11,"eq","crosvm::argument","",2,[[["argumentvaluemode",4]],["bool",15]]],[11,"eq","crosvm","",17,[[["shareddirkind",4]],["bool",15]]],[11,"eq","","",19,[[["vfiotype",4]],["bool",15]]],[11,"fmt","crosvm::argument","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","crosvm::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","crosvm::plugin","",6,[[["formatter",3]],["result",6]]],[11,"fmt","crosvm","",8,[[["formatter",3]],["result",6]]],[11,"fmt","crosvm::argument","",0,[[["formatter",3]],["result",6]]],[11,"fmt","crosvm::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","crosvm::plugin","",6,[[["formatter",3]],["result",6]]],[11,"from_str","crosvm","",17,[[["str",15]],["result",4]]],[11,"from_str","","",19,[[["str",15]],["result",4]]],[11,"base_ops","crosvm::gdb","",5,[[],["baseops",4]]],[11,"breakpoints","","",5,[[],[["breakpointsops",6],["option",4]]]],[11,"resume","","",5,[[["gdbinterrupt",3],["resumeaction",4]],[["result",4],["stopreason",4]]]],[11,"read_registers","","",5,[[],["targetresult",6]]],[11,"write_registers","","",5,[[],["targetresult",6]]],[11,"read_addrs","","",5,[[],["targetresult",6]]],[11,"write_addrs","","",5,[[],["targetresult",6]]],[11,"add_hw_breakpoint","","Add a new hardware breakpoint. Return <code>Ok(false)</code> if the …",5,[[],[["bool",15],["targetresult",6]]]],[11,"remove_hw_breakpoint","","Remove an existing hardware breakpoint. Return <code>Ok(false)</code> …",5,[[],[["bool",15],["targetresult",6]]]]],"p":[[4,"Error"],[13,"InvalidValue"],[4,"ArgumentValueMode"],[3,"Argument"],[4,"Error"],[3,"GdbStub"],[4,"Error"],[13,"SigChild"],[4,"Executable"],[3,"DiskOption"],[3,"VhostUserOption"],[3,"VhostUserFsOption"],[3,"VhostUserWlOption"],[3,"BindMount"],[3,"GidMap"],[3,"DirectIoOption"],[3,"TouchDeviceOption"],[4,"SharedDirKind"],[3,"SharedDir"],[4,"VfioType"],[3,"VfioCommand"],[3,"Config"]]},\
"crosvm_direct":{"doc":"Runs a virtual machine","i":[[0,"panic_hook","crosvm_direct","",null,null],[5,"redirect_stderr","crosvm_direct::panic_hook","",null,[[],["option",4]]],[5,"restore_stderr","","",null,[[["file",3]],["bool",15]]],[5,"log_panic_info","","",null,[[["panicinfo",3],["fn",8]]]],[5,"set_panic_hook","","The intent of our panic hook is to get panic info and a …",null,[[]]],[5,"executable_is_plugin","crosvm_direct","",null,[[["option",4]],["bool",15]]],[5,"wait_all_children","","",null,[[],["bool",15]]],[5,"parse_cpu_set","","Parse a comma-separated list of CPU numbers and ranges …",null,[[["str",15]],[["vec",3],["result",6]]]],[5,"parse_cpu_affinity","","Parse a list of guest to host CPU mappings.",null,[[["str",15]],[["vcpuaffinity",4],["result",6]]]],[5,"parse_cpu_capacity","","",null,[[["btreemap",3],["str",15]],["result",6]]],[5,"parse_gpu_options","","",null,[[["gpuparameters",3],["option",4],["str",15]],["result",6]]],[5,"parse_gpu_display_options","","",null,[[["gpuparameters",3],["option",4],["str",15]],["result",6]]],[5,"parse_ac97_options","","",null,[[["str",15]],[["ac97parameters",3],["result",6]]]],[5,"parse_serial_options","","",null,[[["str",15]],[["result",6],["serialparameters",3]]]],[5,"parse_plugin_mount_option","","",null,[[["str",15]],[["bindmount",3],["result",6]]]],[5,"parse_plugin_gid_map_option","","",null,[[["str",15]],[["gidmap",3],["result",6]]]],[5,"parse_battery_options","","",null,[[["option",4],["str",15]],[["result",6],["batterytype",4]]]],[5,"parse_direct_io_options","","",null,[[["option",4],["str",15]],[["result",6],["directiooption",3]]]],[5,"set_argument","","",null,[[["str",15],["option",4],["config",3]],["result",6]]],[5,"validate_arguments","","",null,[[["config",3]],[["result",4],["error",4]]]],[5,"run_vm","","",null,[[["args",3]],["result",4]]],[5,"stop_vms","","",null,[[["args",3]],["result",4]]],[5,"suspend_vms","","",null,[[["args",3]],["result",4]]],[5,"resume_vms","","",null,[[["args",3]],["result",4]]],[5,"balloon_vms","","",null,[[["args",3]],["result",4]]],[5,"balloon_stats","","",null,[[["args",3]],["result",4]]],[5,"modify_battery","","",null,[[["args",3]],["result",4]]],[5,"create_composite","","",null,[[["args",3]],["result",4]]],[5,"create_qcow2","","",null,[[["args",3]],["result",4]]],[5,"start_device","","",null,[[["args",3]],["result",4]]],[5,"disk_cmd","","",null,[[["args",3]],["result",4]]],[5,"make_rt","","",null,[[["args",3]],["result",4]]],[5,"parse_bus_id_addr","","",null,[[["str",15]],["modifyusbresult",6]]],[5,"usb_attach","","",null,[[["args",3]],[["modifyusbresult",6],["usbcontrolresult",4]]]],[5,"usb_detach","","",null,[[["args",3]],[["modifyusbresult",6],["usbcontrolresult",4]]]],[5,"usb_list","","",null,[[["args",3]],[["modifyusbresult",6],["usbcontrolresult",4]]]],[5,"modify_usb","","",null,[[["args",3]],["result",4]]],[5,"pkg_version","","",null,[[],["result",4]]],[5,"print_usage","","",null,[[]]],[5,"crosvm_main","","",null,[[],["result",4]]],[5,"main","","",null,[[]]]],"p":[]},\
"crosvm_plugin":{"doc":"This module implements the dynamically loaded client …","i":[[3,"crosvm_net_config","crosvm_plugin","",null,null],[3,"anon_irqchip","","",null,null],[3,"anon_msi","","",null,null],[19,"anon_route","","",null,null],[3,"crosvm_irq_route","","",null,null],[3,"crosvm_hint","","",null,null],[3,"crosvm_hint_detail","","",null,null],[4,"Stat","","",null,null],[13,"IoEvent","","",0,null],[13,"MemoryGetDirtyLog","","",0,null],[13,"IrqEventGetFd","","",0,null],[13,"IrqEventGetResampleFd","","",0,null],[13,"Connect","","",0,null],[13,"DestroyConnection","","",0,null],[13,"GetShutdownEvent","","",0,null],[13,"CheckExtentsion","","",0,null],[13,"EnableVmCapability","","",0,null],[13,"EnableVcpuCapability","","",0,null],[13,"GetSupportedCpuid","","",0,null],[13,"GetEmulatedCpuid","","",0,null],[13,"GetHypervCpuid","","",0,null],[13,"GetMsrIndexList","","",0,null],[13,"NetGetConfig","","",0,null],[13,"ReserveRange","","",0,null],[13,"ReserveAsyncWriteRange","","",0,null],[13,"SetIrq","","",0,null],[13,"SetIrqRouting","","",0,null],[13,"GetPicState","","",0,null],[13,"SetPicState","","",0,null],[13,"GetIoapicState","","",0,null],[13,"SetIoapicState","","",0,null],[13,"GetPitState","","",0,null],[13,"SetPitState","","",0,null],[13,"GetClock","","",0,null],[13,"SetClock","","",0,null],[13,"SetIdentityMapAddr","","",0,null],[13,"PauseVcpus","","",0,null],[13,"Start","","",0,null],[13,"GetVcpu","","",0,null],[13,"VcpuWait","","",0,null],[13,"VcpuResume","","",0,null],[13,"VcpuGetRegs","","",0,null],[13,"VcpuSetRegs","","",0,null],[13,"VcpuGetSregs","","",0,null],[13,"VcpuSetSregs","","",0,null],[13,"GetFpu","","",0,null],[13,"SetFpu","","",0,null],[13,"GetDebugRegs","","",0,null],[13,"SetDebugRegs","","",0,null],[13,"GetXCRegs","","",0,null],[13,"SetXCRegs","","",0,null],[13,"VcpuGetMsrs","","",0,null],[13,"VcpuSetMsrs","","",0,null],[13,"VcpuSetCpuid","","",0,null],[13,"VcpuGetLapicState","","",0,null],[13,"VcpuSetLapicState","","",0,null],[13,"VcpuGetMpState","","",0,null],[13,"VcpuSetMpState","","",0,null],[13,"VcpuGetVcpuEvents","","",0,null],[13,"VcpuSetVcpuEvents","","",0,null],[13,"NewConnection","","",0,null],[13,"SetHypercallHint","","",0,null],[13,"Count","","",0,null],[3,"crosvm","","",null,null],[3,"crosvm_io_event","","",null,null],[5,"crosvm_create_io_event","","",null,[[["u32",15],["u64",15]],["c_int",6]]],[5,"crosvm_destroy_io_event","","",null,[[],["c_int",6]]],[5,"crosvm_io_event_fd","","",null,[[],["c_int",6]]],[3,"crosvm_memory","","",null,null],[5,"crosvm_create_memory","","",null,[[["u64",15],["bool",15],["c_int",6]],["c_int",6]]],[5,"crosvm_destroy_memory","","",null,[[],["c_int",6]]],[5,"crosvm_memory_get_dirty_log","","",null,[[],["c_int",6]]],[3,"crosvm_irq_event","","",null,null],[5,"crosvm_create_irq_event","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_destroy_irq_event","","",null,[[],["c_int",6]]],[5,"crosvm_irq_event_get_fd","","",null,[[],["c_int",6]]],[5,"crosvm_irq_event_get_resample_fd","","",null,[[],["c_int",6]]],[3,"crosvm_vcpu_event","","",null,null],[3,"crosvm_vcpu_reg_cache","","",null,null],[3,"crosvm_vcpu","","",null,null],[5,"crosvm_connect","","",null,[[],["c_int",6]]],[5,"crosvm_new_connection","","",null,[[],["c_int",6]]],[5,"crosvm_destroy_connection","","",null,[[],["c_int",6]]],[5,"crosvm_get_shutdown_eventfd","","",null,[[],["c_int",6]]],[5,"crosvm_check_extension","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_enable_capability","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_get_supported_cpuid","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_get_emulated_cpuid","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_get_msr_index_list","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_net_get_config","","",null,[[],["c_int",6]]],[5,"crosvm_reserve_range","","",null,[[["u32",15],["u64",15]],["c_int",6]]],[5,"crosvm_reserve_async_write_range","","",null,[[["u32",15],["u64",15]],["c_int",6]]],[5,"crosvm_set_irq","","",null,[[["u32",15],["bool",15]],["c_int",6]]],[5,"crosvm_set_irq_routing","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_set_hypercall_hint","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_get_pic_state","","",null,[[["bool",15]],["c_int",6]]],[5,"crosvm_set_pic_state","","",null,[[["bool",15]],["c_int",6]]],[5,"crosvm_get_ioapic_state","","",null,[[],["c_int",6]]],[5,"crosvm_set_ioapic_state","","",null,[[],["c_int",6]]],[5,"crosvm_get_pit_state","","",null,[[],["c_int",6]]],[5,"crosvm_set_pit_state","","",null,[[],["c_int",6]]],[5,"crosvm_get_clock","","",null,[[],["c_int",6]]],[5,"crosvm_set_clock","","",null,[[],["c_int",6]]],[5,"crosvm_set_identity_map_addr","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_pause_vcpus","","",null,[[["u64",15]],["c_int",6]]],[5,"crosvm_start","","",null,[[],["c_int",6]]],[5,"crosvm_get_vcpu","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_vcpu_wait","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_resume","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_get_regs","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_set_regs","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_get_sregs","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_set_sregs","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_get_fpu","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_set_fpu","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_get_debugregs","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_set_debugregs","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_get_xcrs","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_set_xcrs","","",null,[[],["c_int",6]]],[5,"crosvm_get_hyperv_cpuid","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_vcpu_get_msrs","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_vcpu_set_msrs","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_vcpu_set_cpuid","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_vcpu_enable_capability","","",null,[[["u32",15]],["c_int",6]]],[5,"crosvm_vcpu_get_lapic_state","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_set_lapic_state","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_get_mp_state","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_set_mp_state","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_get_vcpu_events","","",null,[[],["c_int",6]]],[5,"crosvm_vcpu_set_vcpu_events","","",null,[[],["c_int",6]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"clone","","",1,[[],["crosvm_net_config",3]]],[11,"clone","","",2,[[],["anon_irqchip",3]]],[11,"clone","","",3,[[],["anon_msi",3]]],[11,"clone","","",0,[[],["stat",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Stat"],[3,"crosvm_net_config"],[3,"anon_irqchip"],[3,"anon_msi"],[19,"anon_route"],[3,"crosvm_irq_route"],[3,"crosvm_hint"],[3,"crosvm_hint_detail"],[3,"crosvm"],[3,"crosvm_io_event"],[3,"crosvm_memory"],[3,"crosvm_irq_event"],[3,"crosvm_vcpu_event"],[3,"crosvm_vcpu_reg_cache"],[3,"crosvm_vcpu"]]},\
"data_model":{"doc":"","i":[[0,"endian","data_model","Explicit endian types useful for embedding in structs or …",null,null],[3,"Le16","data_model::endian","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",0,[[],["u16",15]]],[3,"SLe16","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",1,[[],["i16",15]]],[3,"Le32","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",2,[[],["u32",15]]],[3,"SLe32","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",3,[[],["i32",15]]],[3,"Le64","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",4,[[],["u64",15]]],[3,"SLe64","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",5,[[],["i64",15]]],[3,"LeSize","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",6,[[],["usize",15]]],[3,"SLeSize","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",7,[[],["isize",15]]],[3,"Be16","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",8,[[],["u16",15]]],[3,"SBe16","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",9,[[],["i16",15]]],[3,"Be32","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",10,[[],["u32",15]]],[3,"SBe32","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",11,[[],["i32",15]]],[3,"Be64","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",12,[[],["u64",15]]],[3,"SBe64","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",13,[[],["i64",15]]],[3,"BeSize","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",14,[[],["usize",15]]],[3,"SBeSize","","An integer type of with an explicit endianness.",null,null],[11,"to_native","","Converts <code>self</code> to the native endianness.",15,[[],["isize",15]]],[0,"volatile_memory","data_model","Types for volatile access to memory.",null,null],[4,"VolatileMemoryError","data_model::volatile_memory","",null,null],[13,"OutOfBounds","","<code>addr</code> is out of bounds of the volatile memory slice.",16,null],[12,"addr","data_model::volatile_memory::VolatileMemoryError","",17,null],[13,"Overflow","data_model::volatile_memory","Taking a slice at <code>base</code> with <code>offset</code> would overflow <code>usize</code>.",16,null],[12,"base","data_model::volatile_memory::VolatileMemoryError","",18,null],[12,"offset","","",18,null],[6,"VolatileMemoryResult","data_model::volatile_memory","",null,null],[5,"calc_offset","","Convenience function for computing <code>base + offset</code> which …",null,[[["usize",15]],[["usize",15],["volatilememoryresult",6]]]],[8,"VolatileMemory","","Trait for types that support raw volatile access to their …",null,null],[10,"get_slice","","Gets a slice of memory at <code>offset</code> that is <code>count</code> bytes in …",19,[[["usize",15]],[["volatilememoryresult",6],["volatileslice",3]]]],[11,"get_ref","","Gets a <code>VolatileRef</code> at <code>offset</code>.",19,[[["usize",15]],[["volatilememoryresult",6],["volatileref",3]]]],[3,"VolatileSlice","","A slice of raw memory that supports volatile access. Like …",null,null],[11,"new","","Creates a slice of raw memory that must support volatile …",20,[[],["volatileslice",3]]],[11,"from_raw_parts","","Creates a <code>VolatileSlice</code> from a pointer and a length.",20,[[["usize",15]],["volatileslice",3]]],[11,"as_ptr","","Gets a const pointer to this slice\'s memory.",20,[[]]],[11,"as_mut_ptr","","Gets a mutable pointer to this slice\'s memory.",20,[[]]],[11,"size","","Gets the size of this slice.",20,[[],["usize",15]]],[11,"as_iobuf","","Returns this <code>VolatileSlice</code> as an <code>iovec</code>.",20,[[],["iovec",3]]],[11,"as_iobufs","","Converts a slice of <code>VolatileSlice</code>s into a slice of <code>iovec</code>s",20,[[]]],[11,"offset","","Creates a copy of this slice with the address increased …",20,[[["usize",15]],[["volatileslice",3],["volatilememoryresult",6]]]],[11,"sub_slice","","Similar to <code>get_slice</code> but the returned slice outlives this …",20,[[["usize",15]],[["volatileslice",3],["volatilememoryresult",6]]]],[11,"write_bytes","","Sets each byte of this slice with the given byte, similar …",20,[[["u8",15]]]],[11,"copy_to","","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> …",20,[[]]],[11,"copy_to_volatile_slice","","Copies <code>self.size()</code> or <code>slice.size()</code> bytes, whichever is …",20,[[["volatileslice",3]]]],[11,"copy_from","","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> …",20,[[]]],[3,"VolatileRef","","A memory location that supports volatile access of a <code>T</code>.",null,null],[11,"new","","Creates a reference to raw memory that must support …",21,[[],["volatileref",3]]],[11,"as_mut_ptr","","Gets the address of this slice\'s memory.",21,[[]]],[11,"size","","Gets the size of this slice.",21,[[],["usize",15]]],[11,"store","","Does a volatile write of the value <code>v</code> to the address of …",21,[[]]],[11,"load","","Does a volatile read of the value at the address of this …",21,[[]]],[11,"to_slice","","Converts this <code>T</code> reference to a raw slice with the same …",21,[[],["volatileslice",3]]],[8,"DataInit","data_model","Types for which it is safe to initialize from raw data.",null,null],[11,"from_slice","","Converts a slice of raw data into a reference of <code>Self</code>.",22,[[],["option",4]]],[11,"from_mut_slice","","Converts a mutable slice of raw data into a mutable …",22,[[],["option",4]]],[11,"from_reader","","Creates an instance of <code>Self</code> by copying raw data from an …",22,[[["read",8]],["result",6]]],[11,"as_slice","","Converts a reference to <code>self</code> into a slice of bytes.",22,[[]]],[11,"as_mut_slice","","Converts a mutable reference to <code>self</code> into a mutable slice …",22,[[]]],[5,"vec_with_array_field","","The kernel API has many structs that resemble the …",null,[[["usize",15]],[["vec",3],["default",8]]]],[8,"FlexibleArray","","The following code provides generic helpers for creating …",null,null],[10,"set_len","","Implementations must set flexible array length in the …",23,[[["usize",15]]]],[10,"get_len","","Implementations must return the length of the flexible …",23,[[],["usize",15]]],[10,"get_slice","","Implementations must return a slice of flexible array …",23,[[["usize",15]]]],[10,"get_mut_slice","","Implementations must return a mutable slice of flexible …",23,[[["usize",15]]]],[3,"FlexibleArrayWrapper","","",null,null],[3,"IoBufMut","","This type is essentialy <code>std::io::IoBufMut</code>, and guaranteed …",null,null],[14,"flexible_array_impl","","Always use this macro for implementing the FlexibleArray<<code>S</code>…",null,null],[11,"from","data_model::endian","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","data_model::volatile_memory","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","data_model","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"get_slice","data_model::volatile_memory","",20,[[["usize",15]],[["volatilememoryresult",6],["volatileslice",3]]]],[11,"as_mut","data_model","",25,[[],["iovec",3]]],[11,"as_ref","","",25,[[],["iovec",3]]],[11,"from","data_model::endian","",0,[[["u16",15]],["le16",3]]],[11,"from","","",1,[[["i16",15]],["sle16",3]]],[11,"from","","",2,[[["u32",15]],["le32",3]]],[11,"from","","",3,[[["i32",15]],["sle32",3]]],[11,"from","","",4,[[["u64",15]],["le64",3]]],[11,"from","","",5,[[["i64",15]],["sle64",3]]],[11,"from","","",6,[[["usize",15]],["lesize",3]]],[11,"from","","",7,[[["isize",15]],["slesize",3]]],[11,"from","","",8,[[["u16",15]],["be16",3]]],[11,"from","","",9,[[["i16",15]],["sbe16",3]]],[11,"from","","",10,[[["u32",15]],["be32",3]]],[11,"from","","",11,[[["i32",15]],["sbe32",3]]],[11,"from","","",12,[[["u64",15]],["be64",3]]],[11,"from","","",13,[[["i64",15]],["sbe64",3]]],[11,"from","","",14,[[["usize",15]],["besize",3]]],[11,"from","","",15,[[["isize",15]],["sbesize",3]]],[11,"clone","","",0,[[],["le16",3]]],[11,"clone","","",1,[[],["sle16",3]]],[11,"clone","","",2,[[],["le32",3]]],[11,"clone","","",3,[[],["sle32",3]]],[11,"clone","","",4,[[],["le64",3]]],[11,"clone","","",5,[[],["sle64",3]]],[11,"clone","","",6,[[],["lesize",3]]],[11,"clone","","",7,[[],["slesize",3]]],[11,"clone","","",8,[[],["be16",3]]],[11,"clone","","",9,[[],["sbe16",3]]],[11,"clone","","",10,[[],["be32",3]]],[11,"clone","","",11,[[],["sbe32",3]]],[11,"clone","","",12,[[],["be64",3]]],[11,"clone","","",13,[[],["sbe64",3]]],[11,"clone","","",14,[[],["besize",3]]],[11,"clone","","",15,[[],["sbesize",3]]],[11,"clone","data_model::volatile_memory","",20,[[],["volatileslice",3]]],[11,"clone","data_model","",25,[[],["iobufmut",3]]],[11,"default","data_model::endian","",0,[[],["le16",3]]],[11,"default","","",1,[[],["sle16",3]]],[11,"default","","",2,[[],["le32",3]]],[11,"default","","",3,[[],["sle32",3]]],[11,"default","","",4,[[],["le64",3]]],[11,"default","","",5,[[],["sle64",3]]],[11,"default","","",6,[[],["lesize",3]]],[11,"default","","",7,[[],["slesize",3]]],[11,"default","","",8,[[],["be16",3]]],[11,"default","","",9,[[],["sbe16",3]]],[11,"default","","",10,[[],["be32",3]]],[11,"default","","",11,[[],["sbe32",3]]],[11,"default","","",12,[[],["be64",3]]],[11,"default","","",13,[[],["sbe64",3]]],[11,"default","","",14,[[],["besize",3]]],[11,"default","","",15,[[],["sbesize",3]]],[11,"eq","","",0,[[["le16",3]],["bool",15]]],[11,"ne","","",0,[[["le16",3]],["bool",15]]],[11,"eq","","",0,[[["u16",15]],["bool",15]]],[11,"eq","","",1,[[["sle16",3]],["bool",15]]],[11,"ne","","",1,[[["sle16",3]],["bool",15]]],[11,"eq","","",1,[[["i16",15]],["bool",15]]],[11,"eq","","",2,[[["le32",3]],["bool",15]]],[11,"ne","","",2,[[["le32",3]],["bool",15]]],[11,"eq","","",2,[[["u32",15]],["bool",15]]],[11,"eq","","",3,[[["sle32",3]],["bool",15]]],[11,"ne","","",3,[[["sle32",3]],["bool",15]]],[11,"eq","","",3,[[["i32",15]],["bool",15]]],[11,"eq","","",4,[[["le64",3]],["bool",15]]],[11,"ne","","",4,[[["le64",3]],["bool",15]]],[11,"eq","","",4,[[["u64",15]],["bool",15]]],[11,"eq","","",5,[[["sle64",3]],["bool",15]]],[11,"ne","","",5,[[["sle64",3]],["bool",15]]],[11,"eq","","",5,[[["i64",15]],["bool",15]]],[11,"eq","","",6,[[["lesize",3]],["bool",15]]],[11,"ne","","",6,[[["lesize",3]],["bool",15]]],[11,"eq","","",6,[[["usize",15]],["bool",15]]],[11,"eq","","",7,[[["slesize",3]],["bool",15]]],[11,"ne","","",7,[[["slesize",3]],["bool",15]]],[11,"eq","","",7,[[["isize",15]],["bool",15]]],[11,"eq","","",8,[[["be16",3]],["bool",15]]],[11,"ne","","",8,[[["be16",3]],["bool",15]]],[11,"eq","","",8,[[["u16",15]],["bool",15]]],[11,"eq","","",9,[[["sbe16",3]],["bool",15]]],[11,"ne","","",9,[[["sbe16",3]],["bool",15]]],[11,"eq","","",9,[[["i16",15]],["bool",15]]],[11,"eq","","",10,[[["be32",3]],["bool",15]]],[11,"ne","","",10,[[["be32",3]],["bool",15]]],[11,"eq","","",10,[[["u32",15]],["bool",15]]],[11,"eq","","",11,[[["sbe32",3]],["bool",15]]],[11,"ne","","",11,[[["sbe32",3]],["bool",15]]],[11,"eq","","",11,[[["i32",15]],["bool",15]]],[11,"eq","","",12,[[["be64",3]],["bool",15]]],[11,"ne","","",12,[[["be64",3]],["bool",15]]],[11,"eq","","",12,[[["u64",15]],["bool",15]]],[11,"eq","","",13,[[["sbe64",3]],["bool",15]]],[11,"ne","","",13,[[["sbe64",3]],["bool",15]]],[11,"eq","","",13,[[["i64",15]],["bool",15]]],[11,"eq","","",14,[[["besize",3]],["bool",15]]],[11,"ne","","",14,[[["besize",3]],["bool",15]]],[11,"eq","","",14,[[["usize",15]],["bool",15]]],[11,"eq","","",15,[[["sbesize",3]],["bool",15]]],[11,"ne","","",15,[[["sbesize",3]],["bool",15]]],[11,"eq","","",15,[[["isize",15]],["bool",15]]],[11,"eq","data_model::volatile_memory","",16,[[["volatilememoryerror",4]],["bool",15]]],[11,"ne","","",16,[[["volatilememoryerror",4]],["bool",15]]],[11,"fmt","data_model::endian","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","data_model::volatile_memory","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","data_model","",25,[[["formatter",3]],["result",6]]],[11,"fmt","data_model::volatile_memory","",16,[[["formatter",3]],["result",6]]],[11,"serialize","data_model::endian","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"new","data_model","Creates a new FlexibleArrayWrapper for the given flexible …",24,[[["usize",15]],["flexiblearraywrapper",3]]],[11,"entries_slice","","Returns a slice of the flexible array member, for …",24,[[]]],[11,"mut_entries_slice","","Returns a mutable slice of the flexible array member, for …",24,[[]]],[11,"as_ptr","","Get a pointer so it can be passed to the kernel. Callers …",24,[[]]],[11,"as_mut_ptr","","Get a mutable pointer so it can be passed to the kernel. …",24,[[]]],[11,"new","","",25,[[],["iobufmut",3]]],[11,"from_raw_parts","","Creates a <code>IoBufMut</code> from a pointer and a length.",25,[[["usize",15]],["iobufmut",3]]],[11,"len","","",25,[[],["usize",15]]],[11,"is_empty","","",25,[[],["bool",15]]],[11,"as_ptr","","Gets a const pointer to this slice\'s memory.",25,[[]]],[11,"as_mut_ptr","","Gets a mutable pointer to this slice\'s memory.",25,[[]]],[11,"as_iobufs","","Converts a slice of <code>IoBufMut</code>s into a slice of <code>iovec</code>s.",25,[[]]]],"p":[[3,"Le16"],[3,"SLe16"],[3,"Le32"],[3,"SLe32"],[3,"Le64"],[3,"SLe64"],[3,"LeSize"],[3,"SLeSize"],[3,"Be16"],[3,"SBe16"],[3,"Be32"],[3,"SBe32"],[3,"Be64"],[3,"SBe64"],[3,"BeSize"],[3,"SBeSize"],[4,"VolatileMemoryError"],[13,"OutOfBounds"],[13,"Overflow"],[8,"VolatileMemory"],[3,"VolatileSlice"],[3,"VolatileRef"],[8,"DataInit"],[8,"FlexibleArray"],[3,"FlexibleArrayWrapper"],[3,"IoBufMut"]]},\
"devices":{"doc":"Emulates virtual and hardware devices.","i":[[0,"direct_io","devices","",null,null],[3,"DirectIo","devices::direct_io","",null,null],[11,"new","","Create simple direct I/O access device.",0,[[["bool",15],["path",3]],[["error",3],["result",4]]]],[0,"direct_irq","devices","",null,null],[4,"DirectIrqError","devices::direct_irq","",null,null],[13,"Enable","","",1,null],[13,"Open","","",1,null],[3,"DirectIrq","","",null,null],[11,"new","","Create DirectIrq object to access hardware triggered …",2,[[["event",3],["option",4]],[["result",4],["directirqerror",4]]]],[11,"irq_enable","","Enable hardware triggered interrupt handling.",2,[[["u32",15]],[["result",4],["directirqerror",4]]]],[0,"irqchip","devices","",null,null],[3,"KvmKernelIrqChip","devices::irqchip","IrqChip implementation where the entire IrqChip is …",null,null],[3,"KvmSplitIrqChip","","The KvmSplitIrqsChip supports KVM\'s SPLIT_IRQCHIP …",null,null],[8,"IrqChipX86_64","","",null,null],[10,"try_box_clone","","",3,[[],[["box",3],["result",6]]]],[10,"as_irq_chip","","",3,[[],["irqchip",8]]],[10,"as_irq_chip_mut","","",3,[[],["irqchip",8]]],[10,"get_pic_state","","Get the current state of the PIC",3,[[["picselect",4]],[["picstate",3],["result",6]]]],[10,"set_pic_state","","Set the current state of the PIC",3,[[["picstate",3],["picselect",4]],["result",6]]],[10,"get_ioapic_state","","Get the current state of the IOAPIC",3,[[],[["result",6],["ioapicstate",3]]]],[10,"set_ioapic_state","","Set the current state of the IOAPIC",3,[[["ioapicstate",3]],["result",6]]],[10,"get_lapic_state","","Get the current state of the specified VCPU\'s local APIC",3,[[["usize",15]],[["result",6],["lapicstate",3]]]],[10,"set_lapic_state","","Set the current state of the specified VCPU\'s local APIC",3,[[["usize",15],["lapicstate",3]],["result",6]]],[10,"get_pit","","Retrieves the state of the PIT.",3,[[],[["result",6],["pitstate",3]]]],[10,"set_pit","","Sets the state of the PIT.",3,[[["pitstate",3]],["result",6]]],[10,"pit_uses_speaker_port","","Returns true if the PIT uses port 0x61 for the PC …",3,[[],["bool",15]]],[3,"Pic","","",null,null],[17,"IOAPIC_BASE_ADDRESS","","",null,null],[17,"IOAPIC_MEM_LENGTH_BYTES","","",null,null],[3,"Ioapic","","",null,null],[6,"IrqEventIndex","","",null,null],[8,"IrqChip","","Trait that abstracts interactions with interrupt …",null,null],[10,"add_vcpu","","Add a vcpu to the irq chip.",4,[[["usize",15],["vcpu",8]],["result",6]]],[10,"register_irq_event","","Register an event that can trigger an interrupt for a …",4,[[["u32",15],["option",4],["event",3]],[["result",6],["option",4]]]],[10,"unregister_irq_event","","Unregister an event for a particular GSI.",4,[[["u32",15],["event",3]],["result",6]]],[10,"route_irq","","Route an IRQ line to an interrupt controller, or to a …",4,[[["irqroute",3]],["result",6]]],[10,"set_irq_routes","","Replace all irq routes with the supplied routes",4,[[],["result",6]]],[10,"irq_event_tokens","","Return a vector of all registered irq numbers and their …",4,[[],[["vec",3],["result",6]]]],[10,"service_irq","","Either assert or deassert an IRQ line.  Sends to either …",4,[[["u32",15],["bool",15]],["result",6]]],[10,"service_irq_event","","Service an IRQ event by asserting then deasserting an IRQ …",4,[[["irqeventindex",6]],["result",6]]],[10,"broadcast_eoi","","Broadcast an end of interrupt.",4,[[["u8",15]],["result",6]]],[10,"inject_interrupts","","Injects any pending interrupts for <code>vcpu</code>.",4,[[["vcpu",8]],["result",6]]],[10,"halted","","Notifies the irq chip that the specified VCPU has …",4,[[["usize",15]]]],[10,"wait_until_runnable","","Blocks until <code>vcpu</code> is in a runnable state or until …",4,[[["vcpu",8]],[["vcpurunstate",4],["result",6]]]],[10,"kick_halted_vcpus","","Makes unrunnable VCPUs return immediately from …",4,[[]]],[10,"get_mp_state","","Get the current MP state of the specified VCPU.",4,[[["usize",15]],[["result",6],["mpstate",4]]]],[10,"set_mp_state","","Set the current MP state of the specified VCPU.",4,[[["usize",15],["mpstate",4]],["result",6]]],[10,"try_clone","","Attempt to create a shallow clone of this IrqChip …",4,[[],["result",6]]],[10,"finalize_devices","","Finalize irqchip setup. Should be called once all devices …",4,[[["systemallocator",3],["bus",3]],["result",6]]],[10,"process_delayed_irq_events","","Process any irqs events that were delayed because of any …",4,[[],["result",6]]],[10,"check_capability","","Checks if a particular <code>IrqChipCap</code> is available.",4,[[["irqchipcap",4]],["bool",15]]],[4,"IrqChipCap","","A capability the <code>IrqChip</code> can possibly expose.",null,null],[13,"TscDeadlineTimer","","APIC TSC-deadline timer mode.",5,null],[13,"X2Apic","","Extended xAPIC (x2APIC) standard.",5,null],[4,"VcpuRunState","","A capability the <code>IrqChip</code> can possibly expose.",null,null],[13,"Runnable","","",6,null],[13,"Interrupted","","",6,null],[0,"pl030","devices","",null,null],[17,"PL030_AMBA_IOMEM_SIZE","devices::pl030","",null,null],[17,"PL030_AMBA_ID","","",null,null],[17,"PL030_AMBA_MASK","","",null,null],[3,"Pl030","","An emulated ARM pl030 RTC",null,null],[11,"new","","Constructs a Pl030 device",7,[[["event",3]],["pl030",3]]],[0,"acpi","devices","",null,null],[3,"ACPIPMResource","devices::acpi","ACPI PM resource for handling OS suspend/resume request",null,null],[11,"new","","Constructs ACPI Power Management Resouce.",8,[[["event",3]],["acpipmresource",3]]],[17,"ACPIPM_RESOURCE_LEN","","the ACPI PM register length.",null,null],[17,"ACPIPM_RESOURCE_EVENTBLK_LEN","","",null,null],[17,"ACPIPM_RESOURCE_CONTROLBLK_LEN","","",null,null],[0,"bat","devices","",null,null],[4,"BatteryError","devices::bat","Errors for battery devices.",null,null],[13,"Non32BitMmioAddress","","",9,null],[17,"GOLDFISHBAT_MMIO_LEN","","the GoldFish Battery MMIO length.",null,null],[3,"GoldfishBattery","","GoldFish Battery state",null,null],[11,"new","","Create GoldfishBattery device model",10,[[["u32",15],["box",3],["tube",3],["u64",15],["event",3],["option",4]],[["batteryerror",4],["result",4]]]],[11,"keep_rds","","return the fds used by this device",10,[[],[["rawdescriptor",6],["vec",3]]]],[0,"serial_device","devices","",null,null],[4,"Error","devices::serial_device","",null,null],[13,"CloneEvent","","",11,null],[13,"FileError","","",11,null],[13,"InvalidPath","","",11,null],[13,"InvalidSerialHardware","","",11,null],[13,"InvalidSerialType","","",11,null],[13,"PathRequired","","",11,null],[13,"SocketCreateFailed","","",11,null],[13,"Unimplemented","","",11,null],[8,"SerialDevice","","Abstraction over serial-like devices that can be created …",null,null],[10,"new","","",12,[[["protectiontype",4],["option",4],["vec",3],["option",4],["box",3],["rawdescriptor",6],["event",3],["box",3]]]],[4,"SerialType","","Enum for possible type of serial devices",null,null],[13,"File","","",13,null],[13,"Stdout","","",13,null],[13,"Sink","","",13,null],[13,"Syslog","","",13,null],[13,"UnixSocket","","",13,null],[4,"SerialHardware","","Serial device hardware types",null,null],[13,"Serial","","",14,null],[13,"VirtioConsole","","",14,null],[3,"SerialParameters","","Holds the parameters for a serial device",null,null],[12,"type_","","",15,null],[12,"hardware","","",15,null],[12,"path","","",15,null],[12,"input","","",15,null],[12,"num","","",15,null],[12,"console","","",15,null],[12,"earlycon","","",15,null],[12,"stdin","","",15,null],[11,"create_serial_device","","Helper function to create a serial device from the …",15,[[["vec",3],["protectiontype",4],["event",3]],[["serialdevice",8],["error",4],["result",4]]]],[11,"add_bind_mounts","","",15,[[["minijail",3]],[["result",4],["error",4]]]],[0,"usb","devices","",null,null],[0,"host_backend","devices::usb","",null,null],[0,"error","devices::usb::host_backend","",null,null],[4,"Error","devices::usb::host_backend::error","",null,null],[13,"AddToEventLoop","","",16,null],[13,"BadBackendProviderState","","",16,null],[13,"BadXhciTransferState","","",16,null],[13,"BufferLen","","",16,null],[13,"ClearHalt","","",16,null],[13,"CreateControlTube","","",16,null],[13,"CreateLibUsbContext","","",16,null],[13,"CreateTransfer","","",16,null],[13,"GetActiveConfig","","",16,null],[13,"GetConfigDescriptor","","",16,null],[13,"GetDeviceDescriptor","","",16,null],[13,"GetEndpointDescriptor","","",16,null],[13,"GetEndpointType","","",16,null],[13,"GetInterfaceDescriptor","","Cannot get interface descriptor for (interface, …",16,null],[13,"GetXhciTransferType","","",16,null],[13,"MissingRequiredBuffer","","",16,null],[13,"QueueAsyncJob","","",16,null],[13,"ReadBuffer","","",16,null],[13,"ReadControlTube","","",16,null],[13,"Reset","","",16,null],[13,"SetActiveConfig","","",16,null],[13,"SetInterfaceAltSetting","","",16,null],[13,"SetupControlTube","","",16,null],[13,"StartAsyncJobQueue","","",16,null],[13,"TransferComplete","","",16,null],[13,"WriteBuffer","","",16,null],[13,"WriteControlTube","","",16,null],[6,"Result","","",null,null],[0,"host_backend_device_provider","devices::usb::host_backend","",null,null],[4,"HostBackendDeviceProvider","devices::usb::host_backend::host_backend_device_provider","Host backend device provider is a xhci backend device …",null,null],[13,"Created","","",17,null],[12,"control_tube","devices::usb::host_backend::host_backend_device_provider::HostBackendDeviceProvider","",18,null],[13,"Started","devices::usb::host_backend::host_backend_device_provider","",17,null],[12,"inner","devices::usb::host_backend::host_backend_device_provider::HostBackendDeviceProvider","",19,null],[13,"Failed","devices::usb::host_backend::host_backend_device_provider","",17,null],[11,"new","","",17,[[],["result",6]]],[3,"ProviderInner","","ProviderInner listens to control socket.",null,null],[0,"host_device","devices::usb::host_backend","",null,null],[4,"ControlEndpointState","devices::usb::host_backend::host_device","",null,null],[13,"SetupStage","","Control endpoint should receive setup stage next.",20,null],[13,"DataStage","","Control endpoint should receive data stage next.",20,null],[13,"StatusStage","","Control endpoint should receive status stage next.",20,null],[3,"HostDevice","","Host device is a device connected to host.",null,null],[11,"new","","Create a new host device.",21,[[["arc",3],["failhandle",8],["mutex",3],["asyncjobqueue",3],["arc",3],["arc",3]],[["result",6],["hostdevice",3]]]],[0,"usb_endpoint","devices::usb::host_backend","",null,null],[3,"UsbEndpoint","devices::usb::host_backend::usb_endpoint","Isochronous, Bulk or Interrupt endpoint.",null,null],[11,"new","","Create new endpoint. This function will panic if endpoint …",22,[[["endpointtype",4],["mutex",3],["u8",15],["arc",3],["arc",3],["failhandle",8],["endpointdirection",4],["asyncjobqueue",3],["arc",3]],["usbendpoint",3]]],[11,"match_ep","","Returns true is this endpoint matches number and …",22,[[["transferdirection",4],["u8",15]],["bool",15]]],[11,"handle_transfer","","Handle a xhci transfer.",22,[[["xhcitransfer",3]],["result",6]]],[0,"xhci","devices::usb","",null,null],[0,"scatter_gather_buffer","devices::usb::xhci","",null,null],[4,"Error","devices::usb::xhci::scatter_gather_buffer","",null,null],[13,"BadTrbType","","",23,null],[13,"CastTrb","","",23,null],[13,"ImmediateDataTooLong","","",23,null],[13,"ReadGuestMemory","","",23,null],[13,"UnknownTrbType","","",23,null],[13,"WriteGuestMemory","","",23,null],[3,"ScatterGatherBuffer","","See xHCI spec 3.2.8 for scatter/gather transfer. It\'s …",null,null],[11,"new","","Create a new buffer from transfer descriptor.",24,[[["guestmemory",3],["vec",3],["addressedtrb",3]],[["result",4],["scattergatherbuffer",3],["error",4]]]],[11,"len","","Total len of this buffer.",24,[[],[["result",4],["usize",15],["error",4]]]],[11,"read","","Read content to buffer, return number of bytes read.",24,[[],[["result",4],["usize",15],["error",4]]]],[11,"write","","Write content from buffer, return number of bytes written.",24,[[],[["result",4],["usize",15],["error",4]]]],[0,"usb_hub","devices::usb::xhci","",null,null],[4,"Error","devices::usb::xhci::usb_hub","",null,null],[13,"AllPortsAttached","","",25,null],[13,"AlreadyDetached","","",25,null],[13,"Attach","","",25,null],[12,"port_id","devices::usb::xhci::usb_hub::Error","",26,null],[12,"reason","","",26,null],[13,"Detach","devices::usb::xhci::usb_hub","",25,null],[12,"port_id","devices::usb::xhci::usb_hub::Error","",27,null],[12,"reason","","",27,null],[13,"NoSuchDevice","devices::usb::xhci::usb_hub","",25,null],[12,"bus","devices::usb::xhci::usb_hub::Error","",28,null],[12,"addr","","",28,null],[12,"vid","","",28,null],[12,"pid","","",28,null],[13,"NoSuchPort","devices::usb::xhci::usb_hub","",25,null],[3,"UsbPort","","A port on usb hub. It could have a device connected to it.",null,null],[11,"new","","Create a new usb port that has nothing connected to it.",29,[[["u32",15],["mutex",3],["u8",15],["register",3],["arc",3],["backendtype",4]],["usbport",3]]],[11,"detach","","Detach current connected backend. Returns false when …",29,[[],[["result",4],["error",4]]]],[11,"get_backend_device","","Get current connected backend.",29,[[],[["option",4],["mutexguard",3]]]],[11,"send_device_connected_event","","Inform the guest kernel there is device connected to this …",29,[[],[["interruptererror",4],["result",4]]]],[11,"send_device_disconnected_event","","Inform the guest kernel that device has been detached.",29,[[],[["interruptererror",4],["result",4]]]],[3,"UsbHub","","UsbHub is a set of usb ports.",null,null],[11,"new","","Create usb hub with no device attached.",30,[[["xhciregs",3],["mutex",3],["arc",3]],["usbhub",3]]],[11,"reset","","Reset all ports.",30,[[],[["result",4],["error",4]]]],[11,"get_port","","Get a specific port of the hub.",30,[[["u8",15]],[["arc",3],["option",4]]]],[11,"connect_backend","","Connect backend to next empty port.",30,[[["xhcibackenddevice",8],["box",3]],[["result",4],["error",4],["u8",15]]]],[11,"disconnect_port","","Disconnect device from port. Returns false if port id is …",30,[[["u8",15]],[["result",4],["error",4]]]],[0,"xhci_backend_device","devices::usb::xhci","",null,null],[6,"UsbDeviceAddress","devices::usb::xhci::xhci_backend_device","Address of this usb device, as in Set Address standard …",null,null],[4,"BackendType","","The type USB device provided by the backend device.",null,null],[13,"Usb2","","",31,null],[13,"Usb3","","",31,null],[8,"XhciBackendDevice","","Xhci backend device is a virtual device connected to xHCI …",null,null],[10,"get_backend_type","","Returns the type of USB device provided by this device.",32,[[],["backendtype",4]]],[10,"get_vid","","Get vendor id of this device.",32,[[],["u16",15]]],[10,"get_pid","","Get product id of this device.",32,[[],["u16",15]]],[10,"submit_transfer","","Submit a xhci transfer to backend.",32,[[["xhcitransfer",3]],["result",6]]],[10,"set_address","","Set address of this backend.",32,[[["usbdeviceaddress",6]]]],[10,"reset","","Reset the backend device.",32,[[],["result",6]]],[0,"xhci_backend_device_provider","devices::usb::xhci","",null,null],[8,"XhciBackendDeviceProvider","devices::usb::xhci::xhci_backend_device_provider","Xhci backend provider will run on an EventLoop and …",null,null],[10,"start","","Start the provider on EventLoop.",33,[[["usbhub",3],["failhandle",8],["eventloop",3],["arc",3],["arc",3],["arc",3]],["result",6]]],[10,"keep_rds","","Keep raw descriptors that should be kept open.",33,[[],[["rawdescriptor",6],["vec",3]]]],[0,"xhci_controller","devices::usb::xhci","",null,null],[3,"XhciFailHandle","devices::usb::xhci::xhci_controller","Use this handle to fail xhci controller.",null,null],[11,"new","","",34,[[["xhciregs",3]],["xhcifailhandle",3]]],[3,"XhciController","","xHCI PCI interface implementation.",null,null],[11,"new","","Create new xhci controller.",35,[[["guestmemory",3],["hostbackenddeviceprovider",4]]]],[11,"init_when_forked","","Init xhci controller when it\'s forked.",35,[[]]],[0,"xhci_transfer","devices::usb::xhci","",null,null],[4,"Error","devices::usb::xhci::xhci_transfer","",null,null],[13,"BadTrbType","","",36,null],[13,"CastTrb","","",36,null],[13,"CreateBuffer","","",36,null],[13,"DetachPort","","",36,null],[13,"SendInterrupt","","",36,null],[13,"SubmitTransfer","","",36,null],[13,"TransferLength","","",36,null],[13,"TrbType","","",36,null],[13,"WriteCompletionEvent","","",36,null],[4,"TransferDirection","","Type of usb endpoints.",null,null],[13,"In","","",37,null],[13,"Out","","",37,null],[13,"Control","","",37,null],[4,"XhciTransferState","","Current state of xhci transfer.",null,null],[13,"Created","","",38,null],[13,"Submitted","","When transfer is submitted, it will contain a transfer …",38,null],[12,"cancel_callback","devices::usb::xhci::xhci_transfer::XhciTransferState","",39,null],[13,"Cancelling","devices::usb::xhci::xhci_transfer","",38,null],[13,"Cancelled","","",38,null],[13,"Completed","","",38,null],[11,"try_cancel","","Try to cancel this transfer, if it\'s possible.",38,[[]]],[4,"XhciTransferType","","Type of a transfer received handled by transfer ring.",null,null],[13,"Normal","","",40,null],[13,"SetupStage","","",40,null],[13,"DataStage","","",40,null],[13,"StatusStage","","",40,null],[13,"Isochronous","","",40,null],[13,"Noop","","",40,null],[11,"new","","Analyze transfer descriptor and return transfer type.",40,[[["guestmemory",3],["vec",3],["addressedtrb",3]],[["xhcitransfertype",4],["result",4],["error",4]]]],[3,"XhciTransferManager","","Xhci Transfer manager holds reference to all ongoing …",null,null],[11,"new","","Create a new manager.",41,[[],["xhcitransfermanager",3]]],[11,"create_transfer","","Build a new XhciTransfer. Endpoint id is the id in xHCI …",41,[[["mutex",3],["u8",15],["usbport",3],["arc",3],["guestmemory",3],["addressedtrb",3],["arc",3],["vec",3],["event",3]],["xhcitransfer",3]]],[11,"cancel_all","","Cancel all current transfers.",41,[[]]],[3,"XhciTransfer","","Xhci transfer denotes a transfer initiated by guest os …",null,null],[11,"state","","Get state of this transfer.",42,[[],["arc",3]]],[11,"get_transfer_type","","Get transfer type.",42,[[],[["xhcitransfertype",4],["result",4],["error",4]]]],[11,"get_endpoint_number","","Get endpoint number.",42,[[],["u8",15]]],[11,"get_transfer_dir","","get transfer direction.",42,[[],["transferdirection",4]]],[11,"on_transfer_complete","","This functions should be invoked when transfer is …",42,[[["u32",15],["transferstatus",4]],[["result",4],["error",4]]]],[11,"send_to_backend_if_valid","","Send this transfer to backend if it\'s a valid transfer.",42,[[],[["result",4],["error",4]]]],[0,"vfio","devices","",null,null],[4,"VfioError","devices::vfio","",null,null],[13,"BorrowVfioContainer","","",43,null],[13,"ContainerSetIOMMU","","",43,null],[13,"CreateVfioKvmDevice","","",43,null],[13,"GetGroupStatus","","",43,null],[13,"GroupGetDeviceFD","","",43,null],[13,"GroupSetContainer","","",43,null],[13,"GroupViable","","",43,null],[13,"InvalidPath","","",43,null],[13,"IommuDmaMap","","",43,null],[13,"IommuDmaUnmap","","",43,null],[13,"IommuGetInfo","","",43,null],[13,"KvmSetDeviceAttr","","",43,null],[13,"OpenContainer","","",43,null],[13,"OpenGroup","","",43,null],[13,"VfioApiVersion","","",43,null],[13,"VfioDeviceGetInfo","","",43,null],[13,"VfioDeviceGetRegionInfo","","",43,null],[13,"VfioIrqDisable","","",43,null],[13,"VfioIrqEnable","","",43,null],[13,"VfioIrqMask","","",43,null],[13,"VfioIrqUnmask","","",43,null],[13,"VfioType1V2","","",43,null],[3,"VfioContainer","","VfioContainer contain multi VfioGroup, and delegate an …",null,null],[11,"new","","Open VfioContainer",44,[[],[["result",4],["vfioerror",4]]]],[11,"vfio_dma_map","","",44,[[["bool",15],["u64",15]],[["result",4],["vfioerror",4]]]],[11,"vfio_dma_unmap","","",44,[[["u64",15]],[["result",4],["vfioerror",4]]]],[11,"vfio_get_iommu_page_size_mask","","",44,[[],[["vfioerror",4],["result",4],["u64",15]]]],[8,"VfioCommonTrait","","A helper trait for managing VFIO setup",null,null],[10,"vfio_get_container","","The single place to create a VFIO container for a PCI …",45,[[["bool",15],["path",3]],[["arc",3],["result",4],["vfioerror",4]]]],[3,"VfioCommonSetup","","",null,null],[4,"VfioIrqType","","Vfio Irq type used to enable/disable/mask/unmask vfio irq",null,null],[13,"Intx","","",46,null],[13,"Msi","","",46,null],[13,"Msix","","",46,null],[3,"VfioIrq","","Vfio Irq information used to assign and …",null,null],[12,"flags","","",47,null],[12,"index","","",47,null],[3,"VfioDevice","","Vfio device for exposing regions which could be …",null,null],[11,"new","","Create a new vfio device, then guest read/write on this …",48,[[["path",3],["mutex",3],["bool",15],["arc",3]],[["result",4],["vfioerror",4]]]],[11,"device_name","","Returns PCI device name, formatted as BUS:DEVICE.FUNCTION …",48,[[],["string",3]]],[11,"irq_enable","","Enable vfio device\'s irq and associate Irqfd Event with …",48,[[["u32",15]],[["result",4],["vfioerror",4]]]],[11,"resample_virq_enable","","When intx is enabled, irqfd is used to trigger a level …",48,[[["u32",15],["event",3]],[["result",4],["vfioerror",4]]]],[11,"irq_disable","","disable vfio device\'s irq and disconnect Irqfd Event with …",48,[[["u32",15]],[["result",4],["vfioerror",4]]]],[11,"irq_unmask","","Unmask vfio device irq",48,[[["u32",15]],[["result",4],["vfioerror",4]]]],[11,"irq_mask","","Mask vfio device irq",48,[[["u32",15]],[["result",4],["vfioerror",4]]]],[11,"get_irqs","","Query interrupt information return: Vector of interrupts …",48,[[],[["result",4],["vfioerror",4],["vec",3]]]],[11,"get_region_flags","","get a region\'s flag the return\'s value may conatin: …",48,[[["u32",15]],["u32",15]]],[11,"get_region_offset","","get a region\'s offset return: Region offset from the …",48,[[["u32",15]],["u64",15]]],[11,"get_region_size","","get a region\'s size return: Region size from the start of …",48,[[["u32",15]],["u64",15]]],[11,"get_region_count","","get a number of regions return: Number of regions of vfio …",48,[[],["u32",15]]],[11,"get_region_mmap","","get a region\'s mmap info vector",48,[[["u32",15]],[["vec",3],["vfio_region_sparse_mmap_area",3]]]],[11,"get_cap_type_info","","find the specified cap type in device regions Input: type_…",48,[[["u32",15]],["option",4]]],[11,"region_read","","Read region\'s data from VFIO device into buf index: …",48,[[["u32",15],["u64",15]]]],[11,"region_write","","write the data from buf into a vfio device region index: …",48,[[["u32",15],["u64",15]]]],[11,"keep_rds","","get vfio device\'s descriptors which are passed into …",48,[[],[["rawdescriptor",6],["vec",3]]]],[11,"vfio_dma_map","","Add (iova, user_addr) map into vfio container iommu table",48,[[["bool",15],["u64",15]],[["result",4],["vfioerror",4]]]],[11,"vfio_dma_unmap","","Remove (iova, user_addr) map from vfio container iommu …",48,[[["u64",15]],[["result",4],["vfioerror",4]]]],[11,"device_file","","Gets the vfio device backing <code>File</code>.",48,[[],["file",3]]],[0,"virtio","devices","Implements virtio devices, queues, and transport …",null,null],[0,"wl","devices::virtio","This module implements the virtio wayland used by the …",null,null],[17,"VIRTIO_WL_F_TRANS_FLAGS","devices::virtio::wl","",null,null],[17,"VIRTIO_WL_F_SEND_FENCES","","",null,null],[17,"QUEUE_SIZE","","",null,null],[17,"QUEUE_SIZES","","",null,null],[5,"DMA_BUF_IOCTL_SYNC","","",null,[[],["ioctlnr",6]]],[3,"WlState","","",null,null],[11,"new","","Create a new <code>WlState</code> instance for running a virtio-wl …",49,[[["map",3],["tube",3],["pathbuf",3],["bool",15],["option",4],["string",3]],["wlstate",3]]],[11,"wait_ctx","","This is a hack so that we can drive the inner WaitContext …",49,[[],["waitcontext",3]]],[3,"DescriptorsExhausted","","",null,null],[5,"process_in_queue","","Handle incoming events and forward them to the VM over …",null,[[["guestmemory",3],["wlstate",3],["queue",3]],[["descriptorsexhausted",3],["result",4]]]],[5,"process_out_queue","","Handle messages from the output queue and forward them to …",null,[[["guestmemory",3],["wlstate",3],["queue",3]]]],[3,"Wl","","",null,null],[11,"new","","",50,[[["map",3],["u64",15],["pathbuf",3],["tube",3],["option",4],["string",3]],[["result",6],["wl",3]]]],[0,"block","devices::virtio","",null,null],[0,"asynchronous","devices::virtio::block","",null,null],[4,"ControlError","devices::virtio::block::asynchronous","Errors that happen in block outside of executing a …",null,null],[13,"AsyncResampleCreate","","",51,null],[13,"CloneResampleEvent","","",51,null],[13,"FlushTimer","","",51,null],[13,"FsyncDisk","","",51,null],[13,"ReadResampleEvent","","",51,null],[3,"DiskState","","Tracks the state of an anynchronous disk.",null,null],[12,"disk_image","","",52,null],[12,"disk_size","","",52,null],[12,"read_only","","",52,null],[12,"sparse","","",52,null],[12,"id","","",52,null],[11,"new","","Creates a <code>DiskState</code> with the given params.",52,[[["asyncdisk",8],["option",4],["blockid",6],["atomicu64",3],["box",3],["bool",15],["arc",3]],["diskstate",3]]],[5,"process_one_chain","","Process one descriptor chain asynchronously.",null,[[["rc",3],["asyncmutex",3],["rc",3],["guestmemory",3],["descriptorchain",3],["refcell",3],["rc",3],["refcell",3],["refcell",3],["rc",3]]]],[5,"flush_disk","","Periodically flushes the disk when the given timer fires.",null,[[["asyncmutex",3],["refcell",3],["rc",3],["timerasync",3],["rc",3]]]],[3,"BlockAsync","","Virtio device for exposing block level read/write …",null,null],[11,"new","","Create a new virtio block device that operates on the …",53,[[["u32",15],["tube",3],["u64",15],["box",3],["bool",15],["blockid",6],["option",4],["option",4],["toasyncdisk",8]],[["blockasync",3],["sysresult",6]]]],[0,"block","devices::virtio::block","",null,null],[3,"Block","devices::virtio::block::block","Virtio device for exposing block level read/write …",null,null],[11,"new","","Create a new virtio block device that operates on the …",54,[[["u32",15],["box",3],["u64",15],["bool",15],["option",4],["blockid",6],["tube",3],["diskfile",8],["option",4]],[["sysresult",6],["block",3]]]],[17,"SECTOR_SHIFT","devices::virtio::block","",null,null],[17,"SECTOR_SIZE","","",null,null],[17,"MAX_DISCARD_SECTORS","","",null,null],[17,"MAX_WRITE_ZEROES_SECTORS","","",null,null],[17,"MAX_DISCARD_SEG","","",null,null],[17,"MAX_WRITE_ZEROES_SEG","","",null,null],[17,"DISCARD_SECTOR_ALIGNMENT","","",null,null],[17,"ID_LEN","","",null,null],[6,"BlockId","","Virtio block device identifier. This is an ASCII string …",null,null],[17,"VIRTIO_BLK_T_IN","","",null,null],[17,"VIRTIO_BLK_T_OUT","","",null,null],[17,"VIRTIO_BLK_T_FLUSH","","",null,null],[17,"VIRTIO_BLK_T_GET_ID","","",null,null],[17,"VIRTIO_BLK_T_DISCARD","","",null,null],[17,"VIRTIO_BLK_T_WRITE_ZEROES","","",null,null],[17,"VIRTIO_BLK_S_OK","","",null,null],[17,"VIRTIO_BLK_S_IOERR","","",null,null],[17,"VIRTIO_BLK_S_UNSUPP","","",null,null],[17,"VIRTIO_BLK_F_SEG_MAX","","",null,null],[17,"VIRTIO_BLK_F_RO","","",null,null],[17,"VIRTIO_BLK_F_BLK_SIZE","","",null,null],[17,"VIRTIO_BLK_F_FLUSH","","",null,null],[17,"VIRTIO_BLK_F_MQ","","",null,null],[17,"VIRTIO_BLK_F_DISCARD","","",null,null],[17,"VIRTIO_BLK_F_WRITE_ZEROES","","",null,null],[3,"virtio_blk_geometry","","",null,null],[3,"virtio_blk_topology","","",null,null],[3,"virtio_blk_config","","",null,null],[12,"capacity","","",55,null],[12,"size_max","","",55,null],[12,"seg_max","","",55,null],[12,"geometry","","",55,null],[12,"blk_size","","",55,null],[12,"topology","","",55,null],[12,"writeback","","",55,null],[12,"unused0","","",55,null],[12,"num_queues","","",55,null],[12,"max_discard_sectors","","",55,null],[12,"max_discard_seg","","",55,null],[12,"discard_sector_alignment","","",55,null],[12,"max_write_zeroes_sectors","","",55,null],[12,"max_write_zeroes_seg","","",55,null],[12,"write_zeroes_may_unmap","","",55,null],[12,"unused1","","",55,null],[5,"build_config_space","","Builds and returns the config structure used to specify …",null,[[["u32",15],["u16",15],["u64",15]],["virtio_blk_config",3]]],[5,"build_avail_features","","Returns the feature flags given the specified attributes.",null,[[["bool",15],["u64",15]],["u64",15]]],[0,"console","devices::virtio","",null,null],[4,"ConsoleError","devices::virtio::console","",null,null],[13,"RxDescriptorsExhausted","","There are no more available descriptors to receive into",56,null],[13,"RxDisconnected","","Input channel has been disconnected",56,null],[3,"virtio_console_config","","",null,null],[12,"cols","","",57,null],[12,"rows","","",57,null],[12,"max_nr_ports","","",57,null],[12,"emerg_wr","","",57,null],[5,"handle_input","","Checks for input from <code>in_channel_opt</code> and transfers it to …",null,[[["queue",3],["guestmemory",3],["receiver",3]],[["result",4],["consoleerror",4]]]],[5,"process_transmit_queue","","Processes the data taken from the given transmit queue …",null,[[["guestmemory",3],["write",8],["queue",3]]]],[5,"spawn_input_thread","","Starts a thread that reads rx_input and sends the input …",null,[[["event",3],["read",8],["box",3]],[["option",4],["receiver",3]]]],[5,"process_transmit_request","","Writes the available data from the reader into the given …",null,[[["reader",3],["write",8]],[["result",6],["u32",15]]]],[3,"Console","","Virtio console device.",null,null],[0,"fs","devices::virtio","",null,null],[0,"passthrough","devices::virtio::fs","",null,null],[5,"FS_IOC_GET_ENCRYPTION_POLICY_EX","devices::virtio::fs::passthrough","",null,[[],["ioctlnr",6]]],[5,"FS_IOC_FSGETXATTR","","",null,[[],["ioctlnr",6]]],[5,"FS_IOC_FSSETXATTR","","",null,[[],["ioctlnr",6]]],[5,"FS_IOC_GETFLAGS","","",null,[[],["ioctlnr",6]]],[5,"FS_IOC_SETFLAGS","","",null,[[],["ioctlnr",6]]],[5,"FS_IOC32_GETFLAGS","","",null,[[],["ioctlnr",6]]],[5,"FS_IOC32_SETFLAGS","","",null,[[],["ioctlnr",6]]],[5,"FS_IOC64_GETFLAGS","","",null,[[],["ioctlnr",6]]],[5,"FS_IOC64_SETFLAGS","","",null,[[],["ioctlnr",6]]],[5,"FS_IOC_ENABLE_VERITY","","",null,[[],["ioctlnr",6]]],[5,"FS_IOC_MEASURE_VERITY","","",null,[[],["ioctlnr",6]]],[4,"CachePolicy","","The caching policy that the file system should report to …",null,null],[13,"Never","","The client should never cache file data and all I/O …",58,null],[13,"Auto","","The client is free to choose when and how to cache file …",58,null],[13,"Always","","The client should always cache file data. This means that …",58,null],[3,"Config","","Options that configure the behavior of the file system.",null,null],[12,"entry_timeout","","How long the FUSE client should consider directory …",59,null],[12,"attr_timeout","","How long the FUSE client should consider file and …",59,null],[12,"cache_policy","","The caching policy the file system should use. See the …",59,null],[12,"writeback","","Whether the file system should enabled writeback caching. …",59,null],[12,"rewrite_security_xattrs","","Controls whether security.* xattrs (except for …",59,null],[12,"ascii_casefold","","Use case-insensitive lookups for directory entries (ASCII …",59,null],[12,"use_dax","","Use DAX for shared files.",59,null],[12,"posix_acl","","Enable support for POSIX acls.",59,null],[3,"PassthroughFs","","A file system that simply \\\"passes through\\\" all requests …",null,null],[11,"new","","",60,[[["config",3]],[["result",6],["passthroughfs",3]]]],[11,"cfg","","",60,[[],["config",3]]],[11,"keep_rds","","",60,[[],[["rawdescriptor",6],["vec",3]]]],[5,"process_fs_queue","devices::virtio::fs","",null,[[["arc",3],["u32",15],["guestmemory",3],["arc",3],["queue",3]],["result",6]]],[17,"QUEUE_SIZE","","",null,null],[17,"FS_MAX_TAG_LEN","","The maximum allowable length of the tag used to identify …",null,null],[3,"virtio_fs_config","","kernel/include/uapi/linux/virtio_fs.h",null,null],[12,"tag","","Filesystem name (UTF-8, not NUL-terminated, padded with …",61,null],[12,"num_request_queues","","Number of request queues",61,null],[4,"Error","","Errors that may occur during the creation or operation of …",null,null],[13,"CreateFs","","Failed to create the file system.",62,null],[13,"CreateWaitContext","","Creating WaitContext failed.",62,null],[13,"FuseError","","Error happened in FUSE.",62,null],[13,"GetSecurebits","","Failed to get the securebits for the worker thread.",62,null],[13,"InvalidDescriptorChain","","The <code>len</code> field of the header is too small.",62,null],[13,"NoReadableDescriptors","","A request is missing readable descriptors.",62,null],[13,"NoWritableDescriptors","","A request is missing writable descriptors.",62,null],[13,"ReadQueueEvent","","Error while reading from the virtio queue\'s Event.",62,null],[13,"SetSecurebits","","Failed to set the securebits for the worker thread.",62,null],[13,"SignalUsedQueue","","Failed to signal the virio used queue.",62,null],[13,"TagTooLong","","The tag for the Fs device was too long to fit in the …",62,null],[13,"WaitError","","Error while polling for events.",62,null],[6,"Result","","",null,null],[3,"Fs","","",null,null],[11,"new","","",63,[[["usize",15],["config",3],["tube",3],["u64",15],["str",15]],[["result",6],["fs",3]]]],[0,"gpu","devices::virtio","",null,null],[3,"EventDevice","devices::virtio::gpu","Encapsulates a virtual event device, such as a mouse or …",null,null],[3,"virtio_gpu_config","","",null,null],[12,"events_read","","",64,null],[12,"events_clear","","",64,null],[12,"num_scanouts","","",64,null],[12,"num_capsets","","",64,null],[17,"VIRTIO_GPU_F_CONTEXT_INIT","","",null,null],[17,"VIRTIO_GPU_F_CREATE_GUEST_HANDLE","","",null,null],[17,"VIRTIO_GPU_F_EDID","","",null,null],[17,"VIRTIO_GPU_F_RESOURCE_BLOB","","",null,null],[17,"VIRTIO_GPU_F_RESOURCE_SYNC","","",null,null],[17,"VIRTIO_GPU_F_RESOURCE_UUID","","",null,null],[17,"VIRTIO_GPU_F_VIRGL","","",null,null],[17,"VIRTIO_GPU_SHM_ID_HOST_VISIBLE","","",null,null],[17,"DEFAULT_DISPLAY_WIDTH","","",null,null],[17,"DEFAULT_DISPLAY_HEIGHT","","",null,null],[4,"GpuMode","","",null,null],[13,"Mode2D","","",65,null],[13,"ModeVirglRenderer","","",65,null],[13,"ModeGfxstream","","",65,null],[3,"GpuDisplayParameters","","",null,null],[12,"width","","",66,null],[12,"height","","",66,null],[3,"GpuParameters","","",null,null],[12,"displays","","",67,null],[12,"renderer_use_egl","","",67,null],[12,"renderer_use_gles","","",67,null],[12,"renderer_use_glx","","",67,null],[12,"renderer_use_surfaceless","","",67,null],[12,"gfxstream_use_guest_angle","","",67,null],[12,"gfxstream_use_syncfd","","",67,null],[12,"use_vulkan","","",67,null],[12,"udmabuf","","",67,null],[12,"mode","","",67,null],[12,"cache_path","","",67,null],[12,"cache_size","","",67,null],[17,"QUEUE_SIZES","","",null,null],[17,"FENCE_POLL_INTERVAL","","",null,null],[17,"GPU_BAR_NUM","","",null,null],[17,"GPU_BAR_OFFSET","","",null,null],[17,"GPU_BAR_SIZE","","",null,null],[3,"VirtioScanoutBlobData","","",null,null],[12,"width","","",68,null],[12,"height","","",68,null],[12,"drm_format","","",68,null],[12,"strides","","",68,null],[12,"offsets","","",68,null],[3,"FenceState","","",null,null],[8,"QueueReader","","",null,null],[10,"pop","","",69,[[["guestmemory",3]],[["descriptorchain",3],["option",4]]]],[10,"add_used","","",69,[[["u32",15],["guestmemory",3],["u16",15]]]],[10,"signal_used","","",69,[[["guestmemory",3]]]],[5,"create_fence_handler","","Create a handler that writes into the completed fence …",null,[[["arc",3],["guestmemory",3],["mutex",3]],["rutabagafencehandler",6]]],[3,"ReturnDescriptor","","",null,null],[12,"index","","",70,null],[12,"len","","",70,null],[3,"Frontend","","",null,null],[11,"display","","Returns the internal connection to the compositor and its …",71,[[],["rc",3]]],[11,"process_display","","Processes the internal <code>display</code> events and returns <code>true</code> if …",71,[[],["bool",15]]],[11,"process_resource_bridge","","Processes incoming requests on <code>resource_bridge</code>.",71,[[["tube",3]]]],[11,"process_queue","","Processes virtio messages on <code>queue</code>.",71,[[["guestmemory",3],["queuereader",8]],["bool",15]]],[11,"return_cursor","","",71,[[],[["option",4],["returndescriptor",3]]]],[11,"fence_poll","","",71,[[]]],[11,"has_pending_fences","","",71,[[],["bool",15]]],[4,"DisplayBackend","","Indicates a backend that should be tried for the gpu to …",null,null],[13,"Wayland","","Use the wayland backend with the given socket path if …",72,null],[13,"X","","Open a connection to the X server at the given display if …",72,null],[13,"Stub","","Emulate a display without actually displaying it.",72,null],[3,"Gpu","","",null,null],[11,"new","","",73,[[["vec",3],["eventdevice",3],["tube",3],["option",4],["arc",3],["event",3],["displaybackend",4],["vec",3],["btreemap",3],["u64",15],["gpuparameters",3],["bool",15],["pathbuf",3],["mutex",3],["vec",3],["string",3]],["gpu",3]]],[11,"initialize_frontend","","Initializes the internal device state so that it can …",73,[[["arc",3],["mutex",3],["rutabagafencehandler",6]],[["frontend",3],["option",4]]]],[11,"device_tube","","Returns the device tube to the main process.",73,[[],[["tube",3],["option",4]]]],[11,"set_device_tube","","Sets the device tube to the main process.",73,[[["tube",3]]]],[0,"net","devices::virtio","",null,null],[4,"NetError","devices::virtio::net","",null,null],[13,"CloneKillEvent","","Cloning kill event failed.",74,null],[13,"CreateKillEvent","","Creating kill event failed.",74,null],[13,"CreateWaitContext","","Creating WaitContext failed.",74,null],[13,"DescriptorChain","","Descriptor chain was invalid.",74,null],[13,"ReadCtrlData","","Error reading data from control queue.",74,null],[13,"ReadCtrlHeader","","Error reading header from control queue.",74,null],[13,"RxDescriptorsExhausted","","There are no more available descriptors to receive into.",74,null],[13,"TapEnable","","Enabling tap interface failed.",74,null],[13,"TapGetMtu","","Couldn\'t get the MTU from the tap device.",74,null],[13,"TapOpen","","Open tap device failed.",74,null],[13,"TapSetIp","","Setting tap IP failed.",74,null],[13,"TapSetMacAddress","","Setting tap mac address failed.",74,null],[13,"TapSetNetmask","","Setting tap netmask failed.",74,null],[13,"TapSetVnetHdrSize","","Setting vnet header size failed.",74,null],[13,"TapValidate","","Validating tap interface failed.",74,null],[13,"WaitContextDisableTap","","Removing read event from the tap fd events failed.",74,null],[13,"WaitContextEnableTap","","Adding read event to the tap fd events failed.",74,null],[13,"WaitError","","Error while waiting for events.",74,null],[13,"WriteAck","","Failed writing an ack in response to a control message.",74,null],[13,"WriteBuffer","","Writing to a buffer in the guest failed.",74,null],[3,"virtio_net_ctrl_hdr","","",null,null],[12,"class","","",75,null],[12,"cmd","","",75,null],[5,"virtio_features_to_tap_offload","","Converts virtio-net feature bits to tap\'s offload bits.",null,[[["u64",15]],["c_uint",6]]],[3,"VirtioNetConfig","","",null,null],[5,"process_rx","","",null,[[["guestmemory",3],["queue",3]],[["result",4],["neterror",4]]]],[5,"process_tx","","",null,[[["guestmemory",3],["queue",3]]]],[5,"process_ctrl","","",null,[[["u16",15],["u64",15],["guestmemory",3],["queue",3]],[["result",4],["neterror",4]]]],[4,"Token","","",null,null],[13,"RxTap","","",76,null],[13,"RxQueue","","",76,null],[13,"TxQueue","","",76,null],[13,"CtrlQueue","","",76,null],[13,"InterruptResample","","",76,null],[13,"Kill","","",76,null],[5,"build_config","","",null,[[["u16",15]],["virtionetconfig",3]]],[3,"Net","","",null,null],[11,"new","","Create a new virtio network device with the given IP …",77,[[["ipv4addr",3],["u16",15],["u64",15],["macaddress",3]],[["neterror",4],["result",4],["net",3]]]],[11,"from","","Creates a new virtio network device from a tap device …",77,[[["u16",15],["u64",15]],[["neterror",4],["result",4],["net",3]]]],[5,"validate_and_configure_tap","","",null,[[["u16",15]],[["result",4],["neterror",4]]]],[0,"resource_bridge","devices::virtio","This module defines the protocol between <code>virtio-wayland</code> …",null,null],[4,"ResourceRequest","devices::virtio::resource_bridge","",null,null],[13,"GetBuffer","","",78,null],[12,"id","devices::virtio::resource_bridge::ResourceRequest","",79,null],[13,"GetFence","devices::virtio::resource_bridge","",78,null],[12,"seqno","devices::virtio::resource_bridge::ResourceRequest","",80,null],[3,"PlaneInfo","devices::virtio::resource_bridge","",null,null],[12,"offset","","",81,null],[12,"stride","","",81,null],[3,"BufferInfo","","",null,null],[12,"file","","",82,null],[12,"planes","","",82,null],[12,"modifier","","",82,null],[17,"RESOURE_PLANE_NUM","","",null,null],[4,"ResourceInfo","","",null,null],[13,"Buffer","","",83,null],[13,"Fence","","",83,null],[12,"file","devices::virtio::resource_bridge::ResourceInfo","",84,null],[4,"ResourceResponse","devices::virtio::resource_bridge","",null,null],[13,"Resource","","",85,null],[13,"Invalid","","",85,null],[4,"ResourceBridgeError","","",null,null],[13,"InvalidResource","","",86,null],[13,"RecieveFailure","","",86,null],[13,"SendFailure","","",86,null],[5,"get_resource_info","","",null,[[["tube",3],["resourcerequest",4]],[["resourceinfo",4],["resourcebridgeerror",4],["result",4]]]],[0,"snd","devices::virtio","",null,null],[0,"common","devices::virtio::snd","",null,null],[4,"Error","devices::virtio::snd::common","",null,null],[13,"UnsupportedFrameRate","","",87,null],[13,"UnsupportedVirtioFrameRate","","",87,null],[13,"UnsupportedVirtioPcmFormat","","",87,null],[5,"from_virtio_frame_rate","","Converts VIRTIO_SND_PCM_RATE_* enum to frame rate",null,[[["u8",15]],[["u32",15],["error",4],["result",4]]]],[5,"from_virtio_sample_format","","Converts VIRTIO_SND_PCM_FMT_* enum to SampleFormat",null,[[["u8",15]],[["error",4],["result",4],["sampleformat",4]]]],[5,"from_sample_format","","Converts SampleFormat to VIRTIO_SND_PCM_FMT_*",null,[[["sampleformat",4]],["u8",15]]],[5,"virtio_frame_rate","","Converts frame rate to VIRTIO_SND_PCM_RATE_* enum",null,[[["u32",15]],[["error",4],["result",4],["u8",15]]]],[5,"get_virtio_snd_r_pcm_cmd_name","","Get the name of VIRTIO_SND_R_PCM_* enums",null,[[["u32",15]],["str",15]]],[5,"get_virtio_direction_name","","",null,[[["u8",15]],["str",15]]],[0,"constants","devices::virtio::snd","",null,null],[17,"VIRTIO_SND_R_JACK_INFO","devices::virtio::snd::constants","",null,null],[17,"VIRTIO_SND_R_JACK_REMAP","","",null,null],[17,"VIRTIO_SND_R_PCM_INFO","","",null,null],[17,"VIRTIO_SND_R_PCM_SET_PARAMS","","",null,null],[17,"VIRTIO_SND_R_PCM_PREPARE","","",null,null],[17,"VIRTIO_SND_R_PCM_RELEASE","","",null,null],[17,"VIRTIO_SND_R_PCM_START","","",null,null],[17,"VIRTIO_SND_R_PCM_STOP","","",null,null],[17,"VIRTIO_SND_R_CHMAP_INFO","","",null,null],[17,"VIRTIO_SND_EVT_JACK_CONNECTED","","",null,null],[17,"VIRTIO_SND_EVT_JACK_DISCONNECTED","","",null,null],[17,"VIRTIO_SND_EVT_PCM_PERIOD_ELAPSED","","",null,null],[17,"VIRTIO_SND_EVT_PCM_XRUN","","",null,null],[17,"VIRTIO_SND_S_OK","","",null,null],[17,"VIRTIO_SND_S_BAD_MSG","","",null,null],[17,"VIRTIO_SND_S_NOT_SUPP","","",null,null],[17,"VIRTIO_SND_S_IO_ERR","","",null,null],[17,"VIRTIO_SND_D_OUTPUT","","",null,null],[17,"VIRTIO_SND_D_INPUT","","",null,null],[17,"VIRTIO_SND_JACK_F_REMAP","","",null,null],[17,"VIRTIO_SND_PCM_F_SHMEM_HOST","","",null,null],[17,"VIRTIO_SND_PCM_F_SHMEM_GUEST","","",null,null],[17,"VIRTIO_SND_PCM_F_MSG_POLLING","","",null,null],[17,"VIRTIO_SND_PCM_F_EVT_SHMEM_PERIODS","","",null,null],[17,"VIRTIO_SND_PCM_F_EVT_XRUNS","","",null,null],[17,"VIRTIO_SND_PCM_FMT_IMA_ADPCM","","",null,null],[17,"VIRTIO_SND_PCM_FMT_MU_LAW","","",null,null],[17,"VIRTIO_SND_PCM_FMT_A_LAW","","",null,null],[17,"VIRTIO_SND_PCM_FMT_S8","","",null,null],[17,"VIRTIO_SND_PCM_FMT_U8","","",null,null],[17,"VIRTIO_SND_PCM_FMT_S16","","",null,null],[17,"VIRTIO_SND_PCM_FMT_U16","","",null,null],[17,"VIRTIO_SND_PCM_FMT_S18_3","","",null,null],[17,"VIRTIO_SND_PCM_FMT_U18_3","","",null,null],[17,"VIRTIO_SND_PCM_FMT_S20_3","","",null,null],[17,"VIRTIO_SND_PCM_FMT_U20_3","","",null,null],[17,"VIRTIO_SND_PCM_FMT_S24_3","","",null,null],[17,"VIRTIO_SND_PCM_FMT_U24_3","","",null,null],[17,"VIRTIO_SND_PCM_FMT_S20","","",null,null],[17,"VIRTIO_SND_PCM_FMT_U20","","",null,null],[17,"VIRTIO_SND_PCM_FMT_S24","","",null,null],[17,"VIRTIO_SND_PCM_FMT_U24","","",null,null],[17,"VIRTIO_SND_PCM_FMT_S32","","",null,null],[17,"VIRTIO_SND_PCM_FMT_U32","","",null,null],[17,"VIRTIO_SND_PCM_FMT_FLOAT","","",null,null],[17,"VIRTIO_SND_PCM_FMT_FLOAT64","","",null,null],[17,"VIRTIO_SND_PCM_FMT_DSD_U8","","",null,null],[17,"VIRTIO_SND_PCM_FMT_DSD_U16","","",null,null],[17,"VIRTIO_SND_PCM_FMT_DSD_U32","","",null,null],[17,"VIRTIO_SND_PCM_FMT_IEC958_SUBFRAME","","",null,null],[17,"VIRTIO_SND_PCM_RATE_5512","","",null,null],[17,"VIRTIO_SND_PCM_RATE_8000","","",null,null],[17,"VIRTIO_SND_PCM_RATE_11025","","",null,null],[17,"VIRTIO_SND_PCM_RATE_16000","","",null,null],[17,"VIRTIO_SND_PCM_RATE_22050","","",null,null],[17,"VIRTIO_SND_PCM_RATE_32000","","",null,null],[17,"VIRTIO_SND_PCM_RATE_44100","","",null,null],[17,"VIRTIO_SND_PCM_RATE_48000","","",null,null],[17,"VIRTIO_SND_PCM_RATE_64000","","",null,null],[17,"VIRTIO_SND_PCM_RATE_88200","","",null,null],[17,"VIRTIO_SND_PCM_RATE_96000","","",null,null],[17,"VIRTIO_SND_PCM_RATE_176400","","",null,null],[17,"VIRTIO_SND_PCM_RATE_192000","","",null,null],[17,"VIRTIO_SND_PCM_RATE_384000","","",null,null],[17,"VIRTIO_SND_CHMAP_NONE","","",null,null],[17,"VIRTIO_SND_CHMAP_NA","","",null,null],[17,"VIRTIO_SND_CHMAP_MONO","","",null,null],[17,"VIRTIO_SND_CHMAP_FL","","",null,null],[17,"VIRTIO_SND_CHMAP_FR","","",null,null],[17,"VIRTIO_SND_CHMAP_RL","","",null,null],[17,"VIRTIO_SND_CHMAP_RR","","",null,null],[17,"VIRTIO_SND_CHMAP_FC","","",null,null],[17,"VIRTIO_SND_CHMAP_LFE","","",null,null],[17,"VIRTIO_SND_CHMAP_SL","","",null,null],[17,"VIRTIO_SND_CHMAP_SR","","",null,null],[17,"VIRTIO_SND_CHMAP_RC","","",null,null],[17,"VIRTIO_SND_CHMAP_FLC","","",null,null],[17,"VIRTIO_SND_CHMAP_FRC","","",null,null],[17,"VIRTIO_SND_CHMAP_RLC","","",null,null],[17,"VIRTIO_SND_CHMAP_RRC","","",null,null],[17,"VIRTIO_SND_CHMAP_FLW","","",null,null],[17,"VIRTIO_SND_CHMAP_FRW","","",null,null],[17,"VIRTIO_SND_CHMAP_FLH","","",null,null],[17,"VIRTIO_SND_CHMAP_FCH","","",null,null],[17,"VIRTIO_SND_CHMAP_FRH","","",null,null],[17,"VIRTIO_SND_CHMAP_TC","","",null,null],[17,"VIRTIO_SND_CHMAP_TFL","","",null,null],[17,"VIRTIO_SND_CHMAP_TFR","","",null,null],[17,"VIRTIO_SND_CHMAP_TFC","","",null,null],[17,"VIRTIO_SND_CHMAP_TRL","","",null,null],[17,"VIRTIO_SND_CHMAP_TRR","","",null,null],[17,"VIRTIO_SND_CHMAP_TRC","","",null,null],[17,"VIRTIO_SND_CHMAP_TFLC","","",null,null],[17,"VIRTIO_SND_CHMAP_TFRC","","",null,null],[17,"VIRTIO_SND_CHMAP_TSL","","",null,null],[17,"VIRTIO_SND_CHMAP_TSR","","",null,null],[17,"VIRTIO_SND_CHMAP_LLFE","","",null,null],[17,"VIRTIO_SND_CHMAP_RLFE","","",null,null],[17,"VIRTIO_SND_CHMAP_BC","","",null,null],[17,"VIRTIO_SND_CHMAP_BLC","","",null,null],[17,"VIRTIO_SND_CHMAP_BRC","","",null,null],[17,"VIRTIO_SND_CHMAP_MAX_SIZE","","",null,null],[0,"layout","devices::virtio::snd","",null,null],[3,"virtio_snd_config","devices::virtio::snd::layout","",null,null],[12,"jacks","","",88,null],[12,"streams","","",88,null],[12,"chmaps","","",88,null],[3,"virtio_snd_hdr","","",null,null],[12,"code","","",89,null],[3,"virtio_snd_jack_hdr","","",null,null],[12,"hdr","","",90,null],[12,"jack_id","","",90,null],[3,"virtio_snd_event","","",null,null],[12,"hdr","","",91,null],[12,"data","","",91,null],[3,"virtio_snd_query_info","","",null,null],[12,"hdr","","",92,null],[12,"start_id","","",92,null],[12,"count","","",92,null],[12,"size","","",92,null],[3,"virtio_snd_info","","",null,null],[12,"hda_fn_nid","","",93,null],[3,"virtio_snd_pcm_info","","",null,null],[12,"hdr","","",94,null],[12,"features","","",94,null],[12,"formats","","",94,null],[12,"rates","","",94,null],[12,"direction","","",94,null],[12,"channels_min","","",94,null],[12,"channels_max","","",94,null],[12,"padding","","",94,null],[3,"virtio_snd_pcm_hdr","","",null,null],[12,"hdr","","",95,null],[12,"stream_id","","",95,null],[3,"virtio_snd_pcm_set_params","","",null,null],[12,"hdr","","",96,null],[12,"buffer_bytes","","",96,null],[12,"period_bytes","","",96,null],[12,"features","","",96,null],[12,"channels","","",96,null],[12,"format","","",96,null],[12,"rate","","",96,null],[12,"padding","","",96,null],[3,"virtio_snd_pcm_xfer","","",null,null],[12,"stream_id","","",97,null],[3,"virtio_snd_pcm_status","","",null,null],[12,"status","","",98,null],[12,"latency_bytes","","",98,null],[3,"virtio_snd_jack_info","","",null,null],[12,"hdr","","",99,null],[12,"features","","",99,null],[12,"hda_reg_defconf","","",99,null],[12,"hda_reg_caps","","",99,null],[12,"connected","","",99,null],[12,"padding","","",99,null],[3,"virtio_snd_jack_remap","","",null,null],[12,"hdr","","",100,null],[12,"association","","",100,null],[12,"sequence","","",100,null],[3,"virtio_snd_chmap_info","","",null,null],[12,"hdr","","",101,null],[12,"direction","","",101,null],[12,"channels","","",101,null],[12,"positions","","",101,null],[0,"vios_backend","devices::virtio::snd","",null,null],[0,"streams","devices::virtio::snd::vios_backend","",null,null],[4,"StreamMsg","devices::virtio::snd::vios_backend::streams","Messages that the worker can send to the stream (thread).",null,null],[13,"SetParams","","",102,null],[13,"Prepare","","",102,null],[13,"Start","","",102,null],[13,"Stop","","",102,null],[13,"Release","","",102,null],[13,"Buffer","","",102,null],[13,"Break","","",102,null],[3,"Stream","","",null,null],[11,"try_new","","Start a new stream thread and return its handler.",103,[[["u32",15],["bool",15],["arc",3],["guestmemory",3],["interrupt",3],["viosclient",3],["arc",3],["arc",3],["mutex",3]],[["streamproxy",3],["result",6]]]],[3,"StreamProxy","","Basically a proxy to the thread handling a particular …",null,null],[11,"msg_sender","","Access the underlying sender to clone it or send messages",104,[[],["sender",3]]],[11,"send_msg","","Send a message to the stream thread on the other side of …",104,[[["sender",3],["streammsg",4]],["result",6]]],[11,"send","","Convenience function to send a message to this stream\'s …",104,[[["streammsg",4]],["result",6]]],[5,"try_set_real_time_priority","","Attempts to set the current thread\'s priority to a value …",null,[[]]],[5,"vios_error_to_status_code","","Gets the appropriate virtio-snd error to return to the …",null,[[["vioserror",4]],["u32",15]]],[5,"reply_control_op_status","","Encapsulates sending the virtio_snd_hdr struct back to …",null,[[["u32",15],["arc",3],["descriptorchain",3],["interrupt",3],["guestmemory",3]],["result",6]]],[5,"reply_pcm_buffer_status","","Encapsulates sending the virtio_snd_pcm_status struct …",null,[[["u32",15],["arc",3],["descriptorchain",3],["interrupt",3],["guestmemory",3]],["result",6]]],[3,"VioSShmStreamSource","devices::virtio::snd::vios_backend","Adapter that provides the ShmStreamSource trait around …",null,null],[3,"VioSndShmStream","","Adapter around a VioS stream that implements the …",null,null],[4,"Error","","",null,null],[13,"BaseMmapError","","",105,null],[13,"BufferStatusSenderLost","","",105,null],[13,"CommandFailed","","",105,null],[13,"DupError","","",105,null],[13,"EventCreateError","","",105,null],[13,"EventDupError","","",105,null],[13,"EventWriteError","","",105,null],[13,"FileSizeError","","",105,null],[13,"GuestMmapError","","",105,null],[13,"InvalidJackId","","",105,null],[13,"InvalidStreamId","","",105,null],[13,"IOBufferError","","",105,null],[13,"NoStreamsAvailable","","",105,null],[13,"OutOfSpace","","",105,null],[13,"PlatformNotSupported","","",105,null],[13,"ProtocolError","","",105,null],[13,"ServerConnectionError","","",105,null],[13,"ServerError","","",105,null],[13,"ServerIOError","","",105,null],[13,"ServerMmapError","","",105,null],[13,"UnixSeqpacketDupError","","",105,null],[13,"UnsupportedFrameRate","","",105,null],[13,"VolatileMemoryError","","",105,null],[13,"WaitContextCreateError","","",105,null],[13,"WaitError","","",105,null],[13,"WrongDirection","","",105,null],[4,"ProtocolErrorKind","","",null,null],[13,"UnexpectedConfigSize","","",106,null],[13,"UnexpectedNumberOfFileDescriptors","","",106,null],[13,"VersionMismatch","","",106,null],[13,"UnexpectedMessageSize","","",106,null],[3,"VioSClient","","The client for the VioS backend",null,null],[3,"VioSStreamParams","","Groups the parameters used to configure a stream prior to …",null,null],[12,"buffer_bytes","","",107,null],[12,"period_bytes","","",107,null],[12,"features","","",107,null],[12,"channels","","",107,null],[12,"format","","",107,null],[12,"rate","","",107,null],[4,"SoundError","","",null,null],[13,"BadDriverMsg","","",108,null],[13,"ClientEventNotifier","","",108,null],[13,"ClientNew","","",108,null],[13,"CreateEvent","","",108,null],[13,"CreateReader","","",108,null],[13,"CreateThread","","",108,null],[13,"CreateWriter","","",108,null],[13,"Descriptor","","",108,null],[13,"ImpossibleState","","",108,null],[13,"QueueEvt","","",108,null],[13,"QueueIO","","",108,null],[13,"StreamThreadRecv","","",108,null],[13,"StreamThreadSend","","",108,null],[13,"WaitCtx","","",108,null],[6,"Result","","",null,null],[3,"Sound","","",null,null],[5,"new_sound","","Creates a new virtio sound device connected to a VioS …",null,[[["path",3],["asref",8],["u64",15]],[["result",6],["sound",3]]]],[0,"vhost","devices::virtio","Implements vhost-based virtio devices.",null,null],[0,"user","devices::virtio::vhost","",null,null],[0,"device","devices::virtio::vhost::user","",null,null],[5,"run_block_device","devices::virtio::vhost::user::device","Starts a vhost-user block device. Returns an error if the …",null,[[["args",3],["str",15]],["result",6]]],[5,"run_console_device","","Starts a vhost-user console device. Returns an error if …",null,[[["args",3],["str",15]],["result",6]]],[5,"run_fs_device","","Starts a vhost-user fs device. Returns an error if the …",null,[[["args",3],["str",15]],["result",6]]],[5,"run_gpu_device","","",null,[[["args",3],["str",15]],["result",6]]],[5,"run_net_device","","Starts a vhost-user net device. Returns an error if the …",null,[[["args",3],["str",15]],["result",6]]],[5,"run_vsock_device","","Returns an error if the given <code>args</code> is invalid or the …",null,[[["args",3],["str",15]],["result",6]]],[5,"run_wl_device","","Starts a vhost-user wayland device. Returns an error if …",null,[[["args",3],["str",15]],["result",6]]],[0,"proxy","devices::virtio::vhost::user","",null,null],[4,"Error","devices::virtio::vhost::user::proxy","",null,null],[13,"AcceptConnection","","Failed to accept connection on a socket.",109,null],[13,"CreateListener","","Failed to create a listener.",109,null],[13,"CreateWaitContext","","Failed to create a wait context object.",109,null],[13,"RxDescriptorsExhausted","","There are no more available descriptors to receive into.",109,null],[13,"WaitContextDisableVhostVmmSocket","","Removing read event from the VhostVmmSocket fd events …",109,null],[13,"WaitContextEnableVhostVmmSocket","","Adding read event to the VhostVmmSocket fd events failed.",109,null],[13,"WaitError","","Failed to wait for events.",109,null],[13,"WriteBuffer","","Writing to a buffer in the guest failed.",109,null],[13,"WriterCreation","","Failed to create a Writer.",109,null],[6,"Result","","",null,null],[3,"VirtioVhostUser","","",null,null],[11,"new","","",110,[[["path",3]],[["result",6],["virtiovhostuser",3]]]],[0,"vmm","devices::virtio::vhost::user","",null,null],[3,"Block","devices::virtio::vhost::user::vmm","",null,null],[3,"Console","","",null,null],[3,"Fs","","",null,null],[3,"Gpu","","",null,null],[3,"VhostUserHandler","","",null,null],[12,"avail_features","","",111,null],[3,"Mac80211Hwsim","","",null,null],[3,"Net","","",null,null],[3,"Vsock","","",null,null],[3,"Wl","","",null,null],[4,"Error","","",null,null],[13,"CopyConfig","","Failed to copy config to a buffer.",112,null],[13,"CreateEvent","","Failed to create <code>base::Event</code>.",112,null],[13,"GetConfig","","Failed to get config.",112,null],[13,"GetFeatures","","Failed to get features.",112,null],[13,"GetHostAddress","","Failed to get host address.",112,null],[13,"GetProtocolFeatures","","Failed to get protocol features.",112,null],[13,"GetQueueNum","","Failed to get number of queues.",112,null],[13,"GetVringBase","","Failed to get vring base offset.",112,null],[13,"InvalidConfigOffset","","Invalid config offset is given.",112,null],[12,"data_len","devices::virtio::vhost::user::vmm::Error","",113,null],[12,"offset","","",113,null],[12,"config_len","","",113,null],[13,"MsixConfigUnavailable","devices::virtio::vhost::user::vmm","MSI-X config is unavailable.",112,null],[13,"MsixIrqfdUnavailable","","MSI-X irqfd is unavailable.",112,null],[13,"ResetOwner","","Failed to reset owner.",112,null],[13,"SetConfig","","Failed to set config.",112,null],[13,"SetDeviceRequestChannel","","Failed to set device request channel.",112,null],[13,"SetFeatures","","Failed to set features.",112,null],[13,"SetMemTable","","Failed to set memory map regions.",112,null],[13,"SetOwner","","Failed to set owner.",112,null],[13,"SetProtocolFeatures","","Failed to set protocol features.",112,null],[13,"SetVringAddr","","Failed to set vring address.",112,null],[13,"SetVringBase","","Failed to set vring base offset.",112,null],[13,"SetVringCall","","Failed to set eventfd to signal used vring buffers.",112,null],[13,"SetVringEnable","","Failed to enable or disable vring.",112,null],[13,"SetVringKick","","Failed to set eventfd for adding buffers to vring.",112,null],[13,"SetVringNum","","Failed to set the size of the queue.",112,null],[13,"SocketConnect","","Failed to connect socket.",112,null],[13,"SocketConnectOnMasterCreate","","Failed to create Master from a UDS path.",112,null],[13,"TagTooLong","","The tag for the Fs device was too long to fit in the …",112,null],[12,"len","devices::virtio::vhost::user::vmm::Error","",114,null],[12,"max","","",114,null],[6,"Result","devices::virtio::vhost::user::vmm","",null,null],[4,"VhostDevRequest","devices::virtio::vhost","",null,null],[13,"MsixChanged","","Mask or unmask all the MSI entries for a Virtio Vhost …",115,null],[13,"MsixEntryChanged","","Mask or unmask a MSI entry for a Virtio Vhost device.",115,null],[4,"VhostDevResponse","","",null,null],[13,"Ok","","",116,null],[13,"Err","","",116,null],[3,"Net","","",null,null],[3,"Vsock","","",null,null],[4,"Error","","",null,null],[13,"CloneKillEvent","","Cloning kill event failed.",117,null],[13,"CreateKillEvent","","Creating kill event failed.",117,null],[13,"CreateTube","","Creating tube failed.",117,null],[13,"CreateWaitContext","","Creating wait context failed.",117,null],[13,"TapEnable","","Enabling tap interface failed.",117,null],[13,"TapOpen","","Open tap device failed.",117,null],[13,"TapSetIp","","Setting tap IP failed.",117,null],[13,"TapSetMacAddress","","Setting tap mac address failed.",117,null],[13,"TapSetNetmask","","Setting tap netmask failed.",117,null],[13,"TapSetOffload","","Setting tap interface offload flags failed.",117,null],[13,"TapSetVnetHdrSize","","Setting vnet header size failed.",117,null],[13,"VhostGetFeatures","","Get features failed.",117,null],[13,"VhostIrqCreate","","Failed to create vhost event.",117,null],[13,"VhostIrqRead","","Failed to read vhost event.",117,null],[13,"VhostNetSetBackend","","Net set backend failed.",117,null],[13,"VhostOpen","","Failed to open vhost device.",117,null],[13,"VhostSetFeatures","","Set features failed.",117,null],[13,"VhostSetMemTable","","Set mem table failed.",117,null],[13,"VhostSetOwner","","Set owner failed.",117,null],[13,"VhostSetVringAddr","","Set vring addr failed.",117,null],[13,"VhostSetVringBase","","Set vring base failed.",117,null],[13,"VhostSetVringCall","","Set vring call failed.",117,null],[13,"VhostSetVringKick","","Set vring kick failed.",117,null],[13,"VhostSetVringNum","","Set vring num failed.",117,null],[13,"VhostVsockSetCid","","Failed to set CID for guest.",117,null],[13,"VhostVsockStart","","Failed to start vhost-vsock driver.",117,null],[13,"WaitError","","Error while waiting for events.",117,null],[6,"Result","","",null,null],[4,"BalloonError","devices::virtio","",null,null],[13,"CreatingMessageReceiver","","Failed to create async message receiver.",118,null],[13,"ReceivingCommand","","Failed to receive command message.",118,null],[13,"WritingConfigEvent","","Failed to write config event.",118,null],[3,"Balloon","","Virtio device for memory balloon inflation/deflation.",null,null],[4,"DescriptorError","","",null,null],[13,"DescriptorChainOverflow","","",119,null],[13,"GuestMemoryError","","",119,null],[13,"InvalidChain","","",119,null],[13,"IoError","","",119,null],[13,"SplitOutOfBounds","","",119,null],[13,"VolatileMemoryError","","",119,null],[4,"Error","","",null,null],[13,"DescriptorChainOverflow","","",119,null],[13,"GuestMemoryError","","",119,null],[13,"InvalidChain","","",119,null],[13,"IoError","","",119,null],[13,"SplitOutOfBounds","","",119,null],[13,"VolatileMemoryError","","",119,null],[3,"Reader","","Provides high-level interface over the sequence of memory …",null,null],[3,"ReaderIterator","","An iterator over <code>DataInit</code> objects on readable descriptors …",null,null],[3,"Writer","","Provides high-level interface over the sequence of memory …",null,null],[4,"DescriptorType","","",null,null],[13,"Readable","","",120,null],[13,"Writable","","",120,null],[5,"create_descriptor_chain","","Test utility function to create a descriptor chain in …",null,[[["u32",15],["guestaddress",3],["guestmemory",3],["vec",3]],[["result",4],["error",4],["descriptorchain",3]]]],[4,"InputError","","",null,null],[13,"Descriptor","","",121,null],[13,"EvdevAbsInfoError","","",121,null],[13,"EvdevEventTypesError","","",121,null],[13,"EvdevGrabError","","",121,null],[13,"EvdevIdError","","",121,null],[13,"EvdevNameError","","",121,null],[13,"EvdevPropertiesError","","",121,null],[13,"EvdevSerialError","","",121,null],[13,"EventsReadError","","Failed to read events from the source",121,null],[13,"EventsWriteError","","Failed to write events to the source",121,null],[13,"GuestError","","",121,null],[13,"ReadQueue","","",121,null],[13,"WriteQueue","","",121,null],[3,"virtio_input_device_ids","","",null,null],[3,"virtio_input_absinfo","","",null,null],[3,"virtio_input_bitmap","","",null,null],[3,"VirtioInputConfig","","",null,null],[3,"Input","","Virtio input device",null,null],[5,"new_evdev","","Creates a new virtio input device from an event device …",null,[[["u64",15]],[["input",3],["inputerror",4],["result",4]]]],[5,"new_single_touch","","Creates a new virtio touch device which supports single …",null,[[["u32",15],["u64",15]],[["inputerror",4],["result",4],["input",3]]]],[5,"new_multi_touch","","Creates a new virtio touch device which supports multi …",null,[[["u32",15],["u64",15]],[["inputerror",4],["result",4],["input",3]]]],[5,"new_trackpad","","Creates a new virtio trackpad device which supports …",null,[[["u32",15],["u64",15]],[["inputerror",4],["result",4],["input",3]]]],[5,"new_mouse","","Creates a new virtio mouse which supports primary, …",null,[[["u32",15],["u64",15]],[["inputerror",4],["result",4],["input",3]]]],[5,"new_keyboard","","Creates a new virtio keyboard, which supports the same …",null,[[["u32",15],["u64",15]],[["inputerror",4],["result",4],["input",3]]]],[5,"new_switches","","Creates a new virtio device for switches.",null,[[["u32",15],["u64",15]],[["inputerror",4],["result",4],["input",3]]]],[8,"SignalableInterrupt","","",null,null],[10,"signal","","Writes to the irqfd to VMM to deliver virtual interrupt …",122,[[["u32",15],["u16",15]]]],[11,"signal_used_queue","","Notify the driver that buffers have been placed in the …",122,[[["u16",15]]]],[10,"signal_config_changed","","Notify the driver that the device configuration has …",122,[[]]],[10,"get_resample_evt","","Get the event to signal resampling is needed if it exists.",122,[[],[["option",4],["event",3]]]],[10,"do_interrupt_resample","","Reads the status and writes to the interrupt event. …",122,[[]]],[3,"Interrupt","","",null,null],[4,"IommuError","","",null,null],[13,"CreateReader","","",123,null],[13,"CreateWaitContext","","",123,null],[13,"CreateWriter","","",123,null],[13,"GetHostAddress","","",123,null],[13,"GuestMemoryRead","","",123,null],[13,"GuestMemoryWrite","","",123,null],[13,"ReadQueueEvent","","",123,null],[13,"UnexpectedDescriptor","","",123,null],[13,"VfioContainerError","","",123,null],[13,"WaitError","","",123,null],[13,"WriteBufferTooSmall","","",123,null],[3,"Iommu","","Virtio device for IOMMU memory management.",null,null],[4,"P9Error","","Errors that occur during operation of a virtio 9P device.",null,null],[13,"CreateServer","","Failed to create a 9p server.",124,null],[13,"CreateWaitContext","","Creating WaitContext failed.",124,null],[13,"Internal","","An internal I/O error occurred.",124,null],[13,"InvalidDescriptorChain","","A DescriptorChain contains invalid data.",124,null],[13,"NoReadableDescriptors","","A request is missing readable descriptors.",124,null],[13,"NoWritableDescriptors","","A request is missing writable descriptors.",124,null],[13,"ReadQueueEvent","","Error while reading from the virtio queue\'s Event.",124,null],[13,"SignalUsedQueue","","Failed to signal the virio used queue.",124,null],[13,"TagTooLong","","The tag for the 9P device was too large to fit in the …",124,null],[13,"WaitError","","Error while polling for events.",124,null],[6,"P9Result","","",null,null],[3,"P9","","Virtio device for sharing specific directories on the …",null,null],[3,"Pmem","","",null,null],[3,"DescIter","","An iterator over a single descriptor chain.  Not to be …",null,null],[3,"DescriptorChain","","A virtio descriptor chain.",null,null],[12,"index","","Index into the descriptor table",125,null],[12,"addr","","Guest physical address of device specific data",125,null],[12,"len","","Length of device specific data",125,null],[12,"flags","","Includes next, write, and indirect bits",125,null],[12,"next","","Index into the descriptor table of the next descriptor if …",125,null],[3,"AvailIter","","Consuming iterator over all available descriptor chain …",null,null],[3,"Queue","","A virtio queue\'s parameters.",null,null],[12,"max_size","","The maximal size in elements offered by the device",126,null],[12,"size","","The queue size in elements the driver selected",126,null],[12,"ready","","Inidcates if the queue is finished with configuration",126,null],[12,"vector","","MSI-X vector for the queue. Don\'t care for INTx",126,null],[12,"desc_table","","Guest physical address of the descriptor table",126,null],[12,"avail_ring","","Guest physical address of the available ring",126,null],[12,"used_ring","","Guest physical address of the used ring",126,null],[12,"next_avail","","",126,null],[12,"next_used","","",126,null],[4,"RngError","","",null,null],[13,"AccessingRandomDev","","Can\'t access /dev/urandom",127,null],[3,"Rng","","Virtio device for exposing entropy to the guest OS …",null,null],[3,"Tpm","","Virtio vTPM device.",null,null],[4,"VideoDeviceType","","",null,null],[13,"Decoder","","",128,null],[13,"Encoder","","",128,null],[3,"VideoDevice","","",null,null],[8,"VirtioDevice","","Trait for virtio devices to be driven by a virtio …",null,null],[11,"debug_label","","Returns a label suitable for debug output.",129,[[],["string",3]]],[10,"keep_rds","","A vector of device-specific file descriptors that must be …",129,[[],[["rawdescriptor",6],["vec",3]]]],[10,"device_type","","The virtio device type.",129,[[],["u32",15]]],[10,"queue_max_sizes","","The maximum size of each queue that this device supports.",129,[[]]],[11,"features","","The set of feature bits that this device supports in …",129,[[],["u64",15]]],[11,"ack_features","","Acknowledges that this set of features should be enabled.",129,[[["u64",15]]]],[11,"read_config","","Reads this device configuration space at <code>offset</code>.",129,[[["u64",15]]]],[11,"write_config","","Writes to this device configuration space at <code>offset</code>.",129,[[["u64",15]]]],[10,"activate","","Activates this device for real usage.",129,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","Optionally deactivates this device. If the reset method is…",129,[[],["bool",15]]],[11,"get_device_bars","","Returns any additional BAR configuration required by the …",129,[[["pciaddress",3]],[["pcibarconfiguration",3],["vec",3]]]],[11,"get_device_caps","","Returns any additional capabiltiies required by the …",129,[[],[["box",3],["vec",3]]]],[11,"on_device_sandboxed","","Invoked when the device is sandboxed.",129,[[]]],[11,"control_notify","","",129,[[["msixstatus",4]]]],[11,"generate_acpi","","",129,[[["option",4],["vec",3],["sdt",3]],[["option",4],["vec",3]]]],[11,"read_bar","","Reads from a BAR region mapped in to the device.",129,[[["usize",15],["u64",15]]]],[11,"write_bar","","Writes to a BAR region mapped in to the device.",129,[[["usize",15],["u64",15]]]],[4,"PciCapabilityType","","",null,null],[13,"CommonConfig","","",130,null],[13,"NotifyConfig","","",130,null],[13,"IsrConfig","","",130,null],[13,"DeviceConfig","","",130,null],[13,"PciConfig","","",130,null],[13,"SharedMemoryConfig","","",130,null],[3,"VirtioPciNotifyCap","","",null,null],[3,"VirtioPciShmCap","","",null,null],[4,"PciVirtioSubclass","","Subclasses for virtio.",null,null],[13,"NonTransitionalBase","","",131,null],[3,"VirtioPciDevice","","Implements the PCI transport for virtio devices.",null,null],[17,"VIRTIO_F_VERSION_1","","",null,null],[17,"NOTIFY_REG_OFFSET","","Offset from the base MMIO address of a virtio device used …",null,null],[5,"type_to_str","","Returns a string representation of the given virtio …",null,[[["u32",15]],[["str",15],["option",4]]]],[5,"copy_config","","Copy virtio device configuration data from a subslice of …",null,[[["u64",15]]]],[5,"base_features","","Returns the set of reserved base features common to all …",null,[[["protectiontype",4]],["u64",15]]],[4,"BusError","devices","",null,null],[13,"Overlap","","The insertion failed because the new device overlapped …",132,null],[3,"Bus","","A device container for routing reads and writes over some …",null,null],[3,"BusAccessInfo","","Information about how a device was accessed.",null,null],[12,"offset","","Offset from base address that the device was accessed at.",133,null],[12,"address","","Absolute address of the device\'s access in its address …",133,null],[12,"id","","ID of the entity requesting a device access, usually the …",133,null],[8,"BusDevice","","Trait for devices that respond to reads or writes in an …",null,null],[10,"debug_label","","Returns a label suitable for debug output.",134,[[],["string",3]]],[11,"read","","Reads at <code>offset</code> from this device",134,[[["busaccessinfo",3]]]],[11,"write","","Writes at <code>offset</code> into this device",134,[[["busaccessinfo",3]]]],[11,"config_register_write","","Sets a register in the configuration space. Only used by …",134,[[["usize",15],["u64",15]],["configwriteresult",3]]],[11,"config_register_read","","Gets a register from the configuration space. Only used …",134,[[["usize",15]],["u32",15]]],[11,"on_sandboxed","","Invoked when the device is sandboxed.",134,[[]]],[8,"BusDeviceObj","","Trait for generic device abstraction, that is, all …",null,null],[11,"as_pci_device","","",135,[[],[["pcidevice",8],["option",4]]]],[11,"as_pci_device_mut","","",135,[[],[["option",4],["pcidevice",8]]]],[11,"into_pci_device","","",135,[[["box",3]],[["option",4],["box",3]]]],[11,"as_platform_device","","",135,[[],[["option",4],["vfioplatformdevice",3]]]],[11,"as_platform_device_mut","","",135,[[],[["option",4],["vfioplatformdevice",3]]]],[11,"into_platform_device","","",135,[[["box",3]],[["box",3],["option",4]]]],[8,"BusDeviceSync","","",null,null],[10,"read","","",136,[[["busaccessinfo",3]]]],[10,"write","","",136,[[["busaccessinfo",3]]]],[3,"BusRange","","Holds a base and length representing the address space …",null,null],[12,"base","","",137,null],[12,"len","","",137,null],[8,"BusResumeDevice","","",null,null],[11,"resume_imminent","","notify the devices which are invoked before the VM …",138,[[]]],[4,"HostHotPlugKey","","The key to identify hotplug device from host view. like …",null,null],[13,"Vfio","","",139,null],[12,"host_addr","devices::HostHotPlugKey","",140,null],[8,"HotPlugBus","devices","Trait for devices that notify hotplug event into guest",null,null],[10,"hot_plug","","Notify hotplug in event into guest",141,[[["pciaddress",3]]]],[10,"hot_unplug","","Notify hotplug out event into guest",141,[[["pciaddress",3]]]],[10,"add_hotplug_device","","Add hotplug device into this bus",141,[[["pciaddress",3],["hosthotplugkey",4]]]],[10,"get_hotplug_device","","get guest pci address from the specified host_key",141,[[["hosthotplugkey",4]],[["pciaddress",3],["option",4]]]],[3,"Cmos","","A CMOS/RTC device commonly seen on x86 I/O port 0x70/0x71.",null,null],[3,"I8042Device","","A i8042 PS/2 controller that emulates just enough to …",null,null],[4,"Ac97Backend","","AC97 audio device emulation. Provides the PCI interface …",null,null],[13,"NULL","","",142,null],[13,"VIOS","","",142,null],[3,"Ac97Dev","","",null,null],[3,"Ac97Parameters","","Holds the parameters for a AC97 device",null,null],[12,"backend","","",143,null],[12,"capture","","",143,null],[12,"vios_server_path","","",143,null],[3,"PciAddress","","PCI Device Address, AKA Bus:Device.Function",null,null],[12,"bus","","",144,null],[12,"dev","","",144,null],[12,"func","","",144,null],[3,"PciBridge","","",null,null],[3,"PciConfigIo","","Emulates PCI configuration access mechanism #1 (I/O ports …",null,null],[3,"PciConfigMmio","","Emulates PCI memory-mapped configuration access mechanism.",null,null],[8,"PciDevice","","",null,null],[10,"debug_label","","Returns a label suitable for debug output.",145,[[],["string",3]]],[10,"allocate_address","","Allocate and return an unique bus, device and function …",145,[[["systemallocator",3]],[["pciaddress",3],["error",4],["result",4]]]],[10,"keep_rds","","A vector of device-specific file descriptors that must be …",145,[[],[["rawdescriptor",6],["vec",3]]]],[11,"assign_irq","","Assign a legacy PCI IRQ to this device. The device may …",145,[[["u32",15],["event",3],["option",4]],["option",4]]],[11,"allocate_io_bars","","Allocates the needed IO BAR space using the <code>allocate</code> …",145,[[["systemallocator",3]],[["vec",3],["result",4],["error",4]]]],[11,"allocate_device_bars","","Allocates the needed device BAR space. Returns a Vec of …",145,[[["systemallocator",3]],[["vec",3],["result",4],["error",4]]]],[10,"get_bar_configuration","","Returns the configuration of a base address register, if …",145,[[["usize",15]],[["option",4],["pcibarconfiguration",3]]]],[11,"register_device_capabilities","","Register any capabilties specified by the device.",145,[[],[["error",4],["result",4]]]],[11,"ioevents","","Gets a list of ioevents that should be registered with …",145,[[],["vec",3]]],[10,"read_config_register","","Reads from a PCI configuration register.",145,[[["usize",15]],["u32",15]]],[10,"write_config_register","","Writes to a PCI configuration register.",145,[[["usize",15],["u64",15]]]],[10,"read_bar","","Reads from a BAR region mapped in to the device.",145,[[["u64",15]]]],[10,"write_bar","","Writes to a BAR region mapped in to the device.",145,[[["u64",15]]]],[11,"on_device_sandboxed","","Invoked when the device is sandboxed.",145,[[]]],[11,"generate_acpi","","",145,[[["vec",3],["sdt",3]],[["option",4],["vec",3]]]],[4,"PciDeviceError","","",null,null],[13,"CapabilitiesSetup","","Setup of the device capabilities failed.",146,null],[13,"CreateViosClientFailed","","Create VioS client failed.",146,null],[13,"IoAllocationFailed","","Allocating space for an IO BAR failed.",146,null],[13,"IoRegistrationFailed","","Registering an IO BAR failed.",146,null],[13,"MsixAllocatorOutOfSpace","","MSIX Allocator encounters out-of-space",146,null],[13,"MsixAllocatorOverflow","","MSIX Allocator encounters overflow",146,null],[12,"base","devices::PciDeviceError","",147,null],[12,"size","","",147,null],[13,"MsixAllocatorSizeZero","devices","MSIX Allocator encounters size of zero",146,null],[13,"PciAddressMissing","","PCI Address is not allocated.",146,null],[13,"PciAllocationFailed","","PCI Address allocation failure.",146,null],[4,"PciInterruptPin","","PCI has four interrupt pins A->D.",null,null],[13,"IntA","","",148,null],[13,"IntB","","",148,null],[13,"IntC","","",148,null],[13,"IntD","","",148,null],[3,"PciRoot","","Emulates the PCI Root bridge.",null,null],[3,"PcieRootPort","","",null,null],[3,"VfioPciDevice","","Implements the Vfio Pci device, then a pci device is …",null,null],[3,"Pit","","",null,null],[4,"PitError","","",null,null],[13,"CloneEvent","","Error while cloning event for worker thread.",149,null],[13,"CreateEvent","","Error while creating event.",149,null],[13,"CreateWaitContext","","Creating WaitContext failed.",149,null],[13,"SpawnThread","","Error while trying to create worker thread.",149,null],[13,"TimerCreateError","","Error while trying to create timer.",149,null],[13,"WaitError","","Error while waiting for events.",149,null],[3,"VfioPlatformDevice","","",null,null],[4,"ProxyError","","Errors for proxy devices.",null,null],[13,"ForkingJail","","",150,null],[13,"Tube","","",150,null],[3,"ProxyDevice","","Wraps an inner <code>BusDevice</code> that is run inside a child …",null,null],[3,"Serial","","Emulates serial COM ports commonly seen on x86 I/O ports …",null,null],[3,"VirtioPciDevice","","Implements the PCI transport for virtio devices.",null,null],[4,"ProtectionType","","Whether the VM should be run in protected mode or not.",null,null],[13,"Unprotected","","The VM should be run in the unprotected mode, where the …",151,null],[13,"Protected","","The VM should be run in protected mode, so the host …",151,null],[14,"static_register","","Macro helps to build a static register.",null,null],[14,"register","","",null,null],[14,"register_array","","",null,null],[14,"usb_debug","","",null,null],[14,"impl_try_from_le32_for_enumn","","Implements TryFrom<data_model::Le32> for an enum that …",null,null],[14,"impl_from_for_interconvertible_structs","","Implements <code>From</code> between two structs whose each field …",null,null],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"to_string","","",133,[[],["string",3]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"into_any","","",133,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",133,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",133,[[],["any",8]]],[11,"as_any_mut","","",133,[[],["any",8]]],[11,"into_any_arc","","",133,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"into_any","","",139,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",139,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",139,[[],["any",8]]],[11,"as_any_mut","","",139,[[],["any",8]]],[11,"into_any_arc","","",139,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_string","","",132,[[],["string",3]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"into_any","","",132,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",132,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",132,[[],["any",8]]],[11,"as_any_mut","","",132,[[],["any",8]]],[11,"into_any_arc","","",132,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"into_any","","",137,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",137,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",137,[[],["any",8]]],[11,"as_any_mut","","",137,[[],["any",8]]],[11,"into_any_arc","","",137,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"into_any","","",152,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",152,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",152,[[],["any",8]]],[11,"as_any_mut","","",152,[[],["any",8]]],[11,"into_any_arc","","",152,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"into_any","","",153,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",153,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",153,[[],["any",8]]],[11,"as_any_mut","","",153,[[],["any",8]]],[11,"into_any_arc","","",153,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::direct_io","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::direct_irq","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"as_raw_descriptors","","",2,[[],[["vec",3],["global",3],["i32",15]]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"into_any","","",154,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",154,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",154,[[],["any",8]]],[11,"as_any_mut","","",154,[[],["any",8]]],[11,"into_any_arc","","",154,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::irqchip","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"into_any","","",155,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",155,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",155,[[],["any",8]]],[11,"as_any_mut","","",155,[[],["any",8]]],[11,"into_any_arc","","",155,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"into_any","","",156,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",156,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",156,[[],["any",8]]],[11,"as_any_mut","","",156,[[],["any",8]]],[11,"into_any_arc","","",156,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"into_any","","",157,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",157,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",157,[[],["any",8]]],[11,"as_any_mut","","",157,[[],["any",8]]],[11,"into_any_arc","","",157,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"into_any","","",158,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",158,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",158,[[],["any",8]]],[11,"as_any_mut","","",158,[[],["any",8]]],[11,"into_any_arc","","",158,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"into_any","","",142,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",142,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",142,[[],["any",8]]],[11,"as_any_mut","","",142,[[],["any",8]]],[11,"into_any_arc","","",142,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"into_any","","",143,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",143,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",143,[[],["any",8]]],[11,"as_any_mut","","",143,[[],["any",8]]],[11,"into_any_arc","","",143,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"into_any","","",159,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",159,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",159,[[],["any",8]]],[11,"as_any_mut","","",159,[[],["any",8]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_string","","",146,[[],["string",3]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"into_any","","",146,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",146,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",146,[[],["any",8]]],[11,"as_any_mut","","",146,[[],["any",8]]],[11,"into_any_arc","","",146,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"to_string","","",144,[[],["string",3]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"into_any","","",144,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",144,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",144,[[],["any",8]]],[11,"as_any_mut","","",144,[[],["any",8]]],[11,"into_any_arc","","",144,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"into_any","","",160,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",160,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",160,[[],["any",8]]],[11,"as_any_mut","","",160,[[],["any",8]]],[11,"into_any_arc","","",160,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"into_any","","",161,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",161,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",161,[[],["any",8]]],[11,"as_any_mut","","",161,[[],["any",8]]],[11,"into_any_arc","","",161,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"into_any","","",162,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",162,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",162,[[],["any",8]]],[11,"as_any_mut","","",162,[[],["any",8]]],[11,"into_any_arc","","",162,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"into_any","","",163,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",163,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",163,[[],["any",8]]],[11,"as_any_mut","","",163,[[],["any",8]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"into_any","","",164,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",164,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",164,[[],["any",8]]],[11,"as_any_mut","","",164,[[],["any",8]]],[11,"into_any_arc","","",164,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"into_any","","",165,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",165,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",165,[[],["any",8]]],[11,"as_any_mut","","",165,[[],["any",8]]],[11,"into_any_arc","","",165,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"into_any","","",148,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",148,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",148,[[],["any",8]]],[11,"as_any_mut","","",148,[[],["any",8]]],[11,"into_any_arc","","",148,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_string","","",149,[[],["string",3]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"into_any","","",149,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",149,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",149,[[],["any",8]]],[11,"as_any_mut","","",149,[[],["any",8]]],[11,"into_any_arc","","",149,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"into_any","","",166,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",166,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",166,[[],["any",8]]],[11,"as_any_mut","","",166,[[],["any",8]]],[11,"into_any_arc","","",166,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::pl030","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"into_any","","",167,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",167,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",167,[[],["any",8]]],[11,"as_any_mut","","",167,[[],["any",8]]],[11,"into_any_arc","","",167,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_string","","",150,[[],["string",3]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"into_any","","",150,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",150,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",150,[[],["any",8]]],[11,"as_any_mut","","",150,[[],["any",8]]],[11,"into_any_arc","","",150,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"into_any","","",168,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",168,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",168,[[],["any",8]]],[11,"as_any_mut","","",168,[[],["any",8]]],[11,"into_any_arc","","",168,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::acpi","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::bat","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"from","devices","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"into_any","","",169,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",169,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",169,[[],["any",8]]],[11,"as_any_mut","","",169,[[],["any",8]]],[11,"from","devices::serial_device","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::usb::host_backend::error","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::usb::host_backend::host_backend_device_provider","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_any","","",17,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"into_any","","",170,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",170,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",170,[[],["any",8]]],[11,"as_any_mut","","",170,[[],["any",8]]],[11,"into_any_arc","","",170,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::usb::host_backend::host_device","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::usb::host_backend::usb_endpoint","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any","","",22,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::usb::xhci::scatter_gather_buffer","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_any","","",23,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_any","","",24,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::usb::xhci::usb_hub","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any","","",29,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_any","","",30,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::usb::xhci::xhci_backend_device","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_any","","",31,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::usb::xhci::xhci_controller","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_any","","",34,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_any","","",35,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"from","devices::usb::xhci::xhci_transfer","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_any","","",36,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_any","","",37,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_any","","",38,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_any","","",40,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any_arc","","",40,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any","","",41,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_any","","",42,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any_arc","","",42,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::vfio","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_any","","",43,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"as_raw_descriptors","","",44,[[],[["vec",3],["global",3],["i32",15]]]],[11,"into_any","","",44,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any_arc","","",44,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"into_any","","",171,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",171,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",171,[[],["any",8]]],[11,"as_any_mut","","",171,[[],["any",8]]],[11,"into_any_arc","","",171,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any","","",46,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_any","","",47,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_any","","",48,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_string","","",118,[[],["string",3]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"into_any","","",118,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",118,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",118,[[],["any",8]]],[11,"as_any_mut","","",118,[[],["any",8]]],[11,"into_any_arc","","",118,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"into_any","","",172,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",172,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",172,[[],["any",8]]],[11,"as_any_mut","","",172,[[],["any",8]]],[11,"into_any_arc","","",172,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_string","","",119,[[],["string",3]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"into_any","","",119,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",119,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",119,[[],["any",8]]],[11,"as_any_mut","","",119,[[],["any",8]]],[11,"into_any_arc","","",119,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"into_any","","",173,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",173,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",173,[[],["any",8]]],[11,"as_any_mut","","",173,[[],["any",8]]],[11,"into_any_arc","","",173,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"into_iter","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"into_any","","",174,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",174,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",174,[[],["any",8]]],[11,"as_any_mut","","",174,[[],["any",8]]],[11,"into_any_arc","","",174,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"into_any","","",175,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",175,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",175,[[],["any",8]]],[11,"as_any_mut","","",175,[[],["any",8]]],[11,"into_any_arc","","",175,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"into_any","","",120,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",120,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",120,[[],["any",8]]],[11,"as_any_mut","","",120,[[],["any",8]]],[11,"into_any_arc","","",120,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_string","","",121,[[],["string",3]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"into_any","","",121,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",121,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",121,[[],["any",8]]],[11,"as_any_mut","","",121,[[],["any",8]]],[11,"into_any_arc","","",121,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"into_any","","",176,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",176,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",176,[[],["any",8]]],[11,"as_any_mut","","",176,[[],["any",8]]],[11,"into_any_arc","","",176,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"into_any","","",177,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",177,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",177,[[],["any",8]]],[11,"as_any_mut","","",177,[[],["any",8]]],[11,"into_any_arc","","",177,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"into_any","","",178,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",178,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",178,[[],["any",8]]],[11,"as_any_mut","","",178,[[],["any",8]]],[11,"into_any_arc","","",178,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"into_any","","",179,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",179,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",179,[[],["any",8]]],[11,"as_any_mut","","",179,[[],["any",8]]],[11,"into_any_arc","","",179,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"into_any","","",180,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",180,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",180,[[],["any",8]]],[11,"as_any_mut","","",180,[[],["any",8]]],[11,"into_any_arc","","",180,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"into_any","","",181,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",181,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",181,[[],["any",8]]],[11,"as_any_mut","","",181,[[],["any",8]]],[11,"into_any_arc","","",181,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_string","","",123,[[],["string",3]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"into_any","","",123,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",123,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",123,[[],["any",8]]],[11,"as_any_mut","","",123,[[],["any",8]]],[11,"into_any_arc","","",123,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"into_any","","",182,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",182,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",182,[[],["any",8]]],[11,"as_any_mut","","",182,[[],["any",8]]],[11,"into_any_arc","","",182,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_string","","",124,[[],["string",3]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"into_any","","",124,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",124,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",124,[[],["any",8]]],[11,"as_any_mut","","",124,[[],["any",8]]],[11,"into_any_arc","","",124,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"into_any","","",183,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",183,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",183,[[],["any",8]]],[11,"as_any_mut","","",183,[[],["any",8]]],[11,"into_any_arc","","",183,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"into_any","","",184,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",184,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",184,[[],["any",8]]],[11,"as_any_mut","","",184,[[],["any",8]]],[11,"into_any_arc","","",184,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"into_iter","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"into_any","","",185,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",185,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",185,[[],["any",8]]],[11,"as_any_mut","","",185,[[],["any",8]]],[11,"into_any_arc","","",185,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"into_any","","",125,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",125,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",125,[[],["any",8]]],[11,"as_any_mut","","",125,[[],["any",8]]],[11,"into_any_arc","","",125,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"into_iter","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"into_any","","",186,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",186,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",186,[[],["any",8]]],[11,"as_any_mut","","",186,[[],["any",8]]],[11,"into_any_arc","","",186,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"into_any","","",126,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",126,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",126,[[],["any",8]]],[11,"as_any_mut","","",126,[[],["any",8]]],[11,"into_any_arc","","",126,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_string","","",127,[[],["string",3]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"into_any","","",127,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",127,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",127,[[],["any",8]]],[11,"as_any_mut","","",127,[[],["any",8]]],[11,"into_any_arc","","",127,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"into_any","","",187,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",187,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",187,[[],["any",8]]],[11,"as_any_mut","","",187,[[],["any",8]]],[11,"into_any_arc","","",187,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"into_any","","",188,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",188,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",188,[[],["any",8]]],[11,"as_any_mut","","",188,[[],["any",8]]],[11,"into_any_arc","","",188,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"into_any","","",128,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",128,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",128,[[],["any",8]]],[11,"as_any_mut","","",128,[[],["any",8]]],[11,"into_any_arc","","",128,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"into_any","","",189,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",189,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",189,[[],["any",8]]],[11,"as_any_mut","","",189,[[],["any",8]]],[11,"into_any_arc","","",189,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"into_any","","",130,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",130,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",130,[[],["any",8]]],[11,"as_any_mut","","",130,[[],["any",8]]],[11,"into_any_arc","","",130,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"into_any","","",190,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",190,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",190,[[],["any",8]]],[11,"as_any_mut","","",190,[[],["any",8]]],[11,"into_any_arc","","",190,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"into_any","","",191,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",191,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",191,[[],["any",8]]],[11,"as_any_mut","","",191,[[],["any",8]]],[11,"into_any_arc","","",191,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"into_any","","",131,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",131,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",131,[[],["any",8]]],[11,"as_any_mut","","",131,[[],["any",8]]],[11,"into_any_arc","","",131,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"into_any","","",192,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",192,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",192,[[],["any",8]]],[11,"as_any_mut","","",192,[[],["any",8]]],[11,"from","devices::virtio::wl","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_any","","",49,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_string","","",193,[[],["string",3]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"into_any","","",193,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",193,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",193,[[],["any",8]]],[11,"as_any_mut","","",193,[[],["any",8]]],[11,"into_any_arc","","",193,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_any","","",50,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::block::asynchronous","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any","","",51,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_any","","",52,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_any","","",53,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"from","devices::virtio::block::block","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any","","",54,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"from","devices::virtio::block","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"into_any","","",194,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",194,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",194,[[],["any",8]]],[11,"as_any_mut","","",194,[[],["any",8]]],[11,"into_any_arc","","",194,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"into_any","","",195,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",195,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",195,[[],["any",8]]],[11,"as_any_mut","","",195,[[],["any",8]]],[11,"into_any_arc","","",195,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any","","",55,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::console","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any","","",56,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_any","","",57,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"into_any","","",196,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",196,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",196,[[],["any",8]]],[11,"as_any_mut","","",196,[[],["any",8]]],[11,"from","devices::virtio::fs::passthrough","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_any","","",58,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_any","","",59,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any_arc","","",59,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_any","","",60,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any_arc","","",60,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::fs","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_any","","",61,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any_arc","","",61,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_any","","",62,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"into_any_arc","","",62,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_any","","",63,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any_arc","","",63,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::gpu","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any","","",64,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"as_raw_descriptors","","",197,[[],[["vec",3],["global",3],["i32",15]]]],[11,"into_any","","",197,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",197,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",197,[[],["any",8]]],[11,"as_any_mut","","",197,[[],["any",8]]],[11,"into_any_arc","","",197,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_any","","",65,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any_arc","","",65,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_any","","",66,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"into_any_arc","","",66,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_any","","",67,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",67,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"into_any_arc","","",67,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_any","","",68,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"into_any","","",198,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",198,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",198,[[],["any",8]]],[11,"as_any_mut","","",198,[[],["any",8]]],[11,"into_any_arc","","",198,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_any","","",70,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",70,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",70,[[],["any",8]]],[11,"as_any_mut","","",70,[[],["any",8]]],[11,"into_any_arc","","",70,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_any","","",71,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_any","","",72,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any_arc","","",72,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_any","","",73,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",73,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",73,[[],["any",8]]],[11,"as_any_mut","","",73,[[],["any",8]]],[11,"into_any_arc","","",73,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::net","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_any","","",74,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any_arc","","",74,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_any","","",75,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any_arc","","",75,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"into_any","","",199,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",199,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",199,[[],["any",8]]],[11,"as_any_mut","","",199,[[],["any",8]]],[11,"into_any_arc","","",199,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_any","","",76,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any_arc","","",76,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_any","","",77,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any_arc","","",77,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::resource_bridge","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_any","","",78,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",78,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",78,[[],["any",8]]],[11,"as_any_mut","","",78,[[],["any",8]]],[11,"into_any_arc","","",78,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_any","","",81,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",81,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"into_any_arc","","",81,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_any","","",82,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",82,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any_arc","","",82,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_any","","",83,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",83,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",83,[[],["any",8]]],[11,"as_any_mut","","",83,[[],["any",8]]],[11,"into_any_arc","","",83,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_any","","",85,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",85,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",85,[[],["any",8]]],[11,"as_any_mut","","",85,[[],["any",8]]],[11,"into_any_arc","","",85,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_any","","",86,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"into_any_arc","","",86,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::snd::common","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_any","","",87,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"into_any_arc","","",87,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::snd::layout","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_any","","",88,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"into_any_arc","","",88,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_any","","",89,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"into_any_arc","","",89,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_any","","",90,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",90,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",90,[[],["any",8]]],[11,"as_any_mut","","",90,[[],["any",8]]],[11,"into_any_arc","","",90,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_any","","",91,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",91,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",91,[[],["any",8]]],[11,"as_any_mut","","",91,[[],["any",8]]],[11,"into_any_arc","","",91,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_any","","",92,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",92,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",92,[[],["any",8]]],[11,"as_any_mut","","",92,[[],["any",8]]],[11,"into_any_arc","","",92,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"into_any","","",93,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",93,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",93,[[],["any",8]]],[11,"as_any_mut","","",93,[[],["any",8]]],[11,"into_any_arc","","",93,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_any","","",94,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",94,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",94,[[],["any",8]]],[11,"as_any_mut","","",94,[[],["any",8]]],[11,"into_any_arc","","",94,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_any","","",95,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"into_any_arc","","",95,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"into_any","","",96,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"into_any_arc","","",96,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_any","","",97,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",97,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",97,[[],["any",8]]],[11,"as_any_mut","","",97,[[],["any",8]]],[11,"into_any_arc","","",97,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_any","","",98,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",98,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",98,[[],["any",8]]],[11,"as_any_mut","","",98,[[],["any",8]]],[11,"into_any_arc","","",98,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"into_any","","",99,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",99,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",99,[[],["any",8]]],[11,"as_any_mut","","",99,[[],["any",8]]],[11,"into_any_arc","","",99,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_any","","",100,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"into_any_arc","","",100,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"into_any","","",101,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"into_any_arc","","",101,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::snd::vios_backend","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"into_any","","",200,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",200,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",200,[[],["any",8]]],[11,"as_any_mut","","",200,[[],["any",8]]],[11,"into_any_arc","","",200,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"into_any","","",201,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",201,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",201,[[],["any",8]]],[11,"as_any_mut","","",201,[[],["any",8]]],[11,"into_any_arc","","",201,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"into_any","","",105,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",105,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",105,[[],["any",8]]],[11,"as_any_mut","","",105,[[],["any",8]]],[11,"into_any_arc","","",105,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_string","","",106,[[],["string",3]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"into_any","","",106,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",106,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",106,[[],["any",8]]],[11,"as_any_mut","","",106,[[],["any",8]]],[11,"into_any_arc","","",106,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"into_any","","",202,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",202,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",202,[[],["any",8]]],[11,"as_any_mut","","",202,[[],["any",8]]],[11,"into_any_arc","","",202,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"into_any","","",107,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",107,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",107,[[],["any",8]]],[11,"as_any_mut","","",107,[[],["any",8]]],[11,"into_any_arc","","",107,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::snd::vios_backend::streams","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_any","","",102,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",102,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",102,[[],["any",8]]],[11,"as_any_mut","","",102,[[],["any",8]]],[11,"into_any_arc","","",102,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"into_any","","",103,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",103,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",103,[[],["any",8]]],[11,"as_any_mut","","",103,[[],["any",8]]],[11,"into_any_arc","","",103,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"into_any","","",104,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",104,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",104,[[],["any",8]]],[11,"as_any_mut","","",104,[[],["any",8]]],[11,"into_any_arc","","",104,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::snd::vios_backend","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"into_any","","",108,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",108,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",108,[[],["any",8]]],[11,"as_any_mut","","",108,[[],["any",8]]],[11,"into_any_arc","","",108,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"into_any","","",203,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",203,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",203,[[],["any",8]]],[11,"as_any_mut","","",203,[[],["any",8]]],[11,"into_any_arc","","",203,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::vhost","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"into_any","","",115,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",115,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",115,[[],["any",8]]],[11,"as_any_mut","","",115,[[],["any",8]]],[11,"into_any_arc","","",115,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"into_any","","",116,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",116,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",116,[[],["any",8]]],[11,"as_any_mut","","",116,[[],["any",8]]],[11,"into_any_arc","","",116,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"into_any","","",204,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",204,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",204,[[],["any",8]]],[11,"as_any_mut","","",204,[[],["any",8]]],[11,"from","devices::virtio::vhost::user::proxy","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_string","","",109,[[],["string",3]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"into_any","","",109,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",109,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",109,[[],["any",8]]],[11,"as_any_mut","","",109,[[],["any",8]]],[11,"into_any_arc","","",109,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"into_any","","",110,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",110,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",110,[[],["any",8]]],[11,"as_any_mut","","",110,[[],["any",8]]],[11,"into_any_arc","","",110,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::vhost::user::vmm","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"into_any","","",205,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",205,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",205,[[],["any",8]]],[11,"as_any_mut","","",205,[[],["any",8]]],[11,"into_any_arc","","",205,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"into_any","","",206,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",206,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",206,[[],["any",8]]],[11,"as_any_mut","","",206,[[],["any",8]]],[11,"into_any_arc","","",206,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"into_any","","",207,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",207,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",207,[[],["any",8]]],[11,"as_any_mut","","",207,[[],["any",8]]],[11,"into_any_arc","","",207,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"into_any","","",208,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",208,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",208,[[],["any",8]]],[11,"as_any_mut","","",208,[[],["any",8]]],[11,"into_any_arc","","",208,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"into_any","","",111,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",111,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",111,[[],["any",8]]],[11,"as_any_mut","","",111,[[],["any",8]]],[11,"into_any_arc","","",111,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"into_any","","",209,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",209,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",209,[[],["any",8]]],[11,"as_any_mut","","",209,[[],["any",8]]],[11,"into_any_arc","","",209,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"into_any","","",210,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",210,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",210,[[],["any",8]]],[11,"as_any_mut","","",210,[[],["any",8]]],[11,"into_any_arc","","",210,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"into_any","","",211,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",211,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",211,[[],["any",8]]],[11,"as_any_mut","","",211,[[],["any",8]]],[11,"into_any_arc","","",211,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"into_any","","",212,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",212,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",212,[[],["any",8]]],[11,"as_any_mut","","",212,[[],["any",8]]],[11,"into_any_arc","","",212,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"into_any","","",112,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",112,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",112,[[],["any",8]]],[11,"as_any_mut","","",112,[[],["any",8]]],[11,"into_any_arc","","",112,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices::virtio::vhost","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"into_any","","",213,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",213,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",213,[[],["any",8]]],[11,"as_any_mut","","",213,[[],["any",8]]],[11,"into_any_arc","","",213,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_string","","",117,[[],["string",3]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"into_any","","",117,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",117,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",117,[[],["any",8]]],[11,"as_any_mut","","",117,[[],["any",8]]],[11,"into_any_arc","","",117,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","devices","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"into_any","","",151,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",151,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",151,[[],["any",8]]],[11,"as_any_mut","","",151,[[],["any",8]]],[11,"into_any_arc","","",151,[[["arc",3]],[["any",8],["arc",3]]]],[11,"as_raw_descriptor","devices::virtio::gpu","",197,[[],["i32",15]]],[11,"debug_label","devices","",153,[[],["string",3]]],[11,"write","","",153,[[["busaccessinfo",3]]]],[11,"read","","",153,[[["busaccessinfo",3]]]],[11,"debug_label","devices::direct_io","",0,[[],["string",3]]],[11,"read","","Reads at <code>offset</code> from this device",0,[[["busaccessinfo",3]]]],[11,"write","","Writes at <code>offset</code> into this device",0,[[["busaccessinfo",3]]]],[11,"debug_label","devices","",154,[[],["string",3]]],[11,"read","","",154,[[["busaccessinfo",3]]]],[11,"write","","",154,[[["busaccessinfo",3]]]],[11,"debug_label","devices::irqchip","",157,[[],["string",3]]],[11,"write","","",157,[[["busaccessinfo",3]]]],[11,"read","","",157,[[["busaccessinfo",3]]]],[11,"debug_label","","",158,[[],["string",3]]],[11,"read","","",158,[[["busaccessinfo",3]]]],[11,"write","","",158,[[["busaccessinfo",3]]]],[11,"debug_label","devices","",161,[[],["string",3]]],[11,"read","","",161,[[["busaccessinfo",3]]]],[11,"write","","",161,[[["busaccessinfo",3]]]],[11,"debug_label","","",162,[[],["string",3]]],[11,"read","","",162,[[["busaccessinfo",3]]]],[11,"write","","",162,[[["busaccessinfo",3]]]],[11,"debug_label","","",166,[[],["string",3]]],[11,"write","","",166,[[["busaccessinfo",3]]]],[11,"read","","",166,[[["busaccessinfo",3]]]],[11,"debug_label","devices::pl030","",7,[[],["string",3]]],[11,"write","","",7,[[["busaccessinfo",3]]]],[11,"read","","",7,[[["busaccessinfo",3]]]],[11,"debug_label","devices","",167,[[],["string",3]]],[11,"read","","",167,[[["busaccessinfo",3]]]],[11,"write","","",167,[[["busaccessinfo",3]]]],[11,"debug_label","","",168,[[],["string",3]]],[11,"config_register_write","","",168,[[["usize",15],["u64",15]],["configwriteresult",3]]],[11,"config_register_read","","",168,[[["usize",15]],["u32",15]]],[11,"read","","",168,[[["busaccessinfo",3]]]],[11,"write","","",168,[[["busaccessinfo",3]]]],[11,"debug_label","devices::acpi","",8,[[],["string",3]]],[11,"read","","",8,[[["busaccessinfo",3]]]],[11,"write","","",8,[[["busaccessinfo",3]]]],[11,"debug_label","devices::bat","",10,[[],["string",3]]],[11,"read","","",10,[[["busaccessinfo",3]]]],[11,"write","","",10,[[["busaccessinfo",3]]]],[11,"debug_label","devices","",169,[[],["string",3]]],[11,"write","","",169,[[["busaccessinfo",3]]]],[11,"read","","",169,[[["busaccessinfo",3]]]],[11,"read","devices::direct_io","Reads at <code>offset</code> from this device",0,[[["busaccessinfo",3]]]],[11,"write","","Writes at <code>offset</code> into this device",0,[[["busaccessinfo",3]]]],[11,"resume_imminent","devices::acpi","",8,[[]]],[11,"hot_plug","devices","",164,[[["pciaddress",3]]]],[11,"hot_unplug","","",164,[[["pciaddress",3]]]],[11,"add_hotplug_device","","",164,[[["pciaddress",3],["hosthotplugkey",4]]]],[11,"get_hotplug_device","","",164,[[["hosthotplugkey",4]],[["pciaddress",3],["option",4]]]],[11,"as_platform_device","","",167,[[],[["option",4],["vfioplatformdevice",3]]]],[11,"as_platform_device_mut","","",167,[[],[["option",4],["vfioplatformdevice",3]]]],[11,"into_platform_device","","",167,[[["box",3]],[["box",3],["option",4]]]],[11,"try_box_clone","devices::irqchip","",155,[[],[["box",3],["result",6]]]],[11,"as_irq_chip","","",155,[[],["irqchip",8]]],[11,"as_irq_chip_mut","","",155,[[],["irqchip",8]]],[11,"get_pic_state","","Get the current state of the PIC",155,[[["picselect",4]],[["picstate",3],["result",6]]]],[11,"set_pic_state","","Set the current state of the PIC",155,[[["picstate",3],["picselect",4]],["result",6]]],[11,"get_ioapic_state","","Get the current state of the IOAPIC",155,[[],[["result",6],["ioapicstate",3]]]],[11,"set_ioapic_state","","Set the current state of the IOAPIC",155,[[["ioapicstate",3]],["result",6]]],[11,"get_lapic_state","","Get the current state of the specified VCPU\'s local APIC",155,[[["usize",15]],[["result",6],["lapicstate",3]]]],[11,"set_lapic_state","","Set the current state of the specified VCPU\'s local APIC",155,[[["usize",15],["lapicstate",3]],["result",6]]],[11,"get_pit","","Retrieves the state of the PIT. Gets the pit state via …",155,[[],[["result",6],["pitstate",3]]]],[11,"set_pit","","Sets the state of the PIT. Sets the pit state via the KVM …",155,[[["pitstate",3]],["result",6]]],[11,"pit_uses_speaker_port","","Returns true if the PIT uses port 0x61 for the PC …",155,[[],["bool",15]]],[11,"try_box_clone","","",156,[[],[["box",3],["result",6]]]],[11,"as_irq_chip","","",156,[[],["irqchip",8]]],[11,"as_irq_chip_mut","","",156,[[],["irqchip",8]]],[11,"get_pic_state","","Get the current state of the PIC",156,[[["picselect",4]],[["picstate",3],["result",6]]]],[11,"set_pic_state","","Set the current state of the PIC",156,[[["picstate",3],["picselect",4]],["result",6]]],[11,"get_ioapic_state","","Get the current state of the IOAPIC",156,[[],[["result",6],["ioapicstate",3]]]],[11,"set_ioapic_state","","Set the current state of the IOAPIC",156,[[["ioapicstate",3]],["result",6]]],[11,"get_lapic_state","","Get the current state of the specified VCPU\'s local APIC",156,[[["usize",15]],[["result",6],["lapicstate",3]]]],[11,"set_lapic_state","","Set the current state of the specified VCPU\'s local APIC",156,[[["usize",15],["lapicstate",3]],["result",6]]],[11,"get_pit","","Retrieves the state of the PIT. Gets the pit state via …",156,[[],[["result",6],["pitstate",3]]]],[11,"set_pit","","Sets the state of the PIT. Sets the pit state via the KVM …",156,[[["pitstate",3]],["result",6]]],[11,"pit_uses_speaker_port","","Returns true if the PIT uses port 0x61 for the PC …",156,[[],["bool",15]]],[11,"add_vcpu","","Add a vcpu to the irq chip.",156,[[["usize",15],["vcpu",8]],["result",6]]],[11,"register_irq_event","","Register an event that can trigger an interrupt for a …",156,[[["u32",15],["option",4],["event",3]],[["result",6],["option",4]]]],[11,"unregister_irq_event","","Unregister an event for a particular GSI.",156,[[["u32",15],["event",3]],["result",6]]],[11,"route_irq","","Route an IRQ line to an interrupt controller, or to a …",156,[[["irqroute",3]],["result",6]]],[11,"set_irq_routes","","Replace all irq routes with the supplied routes",156,[[],["result",6]]],[11,"irq_event_tokens","","Return a vector of all registered irq numbers and their …",156,[[],[["vec",3],["result",6]]]],[11,"service_irq","","Either assert or deassert an IRQ line.  Sends to either …",156,[[["u32",15],["bool",15]],["result",6]]],[11,"service_irq_event","","Service an IRQ event by asserting then deasserting an IRQ …",156,[[["irqeventindex",6]],["result",6]]],[11,"broadcast_eoi","","Broadcast an end of interrupt. For KvmSplitIrqChip this …",156,[[["u8",15]],["result",6]]],[11,"inject_interrupts","","Injects any pending interrupts for <code>vcpu</code>. For …",156,[[["vcpu",8]],["result",6]]],[11,"halted","","Notifies the irq chip that the specified VCPU has …",156,[[["usize",15]]]],[11,"wait_until_runnable","","Blocks until <code>vcpu</code> is in a runnable state or until …",156,[[["vcpu",8]],[["vcpurunstate",4],["result",6]]]],[11,"kick_halted_vcpus","","Makes unrunnable VCPUs return immediately from …",156,[[]]],[11,"get_mp_state","","Get the current MP state of the specified VCPU.",156,[[["usize",15]],[["result",6],["mpstate",4]]]],[11,"set_mp_state","","Set the current MP state of the specified VCPU.",156,[[["usize",15],["mpstate",4]],["result",6]]],[11,"try_clone","","Attempt to clone this IrqChip instance.",156,[[],["result",6]]],[11,"finalize_devices","","Finalize irqchip setup. Should be called once all devices …",156,[[["systemallocator",3],["bus",3]],["result",6]]],[11,"process_delayed_irq_events","","The KvmSplitIrqChip\'s ioapic may be locked because a vcpu …",156,[[],["result",6]]],[11,"check_capability","","",156,[[["irqchipcap",4]],["bool",15]]],[11,"add_vcpu","","Add a vcpu to the irq chip.",155,[[["usize",15],["vcpu",8]],["result",6]]],[11,"register_irq_event","","Register an event that can trigger an interrupt for a …",155,[[["u32",15],["option",4],["event",3]],[["result",6],["option",4]]]],[11,"unregister_irq_event","","Unregister an event for a particular GSI.",155,[[["u32",15],["event",3]],["result",6]]],[11,"route_irq","","Route an IRQ line to an interrupt controller, or to a …",155,[[["irqroute",3]],["result",6]]],[11,"set_irq_routes","","Replace all irq routes with the supplied routes",155,[[],["result",6]]],[11,"irq_event_tokens","","Return a vector of all registered irq numbers and their …",155,[[],[["vec",3],["result",6]]]],[11,"service_irq","","Either assert or deassert an IRQ line.  Sends to either …",155,[[["u32",15],["bool",15]],["result",6]]],[11,"service_irq_event","","Service an IRQ event by asserting then deasserting an IRQ …",155,[[["irqeventindex",6]],["result",6]]],[11,"broadcast_eoi","","Broadcast an end of interrupt. This should never be …",155,[[["u8",15]],["result",6]]],[11,"inject_interrupts","","Injects any pending interrupts for <code>vcpu</code>. For …",155,[[["vcpu",8]],["result",6]]],[11,"halted","","Notifies the irq chip that the specified VCPU has …",155,[[["usize",15]]]],[11,"wait_until_runnable","","Blocks until <code>vcpu</code> is in a runnable state or until …",155,[[["vcpu",8]],[["vcpurunstate",4],["result",6]]]],[11,"kick_halted_vcpus","","Makes unrunnable VCPUs return immediately from …",155,[[]]],[11,"get_mp_state","","Get the current MP state of the specified VCPU.",155,[[["usize",15]],[["result",6],["mpstate",4]]]],[11,"set_mp_state","","Set the current MP state of the specified VCPU.",155,[[["usize",15],["mpstate",4]],["result",6]]],[11,"try_clone","","Attempt to clone this IrqChip instance.",155,[[],["result",6]]],[11,"finalize_devices","","Finalize irqchip setup. Should be called once all devices …",155,[[["systemallocator",3],["bus",3]],["result",6]]],[11,"process_delayed_irq_events","","The KvmKernelIrqChip doesn\'t process irq events itself so …",155,[[],["result",6]]],[11,"check_capability","","",155,[[["irqchipcap",4]],["bool",15]]],[11,"debug_label","devices","",159,[[],["string",3]]],[11,"allocate_address","","",159,[[["systemallocator",3]],[["pciaddress",3],["error",4],["result",4]]]],[11,"assign_irq","","",159,[[["u32",15],["event",3],["option",4]],["option",4]]],[11,"allocate_io_bars","","",159,[[["systemallocator",3]],[["vec",3],["result",4],["error",4]]]],[11,"get_bar_configuration","","",159,[[["usize",15]],[["option",4],["pcibarconfiguration",3]]]],[11,"read_config_register","","",159,[[["usize",15]],["u32",15]]],[11,"write_config_register","","",159,[[["usize",15],["u64",15]]]],[11,"keep_rds","","",159,[[],[["rawdescriptor",6],["vec",3]]]],[11,"read_bar","","",159,[[["u64",15]]]],[11,"write_bar","","",159,[[["u64",15]]]],[11,"debug_label","","",163,[[],["string",3]]],[11,"allocate_address","","",163,[[["systemallocator",3]],[["result",4],["pciaddress",3],["pcideviceerror",4]]]],[11,"keep_rds","","",163,[[],[["rawdescriptor",6],["vec",3]]]],[11,"assign_irq","","",163,[[["u32",15],["event",3],["option",4]],["option",4]]],[11,"allocate_io_bars","","",163,[[["systemallocator",3]],[["result",4],["vec",3],["pcideviceerror",4]]]],[11,"allocate_device_bars","","",163,[[["systemallocator",3]],[["result",4],["vec",3],["pcideviceerror",4]]]],[11,"get_bar_configuration","","",163,[[["usize",15]],[["option",4],["pcibarconfiguration",3]]]],[11,"register_device_capabilities","","",163,[[],[["result",4],["pcideviceerror",4]]]],[11,"ioevents","","",163,[[],["vec",3]]],[11,"read_config_register","","",163,[[["usize",15]],["u32",15]]],[11,"write_config_register","","",163,[[["usize",15],["u64",15]]]],[11,"read_bar","","",163,[[["u64",15]]]],[11,"write_bar","","",163,[[["u64",15]]]],[11,"debug_label","","",165,[[],["string",3]]],[11,"allocate_address","","",165,[[["systemallocator",3]],[["pciaddress",3],["result",4],["pcideviceerror",4]]]],[11,"keep_rds","","",165,[[],[["rawdescriptor",6],["vec",3]]]],[11,"assign_irq","","",165,[[["u32",15],["event",3],["option",4]],["option",4]]],[11,"allocate_io_bars","","",165,[[["systemallocator",3]],[["vec",3],["pcideviceerror",4],["result",4]]]],[11,"allocate_device_bars","","",165,[[["systemallocator",3]],[["vec",3],["pcideviceerror",4],["result",4]]]],[11,"get_bar_configuration","","",165,[[["usize",15]],[["option",4],["pcibarconfiguration",3]]]],[11,"register_device_capabilities","","",165,[[],[["result",4],["pcideviceerror",4]]]],[11,"ioevents","","",165,[[],["vec",3]]],[11,"read_config_register","","",165,[[["usize",15]],["u32",15]]],[11,"write_config_register","","",165,[[["usize",15],["u64",15]]]],[11,"read_bar","","",165,[[["u64",15]]]],[11,"write_bar","","",165,[[["u64",15]]]],[11,"debug_label","devices::usb::xhci::xhci_controller","",35,[[],["string",3]]],[11,"allocate_address","","",35,[[["systemallocator",3]],[["pciaddress",3],["result",4],["pcideviceerror",4]]]],[11,"keep_rds","","",35,[[],[["rawdescriptor",6],["vec",3]]]],[11,"assign_irq","","",35,[[["u32",15],["event",3],["option",4]],["option",4]]],[11,"allocate_io_bars","","",35,[[["systemallocator",3]],[["result",4],["vec",3],["pcideviceerror",4]]]],[11,"get_bar_configuration","","",35,[[["usize",15]],[["option",4],["pcibarconfiguration",3]]]],[11,"read_config_register","","",35,[[["usize",15]],["u32",15]]],[11,"write_config_register","","",35,[[["usize",15],["u64",15]]]],[11,"read_bar","","",35,[[["u64",15]]]],[11,"write_bar","","",35,[[["u64",15]]]],[11,"on_device_sandboxed","","",35,[[]]],[11,"debug_label","devices::virtio","",192,[[],["string",3]]],[11,"allocate_address","","",192,[[["systemallocator",3]],[["result",4],["pciaddress",3],["pcideviceerror",4]]]],[11,"keep_rds","","",192,[[],[["rawdescriptor",6],["vec",3]]]],[11,"assign_irq","","",192,[[["u32",15],["event",3],["option",4]],["option",4]]],[11,"allocate_io_bars","","",192,[[["systemallocator",3]],[["result",4],["vec",3],["pcideviceerror",4]]]],[11,"allocate_device_bars","","",192,[[["systemallocator",3]],[["result",4],["vec",3],["pcideviceerror",4]]]],[11,"get_bar_configuration","","",192,[[["usize",15]],[["option",4],["pcibarconfiguration",3]]]],[11,"register_device_capabilities","","",192,[[],[["result",4],["pcideviceerror",4]]]],[11,"ioevents","","",192,[[],["vec",3]]],[11,"read_config_register","","",192,[[["usize",15]],["u32",15]]],[11,"write_config_register","","",192,[[["usize",15],["u64",15]]]],[11,"read_bar","","",192,[[["u64",15]]]],[11,"write_bar","","",192,[[["u64",15]]]],[11,"on_device_sandboxed","","",192,[[]]],[11,"generate_acpi","","",192,[[["vec",3],["sdt",3]],[["option",4],["vec",3]]]],[11,"new","devices","",169,[[["protectiontype",4],["option",4],["vec",3],["option",4],["box",3],["rawdescriptor",6],["event",3],["box",3]],["serial",3]]],[11,"new","devices::virtio::console","",196,[[["protectiontype",4],["option",4],["vec",3],["option",4],["box",3],["rawdescriptor",6],["event",3],["box",3]],["console",3]]],[11,"get_backend_type","devices::usb::host_backend::host_device","",21,[[],["backendtype",4]]],[11,"get_vid","","",21,[[],["u16",15]]],[11,"get_pid","","",21,[[],["u16",15]]],[11,"submit_transfer","","",21,[[["xhcitransfer",3]],["result",6]]],[11,"set_address","","",21,[[["usbdeviceaddress",6]]]],[11,"reset","","",21,[[],["result",6]]],[11,"start","devices::usb::host_backend::host_backend_device_provider","",17,[[["usbhub",3],["failhandle",8],["eventloop",3],["arc",3],["arc",3],["arc",3]],["result",6]]],[11,"keep_rds","","",17,[[],[["rawdescriptor",6],["vec",3]]]],[11,"vfio_get_container","devices::vfio","",171,[[["bool",15],["path",3]],[["arc",3],["result",4],["vfioerror",4]]]],[11,"signal","devices::virtio","Virtqueue Interrupts From The Device",181,[[["u32",15],["u16",15]]]],[11,"signal_config_changed","","",181,[[]]],[11,"get_resample_evt","","",181,[[],[["option",4],["event",3]]]],[11,"do_interrupt_resample","","",181,[[]]],[11,"keep_rds","","",172,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",172,[[],["u32",15]]],[11,"queue_max_sizes","","",172,[[]]],[11,"read_config","","",172,[[["u64",15]]]],[11,"write_config","","",172,[[["u64",15]]]],[11,"features","","",172,[[],["u64",15]]],[11,"ack_features","","",172,[[["u64",15]]]],[11,"activate","","",172,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",172,[[],["bool",15]]],[11,"keep_rds","","",180,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",180,[[],["u32",15]]],[11,"queue_max_sizes","","",180,[[]]],[11,"read_config","","",180,[[["u64",15]]]],[11,"write_config","","",180,[[["u64",15]]]],[11,"features","","",180,[[],["u64",15]]],[11,"activate","","",180,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",180,[[],["bool",15]]],[11,"keep_rds","","",182,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",182,[[],["u32",15]]],[11,"queue_max_sizes","","",182,[[]]],[11,"features","","",182,[[],["u64",15]]],[11,"read_config","","",182,[[["u64",15]]]],[11,"activate","","",182,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"generate_acpi","","",182,[[["option",4],["vec",3],["sdt",3]],[["option",4],["vec",3]]]],[11,"keep_rds","","",183,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",183,[[],["u32",15]]],[11,"queue_max_sizes","","",183,[[]]],[11,"features","","",183,[[],["u64",15]]],[11,"ack_features","","",183,[[["u64",15]]]],[11,"read_config","","",183,[[["u64",15]]]],[11,"activate","","",183,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"keep_rds","","",184,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",184,[[],["u32",15]]],[11,"queue_max_sizes","","",184,[[]]],[11,"features","","",184,[[],["u64",15]]],[11,"read_config","","",184,[[["u64",15]]]],[11,"activate","","",184,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"keep_rds","","",187,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",187,[[],["u32",15]]],[11,"queue_max_sizes","","",187,[[]]],[11,"features","","",187,[[],["u64",15]]],[11,"activate","","",187,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",187,[[],["bool",15]]],[11,"keep_rds","","",188,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",188,[[],["u32",15]]],[11,"queue_max_sizes","","",188,[[]]],[11,"activate","","",188,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"keep_rds","","",189,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",189,[[],["u32",15]]],[11,"queue_max_sizes","","",189,[[]]],[11,"features","","",189,[[],["u64",15]]],[11,"read_config","","",189,[[["u64",15]]]],[11,"activate","","",189,[[["vec",3],["guestmemory",3],["interrupt",3],["event",3],["vec",3],["queue",3]]]],[11,"keep_rds","devices::virtio::wl","",50,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",50,[[],["u32",15]]],[11,"queue_max_sizes","","",50,[[]]],[11,"features","","",50,[[],["u64",15]]],[11,"ack_features","","",50,[[["u64",15]]]],[11,"activate","","",50,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"keep_rds","devices::virtio::block::asynchronous","",53,[[],[["rawdescriptor",6],["vec",3]]]],[11,"features","","",53,[[],["u64",15]]],[11,"device_type","","",53,[[],["u32",15]]],[11,"queue_max_sizes","","",53,[[]]],[11,"read_config","","",53,[[["u64",15]]]],[11,"activate","","",53,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",53,[[],["bool",15]]],[11,"keep_rds","devices::virtio::block::block","",54,[[],[["rawdescriptor",6],["vec",3]]]],[11,"features","","",54,[[],["u64",15]]],[11,"device_type","","",54,[[],["u32",15]]],[11,"queue_max_sizes","","",54,[[]]],[11,"read_config","","",54,[[["u64",15]]]],[11,"activate","","",54,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",54,[[],["bool",15]]],[11,"keep_rds","devices::virtio::console","",196,[[],[["rawdescriptor",6],["vec",3]]]],[11,"features","","",196,[[],["u64",15]]],[11,"device_type","","",196,[[],["u32",15]]],[11,"queue_max_sizes","","",196,[[]]],[11,"read_config","","",196,[[["u64",15]]]],[11,"activate","","",196,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",196,[[],["bool",15]]],[11,"keep_rds","devices::virtio::fs","",63,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",63,[[],["u32",15]]],[11,"queue_max_sizes","","",63,[[]]],[11,"features","","",63,[[],["u64",15]]],[11,"ack_features","","",63,[[["u64",15]]]],[11,"read_config","","",63,[[["u64",15]]]],[11,"activate","","",63,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"get_device_bars","","",63,[[["pciaddress",3]],[["pcibarconfiguration",3],["vec",3]]]],[11,"get_device_caps","","",63,[[],[["box",3],["vec",3]]]],[11,"keep_rds","devices::virtio::gpu","",73,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",73,[[],["u32",15]]],[11,"queue_max_sizes","","",73,[[]]],[11,"features","","",73,[[],["u64",15]]],[11,"ack_features","","",73,[[["u64",15]]]],[11,"read_config","","",73,[[["u64",15]]]],[11,"write_config","","",73,[[["u64",15]]]],[11,"activate","","",73,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"get_device_bars","","",73,[[["pciaddress",3]],[["pcibarconfiguration",3],["vec",3]]]],[11,"get_device_caps","","",73,[[],[["box",3],["vec",3]]]],[11,"keep_rds","devices::virtio::net","",77,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",77,[[],["u32",15]]],[11,"queue_max_sizes","","",77,[[]]],[11,"features","","",77,[[],["u64",15]]],[11,"ack_features","","",77,[[["u64",15]]]],[11,"read_config","","",77,[[["u64",15]]]],[11,"activate","","",77,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",77,[[],["bool",15]]],[11,"keep_rds","devices::virtio::snd::vios_backend","",203,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",203,[[],["u32",15]]],[11,"queue_max_sizes","","",203,[[]]],[11,"read_config","","",203,[[["u64",15]]]],[11,"write_config","","",203,[[["u64",15]]]],[11,"features","","",203,[[],["u64",15]]],[11,"activate","","",203,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",203,[[],["bool",15]]],[11,"keep_rds","devices::virtio::vhost","",204,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",204,[[],["u32",15]]],[11,"queue_max_sizes","","",204,[[]]],[11,"features","","",204,[[],["u64",15]]],[11,"ack_features","","",204,[[["u64",15]]]],[11,"activate","","",204,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"on_device_sandboxed","","",204,[[]]],[11,"control_notify","","",204,[[["msixstatus",4]]]],[11,"reset","","",204,[[],["bool",15]]],[11,"keep_rds","devices::virtio::vhost::user::proxy","",110,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",110,[[],["u32",15]]],[11,"queue_max_sizes","","",110,[[]]],[11,"read_config","","",110,[[["u64",15]]]],[11,"write_config","","",110,[[["u64",15]]]],[11,"activate","","",110,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",110,[[],["bool",15]]],[11,"keep_rds","devices::virtio::vhost::user::vmm","",205,[[],[["rawdescriptor",6],["vec",3]]]],[11,"features","","",205,[[],["u64",15]]],[11,"ack_features","","",205,[[["u64",15]]]],[11,"device_type","","",205,[[],["u32",15]]],[11,"queue_max_sizes","","",205,[[]]],[11,"read_config","","",205,[[["u64",15]]]],[11,"activate","","",205,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",205,[[],["bool",15]]],[11,"keep_rds","","",206,[[],[["rawdescriptor",6],["vec",3]]]],[11,"features","","",206,[[],["u64",15]]],[11,"device_type","","",206,[[],["u32",15]]],[11,"queue_max_sizes","","",206,[[]]],[11,"read_config","","",206,[[["u64",15]]]],[11,"activate","","",206,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",206,[[],["bool",15]]],[11,"keep_rds","","",207,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",207,[[],["u32",15]]],[11,"queue_max_sizes","","",207,[[]]],[11,"features","","",207,[[],["u64",15]]],[11,"ack_features","","",207,[[["u64",15]]]],[11,"read_config","","",207,[[["u64",15]]]],[11,"activate","","",207,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",207,[[],["bool",15]]],[11,"keep_rds","","",208,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",208,[[],["u32",15]]],[11,"queue_max_sizes","","",208,[[]]],[11,"features","","",208,[[],["u64",15]]],[11,"ack_features","","",208,[[["u64",15]]]],[11,"read_config","","",208,[[["u64",15]]]],[11,"write_config","","",208,[[["u64",15]]]],[11,"activate","","",208,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"get_device_bars","","",208,[[["pciaddress",3]],[["pcibarconfiguration",3],["vec",3]]]],[11,"get_device_caps","","",208,[[],[["box",3],["vec",3]]]],[11,"reset","","",208,[[],["bool",15]]],[11,"keep_rds","","",209,[[],[["rawdescriptor",6],["vec",3]]]],[11,"features","","",209,[[],["u64",15]]],[11,"ack_features","","",209,[[["u64",15]]]],[11,"device_type","","",209,[[],["u32",15]]],[11,"queue_max_sizes","","",209,[[]]],[11,"activate","","",209,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",209,[[],["bool",15]]],[11,"keep_rds","","",210,[[],[["rawdescriptor",6],["vec",3]]]],[11,"features","","",210,[[],["u64",15]]],[11,"ack_features","","",210,[[["u64",15]]]],[11,"device_type","","",210,[[],["u32",15]]],[11,"queue_max_sizes","","",210,[[]]],[11,"read_config","","",210,[[["u64",15]]]],[11,"activate","","",210,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",210,[[],["bool",15]]],[11,"keep_rds","","",211,[[],[["rawdescriptor",6],["vec",3]]]],[11,"features","","",211,[[],["u64",15]]],[11,"ack_features","","",211,[[["u64",15]]]],[11,"device_type","","",211,[[],["u32",15]]],[11,"queue_max_sizes","","",211,[[]]],[11,"read_config","","",211,[[["u64",15]]]],[11,"activate","","",211,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",211,[[],["bool",15]]],[11,"keep_rds","","",212,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",212,[[],["u32",15]]],[11,"queue_max_sizes","","",212,[[]]],[11,"features","","",212,[[],["u64",15]]],[11,"ack_features","","",212,[[["u64",15]]]],[11,"read_config","","",212,[[["u64",15]]]],[11,"activate","","",212,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"reset","","",212,[[],["bool",15]]],[11,"keep_rds","devices::virtio::vhost","",213,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_type","","",213,[[],["u32",15]]],[11,"queue_max_sizes","","",213,[[]]],[11,"features","","",213,[[],["u64",15]]],[11,"read_config","","",213,[[["u64",15]]]],[11,"ack_features","","",213,[[["u64",15]]]],[11,"activate","","",213,[[["vec",3],["guestmemory",3],["interrupt",3],["vec",3],["queue",3],["event",3]]]],[11,"on_device_sandboxed","","",213,[[]]],[11,"drop","devices","",166,[[]]],[11,"drop","","",168,[[]]],[11,"drop","devices::bat","",10,[[]]],[11,"drop","devices::usb::host_backend::host_device","",21,[[]]],[11,"drop","devices::usb::xhci::xhci_transfer","",42,[[]]],[11,"drop","devices::virtio","",172,[[]]],[11,"drop","","",180,[[]]],[11,"drop","","",182,[[]]],[11,"drop","","",183,[[]]],[11,"drop","","",184,[[]]],[11,"drop","","",187,[[]]],[11,"drop","","",188,[[]]],[11,"drop","","",189,[[]]],[11,"drop","devices::virtio::wl","",50,[[]]],[11,"drop","devices::virtio::block::asynchronous","",53,[[]]],[11,"drop","devices::virtio::block::block","",54,[[]]],[11,"drop","devices::virtio::console","",196,[[]]],[11,"drop","devices::virtio::fs","",63,[[]]],[11,"drop","devices::virtio::gpu","",73,[[]]],[11,"drop","devices::virtio::net","",77,[[]]],[11,"drop","devices::virtio::snd::vios_backend","",201,[[]]],[11,"drop","","",202,[[]]],[11,"drop","devices::virtio::snd::vios_backend::streams","",103,[[]]],[11,"drop","","",104,[[]]],[11,"drop","devices::virtio::vhost","",204,[[]]],[11,"drop","devices::virtio::vhost::user::proxy","",110,[[]]],[11,"drop","devices::virtio::vhost::user::vmm","",205,[[]]],[11,"drop","","",206,[[]]],[11,"drop","","",207,[[]]],[11,"drop","","",208,[[]]],[11,"drop","","",209,[[]]],[11,"drop","","",210,[[]]],[11,"drop","","",211,[[]]],[11,"drop","","",212,[[]]],[11,"drop","devices::virtio::vhost","",213,[[]]],[11,"from","devices::virtio::fs","",62,[[["error",4]],["error",4]]],[11,"next","devices::virtio","",174,[[],[["result",6],["option",4]]]],[11,"next","","",185,[[],["option",4]]],[11,"next","","",186,[[],["option",4]]],[11,"clone","devices","",133,[[],["busaccessinfo",3]]],[11,"clone","","",137,[[],["busrange",3]]],[11,"clone","","",152,[[],["bus",3]]],[11,"clone","devices::irqchip","",5,[[],["irqchipcap",4]]],[11,"clone","","",6,[[],["vcpurunstate",4]]],[11,"clone","devices","",142,[[],["ac97backend",4]]],[11,"clone","","",143,[[],["ac97parameters",3]]],[11,"clone","","",144,[[],["pciaddress",3]]],[11,"clone","","",148,[[],["pciinterruptpin",4]]],[11,"clone","devices::serial_device","",13,[[],["serialtype",4]]],[11,"clone","","",14,[[],["serialhardware",4]]],[11,"clone","","",15,[[],["serialparameters",3]]],[11,"clone","devices::usb::xhci::xhci_transfer","",37,[[],["transferdirection",4]]],[11,"clone","","",41,[[],["xhcitransfermanager",3]]],[11,"clone","devices::virtio","",173,[[],["reader",3]]],[11,"clone","","",175,[[],["writer",3]]],[11,"clone","","",120,[[],["descriptortype",4]]],[11,"clone","","",176,[[],["virtio_input_device_ids",3]]],[11,"clone","","",177,[[],["virtio_input_absinfo",3]]],[11,"clone","","",178,[[],["virtio_input_bitmap",3]]],[11,"clone","","",125,[[],["descriptorchain",3]]],[11,"clone","","",126,[[],["queue",3]]],[11,"clone","","",190,[[],["virtiopcinotifycap",3]]],[11,"clone","","",191,[[],["virtiopcishmcap",3]]],[11,"clone","","",131,[[],["pcivirtiosubclass",4]]],[11,"clone","devices::virtio::block","",194,[[],["virtio_blk_geometry",3]]],[11,"clone","","",195,[[],["virtio_blk_topology",3]]],[11,"clone","","",55,[[],["virtio_blk_config",3]]],[11,"clone","devices::virtio::console","",57,[[],["virtio_console_config",3]]],[11,"clone","devices::virtio::fs::passthrough","",58,[[],["cachepolicy",4]]],[11,"clone","","",59,[[],["config",3]]],[11,"clone","devices::virtio::fs","",61,[[],["virtio_fs_config",3]]],[11,"clone","devices::virtio::gpu","",64,[[],["virtio_gpu_config",3]]],[11,"clone","","",65,[[],["gpumode",4]]],[11,"clone","","",66,[[],["gpudisplayparameters",3]]],[11,"clone","","",68,[[],["virtioscanoutblobdata",3]]],[11,"clone","","",72,[[],["displaybackend",4]]],[11,"clone","devices::virtio::net","",75,[[],["virtio_net_ctrl_hdr",3]]],[11,"clone","","",199,[[],["virtionetconfig",3]]],[11,"clone","","",76,[[],["token",4]]],[11,"clone","devices::virtio::resource_bridge","",81,[[],["planeinfo",3]]],[11,"clone","devices::virtio::snd::layout","",88,[[],["virtio_snd_config",3]]],[11,"clone","","",89,[[],["virtio_snd_hdr",3]]],[11,"clone","","",90,[[],["virtio_snd_jack_hdr",3]]],[11,"clone","","",91,[[],["virtio_snd_event",3]]],[11,"clone","","",92,[[],["virtio_snd_query_info",3]]],[11,"clone","","",93,[[],["virtio_snd_info",3]]],[11,"clone","","",94,[[],["virtio_snd_pcm_info",3]]],[11,"clone","","",95,[[],["virtio_snd_pcm_hdr",3]]],[11,"clone","","",96,[[],["virtio_snd_pcm_set_params",3]]],[11,"clone","","",97,[[],["virtio_snd_pcm_xfer",3]]],[11,"clone","","",98,[[],["virtio_snd_pcm_status",3]]],[11,"clone","","",99,[[],["virtio_snd_jack_info",3]]],[11,"clone","","",100,[[],["virtio_snd_jack_remap",3]]],[11,"clone","","",101,[[],["virtio_snd_chmap_info",3]]],[11,"clone","devices","",151,[[],["protectiontype",4]]],[11,"default","","",142,[[]]],[11,"default","","",143,[[],["ac97parameters",3]]],[11,"default","devices::virtio","",176,[[],["virtio_input_device_ids",3]]],[11,"default","","",177,[[],["virtio_input_absinfo",3]]],[11,"default","devices::virtio::block","",194,[[],["virtio_blk_geometry",3]]],[11,"default","","",195,[[],["virtio_blk_topology",3]]],[11,"default","","",55,[[],["virtio_blk_config",3]]],[11,"default","devices::virtio::console","",57,[[],["virtio_console_config",3]]],[11,"default","devices::virtio::fs::passthrough","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","devices::virtio::gpu","",64,[[],["virtio_gpu_config",3]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",198,[[]]],[11,"default","devices::virtio::net","",199,[[],["virtionetconfig",3]]],[11,"default","devices::virtio::resource_bridge","",81,[[],["planeinfo",3]]],[11,"default","devices::virtio::snd::layout","",88,[[],["virtio_snd_config",3]]],[11,"default","","",89,[[],["virtio_snd_hdr",3]]],[11,"default","","",90,[[],["virtio_snd_jack_hdr",3]]],[11,"default","","",91,[[],["virtio_snd_event",3]]],[11,"default","","",92,[[],["virtio_snd_query_info",3]]],[11,"default","","",93,[[],["virtio_snd_info",3]]],[11,"default","","",94,[[],["virtio_snd_pcm_info",3]]],[11,"default","","",95,[[],["virtio_snd_pcm_hdr",3]]],[11,"default","","",96,[[],["virtio_snd_pcm_set_params",3]]],[11,"default","","",98,[[],["virtio_snd_pcm_status",3]]],[11,"default","","",99,[[],["virtio_snd_jack_info",3]]],[11,"default","","",100,[[],["virtio_snd_jack_remap",3]]],[11,"default","","",101,[[],["virtio_snd_chmap_info",3]]],[11,"cmp","devices","",137,[[["busrange",3]],["ordering",4]]],[11,"cmp","","",144,[[["pciaddress",3]],["ordering",4]]],[11,"cmp","devices::serial_device","",14,[[["serialhardware",4]],["ordering",4]]],[11,"eq","devices","",133,[[["busaccessinfo",3]],["bool",15]]],[11,"ne","","",133,[[["busaccessinfo",3]],["bool",15]]],[11,"eq","","",137,[[["busrange",3]],["bool",15]]],[11,"eq","devices::irqchip","",5,[[["irqchipcap",4]],["bool",15]]],[11,"eq","","",6,[[["vcpurunstate",4]],["bool",15]]],[11,"eq","devices","",144,[[["pciaddress",3]],["bool",15]]],[11,"ne","","",144,[[["pciaddress",3]],["bool",15]]],[11,"eq","devices::serial_device","",14,[[["serialhardware",4]],["bool",15]]],[11,"eq","devices::usb::host_backend::host_device","",20,[[["controlendpointstate",4]],["bool",15]]],[11,"eq","devices::usb::xhci::xhci_backend_device","",31,[[["backendtype",4]],["bool",15]]],[11,"eq","devices::usb::xhci::xhci_transfer","",37,[[["transferdirection",4]],["bool",15]]],[11,"eq","devices::virtio","",120,[[["descriptortype",4]],["bool",15]]],[11,"eq","devices::virtio::fs::passthrough","",58,[[["cachepolicy",4]],["bool",15]]],[11,"eq","devices::virtio::gpu","",65,[[["gpumode",4]],["bool",15]]],[11,"eq","devices","",151,[[["protectiontype",4]],["bool",15]]],[11,"partial_cmp","","",137,[[["busrange",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",144,[[["pciaddress",3]],[["option",4],["ordering",4]]]],[11,"lt","","",144,[[["pciaddress",3]],["bool",15]]],[11,"le","","",144,[[["pciaddress",3]],["bool",15]]],[11,"gt","","",144,[[["pciaddress",3]],["bool",15]]],[11,"ge","","",144,[[["pciaddress",3]],["bool",15]]],[11,"partial_cmp","devices::serial_device","",14,[[["serialhardware",4]],[["option",4],["ordering",4]]]],[11,"fmt","devices","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","devices::direct_irq","",1,[[["formatter",3]],["result",6]]],[11,"fmt","devices::irqchip","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","devices","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","devices::bat","",9,[[["formatter",3]],["result",6]]],[11,"fmt","devices::serial_device","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","devices::usb::host_backend::error","",16,[[["formatter",3]],["result",6]]],[11,"fmt","devices::usb::xhci::scatter_gather_buffer","",23,[[["formatter",3]],["result",6]]],[11,"fmt","devices::usb::xhci::usb_hub","",25,[[["formatter",3]],["result",6]]],[11,"fmt","devices::usb::xhci::xhci_transfer","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","devices::vfio","",43,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::wl","",193,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::block::asynchronous","",51,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::block","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::console","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::fs::passthrough","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::fs","",62,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::gpu","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::net","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::resource_bridge","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::snd::common","",87,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::snd::vios_backend","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::vhost","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::vhost::user::proxy","",109,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::vhost::user::vmm","",112,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::vhost","",117,[[["formatter",3]],["result",6]]],[11,"fmt","devices","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","devices::direct_irq","",1,[[["formatter",3]],["result",6]]],[11,"fmt","devices","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","devices::bat","",9,[[["formatter",3]],["result",6]]],[11,"fmt","devices::serial_device","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","devices::usb::host_backend::error","",16,[[["formatter",3]],["result",6]]],[11,"fmt","devices::usb::xhci::scatter_gather_buffer","",23,[[["formatter",3]],["result",6]]],[11,"fmt","devices::usb::xhci::usb_hub","",25,[[["formatter",3]],["result",6]]],[11,"fmt","devices::usb::xhci::xhci_transfer","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","devices::vfio","",43,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::wl","",193,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::block::asynchronous","",51,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::console","",56,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::fs","",62,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::net","",74,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::resource_bridge","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::snd::common","",87,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::snd::vios_backend","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::vhost::user::proxy","",109,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::vhost::user::vmm","",112,[[["formatter",3]],["result",6]]],[11,"fmt","devices::virtio::vhost","",117,[[["formatter",3]],["result",6]]],[11,"from_str","devices","",142,[[["str",15]],["result",4]]],[11,"from_str","devices::serial_device","",13,[[["str",15]],["result",4]]],[11,"from_str","","",14,[[["str",15]],["result",4]]],[11,"from_str","devices::virtio::fs::passthrough","",58,[[["str",15]],["result",4]]],[11,"read","devices::virtio","",173,[[],[["usize",15],["result",6]]]],[11,"write","","",175,[[],[["usize",15],["result",6]]]],[11,"flush","","",175,[[],["result",6]]],[11,"serialize","devices","",133,[[],["result",4]]],[11,"serialize","","",144,[[],["result",4]]],[11,"serialize","devices::virtio::gpu","",65,[[],["result",4]]],[11,"serialize","","",66,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","devices::virtio::resource_bridge","",78,[[],["result",4]]],[11,"serialize","","",81,[[],["result",4]]],[11,"serialize","","",82,[[],["result",4]]],[11,"serialize","","",83,[[],["result",4]]],[11,"serialize","","",85,[[],["result",4]]],[11,"serialize","devices::virtio::vhost","",115,[[],["result",4]]],[11,"serialize","","",116,[[],["result",4]]],[11,"deserialize","devices","",133,[[],["result",4]]],[11,"deserialize","","",144,[[],["result",4]]],[11,"deserialize","devices::virtio::gpu","",65,[[],["result",4]]],[11,"deserialize","","",66,[[],["result",4]]],[11,"deserialize","","",67,[[],["result",4]]],[11,"deserialize","devices::virtio::resource_bridge","",78,[[],["result",4]]],[11,"deserialize","","",81,[[],["result",4]]],[11,"deserialize","","",82,[[],["result",4]]],[11,"deserialize","","",83,[[],["result",4]]],[11,"deserialize","","",85,[[],["result",4]]],[11,"deserialize","devices::virtio::vhost","",115,[[],["result",4]]],[11,"deserialize","","",116,[[],["result",4]]],[11,"as_raw_descriptor","devices::direct_irq","",2,[[],["i32",15]]],[11,"as_raw_descriptor","devices::vfio","",44,[[],["rawdescriptor",6]]],[11,"as_raw_token","devices::virtio::net","",76,[[],["u64",15]]],[11,"from_raw_token","","",76,[[["u64",15]]]],[11,"callback","devices::virtio::snd::vios_backend","",201,[[["usize",15]],[["result",4],["boxerror",6]]]],[11,"ignore","","",201,[[],[["result",4],["boxerror",6]]]],[11,"frame_size","","",201,[[],["usize",15]]],[11,"num_channels","","",201,[[],["usize",15]]],[11,"frame_rate","","",201,[[],["u32",15]]],[11,"wait_for_next_action_with_timeout","","Waits until the next time a frame should be sent to the …",201,[[["duration",3]],[["result",4],["boxerror",6],["option",4]]]],[11,"new_stream","","Creates a new stream",200,[[["streamdirection",4],["usize",15],["sampleformat",4],["u32",15],["syssharedmemory",3]],[["result",4],["box",3],["boxerror",6]]]],[11,"keep_fds","","Get a list of file descriptors used by the implementation.",200,[[],[["rawfd",6],["vec",3]]]],[11,"to_aml_bytes","devices::acpi","",8,[[["vec",3]]]],[11,"to_aml_bytes","devices::bat","",10,[[["vec",3]]]],[11,"read_to","devices::virtio","",173,[[["usize",15],["u64",15],["file",3]],[["usize",15],["result",6]]]],[11,"write_from","","",175,[[["usize",15],["u64",15],["file",3]],[["usize",15],["result",6]]]],[11,"init","devices::virtio::fs::passthrough","",60,[[["fsoptions",3]],[["fsoptions",3],["result",6]]]],[11,"destroy","","",60,[[]]],[11,"statfs","","",60,[[["context",3],["u64",15]],[["statvfs64",3],["result",6]]]],[11,"lookup","","",60,[[["cstr",3],["context",3],["u64",15]],[["entry",3],["result",6]]]],[11,"forget","","",60,[[["context",3],["u64",15]]]],[11,"batch_forget","","",60,[[["vec",3],["context",3]]]],[11,"opendir","","",60,[[["u32",15],["context",3],["u64",15]],["result",6]]],[11,"releasedir","","",60,[[["u32",15],["context",3],["u64",15]],["result",6]]],[11,"mkdir","","",60,[[["u32",15],["context",3],["cstr",3],["u64",15]],[["entry",3],["result",6]]]],[11,"rmdir","","",60,[[["cstr",3],["context",3],["u64",15]],["result",6]]],[11,"readdir","","",60,[[["u32",15],["context",3],["u64",15]],["result",6]]],[11,"open","","",60,[[["u32",15],["context",3],["u64",15]],["result",6]]],[11,"release","","",60,[[["u32",15],["context",3],["option",4],["u64",15],["bool",15]],["result",6]]],[11,"chromeos_tmpfile","","",60,[[["u32",15],["context",3]],[["entry",3],["result",6]]]],[11,"create","","",60,[[["u32",15],["context",3],["cstr",3],["u64",15]],["result",6]]],[11,"unlink","","",60,[[["cstr",3],["context",3],["u64",15]],["result",6]]],[11,"read","","",60,[[["u32",15],["context",3],["option",4],["u64",15],["write",8],["zerocopywriter",8]],[["usize",15],["result",6]]]],[11,"write","","",60,[[["u32",15],["context",3],["u64",15],["bool",15],["read",8],["zerocopyreader",8],["option",4]],[["usize",15],["result",6]]]],[11,"getattr","","",60,[[["context",3],["option",4],["u64",15]],["result",6]]],[11,"setattr","","",60,[[["context",3],["stat64",3],["u64",15],["option",4],["setattrvalid",3]],["result",6]]],[11,"rename","","",60,[[["u32",15],["context",3],["cstr",3],["u64",15]],["result",6]]],[11,"mknod","","",60,[[["u32",15],["context",3],["cstr",3],["u64",15]],[["entry",3],["result",6]]]],[11,"link","","",60,[[["cstr",3],["context",3],["u64",15]],[["entry",3],["result",6]]]],[11,"symlink","","",60,[[["context",3],["u64",15],["cstr",3]],[["entry",3],["result",6]]]],[11,"readlink","","",60,[[["context",3],["u64",15]],[["result",6],["vec",3]]]],[11,"flush","","",60,[[["context",3],["u64",15]],["result",6]]],[11,"fsync","","",60,[[["context",3],["u64",15],["bool",15]],["result",6]]],[11,"fsyncdir","","",60,[[["context",3],["u64",15],["bool",15]],["result",6]]],[11,"access","","",60,[[["u32",15],["context",3],["u64",15]],["result",6]]],[11,"setxattr","","",60,[[["u32",15],["context",3],["cstr",3],["u64",15]],["result",6]]],[11,"getxattr","","",60,[[["u32",15],["context",3],["cstr",3],["u64",15]],[["getxattrreply",4],["result",6]]]],[11,"listxattr","","",60,[[["u32",15],["context",3],["u64",15]],[["listxattrreply",4],["result",6]]]],[11,"removexattr","","",60,[[["cstr",3],["context",3],["u64",15]],["result",6]]],[11,"fallocate","","",60,[[["u32",15],["context",3],["u64",15]],["result",6]]],[11,"ioctl","","",60,[[["u32",15],["context",3],["u64",15],["read",8],["ioctlflags",3]],[["ioctlreply",4],["result",6]]]],[11,"copy_file_range","","",60,[[["context",3],["u64",15]],[["usize",15],["result",6]]]],[11,"set_up_mapping","","",60,[[["usize",15],["context",3],["u32",15],["u64",15],["mapper",8]],["result",6]]],[11,"remove_mapping","","",60,[[["mapper",8]],["result",6]]],[11,"write_at","devices::virtio","",175,[[["usize",15]],[["usize",15],["result",6]]]],[11,"has_sufficient_buffer","","",175,[[["u32",15]],["bool",15]]],[11,"read","devices","Reads at <code>offset</code> from this device",134,[[["busaccessinfo",3]]]],[11,"write","","Writes at <code>offset</code> into this device",134,[[["busaccessinfo",3]]]],[11,"config_register_write","","Sets a register in the configuration space. Only used by …",134,[[["usize",15],["u64",15]],["configwriteresult",3]]],[11,"config_register_read","","Gets a register from the configuration space. Only used …",134,[[["usize",15]],["u32",15]]],[11,"on_sandboxed","","Invoked when the device is sandboxed.",134,[[]]],[11,"resume_imminent","","notify the devices which are invoked before the VM …",138,[[]]],[11,"as_pci_device","","",135,[[],[["pcidevice",8],["option",4]]]],[11,"as_pci_device_mut","","",135,[[],[["option",4],["pcidevice",8]]]],[11,"into_pci_device","","",135,[[["box",3]],[["option",4],["box",3]]]],[11,"as_platform_device","","",135,[[],[["option",4],["vfioplatformdevice",3]]]],[11,"as_platform_device_mut","","",135,[[],[["option",4],["vfioplatformdevice",3]]]],[11,"into_platform_device","","",135,[[["box",3]],[["box",3],["option",4]]]],[11,"contains","","Returns true if <code>addr</code> is within the range.",137,[[["u64",15]],["bool",15]]],[11,"overlaps","","Returns true if there is overlap with the given range.",137,[[["u64",15]],["bool",15]]],[11,"new","","Constructs an a bus with an empty address space.",152,[[],["bus",3]]],[11,"set_access_id","","Sets the id that will be used for BusAccessInfo.",152,[[["usize",15]]]],[11,"insert","","Puts the given device at the given address space.",152,[[["arc",3],["u64",15],["mutex",3]],[["error",4],["result",4]]]],[11,"insert_sync","","Puts the given device that implements BusDeviceSync at …",152,[[["busdevicesync",8],["u64",15],["arc",3]],[["error",4],["result",4]]]],[11,"read","","Reads data from the device that owns the range containing …",152,[[["u64",15]],["bool",15]]],[11,"write","","Writes <code>data</code> to the device that owns the range containing …",152,[[["u64",15]],["bool",15]]],[11,"new","","Constructs a CMOS/RTC device with initial data. …",153,[[["u64",15]],["cmos",3]]],[11,"new","","Constructs a i8042 device that will signal the given …",154,[[["event",3]],["i8042device",3]]],[11,"new","devices::irqchip","Construct a new KvmKernelIrqchip.",155,[[["kvmvm",3],["usize",15]],[["result",6],["kvmkernelirqchip",3]]]],[11,"new","","Construct a new KvmSplitIrqChip.",156,[[["kvmvm",3],["usize",15],["tube",3],["option",4]],["result",6]]],[11,"new","","",157,[[],["pic",3]]],[11,"get_pic_state","","Get the current state of the primary or secondary PIC",157,[[["picselect",4]],["picstate",3]]],[11,"set_pic_state","","Set the current state of the primary or secondary PIC",157,[[["picstate",3],["picselect",4]]]],[11,"register_resample_events","","",157,[[["vec",3],["vec",3]]]],[11,"service_irq","","",157,[[["bool",15],["u8",15]],["bool",15]]],[11,"masked","","Determines whether the (primary) PIC is completely masked.",157,[[],["bool",15]]],[11,"has_interrupt","","Determines whether the PIC has an interrupt ready.",157,[[],["bool",15]]],[11,"interrupt_requested","","Determines whether the PIC has fired an interrupt to …",157,[[],["bool",15]]],[11,"get_external_interrupt","","Determines the external interrupt number that the PIC is …",157,[[],[["u8",15],["option",4]]]],[11,"new","","",158,[[["usize",15],["tube",3]],[["ioapic",3],["result",6]]]],[11,"get_ioapic_state","","",158,[[],["ioapicstate",3]]],[11,"set_ioapic_state","","",158,[[["ioapicstate",3]]]],[11,"register_resample_events","","",158,[[["vec",3],["vec",3]]]],[11,"end_of_interrupt","","",158,[[["u8",15]]]],[11,"service_irq","","",158,[[["usize",15],["bool",15]],["bool",15]]],[11,"new","devices","Creates an \'Ac97Dev\' that uses the given <code>GuestMemory</code> and …",159,[[["ac97backend",4],["guestmemory",3],["box",3],["shmstreamsource",8]]]],[11,"try_new","","Creates an <code>Ac97Dev</code> with suitable audio server inside …",159,[[["guestmemory",3],["ac97parameters",3]],[["result",4],["error",4]]]],[11,"minijail_policy","","Return the minijail policy file path for the current …",159,[[],["str",15]]],[11,"assign_irq","","Assign a legacy PCI IRQ to this device. The device may …",145,[[["u32",15],["event",3],["option",4]],["option",4]]],[11,"allocate_io_bars","","Allocates the needed IO BAR space using the <code>allocate</code> …",145,[[["systemallocator",3]],[["vec",3],["result",4],["error",4]]]],[11,"allocate_device_bars","","Allocates the needed device BAR space. Returns a Vec of …",145,[[["systemallocator",3]],[["vec",3],["result",4],["error",4]]]],[11,"register_device_capabilities","","Register any capabilties specified by the device.",145,[[],[["error",4],["result",4]]]],[11,"ioevents","","Gets a list of ioevents that should be registered with …",145,[[],["vec",3]]],[11,"on_device_sandboxed","","Invoked when the device is sandboxed.",145,[[]]],[11,"generate_acpi","","",145,[[["vec",3],["sdt",3]],[["option",4],["vec",3]]]],[11,"from_config_address","","Construct PciAddress and register tuple from …",144,[[["u32",15]]]],[11,"from_string","","Construct PciAddress from string …",144,[[["str",15]]]],[11,"to_config_address","","Encode PciAddress into CONFIG_ADDRESS value.",144,[[["usize",15]],["u32",15]]],[11,"to_u32","","Convert B:D:F PCI address to unsigned 32 bit integer",144,[[],["u32",15]]],[11,"new","","Create an empty PCI root bus.",160,[[["bus",3]]]],[11,"add_device","","Add a <code>device</code> to this root PCI bus.",160,[[["pciaddress",3],["arc",3],["mutex",3]]]],[11,"config_space_read","","",160,[[["pciaddress",3],["usize",15]],["u32",15]]],[11,"config_space_write","","",160,[[["pciaddress",3],["usize",15],["u64",15]]]],[11,"new","","",161,[[["pciroot",3]]]],[11,"add_device","","",161,[[["pciaddress",3],["arc",3],["mutex",3]]]],[11,"new","","",162,[[["pciroot",3]]]],[11,"add_device","","",162,[[["pciaddress",3],["arc",3],["mutex",3]]]],[11,"new","","",163,[[["pciedevice",8],["tube",3],["box",3]]]],[11,"new","","Constructs a new PCIE root port",164,[[]]],[11,"new","","Constructs a new Vfio Pci device for the give Vfio device",165,[[["tube",3],["u8",15],["option",4],["vfiodevice",3]]]],[11,"to_mask","","",148,[[],["u32",15]]],[11,"new","","",166,[[["event",3],["arc",3],["mutex",3]],[["pit",3],["result",4],["piterror",4]]]],[11,"get_pit_state","","",166,[[],["pitstate",3]]],[11,"set_pit_state","","",166,[[["pitstate",3]]]],[11,"new","","Constructs a new Vfio Platform device for the given Vfio …",167,[[["tube",3],["vfiodevice",3]]]],[11,"get_platform_irqs","","",167,[[],[["result",4],["vfioerror",4],["vec",3]]]],[11,"irq_is_automask","","",167,[[["vfioirq",3]],["bool",15]]],[11,"assign_platform_irq","","",167,[[["u32",15],["event",3],["option",4]]]],[11,"allocate_regions","","",167,[[["systemallocator",3]],[["vec",3],["result",4],["error",4]]]],[11,"keep_rds","","",167,[[],[["rawdescriptor",6],["vec",3]]]],[11,"device_file","","Gets the vfio device backing <code>File</code>.",167,[[],["file",3]]],[11,"new","","Takes the given device and isolates it into another …",168,[[["vec",3],["busdevice",8],["rawdescriptor",6],["minijail",3]],[["error",4],["result",4],["proxydevice",3]]]],[11,"pid","","",168,[[],["pid_t",6]]],[11,"queue_input_bytes","","Queues raw bytes for the guest to read and signals the …",169,[[],["result",6]]],[11,"interrupt_event","","Gets the interrupt event used to interrupt the driver …",169,[[],["event",3]]],[11,"new","devices::virtio","Creates a new virtio balloon device.",172,[[["tube",3],["u64",15]],[["balloonerror",4],["result",4],["balloon",3]]]],[11,"new","","Construct a new Reader wrapper over <code>desc_chain</code>.",173,[[["guestmemory",3],["descriptorchain",3]],[["result",4],["reader",3],["error",4]]]],[11,"read_obj","","Reads an object from the descriptor chain buffer.",173,[[],[["result",6],["datainit",8]]]],[11,"collect","","Reads objects by consuming all the remaining data in the …",173,[[],[["fromiterator",8],["result",6]]]],[11,"iter","","Creates an iterator for sequentially reading <code>DataInit</code> …",173,[[],[["readeriterator",3],["datainit",8]]]],[11,"read_to_volatile_slice","","Reads data into a volatile slice up to the minimum of the …",173,[[["volatileslice",3]],["usize",15]]],[11,"read_to","","Reads data from the descriptor chain buffer into a file …",173,[[["filereadwritevolatile",8],["usize",15]],[["usize",15],["result",6]]]],[11,"read_to_at","","Reads data from the descriptor chain buffer into a File …",173,[[["usize",15],["u64",15],["filereadwriteatvolatile",8]],[["usize",15],["result",6]]]],[11,"read_exact_to","","Reads data from the descriptor chain similar to \'read_to\' …",173,[[["filereadwritevolatile",8],["usize",15]],["result",6]]],[11,"read_exact_to_at","","Reads data from the descriptor chain similar to …",173,[[["usize",15],["u64",15],["filereadwriteatvolatile",8]],["result",6]]],[11,"read_to_at_fut","","Reads data from the descriptor chain buffer into an …",173,[[["usize",15],["u64",15]]]],[11,"read_exact_to_at_fut","","Reads exactly <code>count</code> bytes from the chain to the disk …",173,[[["usize",15],["u64",15]]]],[11,"available_bytes","","Returns number of bytes available for reading.  May …",173,[[],["usize",15]]],[11,"bytes_read","","Returns number of bytes already read from the descriptor …",173,[[],["usize",15]]],[11,"get_remaining","","Returns a <code>&[VolatileSlice]</code> that represents all the …",173,[[],["smallvec",3]]],[11,"consume","","Consumes <code>amt</code> bytes from the underlying descriptor chain. …",173,[[["usize",15]]]],[11,"split_at","","Splits this <code>Reader</code> into two at the given offset in the …",173,[[["usize",15]],["reader",3]]],[11,"new","","Construct a new Writer wrapper over <code>desc_chain</code>.",175,[[["guestmemory",3],["descriptorchain",3]],[["result",4],["writer",3],["error",4]]]],[11,"write_obj","","Writes an object to the descriptor chain buffer.",175,[[["datainit",8]],["result",6]]],[11,"write_iter","","Writes all objects produced by <code>iter</code> into the descriptor …",175,[[["iterator",8]],["result",6]]],[11,"consume","","Writes a collection of objects into the descriptor chain …",175,[[["intoiterator",8]],["result",6]]],[11,"available_bytes","","Returns number of bytes available for writing.  May …",175,[[],["usize",15]]],[11,"write_from_volatile_slice","","Reads data into a volatile slice up to the minimum of the …",175,[[["volatileslice",3]],["usize",15]]],[11,"write_from","","Writes data to the descriptor chain buffer from a file …",175,[[["filereadwritevolatile",8],["usize",15]],[["usize",15],["result",6]]]],[11,"write_from_at","","Writes data to the descriptor chain buffer from a File at …",175,[[["usize",15],["u64",15],["filereadwriteatvolatile",8]],[["usize",15],["result",6]]]],[11,"write_all_from","","",175,[[["filereadwritevolatile",8],["usize",15]],["result",6]]],[11,"write_all_from_at","","",175,[[["usize",15],["u64",15],["filereadwriteatvolatile",8]],["result",6]]],[11,"write_from_at_fut","","Writes data to the descriptor chain buffer from an …",175,[[["usize",15],["u64",15]]]],[11,"write_all_from_at_fut","","",175,[[["usize",15],["u64",15]]]],[11,"bytes_written","","Returns number of bytes already written to the descriptor …",175,[[],["usize",15]]],[11,"get_remaining","","Returns a <code>&[VolatileSlice]</code> that represents all the …",175,[[],["smallvec",3]]],[11,"consume_bytes","","Consumes <code>amt</code> bytes from the underlying descriptor chain. …",175,[[["usize",15]]]],[11,"split_at","","Splits this <code>Writer</code> into two at the given offset in the …",175,[[["usize",15]],["writer",3]]],[11,"signal_used_queue","","Notify the driver that buffers have been placed in the …",122,[[["u16",15]]]],[11,"new","","",181,[[["arc",3],["u16",15],["option",4],["event",3],["arc",3],["atomicusize",3]],["interrupt",3]]],[11,"get_interrupt_evt","","Get a reference to the interrupt event.",181,[[],["event",3]]],[11,"interrupt_resample","","Handle interrupt resampling event, reading the value from …",181,[[]]],[11,"get_msix_config","","Get a reference to the msix configuration",181,[[],["option",4]]],[11,"new","","Create a new virtio IOMMU device.",182,[[["u32",15],["u64",15],["btreemap",3],["arc",3]],[["sysresult",6],["iommu",3]]]],[11,"new","","",183,[[["str",15],["config",3],["u64",15]],[["p9",3],["p9result",6]]]],[11,"new","","",184,[[["tube",3],["guestaddress",3],["file",3],["u64",15],["memslot",6],["option",4]],[["sysresult",6],["pmem",3]]]],[11,"readable","","Returns an iterator that only yields the readable …",185,[[]]],[11,"writable","","Returns an iterator that only yields the writable …",185,[[]]],[11,"has_next","","Gets if this descriptor chain has another descriptor …",125,[[],["bool",15]]],[11,"is_write_only","","If the driver designated this as a write only descriptor.",125,[[],["bool",15]]],[11,"is_read_only","","If the driver designated this as a read only descriptor.",125,[[],["bool",15]]],[11,"next_descriptor","","Gets the next descriptor in this descriptor chain, if …",125,[[],[["descriptorchain",3],["option",4]]]],[11,"into_iter","","Produces an iterator over all the descriptors in this …",125,[[],["desciter",3]]],[11,"new","","Constructs an empty virtio queue with the given <code>max_size</code>.",126,[[["u16",15]],["queue",3]]],[11,"actual_size","","Return the actual size of the queue, as the driver may …",126,[[],["u16",15]]],[11,"reset","","Reset queue to a clean state",126,[[]]],[11,"is_valid","","",126,[[["guestmemory",3]],["bool",15]]],[11,"peek","","Get the first available descriptor chain without removing …",126,[[["guestmemory",3]],[["descriptorchain",3],["option",4]]]],[11,"pop_peeked","","Remove the first available descriptor chain from the …",126,[[["guestmemory",3]]]],[11,"pop","","If a new DescriptorHead is available, returns one and …",126,[[["guestmemory",3]],[["descriptorchain",3],["option",4]]]],[11,"iter","","A consuming iterator over all available descriptor chain …",126,[[["guestmemory",3]],["availiter",3]]],[11,"next_async","","Asynchronously read the next descriptor chain from the …",126,[[["eventasync",3],["guestmemory",3]]]],[11,"add_used","","Puts an available descriptor head into the used ring for …",126,[[["u32",15],["guestmemory",3],["u16",15]]]],[11,"set_notify","","Enable / Disable guest notify device that requests are …",126,[[["bool",15],["guestmemory",3]]]],[11,"trigger_interrupt","","inject interrupt into guest on this queue return true: …",126,[[["guestmemory",3],["signalableinterrupt",8]],["bool",15]]],[11,"ack_features","","Acknowledges that this set of features should be enabled …",126,[[["u64",15]]]],[11,"new","","Create a new virtio rng device that gets random data from …",187,[[["u64",15]],[["rng",3],["rngerror",4],["result",4]]]],[11,"new","","",188,[[["pathbuf",3]],["tpm",3]]],[11,"new","","",189,[[["tube",3],["videodevicetype",4],["option",4],["u64",15]],["videodevice",3]]],[11,"debug_label","","Returns a label suitable for debug output.",129,[[],["string",3]]],[11,"features","","The set of feature bits that this device supports in …",129,[[],["u64",15]]],[11,"ack_features","","Acknowledges that this set of features should be enabled.",129,[[["u64",15]]]],[11,"read_config","","Reads this device configuration space at <code>offset</code>.",129,[[["u64",15]]]],[11,"write_config","","Writes to this device configuration space at <code>offset</code>.",129,[[["u64",15]]]],[11,"reset","","Optionally deactivates this device. If the reset method is…",129,[[],["bool",15]]],[11,"get_device_bars","","Returns any additional BAR configuration required by the …",129,[[["pciaddress",3]],[["pcibarconfiguration",3],["vec",3]]]],[11,"get_device_caps","","Returns any additional capabiltiies required by the …",129,[[],[["box",3],["vec",3]]]],[11,"on_device_sandboxed","","Invoked when the device is sandboxed.",129,[[]]],[11,"control_notify","","",129,[[["msixstatus",4]]]],[11,"generate_acpi","","",129,[[["option",4],["vec",3],["sdt",3]],[["option",4],["vec",3]]]],[11,"read_bar","","Reads from a BAR region mapped in to the device.",129,[[["usize",15],["u64",15]]]],[11,"write_bar","","Writes to a BAR region mapped in to the device.",129,[[["usize",15],["u64",15]]]],[11,"new","","",190,[[["u32",15],["u8",15],["pcicapabilitytype",4],["le32",3]]]],[11,"new","","",191,[[["u64",15],["u8",15],["pcicapabilitytype",4]]]],[11,"new","","Constructs a new PCI transport for the given virtio …",192,[[["guestmemory",3],["box",3],["tube",3],["virtiodevice",8]],["result",6]]],[11,"new","devices::virtio::gpu","",197,[[["unixstream",3],["eventdevicekind",4]],["eventdevice",3]]],[11,"mouse","","",197,[[["unixstream",3]],["eventdevice",3]]],[11,"touchscreen","","",197,[[["unixstream",3]],["eventdevice",3]]],[11,"keyboard","","",197,[[["unixstream",3]],["eventdevice",3]]],[11,"kind","","",197,[[],["eventdevicekind",4]]],[11,"flush_buffered_events","","Flushes the buffered events that did not fit into the …",197,[[],[["bool",15],["result",4],["error",3]]]],[11,"is_buffered_events_empty","","",197,[[],["bool",15]]],[11,"send_report","","",197,[[],[["bool",15],["result",4],["error",3]]]],[11,"send_event_encoded","","Sends the given <code>event</code>, returning <code>Ok(true)</code> if, after this …",197,[[["virtio_input_event",3]],[["bool",15],["result",4],["error",3]]]],[11,"recv_event_encoded","","",197,[[],[["result",4],["error",3],["virtio_input_event",3]]]],[11,"new","devices::virtio::snd::vios_backend","Creates a new stream source given the path to the audio …",200,[[["path",3],["asref",8]],[["result",4],["error",4],["viosshmstreamsource",3]]]],[11,"try_new","","Create a new client given the path to the audio server\'s …",202,[[["path",3],["asref",8]],[["error",4],["result",4],["viosclient",3]]]],[11,"num_jacks","","Get the number of jacks",202,[[],["u32",15]]],[11,"num_streams","","Get the number of pcm streams",202,[[],["u32",15]]],[11,"num_chmaps","","Get the number of channel maps",202,[[],["u32",15]]],[11,"jack_info","","Get the configuration information on a jack",202,[[["u32",15]],[["option",4],["virtio_snd_jack_info",3]]]],[11,"stream_info","","Get the configuration information on a pcm stream",202,[[["u32",15]],[["virtio_snd_pcm_info",3],["option",4]]]],[11,"chmap_info","","Get the configuration information on a channel map",202,[[["u32",15]],[["virtio_snd_chmap_info",3],["option",4]]]],[11,"start_bg_thread","","Starts the background thread that receives release …",202,[[],[["error",4],["result",4]]]],[11,"stop_bg_thread","","Stops the background thread.",202,[[],[["error",4],["result",4]]]],[11,"get_event_notifier","","Gets an Event object that will trigger every time an …",202,[[],[["result",4],["event",3],["error",4]]]],[11,"pop_event","","Retrieves one event. Callers should have received a …",202,[[],[["virtio_snd_event",3],["option",4]]]],[11,"remap_jack","","Remap a jack. This should only be called if the jack …",202,[[["u32",15]],[["error",4],["result",4]]]],[11,"set_stream_parameters","","Configures a stream with the given parameters.",202,[[["u32",15],["viosstreamparams",3]],[["error",4],["result",4]]]],[11,"set_stream_parameters_raw","","Configures a stream with the given parameters.",202,[[["virtio_snd_pcm_set_params",3]],[["error",4],["result",4]]]],[11,"prepare_stream","","Send the PREPARE_STREAM command to the server.",202,[[["u32",15]],[["error",4],["result",4]]]],[11,"release_stream","","Send the RELEASE_STREAM command to the server.",202,[[["u32",15]],[["error",4],["result",4]]]],[11,"start_stream","","Send the START_STREAM command to the server.",202,[[["u32",15]],[["error",4],["result",4]]]],[11,"stop_stream","","Send the STOP_STREAM command to the server.",202,[[["u32",15]],[["error",4],["result",4]]]],[11,"inject_audio_data","","Send audio frames to the server. Blocks the calling …",202,[[["u32",15],["usize",15],["fnonce",8]],[["error",4],["result",4]]]],[11,"request_audio_data","","Request audio frames from the server. It blocks until the …",202,[[["u32",15],["usize",15],["fnonce",8]],[["error",4],["result",4]]]],[11,"keep_fds","","Get a list of file descriptors used by the implementation.",202,[[],[["rawfd",6],["vec",3]]]],[11,"new","devices::virtio::vhost","Create a new virtio network device with the given IP …",204,[[["ipv4addr",3],["path",3],["u64",15],["macaddress",3]],[["result",6],["net",3]]]],[11,"new","devices::virtio::vhost::user::vmm","",205,[[["path",3],["asref",8],["u64",15]],[["result",6],["block",3]]]],[11,"new","","",206,[[["path",3],["asref",8],["u64",15]],[["result",6],["console",3]]]],[11,"new","","",207,[[["path",3],["u64",15],["asref",8],["str",15]],[["result",6],["fs",3]]]],[11,"new","","",208,[[["path",3],["tube",3],["u64",15],["asref",8]],[["result",6],["gpu",3]]]],[11,"new_from_path","","Creates a <code>VhostUserHandler</code> instance attached to the …",111,[[["path",3],["vhostuserprotocolfeatures",3],["u64",15],["asref",8]],["result",6]]],[11,"new_from_stream","","Creates a <code>VhostUserHandler</code> instance attached to the …",111,[[["unixstream",3],["vhostuserprotocolfeatures",3],["u64",15]],["result",6]]],[11,"queue_sizes","","Returns a vector of sizes of each queue.",111,[[["usize",15],["u16",15]],[["result",6],["vec",3]]]],[11,"ack_features","","Enables a set of features.",111,[[["u64",15]],["result",6]]],[11,"read_config","","Gets the device configuration space at <code>offset</code> and writes …",111,[[["u64",15]],["result",6]]],[11,"write_config","","Writes <code>data</code> into the device configuration space at <code>offset</code>.",111,[[["u64",15]],["result",6]]],[11,"set_device_request_channel","","Sets the channel for device-specific messages.",111,[[["tube",3]],["result",6]]],[11,"set_mem_table","","Sets the memory map regions so it can translate the vring …",111,[[["guestmemory",3]],["result",6]]],[11,"activate_vring","","Activates a vring for the given <code>queue</code>.",111,[[["usize",15],["event",3],["queue",3],["guestmemory",3]],["result",6]]],[11,"activate","","Activates vrings.",111,[[["guestmemory",3],["interrupt",3]],["result",6]]],[11,"reset","","Deactivates all vrings.",111,[[["usize",15]],["result",6]]],[11,"new","","",209,[[["path",3],["asref",8],["u64",15]],[["result",4],["mac80211hwsim",3],["error",4]]]],[11,"new","","",210,[[["path",3],["asref",8],["u64",15]],[["net",3],["error",4],["result",4]]]],[11,"new","","",211,[[["path",3],["asref",8],["u64",15]],[["vsock",3],["result",6]]]],[11,"new","","",212,[[["path",3],["asref",8],["u64",15]],[["result",6],["wl",3]]]],[11,"new","devices::virtio::vhost","Create a new virtio-vsock device with the given VM cid.",213,[[["path",3],["u64",15]],[["vsock",3],["result",6]]]],[11,"new_for_testing","","",213,[[["u64",15]],["vsock",3]]],[11,"acked_features","","",213,[[],["u64",15]]]],"p":[[3,"DirectIo"],[4,"DirectIrqError"],[3,"DirectIrq"],[8,"IrqChipX86_64"],[8,"IrqChip"],[4,"IrqChipCap"],[4,"VcpuRunState"],[3,"Pl030"],[3,"ACPIPMResource"],[4,"BatteryError"],[3,"GoldfishBattery"],[4,"Error"],[8,"SerialDevice"],[4,"SerialType"],[4,"SerialHardware"],[3,"SerialParameters"],[4,"Error"],[4,"HostBackendDeviceProvider"],[13,"Created"],[13,"Started"],[4,"ControlEndpointState"],[3,"HostDevice"],[3,"UsbEndpoint"],[4,"Error"],[3,"ScatterGatherBuffer"],[4,"Error"],[13,"Attach"],[13,"Detach"],[13,"NoSuchDevice"],[3,"UsbPort"],[3,"UsbHub"],[4,"BackendType"],[8,"XhciBackendDevice"],[8,"XhciBackendDeviceProvider"],[3,"XhciFailHandle"],[3,"XhciController"],[4,"Error"],[4,"TransferDirection"],[4,"XhciTransferState"],[13,"Submitted"],[4,"XhciTransferType"],[3,"XhciTransferManager"],[3,"XhciTransfer"],[4,"VfioError"],[3,"VfioContainer"],[8,"VfioCommonTrait"],[4,"VfioIrqType"],[3,"VfioIrq"],[3,"VfioDevice"],[3,"WlState"],[3,"Wl"],[4,"ControlError"],[3,"DiskState"],[3,"BlockAsync"],[3,"Block"],[3,"virtio_blk_config"],[4,"ConsoleError"],[3,"virtio_console_config"],[4,"CachePolicy"],[3,"Config"],[3,"PassthroughFs"],[3,"virtio_fs_config"],[4,"Error"],[3,"Fs"],[3,"virtio_gpu_config"],[4,"GpuMode"],[3,"GpuDisplayParameters"],[3,"GpuParameters"],[3,"VirtioScanoutBlobData"],[8,"QueueReader"],[3,"ReturnDescriptor"],[3,"Frontend"],[4,"DisplayBackend"],[3,"Gpu"],[4,"NetError"],[3,"virtio_net_ctrl_hdr"],[4,"Token"],[3,"Net"],[4,"ResourceRequest"],[13,"GetBuffer"],[13,"GetFence"],[3,"PlaneInfo"],[3,"BufferInfo"],[4,"ResourceInfo"],[13,"Fence"],[4,"ResourceResponse"],[4,"ResourceBridgeError"],[4,"Error"],[3,"virtio_snd_config"],[3,"virtio_snd_hdr"],[3,"virtio_snd_jack_hdr"],[3,"virtio_snd_event"],[3,"virtio_snd_query_info"],[3,"virtio_snd_info"],[3,"virtio_snd_pcm_info"],[3,"virtio_snd_pcm_hdr"],[3,"virtio_snd_pcm_set_params"],[3,"virtio_snd_pcm_xfer"],[3,"virtio_snd_pcm_status"],[3,"virtio_snd_jack_info"],[3,"virtio_snd_jack_remap"],[3,"virtio_snd_chmap_info"],[4,"StreamMsg"],[3,"Stream"],[3,"StreamProxy"],[4,"Error"],[4,"ProtocolErrorKind"],[3,"VioSStreamParams"],[4,"SoundError"],[4,"Error"],[3,"VirtioVhostUser"],[3,"VhostUserHandler"],[4,"Error"],[13,"InvalidConfigOffset"],[13,"TagTooLong"],[4,"VhostDevRequest"],[4,"VhostDevResponse"],[4,"Error"],[4,"BalloonError"],[4,"DescriptorError"],[4,"DescriptorType"],[4,"InputError"],[8,"SignalableInterrupt"],[4,"IommuError"],[4,"P9Error"],[3,"DescriptorChain"],[3,"Queue"],[4,"RngError"],[4,"VideoDeviceType"],[8,"VirtioDevice"],[4,"PciCapabilityType"],[4,"PciVirtioSubclass"],[4,"BusError"],[3,"BusAccessInfo"],[8,"BusDevice"],[8,"BusDeviceObj"],[8,"BusDeviceSync"],[3,"BusRange"],[8,"BusResumeDevice"],[4,"HostHotPlugKey"],[13,"Vfio"],[8,"HotPlugBus"],[4,"Ac97Backend"],[3,"Ac97Parameters"],[3,"PciAddress"],[8,"PciDevice"],[4,"PciDeviceError"],[13,"MsixAllocatorOverflow"],[4,"PciInterruptPin"],[4,"PitError"],[4,"ProxyError"],[4,"ProtectionType"],[3,"Bus"],[3,"Cmos"],[3,"I8042Device"],[3,"KvmKernelIrqChip"],[3,"KvmSplitIrqChip"],[3,"Pic"],[3,"Ioapic"],[3,"Ac97Dev"],[3,"PciRoot"],[3,"PciConfigIo"],[3,"PciConfigMmio"],[3,"PciBridge"],[3,"PcieRootPort"],[3,"VfioPciDevice"],[3,"Pit"],[3,"VfioPlatformDevice"],[3,"ProxyDevice"],[3,"Serial"],[3,"ProviderInner"],[3,"VfioCommonSetup"],[3,"Balloon"],[3,"Reader"],[3,"ReaderIterator"],[3,"Writer"],[3,"virtio_input_device_ids"],[3,"virtio_input_absinfo"],[3,"virtio_input_bitmap"],[3,"VirtioInputConfig"],[3,"Input"],[3,"Interrupt"],[3,"Iommu"],[3,"P9"],[3,"Pmem"],[3,"DescIter"],[3,"AvailIter"],[3,"Rng"],[3,"Tpm"],[3,"VideoDevice"],[3,"VirtioPciNotifyCap"],[3,"VirtioPciShmCap"],[3,"VirtioPciDevice"],[3,"DescriptorsExhausted"],[3,"virtio_blk_geometry"],[3,"virtio_blk_topology"],[3,"Console"],[3,"EventDevice"],[3,"FenceState"],[3,"VirtioNetConfig"],[3,"VioSShmStreamSource"],[3,"VioSndShmStream"],[3,"VioSClient"],[3,"Sound"],[3,"Net"],[3,"Block"],[3,"Console"],[3,"Fs"],[3,"Gpu"],[3,"Mac80211Hwsim"],[3,"Net"],[3,"Vsock"],[3,"Wl"],[3,"Vsock"]]},\
"disk":{"doc":"","i":[[3,"QcowFile","disk","Represents a qcow2 file. This is a sparse file format …",null,null],[17,"QCOW_MAGIC","","",null,null],[5,"create_composite_disk","","Create a new composite disk image containing the given …",null,[[["file",3],["path",3]],[["error",4],["result",4]]]],[5,"create_zero_filler","","Create a zero filler file which can be used to fill the …",null,[[["path",3],["asref",8]],[["error",4],["result",4]]]],[4,"CompositeError","","",null,null],[13,"DiskError","","",0,null],[13,"DuplicatePartitionLabel","","",0,null],[13,"GptError","","",0,null],[13,"InvalidMagicHeader","","",0,null],[13,"InvalidPath","","",0,null],[13,"InvalidProto","","",0,null],[13,"InvalidSpecification","","",0,null],[13,"NoImageFiles","","",0,null],[13,"OpenFile","","",0,null],[13,"ReadSpecificationError","","",0,null],[13,"UnalignedReadWrite","","",0,null],[13,"UnknownVersion","","",0,null],[13,"UnsupportedComponent","","",0,null],[13,"WriteHeader","","",0,null],[13,"WriteProto","","",0,null],[13,"WriteZeroFiller","","",0,null],[4,"ImagePartitionType","","The type of partition.",null,null],[13,"LinuxFilesystem","","",1,null],[13,"EfiSystemPartition","","",1,null],[3,"PartitionInfo","","Information about a partition to create.",null,null],[12,"label","","",2,null],[12,"path","","",2,null],[12,"partition_type","","",2,null],[12,"writable","","",2,null],[12,"size","","",2,null],[4,"GptError","","",null,null],[13,"InvalidDiskSize","","The disk size was invalid (too large).",3,null],[13,"WritingData","","There was an error writing data to one of the image files.",3,null],[17,"MAX_NESTING_DEPTH","","Nesting depth limit for disk formats that can open other …",null,null],[4,"Error","","",null,null],[13,"BlockDeviceNew","","",4,null],[13,"ConversionNotSupported","","",4,null],[13,"CreateAndroidSparseDisk","","",4,null],[13,"CreateCompositeDisk","","",4,null],[13,"CreateSingleFileDisk","","",4,null],[13,"Fallocate","","",4,null],[13,"Fsync","","",4,null],[13,"HostFsType","","",4,null],[13,"MaxNestingDepthExceeded","","",4,null],[13,"QcowError","","",4,null],[13,"ReadingData","","",4,null],[13,"ReadingHeader","","",4,null],[13,"ReadToMem","","",4,null],[13,"SeekingFile","","",4,null],[13,"SettingFileSize","","",4,null],[13,"UnknownType","","",4,null],[13,"WriteFromMem","","",4,null],[13,"WriteFromVec","","",4,null],[13,"WritingData","","",4,null],[6,"Result","","",null,null],[8,"DiskGetLen","","A trait for getting the length of a disk image or raw …",null,null],[10,"get_len","","Get the current length of the disk in bytes.",5,[[],[["result",6],["u64",15]]]],[8,"DiskFile","","The prerequisites necessary to support a block device.",null,null],[8,"ToAsyncDisk","","A <code>DiskFile</code> that can be converted for asychronous access.",null,null],[10,"to_async_disk","","Convert a boxed self in to a box-wrapped implementaiton …",6,[[["box",3],["executor",4]],[["result",6],["box",3]]]],[4,"ImageType","","The variants of image files on the host that can be used …",null,null],[13,"Raw","","",7,null],[13,"Qcow2","","",7,null],[13,"CompositeDisk","","",7,null],[13,"AndroidSparse","","",7,null],[5,"convert","","Copy the contents of a disk image in <code>src_file</code> into …",null,[[["u32",15],["file",3],["imagetype",4]],["result",6]]],[5,"detect_image_type","","Detect the type of an image file by checking for a valid …",null,[[["file",3]],[["result",6],["imagetype",4]]]],[5,"async_ok","","Check if the image file type can be used for async disk …",null,[[["file",3]],[["bool",15],["result",6]]]],[5,"create_async_disk_file","","Inspect the image file type and create an appropriate …",null,[[["file",3]],[["box",3],["result",6]]]],[5,"create_disk_file","","Inspect the image file type and create an appropriate …",null,[[["u32",15],["file",3]],[["box",3],["result",6]]]],[8,"AsyncDisk","","An asynchronously accessible disk.",null,null],[10,"into_inner","","Returns the inner file consuming self.",8,[[["box",3]],[["box",3],["toasyncdisk",8]]]],[10,"fsync","","Asynchronously fsyncs any completed operations to the …",8,[[],[["pin",3],["box",3]]]],[10,"read_to_mem","","Reads from the file at \'file_offset\' in to memory <code>mem</code> at …",8,[[["arc",3],["guestmemory",3],["u64",15]],[["pin",3],["box",3]]]],[10,"write_from_mem","","Writes to the file at \'file_offset\' from memory <code>mem</code> at …",8,[[["arc",3],["guestmemory",3],["u64",15]],[["pin",3],["box",3]]]],[10,"punch_hole","","Replaces a range of bytes with a hole.",8,[[["u64",15]],[["pin",3],["box",3]]]],[10,"write_zeroes_at","","Writes up to <code>length</code> bytes of zeroes to the stream, …",8,[[["u64",15]],[["pin",3],["box",3]]]],[3,"SingleFileDisk","","A disk backed by a single file that implements <code>AsyncDisk</code> …",null,null],[11,"new","","",9,[[["file",3],["executor",4]],["result",6]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"write_zeroes","","",10,[[["usize",15]],[["usize",15],["result",4],["error",3]]]],[11,"vzip","","",10,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"get_len","","",10,[[],[["result",6],["u64",15]]]],[11,"get_len","","",9,[[],[["result",6],["u64",15]]]],[11,"into_inner","","",9,[[["box",3]],[["box",3],["toasyncdisk",8]]]],[11,"fsync","","",9,[[],[["pin",3],["box",3]]]],[11,"read_to_mem","","",9,[[["arc",3],["guestmemory",3],["u64",15]],[["pin",3],["box",3]]]],[11,"write_from_mem","","",9,[[["arc",3],["guestmemory",3],["u64",15]],[["pin",3],["box",3]]]],[11,"punch_hole","","",9,[[["u64",15]],[["pin",3],["box",3]]]],[11,"write_zeroes_at","","",9,[[["u64",15]],[["pin",3],["box",3]]]],[11,"drop","","",10,[[]]],[11,"from","","",0,[[["error",4]]]],[11,"clone","","",2,[[],["partitioninfo",3]]],[11,"clone","","",1,[[],["imagepartitiontype",4]]],[11,"eq","","",2,[[["partitioninfo",3]],["bool",15]]],[11,"ne","","",2,[[["partitioninfo",3]],["bool",15]]],[11,"eq","","",1,[[["imagepartitiontype",4]],["bool",15]]],[11,"eq","","",7,[[["imagetype",4]],["bool",15]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"read","","",10,[[],[["usize",15],["result",6]]]],[11,"seek","","",10,[[["seekfrom",4]],[["u64",15],["result",6]]]],[11,"write","","",10,[[],[["usize",15],["result",6]]]],[11,"flush","","",10,[[],["result",6]]],[11,"as_raw_descriptors","","",10,[[],[["rawdescriptor",6],["vec",3]]]],[11,"allocate","","",10,[[["u64",15]],["result",6]]],[11,"allocate","","",9,[[["u64",15]],["result",6]]],[11,"read_at_volatile","","",10,[[["volatileslice",3],["u64",15]],[["usize",15],["result",6]]]],[11,"write_at_volatile","","",10,[[["volatileslice",3],["u64",15]],[["usize",15],["result",6]]]],[11,"read_volatile","","",10,[[["volatileslice",3]],[["usize",15],["result",6]]]],[11,"write_volatile","","",10,[[["volatileslice",3]],[["usize",15],["result",6]]]],[11,"set_len","","",10,[[["u64",15]],["result",6]]],[11,"set_len","","",9,[[["u64",15]],["result",6]]],[11,"fsync","","",10,[[],["result",6]]],[11,"seek_hole","","",10,[[["u64",15]],[["result",6],["option",4]]]],[11,"seek_data","","",10,[[["u64",15]],[["result",6],["option",4]]]],[11,"write_zeroes_at","","",10,[[["usize",15],["u64",15]],[["usize",15],["result",6]]]],[11,"punch_hole","","",10,[[["u64",15]],["result",6]]],[11,"from","","Creates a QcowFile from <code>file</code>. File must be a valid qcow2 …",10,[[["u32",15],["file",3]],[["error",4],["result",4],["qcowfile",3]]]],[11,"new","","Creates a new QcowFile at the given path.",10,[[["file",3],["u64",15]],[["error",4],["result",4],["qcowfile",3]]]],[11,"new_from_backing","","Creates a new QcowFile at the given path.",10,[[["u32",15],["file",3],["str",15]],[["error",4],["result",4],["qcowfile",3]]]],[11,"set_backing_file","","",10,[[["box",3],["option",4]]]],[11,"header","","Returns the <code>QcowHeader</code> for this file.",10,[[],["qcowheader",3]]],[11,"l1_table","","Returns the L1 lookup table for this file. This is only …",10,[[]]],[11,"l2_table","","Returns an L2_table of cluster addresses, only used for …",10,[[["usize",15]],[["error",4],["result",4],["option",4]]]],[11,"ref_table","","Returns the refcount table for this file. This is only …",10,[[]]],[11,"refcount_block","","Returns the <code>index</code>th refcount block from the file.",10,[[["usize",15]],[["option",4],["error",4],["result",4]]]],[11,"first_zero_refcount","","Returns the first cluster in the file with a 0 refcount. …",10,[[],[["result",4],["error",4],["option",4]]]]],"p":[[4,"CompositeError"],[4,"ImagePartitionType"],[3,"PartitionInfo"],[4,"GptError"],[4,"Error"],[8,"DiskGetLen"],[8,"ToAsyncDisk"],[4,"ImageType"],[8,"AsyncDisk"],[3,"SingleFileDisk"],[3,"QcowFile"]]},\
"downcast_rs":{"doc":"Build status Latest version Documentation","i":[[8,"Downcast","downcast_rs","Supports conversion to <code>Any</code>. Traits to be extended by …",null,null],[10,"into_any","","Convert <code>Box<dyn Trait></code> (where <code>Trait: Downcast</code>) to …",0,[[["box",3]],[["any",8],["box",3]]]],[10,"into_any_rc","","Convert <code>Rc<Trait></code> (where <code>Trait: Downcast</code>) to <code>Rc<Any></code>. …",0,[[["rc",3]],[["rc",3],["any",8]]]],[10,"as_any","","Convert <code>&Trait</code> (where <code>Trait: Downcast</code>) to <code>&Any</code>. This is …",0,[[],["any",8]]],[10,"as_any_mut","","Convert <code>&mut Trait</code> (where <code>Trait: Downcast</code>) to <code>&Any</code>. This …",0,[[],["any",8]]],[8,"DowncastSync","","Extends <code>Downcast</code> to support <code>Sync</code> traits that thus support …",null,null],[10,"into_any_arc","","Convert <code>Arc<Trait></code> (where <code>Trait: Downcast</code>) to <code>Arc<Any></code>. …",1,[[["arc",3]],[["arc",3],["any",8]]]],[14,"impl_downcast","","Adds downcasting support to traits that extend …",null,null]],"p":[[8,"Downcast"],[8,"DowncastSync"]]},\
"enumn":{"doc":"Convert number to enum.","i":[[24,"N","enumn","",null,null]],"p":[]},\
"fuse":{"doc":"","i":[[0,"filesystem","fuse","",null,null],[3,"Entry","fuse::filesystem","Information about a path in the filesystem.",null,null],[12,"inode","","An <code>Inode</code> that uniquely identifies this path. During <code>lookup</code>…",0,null],[12,"generation","","The generation number for this <code>Entry</code>. Typically used for …",0,null],[12,"attr","","Inode attributes. Even if <code>attr_timeout</code> is zero, <code>attr</code> must …",0,null],[12,"attr_timeout","","How long the values in <code>attr</code> should be considered valid. …",0,null],[12,"entry_timeout","","How long the name associated with this <code>Entry</code> should be …",0,null],[3,"DirEntry","","Represents information about an entry in a directory.",null,null],[12,"ino","","The inode number for this entry. This does NOT have to be …",1,null],[12,"offset","","Any non-zero value that the kernel can use to identify …",1,null],[12,"type_","","The type of this directory entry. Valid values are any of …",1,null],[12,"name","","The name of this directory entry. There are no …",1,null],[4,"GetxattrReply","","A reply to a <code>getxattr</code> method call.",null,null],[13,"Value","","The value of the requested extended attribute. This can …",2,null],[13,"Count","","The size of the buffer needed to hold the value of the …",2,null],[4,"ListxattrReply","","A reply to a <code>listxattr</code> method call.",null,null],[13,"Names","","A buffer containing a nul-separated list of the names of …",3,null],[13,"Count","","This size of the buffer needed to hold the full list of …",3,null],[4,"IoctlReply","","A reply to an <code>ioctl</code> method call.",null,null],[13,"Retry","","Indicates that the ioctl should be retried. This is only …",4,null],[12,"input","fuse::filesystem::IoctlReply","Data that should be read by the kernel module and sent to …",5,null],[12,"output","","Buffer space that should be prepared so that the server …",5,null],[13,"Done","fuse::filesystem","Indicates that the ioctl was processed.",4,null],[8,"ZeroCopyReader","","A trait for directly copying data from the fuse transport …",null,null],[10,"read_to","","Copies at most <code>count</code> bytes from <code>self</code> directly into <code>f</code> at …",6,[[["file",3],["usize",15],["u64",15]],[["result",6],["usize",15]]]],[11,"read_exact_to","","Copies exactly <code>count</code> bytes of data from <code>self</code> into <code>f</code> at …",6,[[["file",3],["usize",15],["u64",15]],["result",6]]],[11,"copy_to_end","","Copies all remaining bytes from <code>self</code> into <code>f</code> at offset <code>off</code>…",6,[[["file",3],["u64",15]],[["result",6],["usize",15]]]],[8,"ZeroCopyWriter","","A trait for directly copying data from a <code>File</code> into the …",null,null],[10,"write_from","","Copies at most <code>count</code> bytes from <code>f</code> at offset <code>off</code> directly …",7,[[["file",3],["usize",15],["u64",15]],[["result",6],["usize",15]]]],[11,"write_all_from","","Copies exactly <code>count</code> bytes of data from <code>f</code> at offset <code>off</code> …",7,[[["file",3],["usize",15],["u64",15]],["result",6]]],[11,"copy_to_end","","Copies all remaining bytes from <code>f</code> at offset <code>off</code> into <code>self</code>…",7,[[["file",3],["u64",15]],[["result",6],["usize",15]]]],[3,"Context","","Additional context associated with requests.",null,null],[12,"uid","","The user ID of the calling process.",8,null],[12,"gid","","The group ID of the calling process.",8,null],[12,"pid","","The thread group ID of the calling process.",8,null],[8,"DirectoryIterator","","A trait for iterating over the contents of a directory. …",null,null],[10,"next","","Returns the next entry in the directory or <code>None</code> if there …",9,[[],[["option",4],["direntry",3]]]],[8,"FileSystem","","The main trait that connects a file system with a …",null,null],[16,"Inode","","Represents a location in the filesystem tree and can be …",10,null],[16,"Handle","","Represents a file or directory that is open for …",10,null],[16,"DirIter","","An iterator over the entries of a directory. See the …",10,null],[11,"max_buffer_size","","Maximum size of the buffer that the filesystem can …",10,[[],["u32",15]]],[11,"init","","Initialize the file system.",10,[[["fsoptions",3]],[["result",6],["fsoptions",3]]]],[11,"destroy","","Clean up the file system.",10,[[]]],[11,"lookup","","Look up a directory entry by name and get its attributes.",10,[[["context",3],["cstr",3]],[["entry",3],["result",6]]]],[11,"forget","","Forget about an inode.",10,[[["context",3],["u64",15]]]],[11,"batch_forget","","Forget about multiple inodes.",10,[[["context",3],["vec",3]]]],[11,"getattr","","Get attributes for a file / directory.",10,[[["option",4],["context",3]],["result",6]]],[11,"setattr","","Set attributes for a file / directory.",10,[[["option",4],["context",3],["setattrvalid",3],["stat64",3]],["result",6]]],[11,"readlink","","Read a symbolic link.",10,[[["context",3]],[["result",6],["vec",3]]]],[11,"symlink","","Create a symbolic link.",10,[[["context",3],["cstr",3]],[["entry",3],["result",6]]]],[11,"mknod","","Create a file node.",10,[[["u32",15],["context",3],["cstr",3]],[["entry",3],["result",6]]]],[11,"mkdir","","Create a directory.",10,[[["u32",15],["context",3],["cstr",3]],[["entry",3],["result",6]]]],[11,"chromeos_tmpfile","","Create an unnamed temporary file.",10,[[["u32",15],["context",3]],[["entry",3],["result",6]]]],[11,"unlink","","Remove a file.",10,[[["context",3],["cstr",3]],["result",6]]],[11,"rmdir","","Remove a directory.",10,[[["context",3],["cstr",3]],["result",6]]],[11,"rename","","Rename a file / directory.",10,[[["u32",15],["context",3],["cstr",3]],["result",6]]],[11,"link","","Create a hard link.",10,[[["context",3],["cstr",3]],[["entry",3],["result",6]]]],[11,"open","","Open a file.",10,[[["u32",15],["context",3]],["result",6]]],[11,"create","","Create and open a file.",10,[[["u32",15],["context",3],["cstr",3]],["result",6]]],[11,"read","","Read data from a file.",10,[[["u32",15],["context",3],["option",4],["u64",15],["write",8],["zerocopywriter",8]],[["result",6],["usize",15]]]],[11,"write","","Write data to a file.",10,[[["u32",15],["context",3],["u64",15],["bool",15],["read",8],["zerocopyreader",8],["option",4]],[["result",6],["usize",15]]]],[11,"flush","","Flush the contents of a file.",10,[[["context",3],["u64",15]],["result",6]]],[11,"fsync","","Synchronize file contents.",10,[[["bool",15],["context",3]],["result",6]]],[11,"fallocate","","Allocate requested space for file data.",10,[[["u32",15],["context",3],["u64",15]],["result",6]]],[11,"release","","Release an open file.",10,[[["u32",15],["context",3],["option",4],["u64",15],["bool",15]],["result",6]]],[11,"statfs","","Get information about the file system.",10,[[["context",3]],[["result",6],["statvfs64",3]]]],[11,"setxattr","","Set an extended attribute.",10,[[["u32",15],["context",3],["cstr",3]],["result",6]]],[11,"getxattr","","Get an extended attribute.",10,[[["u32",15],["context",3],["cstr",3]],[["result",6],["getxattrreply",4]]]],[11,"listxattr","","List extended attribute names.",10,[[["u32",15],["context",3]],[["listxattrreply",4],["result",6]]]],[11,"removexattr","","Remove an extended attribute.",10,[[["context",3],["cstr",3]],["result",6]]],[11,"opendir","","Open a directory for reading.",10,[[["u32",15],["context",3]],["result",6]]],[11,"readdir","","Read a directory.",10,[[["u32",15],["context",3],["u64",15]],["result",6]]],[11,"fsyncdir","","Synchronize the contents of a directory.",10,[[["bool",15],["context",3]],["result",6]]],[11,"releasedir","","Release an open directory.",10,[[["u32",15],["context",3]],["result",6]]],[11,"access","","Check file access permissions.",10,[[["u32",15],["context",3]],["result",6]]],[11,"ioctl","","Perform an ioctl on a file or directory.",10,[[["u32",15],["context",3],["ioctlflags",3],["u64",15],["read",8]],[["result",6],["ioctlreply",4]]]],[11,"getlk","","TODO: support this",10,[[],["result",6]]],[11,"setlk","","TODO: support this",10,[[],["result",6]]],[11,"setlkw","","TODO: support this",10,[[],["result",6]]],[11,"bmap","","TODO: support this",10,[[],["result",6]]],[11,"poll","","TODO: support this",10,[[],["result",6]]],[11,"notify_reply","","TODO: support this",10,[[],["result",6]]],[11,"lseek","","TODO: support this",10,[[],["result",6]]],[11,"copy_file_range","","Copy a range of data from one file to another",10,[[["context",3],["u64",15]],[["result",6],["usize",15]]]],[11,"set_up_mapping","","Set up memory mappings.",10,[[["usize",15],["context",3],["u32",15],["u64",15],["mapper",8]],["result",6]]],[11,"remove_mapping","","Remove memory mappings.",10,[[["mapper",8]],["result",6]]],[0,"mount","fuse","",null,null],[4,"MountOption","fuse::mount","Mount options to pass to mount(2) for a FUSE filesystem. …",null,null],[13,"FD","","",11,null],[13,"RootMode","","",11,null],[13,"UserId","","",11,null],[13,"GroupId","","",11,null],[13,"DefaultPermissions","","",11,null],[13,"AllowOther","","",11,null],[13,"MaxRead","","",11,null],[13,"BlockSize","","",11,null],[13,"Extra","","",11,null],[5,"mount","","Initiates a FUSE mount at <code>mountpoint</code> directory with <code>flags</code> …",null,[[["c_ulong",6],["osstr",3],["asref",8],["str",15]],[["result",4],["error",3]]]],[0,"sys","fuse","",null,null],[17,"KERNEL_VERSION","fuse::sys","Version number of this interface.",null,null],[17,"OLDEST_SUPPORTED_KERNEL_MINOR_VERSION","","Oldest supported minor version of the fuse interface.",null,null],[17,"KERNEL_MINOR_VERSION","","Minor version number of this interface.",null,null],[17,"ROOT_ID","","The ID of the inode corresponding to the root directory …",null,null],[17,"FATTR_FH","","",null,null],[17,"FATTR_LOCKOWNER","","",null,null],[3,"SetattrValid","","",null,null],[18,"MODE","","",12,null],[18,"UID","","",12,null],[18,"GID","","",12,null],[18,"SIZE","","",12,null],[18,"ATIME","","",12,null],[18,"MTIME","","",12,null],[18,"ATIME_NOW","","",12,null],[18,"MTIME_NOW","","",12,null],[18,"CTIME","","",12,null],[11,"empty","","Returns an empty set of flags.",12,[[]]],[11,"all","","Returns the set containing all flags.",12,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",12,[[["u32",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",12,[[["u32",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["u32",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",12,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",12,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",12,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",12,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",12,[[]]],[11,"remove","","Removes the specified flags in-place.",12,[[]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",12,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",12,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",12,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",12,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",12,[[]]],[11,"complement","","Returns the complement of this set of flags.",12,[[]]],[3,"OpenOptions","","Options controlling the behavior of files opened by the …",null,null],[18,"DIRECT_IO","","",13,null],[18,"KEEP_CACHE","","",13,null],[18,"NONSEEKABLE","","",13,null],[18,"CACHE_DIR","","",13,null],[18,"STREAM","","",13,null],[11,"empty","","Returns an empty set of flags.",13,[[]]],[11,"all","","Returns the set containing all flags.",13,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",13,[[["u32",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",13,[[["u32",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[["u32",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",13,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",13,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",13,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",13,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",13,[[]]],[11,"remove","","Removes the specified flags in-place.",13,[[]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",13,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",13,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",13,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",13,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",13,[[]]],[11,"complement","","Returns the complement of this set of flags.",13,[[]]],[3,"FsOptions","","A bitfield passed in as a parameter to and returned from …",null,null],[18,"ASYNC_READ","","Indicates that the filesystem supports asynchronous read …",14,null],[18,"POSIX_LOCKS","","Indicates that the filesystem supports \\\"remote\\\" locking.",14,null],[18,"FILE_OPS","","Kernel sends file handle for fstat, etc... (not yet …",14,null],[18,"ATOMIC_O_TRUNC","","Indicates that the filesystem supports the <code>O_TRUNC</code> open …",14,null],[18,"EXPORT_SUPPORT","","Indicates that the filesystem supports lookups of \\\".\\\" and …",14,null],[18,"BIG_WRITES","","FileSystem can handle write size larger than 4kB.",14,null],[18,"DONT_MASK","","Indicates that the kernel should not apply the umask to …",14,null],[18,"SPLICE_WRITE","","Indicates that the server should try to use <code>splice(2)</code> …",14,null],[18,"SPLICE_MOVE","","Indicates that the server should try to move pages …",14,null],[18,"SPLICE_READ","","Indicates that the server should try to use <code>splice(2)</code> …",14,null],[18,"FLOCK_LOCKS","","If set, then calls to <code>flock</code> will be emulated using POSIX …",14,null],[18,"HAS_IOCTL_DIR","","Indicates that the filesystem supports ioctl\'s on …",14,null],[18,"AUTO_INVAL_DATA","","Traditionally, while a file is open the FUSE kernel …",14,null],[18,"DO_READDIRPLUS","","Indicates that the filesystem supports readdirplus.",14,null],[18,"READDIRPLUS_AUTO","","Indicates that the filesystem supports adaptive …",14,null],[18,"ASYNC_DIO","","Indicates that the filesystem supports asynchronous …",14,null],[18,"WRITEBACK_CACHE","","Indicates that writeback caching should be enabled. This …",14,null],[18,"ZERO_MESSAGE_OPEN","","Indicates support for zero-message opens. If this flag is …",14,null],[18,"PARALLEL_DIROPS","","Indicates support for parallel directory operations. If …",14,null],[18,"HANDLE_KILLPRIV","","Indicates that the file system is responsible for …",14,null],[18,"POSIX_ACL","","Indicates support for POSIX ACLs.",14,null],[18,"CACHE_SYMLINKS","","Indicates that the kernel may cache responses to <code>readlink</code> …",14,null],[18,"ZERO_MESSAGE_OPENDIR","","Indicates support for zero-message opens for directories. …",14,null],[18,"EXPLICIT_INVAL_DATA","","Indicates support for invalidating cached pages only on …",14,null],[18,"MAP_ALIGNMENT","","Indicates that the <code>map_alignment</code> field of the <code>InitOut</code> …",14,null],[11,"empty","","Returns an empty set of flags.",14,[[]]],[11,"all","","Returns the set containing all flags.",14,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",14,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",14,[[["u32",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",14,[[["u32",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",14,[[["u32",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",14,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",14,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",14,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",14,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",14,[[]]],[11,"remove","","Removes the specified flags in-place.",14,[[]]],[11,"toggle","","Toggles the specified flags in-place.",14,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",14,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",14,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",14,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",14,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",14,[[]]],[11,"complement","","Returns the complement of this set of flags.",14,[[]]],[17,"RELEASE_FLUSH","","",null,null],[17,"RELEASE_FLOCK_UNLOCK","","",null,null],[17,"GETATTR_FH","","",null,null],[17,"LK_FLOCK","","",null,null],[17,"WRITE_CACHE","","Delayed write from page cache, file handle is guessed.",null,null],[17,"WRITE_LOCKOWNER","","<code>lock_owner</code> field is valid.",null,null],[17,"WRITE_KILL_PRIV","","Kill the suid and sgid bits.",null,null],[17,"READ_LOCKOWNER","","",null,null],[17,"IOCTL_MAX_IOV","","Maximum of in_iovecs + out_iovecs",null,null],[3,"IoctlFlags","","",null,null],[18,"COMPAT","","32bit compat ioctl on 64bit machine",15,null],[18,"UNRESTRICTED","","Not restricted to well-formed ioctls, retry allowed",15,null],[18,"RETRY","","Retry with new iovecs",15,null],[18,"IOCTL_32BIT","","32bit ioctl",15,null],[18,"DIR","","Is a directory",15,null],[18,"COMPAT_X32","","32-bit compat ioctl on 64-bit machine with 64-bit time_t.",15,null],[11,"empty","","Returns an empty set of flags.",15,[[]]],[11,"all","","Returns the set containing all flags.",15,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",15,[[["u32",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",15,[[["u32",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",15,[[["u32",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",15,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",15,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",15,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",15,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",15,[[]]],[11,"remove","","Removes the specified flags in-place.",15,[[]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",15,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",15,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",15,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",15,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",15,[[]]],[11,"complement","","Returns the complement of this set of flags.",15,[[]]],[17,"POLL_SCHEDULE_NOTIFY","","Request poll notify.",null,null],[17,"FUSE_MIN_READ_BUFFER","","The read buffer is required to be at least 8k, but may be …",null,null],[17,"FUSE_COMPAT_ENTRY_OUT_SIZE","","",null,null],[17,"FUSE_COMPAT_ATTR_OUT_SIZE","","",null,null],[17,"FUSE_COMPAT_MKNOD_IN_SIZE","","",null,null],[17,"FUSE_COMPAT_WRITE_IN_SIZE","","",null,null],[17,"FUSE_COMPAT_STATFS_SIZE","","",null,null],[17,"FUSE_COMPAT_INIT_OUT_SIZE","","",null,null],[17,"FUSE_COMPAT_22_INIT_OUT_SIZE","","",null,null],[3,"SetUpMappingFlags","","",null,null],[18,"WRITE","","Create writable mapping.",16,null],[18,"READ","","Create readable mapping.",16,null],[11,"empty","","Returns an empty set of flags.",16,[[]]],[11,"all","","Returns the set containing all flags.",16,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",16,[[["u64",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",16,[[["u64",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",16,[[["u64",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",16,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",16,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",16,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",16,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",16,[[]]],[11,"remove","","Removes the specified flags in-place.",16,[[]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",16,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",16,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",16,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",16,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",16,[[]]],[11,"complement","","Returns the complement of this set of flags.",16,[[]]],[3,"Attr","","",null,null],[12,"ino","","",17,null],[12,"size","","",17,null],[12,"blocks","","",17,null],[12,"atime","","",17,null],[12,"mtime","","",17,null],[12,"ctime","","",17,null],[12,"atimensec","","",17,null],[12,"mtimensec","","",17,null],[12,"ctimensec","","",17,null],[12,"mode","","",17,null],[12,"nlink","","",17,null],[12,"uid","","",17,null],[12,"gid","","",17,null],[12,"rdev","","",17,null],[12,"blksize","","",17,null],[12,"padding","","",17,null],[3,"Kstatfs","","",null,null],[12,"blocks","","",18,null],[12,"bfree","","",18,null],[12,"bavail","","",18,null],[12,"files","","",18,null],[12,"ffree","","",18,null],[12,"bsize","","",18,null],[12,"namelen","","",18,null],[12,"frsize","","",18,null],[12,"padding","","",18,null],[12,"spare","","",18,null],[3,"FileLock","","",null,null],[12,"start","","",19,null],[12,"end","","",19,null],[12,"type_","","",19,null],[12,"pid","","",19,null],[4,"Opcode","","",null,null],[13,"Lookup","","",20,null],[13,"Forget","","",20,null],[13,"Getattr","","",20,null],[13,"Setattr","","",20,null],[13,"Readlink","","",20,null],[13,"Symlink","","",20,null],[13,"Mknod","","",20,null],[13,"Mkdir","","",20,null],[13,"Unlink","","",20,null],[13,"Rmdir","","",20,null],[13,"Rename","","",20,null],[13,"Link","","",20,null],[13,"Open","","",20,null],[13,"Read","","",20,null],[13,"Write","","",20,null],[13,"Statfs","","",20,null],[13,"Release","","",20,null],[13,"Fsync","","",20,null],[13,"Setxattr","","",20,null],[13,"Getxattr","","",20,null],[13,"Listxattr","","",20,null],[13,"Removexattr","","",20,null],[13,"Flush","","",20,null],[13,"Init","","",20,null],[13,"Opendir","","",20,null],[13,"Readdir","","",20,null],[13,"Releasedir","","",20,null],[13,"Fsyncdir","","",20,null],[13,"Getlk","","",20,null],[13,"Setlk","","",20,null],[13,"Setlkw","","",20,null],[13,"Access","","",20,null],[13,"Create","","",20,null],[13,"Interrupt","","",20,null],[13,"Bmap","","",20,null],[13,"Destroy","","",20,null],[13,"Ioctl","","",20,null],[13,"Poll","","",20,null],[13,"NotifyReply","","",20,null],[13,"BatchForget","","",20,null],[13,"Fallocate","","",20,null],[13,"Readdirplus","","",20,null],[13,"Rename2","","",20,null],[13,"Lseek","","",20,null],[13,"CopyFileRange","","",20,null],[13,"SetUpMapping","","",20,null],[13,"RemoveMapping","","",20,null],[13,"ChromeOsTmpfile","","",20,null],[11,"n","","",20,[[["u32",15]],["option",4]]],[4,"NotifyOpcode","","",null,null],[13,"Poll","","",21,null],[13,"InvalInode","","",21,null],[13,"InvalEntry","","",21,null],[13,"Store","","",21,null],[13,"Retrieve","","",21,null],[13,"Delete","","",21,null],[13,"CodeMax","","",21,null],[11,"n","","",21,[[["u32",15]],["option",4]]],[3,"EntryOut","","",null,null],[12,"nodeid","","",22,null],[12,"generation","","",22,null],[12,"entry_valid","","",22,null],[12,"attr_valid","","",22,null],[12,"entry_valid_nsec","","",22,null],[12,"attr_valid_nsec","","",22,null],[12,"attr","","",22,null],[3,"ForgetIn","","",null,null],[12,"nlookup","","",23,null],[3,"ForgetOne","","",null,null],[12,"nodeid","","",24,null],[12,"nlookup","","",24,null],[3,"BatchForgetIn","","",null,null],[12,"count","","",25,null],[12,"dummy","","",25,null],[3,"GetattrIn","","",null,null],[12,"flags","","",26,null],[12,"dummy","","",26,null],[12,"fh","","",26,null],[3,"AttrOut","","",null,null],[12,"attr_valid","","",27,null],[12,"attr_valid_nsec","","",27,null],[12,"dummy","","",27,null],[12,"attr","","",27,null],[3,"MknodIn","","",null,null],[12,"mode","","",28,null],[12,"rdev","","",28,null],[12,"umask","","",28,null],[12,"padding","","",28,null],[3,"MkdirIn","","",null,null],[12,"mode","","",29,null],[12,"umask","","",29,null],[3,"ChromeOsTmpfileIn","","",null,null],[12,"mode","","",30,null],[12,"umask","","",30,null],[3,"RenameIn","","",null,null],[12,"newdir","","",31,null],[3,"Rename2In","","",null,null],[12,"newdir","","",32,null],[12,"flags","","",32,null],[12,"padding","","",32,null],[3,"LinkIn","","",null,null],[12,"oldnodeid","","",33,null],[3,"SetattrIn","","",null,null],[12,"valid","","",34,null],[12,"padding","","",34,null],[12,"fh","","",34,null],[12,"size","","",34,null],[12,"lock_owner","","",34,null],[12,"atime","","",34,null],[12,"mtime","","",34,null],[12,"ctime","","",34,null],[12,"atimensec","","",34,null],[12,"mtimensec","","",34,null],[12,"ctimensec","","",34,null],[12,"mode","","",34,null],[12,"unused4","","",34,null],[12,"uid","","",34,null],[12,"gid","","",34,null],[12,"unused5","","",34,null],[3,"OpenIn","","",null,null],[12,"flags","","",35,null],[12,"unused","","",35,null],[3,"CreateIn","","",null,null],[12,"flags","","",36,null],[12,"mode","","",36,null],[12,"umask","","",36,null],[12,"padding","","",36,null],[3,"OpenOut","","",null,null],[12,"fh","","",37,null],[12,"open_flags","","",37,null],[12,"padding","","",37,null],[3,"ReleaseIn","","",null,null],[12,"fh","","",38,null],[12,"flags","","",38,null],[12,"release_flags","","",38,null],[12,"lock_owner","","",38,null],[3,"FlushIn","","",null,null],[12,"fh","","",39,null],[12,"unused","","",39,null],[12,"padding","","",39,null],[12,"lock_owner","","",39,null],[3,"ReadIn","","",null,null],[12,"fh","","",40,null],[12,"offset","","",40,null],[12,"size","","",40,null],[12,"read_flags","","",40,null],[12,"lock_owner","","",40,null],[12,"flags","","",40,null],[12,"padding","","",40,null],[3,"WriteIn","","",null,null],[12,"fh","","",41,null],[12,"offset","","",41,null],[12,"size","","",41,null],[12,"write_flags","","",41,null],[12,"lock_owner","","",41,null],[12,"flags","","",41,null],[12,"padding","","",41,null],[3,"WriteOut","","",null,null],[12,"size","","",42,null],[12,"padding","","",42,null],[3,"StatfsOut","","",null,null],[12,"st","","",43,null],[3,"FsyncIn","","",null,null],[12,"fh","","",44,null],[12,"fsync_flags","","",44,null],[12,"padding","","",44,null],[3,"SetxattrIn","","",null,null],[12,"size","","",45,null],[12,"flags","","",45,null],[3,"GetxattrIn","","",null,null],[12,"size","","",46,null],[12,"padding","","",46,null],[3,"GetxattrOut","","",null,null],[12,"size","","",47,null],[12,"padding","","",47,null],[3,"LkIn","","",null,null],[12,"fh","","",48,null],[12,"owner","","",48,null],[12,"lk","","",48,null],[12,"lk_flags","","",48,null],[12,"padding","","",48,null],[3,"LkOut","","",null,null],[12,"lk","","",49,null],[3,"AccessIn","","",null,null],[12,"mask","","",50,null],[12,"padding","","",50,null],[3,"InitIn","","",null,null],[12,"major","","",51,null],[12,"minor","","",51,null],[12,"max_readahead","","",51,null],[12,"flags","","",51,null],[3,"InitOut","","",null,null],[12,"major","","",52,null],[12,"minor","","",52,null],[12,"max_readahead","","",52,null],[12,"flags","","",52,null],[12,"max_background","","",52,null],[12,"congestion_threshold","","",52,null],[12,"max_write","","",52,null],[12,"time_gran","","",52,null],[12,"max_pages","","",52,null],[12,"map_alignment","","",52,null],[12,"unused","","",52,null],[3,"InterruptIn","","",null,null],[12,"unique","","",53,null],[3,"BmapIn","","",null,null],[12,"block","","",54,null],[12,"blocksize","","",54,null],[12,"padding","","",54,null],[3,"BmapOut","","",null,null],[12,"block","","",55,null],[3,"IoctlIn","","",null,null],[12,"fh","","",56,null],[12,"flags","","",56,null],[12,"cmd","","",56,null],[12,"arg","","",56,null],[12,"in_size","","",56,null],[12,"out_size","","",56,null],[3,"IoctlIovec","","Describes a region of memory in the address space of the …",null,null],[12,"base","","The start address of the memory region. This must be in …",57,null],[12,"len","","The length of the memory region.",57,null],[3,"IoctlOut","","",null,null],[12,"result","","",58,null],[12,"flags","","",58,null],[12,"in_iovs","","",58,null],[12,"out_iovs","","",58,null],[3,"PollIn","","",null,null],[12,"fh","","",59,null],[12,"kh","","",59,null],[12,"flags","","",59,null],[12,"events","","",59,null],[3,"PollOut","","",null,null],[12,"revents","","",60,null],[12,"padding","","",60,null],[3,"NotifyPollWakeupOut","","",null,null],[12,"kh","","",61,null],[3,"FallocateIn","","",null,null],[12,"fh","","",62,null],[12,"offset","","",62,null],[12,"length","","",62,null],[12,"mode","","",62,null],[12,"padding","","",62,null],[3,"InHeader","","",null,null],[12,"len","","",63,null],[12,"opcode","","",63,null],[12,"unique","","",63,null],[12,"nodeid","","",63,null],[12,"uid","","",63,null],[12,"gid","","",63,null],[12,"pid","","",63,null],[12,"padding","","",63,null],[3,"OutHeader","","",null,null],[12,"len","","",64,null],[12,"error","","",64,null],[12,"unique","","",64,null],[3,"Dirent","","",null,null],[12,"ino","","",65,null],[12,"off","","",65,null],[12,"namelen","","",65,null],[12,"type_","","",65,null],[3,"Direntplus","","",null,null],[12,"entry_out","","",66,null],[12,"dirent","","",66,null],[3,"NotifyInvalInodeOut","","",null,null],[12,"ino","","",67,null],[12,"off","","",67,null],[12,"len","","",67,null],[3,"NotifyInvalEntryOut","","",null,null],[12,"parent","","",68,null],[12,"namelen","","",68,null],[12,"padding","","",68,null],[3,"NotifyDeleteOut","","",null,null],[12,"parent","","",69,null],[12,"child","","",69,null],[12,"namelen","","",69,null],[12,"padding","","",69,null],[3,"NotifyStoreOut","","",null,null],[12,"nodeid","","",70,null],[12,"offset","","",70,null],[12,"size","","",70,null],[12,"padding","","",70,null],[3,"Notify_Retrieve_Out","","",null,null],[12,"notify_unique","","",71,null],[12,"nodeid","","",71,null],[12,"offset","","",71,null],[12,"size","","",71,null],[12,"padding","","",71,null],[3,"NotifyRetrieveIn","","",null,null],[12,"dummy1","","",72,null],[12,"offset","","",72,null],[12,"size","","",72,null],[12,"dummy2","","",72,null],[12,"dummy3","","",72,null],[12,"dummy4","","",72,null],[3,"LseekIn","","",null,null],[12,"fh","","",73,null],[12,"offset","","",73,null],[12,"whence","","",73,null],[12,"padding","","",73,null],[3,"LseekOut","","",null,null],[12,"offset","","",74,null],[3,"CopyFileRangeIn","","",null,null],[12,"fh_src","","",75,null],[12,"off_src","","",75,null],[12,"nodeid_dst","","",75,null],[12,"fh_dst","","",75,null],[12,"off_dst","","",75,null],[12,"len","","",75,null],[12,"flags","","",75,null],[3,"SetUpMappingIn","","",null,null],[12,"fh","","",76,null],[12,"foffset","","",76,null],[12,"len","","",76,null],[12,"flags","","",76,null],[12,"moffset","","",76,null],[3,"RemoveMappingIn","","",null,null],[12,"count","","",77,null],[3,"RemoveMappingOne","","",null,null],[12,"moffset","","",78,null],[12,"len","","",78,null],[0,"worker","fuse","",null,null],[5,"start_message_loop","fuse::worker","Start the FUSE message handling loop. Returns when an …",null,[[["file",3],["u32",15],["filesystem",8],["sync",8]],["result",6]]],[8,"Mapper","fuse","A trait for memory mapping for DAX.",null,null],[10,"map","","Maps <code>size</code> bytes starting at <code>file_offset</code> bytes from within …",79,[[["usize",15],["u32",15],["u64",15],["asrawfd",8]],["result",6]]],[10,"unmap","","Unmaps <code>size</code> bytes at <code>offset</code> bytes from the start of the …",79,[[["u64",15]],["result",6]]],[8,"Reader","","A trait for reading from the underlying FUSE endpoint.",null,null],[3,"Server","","",null,null],[8,"Writer","","A trait for writing to the underlying FUSE endpoint. The …",null,null],[16,"ClosureWriter","","The type passed in to the closure in <code>write_at</code>. For most …",80,null],[10,"write_at","","Allows a closure to generate and write data at the …",80,[[["usize",15]],[["result",6],["usize",15]]]],[10,"has_sufficient_buffer","","Checks if the writer can still accept certain amount of …",80,[[["u32",15]],["bool",15]]],[4,"Error","","Errors that may occur during the creation or operation of …",null,null],[13,"DecodeMessage","","A request is missing readable descriptors. Failed to …",81,null],[13,"EncodeMessage","","Failed to encode protocol messages.",81,null],[13,"EndpointSetup","","Failed to set up FUSE endpoint to talk with.",81,null],[13,"FlushMessage","","Failed to flush protocol messages.",81,null],[13,"InvalidCString","","A C string parameter is invalid.",81,null],[13,"InvalidHeaderLength","","The <code>len</code> field of the header is too small.",81,null],[13,"InvalidXattrSize","","The <code>size</code> field of the <code>SetxattrIn</code> message does not match …",81,null],[13,"MissingParameter","","One or more parameters are missing.",81,null],[13,"TooManyIovecs","","Requested too many <code>iovec</code>s for an <code>ioctl</code> retry.",81,null],[6,"Result","","",null,null],[11,"from","fuse::filesystem","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","fuse::mount","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","fuse","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","fuse::sys","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","fuse","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","fuse::sys","",22,[[["entry",3]],["entryout",3]]],[11,"from","fuse::filesystem","",8,[[["inheader",3]]]],[11,"from","fuse::sys","",17,[[["stat64",3]],["attr",3]]],[11,"from","","",18,[[["statvfs64",3]]]],[11,"into","","",34,[[],["stat64",3]]],[11,"extend","","",12,[[["intoiterator",8]]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","","",14,[[["intoiterator",8]]]],[11,"extend","","",15,[[["intoiterator",8]]]],[11,"extend","","",16,[[["intoiterator",8]]]],[11,"clone","fuse::filesystem","",8,[[],["context",3]]],[11,"clone","fuse::sys","",12,[[],["setattrvalid",3]]],[11,"clone","","",13,[[],["openoptions",3]]],[11,"clone","","",14,[[],["fsoptions",3]]],[11,"clone","","",15,[[],["ioctlflags",3]]],[11,"clone","","",16,[[],["setupmappingflags",3]]],[11,"clone","","",17,[[],["attr",3]]],[11,"clone","","",18,[[],["kstatfs",3]]],[11,"clone","","",19,[[],["filelock",3]]],[11,"clone","","",20,[[],["opcode",4]]],[11,"clone","","",21,[[],["notifyopcode",4]]],[11,"clone","","",22,[[],["entryout",3]]],[11,"clone","","",23,[[],["forgetin",3]]],[11,"clone","","",24,[[],["forgetone",3]]],[11,"clone","","",25,[[],["batchforgetin",3]]],[11,"clone","","",26,[[],["getattrin",3]]],[11,"clone","","",27,[[],["attrout",3]]],[11,"clone","","",28,[[],["mknodin",3]]],[11,"clone","","",29,[[],["mkdirin",3]]],[11,"clone","","",30,[[],["chromeostmpfilein",3]]],[11,"clone","","",31,[[],["renamein",3]]],[11,"clone","","",32,[[],["rename2in",3]]],[11,"clone","","",33,[[],["linkin",3]]],[11,"clone","","",34,[[],["setattrin",3]]],[11,"clone","","",35,[[],["openin",3]]],[11,"clone","","",36,[[],["createin",3]]],[11,"clone","","",37,[[],["openout",3]]],[11,"clone","","",38,[[],["releasein",3]]],[11,"clone","","",39,[[],["flushin",3]]],[11,"clone","","",40,[[],["readin",3]]],[11,"clone","","",41,[[],["writein",3]]],[11,"clone","","",42,[[],["writeout",3]]],[11,"clone","","",43,[[],["statfsout",3]]],[11,"clone","","",44,[[],["fsyncin",3]]],[11,"clone","","",45,[[],["setxattrin",3]]],[11,"clone","","",46,[[],["getxattrin",3]]],[11,"clone","","",47,[[],["getxattrout",3]]],[11,"clone","","",48,[[],["lkin",3]]],[11,"clone","","",49,[[],["lkout",3]]],[11,"clone","","",50,[[],["accessin",3]]],[11,"clone","","",51,[[],["initin",3]]],[11,"clone","","",52,[[],["initout",3]]],[11,"clone","","",53,[[],["interruptin",3]]],[11,"clone","","",54,[[],["bmapin",3]]],[11,"clone","","",55,[[],["bmapout",3]]],[11,"clone","","",56,[[],["ioctlin",3]]],[11,"clone","","",57,[[],["ioctliovec",3]]],[11,"clone","","",58,[[],["ioctlout",3]]],[11,"clone","","",59,[[],["pollin",3]]],[11,"clone","","",60,[[],["pollout",3]]],[11,"clone","","",61,[[],["notifypollwakeupout",3]]],[11,"clone","","",62,[[],["fallocatein",3]]],[11,"clone","","",63,[[],["inheader",3]]],[11,"clone","","",64,[[],["outheader",3]]],[11,"clone","","",65,[[],["dirent",3]]],[11,"clone","","",66,[[],["direntplus",3]]],[11,"clone","","",67,[[],["notifyinvalinodeout",3]]],[11,"clone","","",68,[[],["notifyinvalentryout",3]]],[11,"clone","","",69,[[],["notifydeleteout",3]]],[11,"clone","","",70,[[],["notifystoreout",3]]],[11,"clone","","",71,[[],["notify_retrieve_out",3]]],[11,"clone","","",72,[[],["notifyretrievein",3]]],[11,"clone","","",73,[[],["lseekin",3]]],[11,"clone","","",74,[[],["lseekout",3]]],[11,"clone","","",75,[[],["copyfilerangein",3]]],[11,"clone","","",76,[[],["setupmappingin",3]]],[11,"clone","","",77,[[],["removemappingin",3]]],[11,"clone","","",78,[[],["removemappingone",3]]],[11,"default","","",17,[[],["attr",3]]],[11,"default","","",18,[[],["kstatfs",3]]],[11,"default","","",19,[[],["filelock",3]]],[11,"default","","",22,[[],["entryout",3]]],[11,"default","","",23,[[],["forgetin",3]]],[11,"default","","",24,[[],["forgetone",3]]],[11,"default","","",25,[[],["batchforgetin",3]]],[11,"default","","",26,[[],["getattrin",3]]],[11,"default","","",27,[[],["attrout",3]]],[11,"default","","",28,[[],["mknodin",3]]],[11,"default","","",29,[[],["mkdirin",3]]],[11,"default","","",30,[[],["chromeostmpfilein",3]]],[11,"default","","",31,[[],["renamein",3]]],[11,"default","","",32,[[],["rename2in",3]]],[11,"default","","",33,[[],["linkin",3]]],[11,"default","","",34,[[],["setattrin",3]]],[11,"default","","",35,[[],["openin",3]]],[11,"default","","",36,[[],["createin",3]]],[11,"default","","",37,[[],["openout",3]]],[11,"default","","",38,[[],["releasein",3]]],[11,"default","","",39,[[],["flushin",3]]],[11,"default","","",40,[[],["readin",3]]],[11,"default","","",41,[[],["writein",3]]],[11,"default","","",42,[[],["writeout",3]]],[11,"default","","",43,[[],["statfsout",3]]],[11,"default","","",44,[[],["fsyncin",3]]],[11,"default","","",45,[[],["setxattrin",3]]],[11,"default","","",46,[[],["getxattrin",3]]],[11,"default","","",47,[[],["getxattrout",3]]],[11,"default","","",48,[[],["lkin",3]]],[11,"default","","",49,[[],["lkout",3]]],[11,"default","","",50,[[],["accessin",3]]],[11,"default","","",51,[[],["initin",3]]],[11,"default","","",52,[[],["initout",3]]],[11,"default","","",53,[[],["interruptin",3]]],[11,"default","","",54,[[],["bmapin",3]]],[11,"default","","",55,[[],["bmapout",3]]],[11,"default","","",56,[[],["ioctlin",3]]],[11,"default","","",57,[[],["ioctliovec",3]]],[11,"default","","",58,[[],["ioctlout",3]]],[11,"default","","",59,[[],["pollin",3]]],[11,"default","","",60,[[],["pollout",3]]],[11,"default","","",61,[[],["notifypollwakeupout",3]]],[11,"default","","",62,[[],["fallocatein",3]]],[11,"default","","",63,[[],["inheader",3]]],[11,"default","","",64,[[],["outheader",3]]],[11,"default","","",65,[[],["dirent",3]]],[11,"default","","",66,[[],["direntplus",3]]],[11,"default","","",67,[[],["notifyinvalinodeout",3]]],[11,"default","","",68,[[],["notifyinvalentryout",3]]],[11,"default","","",69,[[],["notifydeleteout",3]]],[11,"default","","",70,[[],["notifystoreout",3]]],[11,"default","","",71,[[],["notify_retrieve_out",3]]],[11,"default","","",72,[[],["notifyretrievein",3]]],[11,"default","","",73,[[],["lseekin",3]]],[11,"default","","",74,[[],["lseekout",3]]],[11,"default","","",75,[[],["copyfilerangein",3]]],[11,"default","","",76,[[],["setupmappingin",3]]],[11,"default","","",77,[[],["removemappingin",3]]],[11,"default","","",78,[[],["removemappingone",3]]],[11,"cmp","","",12,[[["setattrvalid",3]],["ordering",4]]],[11,"cmp","","",13,[[["openoptions",3]],["ordering",4]]],[11,"cmp","","",14,[[["fsoptions",3]],["ordering",4]]],[11,"cmp","","",15,[[["ioctlflags",3]],["ordering",4]]],[11,"cmp","","",16,[[["setupmappingflags",3]],["ordering",4]]],[11,"eq","","",12,[[["setattrvalid",3]],["bool",15]]],[11,"ne","","",12,[[["setattrvalid",3]],["bool",15]]],[11,"eq","","",13,[[["openoptions",3]],["bool",15]]],[11,"ne","","",13,[[["openoptions",3]],["bool",15]]],[11,"eq","","",14,[[["fsoptions",3]],["bool",15]]],[11,"ne","","",14,[[["fsoptions",3]],["bool",15]]],[11,"eq","","",15,[[["ioctlflags",3]],["bool",15]]],[11,"ne","","",15,[[["ioctlflags",3]],["bool",15]]],[11,"eq","","",16,[[["setupmappingflags",3]],["bool",15]]],[11,"ne","","",16,[[["setupmappingflags",3]],["bool",15]]],[11,"partial_cmp","","",12,[[["setattrvalid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["setattrvalid",3]],["bool",15]]],[11,"le","","",12,[[["setattrvalid",3]],["bool",15]]],[11,"gt","","",12,[[["setattrvalid",3]],["bool",15]]],[11,"ge","","",12,[[["setattrvalid",3]],["bool",15]]],[11,"partial_cmp","","",13,[[["openoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["openoptions",3]],["bool",15]]],[11,"le","","",13,[[["openoptions",3]],["bool",15]]],[11,"gt","","",13,[[["openoptions",3]],["bool",15]]],[11,"ge","","",13,[[["openoptions",3]],["bool",15]]],[11,"partial_cmp","","",14,[[["fsoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["fsoptions",3]],["bool",15]]],[11,"le","","",14,[[["fsoptions",3]],["bool",15]]],[11,"gt","","",14,[[["fsoptions",3]],["bool",15]]],[11,"ge","","",14,[[["fsoptions",3]],["bool",15]]],[11,"partial_cmp","","",15,[[["ioctlflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["ioctlflags",3]],["bool",15]]],[11,"le","","",15,[[["ioctlflags",3]],["bool",15]]],[11,"gt","","",15,[[["ioctlflags",3]],["bool",15]]],[11,"ge","","",15,[[["ioctlflags",3]],["bool",15]]],[11,"partial_cmp","","",16,[[["setupmappingflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["setupmappingflags",3]],["bool",15]]],[11,"le","","",16,[[["setupmappingflags",3]],["bool",15]]],[11,"gt","","",16,[[["setupmappingflags",3]],["bool",15]]],[11,"ge","","",16,[[["setupmappingflags",3]],["bool",15]]],[11,"fmt","fuse::filesystem","",8,[[["formatter",3]],["result",6]]],[11,"fmt","fuse::sys","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","fuse","",81,[[["formatter",3]],["result",6]]],[11,"fmt","fuse::mount","",11,[[["formatter",3]],["result",6]]],[11,"fmt","fuse","",81,[[["formatter",3]],["result",6]]],[11,"sub","fuse::sys","Returns the set difference of the two sets of flags.",12,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",14,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",15,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",14,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",15,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[]]],[11,"not","","Returns the complement of this set of flags.",12,[[]]],[11,"not","","Returns the complement of this set of flags.",13,[[]]],[11,"not","","Returns the complement of this set of flags.",14,[[]]],[11,"not","","Returns the complement of this set of flags.",15,[[]]],[11,"not","","Returns the complement of this set of flags.",16,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",14,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",15,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["setattrvalid",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["openoptions",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",14,[[["fsoptions",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",15,[[["ioctlflags",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["setupmappingflags",3]]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",12,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",13,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",14,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",15,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",16,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",14,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",15,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[]]],[11,"bitor_assign","","Adds the set of flags.",12,[[]]],[11,"bitor_assign","","Adds the set of flags.",13,[[]]],[11,"bitor_assign","","Adds the set of flags.",14,[[]]],[11,"bitor_assign","","Adds the set of flags.",15,[[]]],[11,"bitor_assign","","Adds the set of flags.",16,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",14,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",15,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"from_iter","","",12,[[["intoiterator",8]]]],[11,"from_iter","","",13,[[["intoiterator",8]]]],[11,"from_iter","","",14,[[["intoiterator",8]]]],[11,"from_iter","","",15,[[["intoiterator",8]]]],[11,"from_iter","","",16,[[["intoiterator",8]]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"new","fuse","",82,[[],["server",3]]],[11,"handle_message","","",82,[[["mapper",8],["zerocopyreader",8],["writer",8],["reader",8],["zerocopywriter",8]],[["result",6],["usize",15]]]]],"p":[[3,"Entry"],[3,"DirEntry"],[4,"GetxattrReply"],[4,"ListxattrReply"],[4,"IoctlReply"],[13,"Retry"],[8,"ZeroCopyReader"],[8,"ZeroCopyWriter"],[3,"Context"],[8,"DirectoryIterator"],[8,"FileSystem"],[4,"MountOption"],[3,"SetattrValid"],[3,"OpenOptions"],[3,"FsOptions"],[3,"IoctlFlags"],[3,"SetUpMappingFlags"],[3,"Attr"],[3,"Kstatfs"],[3,"FileLock"],[4,"Opcode"],[4,"NotifyOpcode"],[3,"EntryOut"],[3,"ForgetIn"],[3,"ForgetOne"],[3,"BatchForgetIn"],[3,"GetattrIn"],[3,"AttrOut"],[3,"MknodIn"],[3,"MkdirIn"],[3,"ChromeOsTmpfileIn"],[3,"RenameIn"],[3,"Rename2In"],[3,"LinkIn"],[3,"SetattrIn"],[3,"OpenIn"],[3,"CreateIn"],[3,"OpenOut"],[3,"ReleaseIn"],[3,"FlushIn"],[3,"ReadIn"],[3,"WriteIn"],[3,"WriteOut"],[3,"StatfsOut"],[3,"FsyncIn"],[3,"SetxattrIn"],[3,"GetxattrIn"],[3,"GetxattrOut"],[3,"LkIn"],[3,"LkOut"],[3,"AccessIn"],[3,"InitIn"],[3,"InitOut"],[3,"InterruptIn"],[3,"BmapIn"],[3,"BmapOut"],[3,"IoctlIn"],[3,"IoctlIovec"],[3,"IoctlOut"],[3,"PollIn"],[3,"PollOut"],[3,"NotifyPollWakeupOut"],[3,"FallocateIn"],[3,"InHeader"],[3,"OutHeader"],[3,"Dirent"],[3,"Direntplus"],[3,"NotifyInvalInodeOut"],[3,"NotifyInvalEntryOut"],[3,"NotifyDeleteOut"],[3,"NotifyStoreOut"],[3,"Notify_Retrieve_Out"],[3,"NotifyRetrieveIn"],[3,"LseekIn"],[3,"LseekOut"],[3,"CopyFileRangeIn"],[3,"SetUpMappingIn"],[3,"RemoveMappingIn"],[3,"RemoveMappingOne"],[8,"Mapper"],[8,"Writer"],[4,"Error"],[3,"Server"]]},\
"futures":{"doc":"Abstractions for asynchronous programming.","i":[[0,"prelude","futures","A \\\"prelude\\\" for crates using the <code>futures</code> crate.",null,null],[0,"future","futures::prelude","Asynchronous values.",null,null],[8,"Future","futures::prelude::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value, …",0,[[["pin",3],["context",3]],["poll",4]]],[6,"BoxFuture","","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",1,[[],["bool",15]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[3,"Flatten","","Future for the <code>flatten</code> method.",null,null],[3,"Fuse","","Future for the <code>fuse</code> method.",null,null],[8,"FutureExt","","An extension trait for <code>Future</code>s that provides a variety of …",null,null],[11,"map","","Map this future\'s output to a different type, returning a …",4,[[],["map",3]]],[11,"map_into","","Map this future\'s output to a different type, returning a …",4,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",4,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",4,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",4,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",4,[[],["inspect",3]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",4,[[],["catchunwind",3]]],[11,"shared","","Create a cloneable handle to this future where all …",4,[[],["shared",3]]],[11,"remote_handle","","Turn this future into a future that yields <code>()</code> on …",4,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",4,[[],[["box",3],["pin",3]]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",4,[[],[["box",3],["pin",3]]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",4,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",4,[[],["option",4]]],[3,"Inspect","","Future for the <code>inspect</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Map","","Future for the <code>map</code> method.",null,null],[3,"MapInto","","Future for the <code>map_into</code> combinator.",null,null],[3,"NeverError","","Future for the <code>never_error</code> combinator.",null,null],[3,"Then","","Future for the <code>then</code> method.",null,null],[3,"UnitError","","Future for the <code>unit_error</code> combinator.",null,null],[3,"FlattenStream","","Stream for the <code>flatten_stream</code> method.",null,null],[3,"CatchUnwind","","Future for the <code>catch_unwind</code> method.",null,null],[3,"Remote","","A future which sends its output to the corresponding …",null,null],[3,"RemoteHandle","","The handle to a remote future returned by <code>remote_handle</code>. …",null,null],[3,"Shared","","Future for the <code>shared</code> method.",null,null],[3,"WeakShared","","A weak reference to a [<code>Shared</code>] that can be upgraded much …",null,null],[3,"AndThen","","Future for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Future for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Future for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Future for the <code>inspect_ok</code> method.",null,null],[3,"IntoFuture","","Future for the <code>into_future</code> method.",null,null],[3,"MapErr","","Future for the <code>map_err</code> method.",null,null],[3,"MapOk","","Future for the <code>map_ok</code> method.",null,null],[3,"MapOkOrElse","","Future for the <code>map_ok_or_else</code> method.",null,null],[3,"OkInto","","Future for the <code>ok_into</code> method.",null,null],[3,"OrElse","","Future for the <code>or_else</code> method.",null,null],[3,"TryFlatten","","Future for the <code>try_flatten</code> method.",null,null],[3,"TryFlattenStream","","Future for the <code>try_flatten_stream</code> method.",null,null],[8,"TryFutureExt","","Adapters specific to [<code>Result</code>]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful …",5,[[],["flattensink",3]]],[11,"map_ok","","Maps this future\'s success value to a different value.",5,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future\'s success value to a different value, …",5,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future\'s error value to a different value.",5,[[],["maperr",3]]],[11,"err_into","","Maps this future\'s <code>Error</code> to a new error type using the …",5,[[],["errinto",3]]],[11,"ok_into","","Maps this future\'s <code>Ok</code> to a new type using the <code>Into</code> trait.",5,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",5,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",5,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",5,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",5,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",5,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",5,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future\'s output, producing a future with …",5,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",5,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",5,[[["context",3]],[["poll",4],["result",4]]]],[3,"UnwrapOrElse","","Future for the <code>unwrap_or_else</code> method.",null,null],[3,"FlattenSink","","Sink for the <code>flatten_sink</code> method.",null,null],[5,"lazy","","Creates a new future that allows delayed execution of a …",null,[[],["lazy",3]]],[3,"Lazy","","Future for the [<code>lazy</code>] function.",null,null],[5,"pending","","Creates a future which never resolves, representing a …",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"maybe_done","","Wraps a future into a <code>MaybeDone</code>",null,[[],["maybedone",4]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",6,null],[13,"Done","","The output of the completed future",6,null],[13,"Gone","","The empty variant after the result of a [<code>MaybeDone</code>] has …",6,null],[5,"try_maybe_done","","Wraps a future into a <code>TryMaybeDone</code>",null,[[],["trymaybedone",4]]],[4,"TryMaybeDone","","A future that may have completed with an error.",null,null],[13,"Future","","A not-yet-completed future",7,null],[13,"Done","","The output of the completed future",7,null],[13,"Gone","","The empty variant after the result of a [<code>TryMaybeDone</code>] …",7,null],[3,"OptionFuture","","A future representing a value which may or may not be …",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn</code>] function.",null,null],[5,"poll_immediate","","Creates a future that is immediately ready with an Option …",null,[[],["pollimmediate",3]]],[3,"PollImmediate","","Future for the <code>poll_immediate</code> function.",null,null],[5,"err","","Create a future that is immediately ready with an error …",null,[[],[["ready",3],["result",4]]]],[5,"ok","","Create a future that is immediately ready with a success …",null,[[],[["ready",3],["result",4]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[3,"Ready","","Future for the <code>ready</code> function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to …",null,[[],["join",3]]],[5,"join3","","Same as <code>join</code>, but with more futures.",null,[[],["join3",3]]],[5,"join4","","Same as <code>join</code>, but with more futures.",null,[[],["join4",3]]],[5,"join5","","Same as <code>join</code>, but with more futures.",null,[[],["join5",3]]],[3,"Join","","Future for the <code>join</code> function.",null,null],[3,"Join3","","Future for the [<code>join3</code>] function.",null,null],[3,"Join4","","Future for the [<code>join4</code>] function.",null,null],[3,"Join5","","Future for the [<code>join5</code>] function.",null,null],[5,"join_all","","Creates a future which represents a collection of the …",null,[[],["joinall",3]]],[3,"JoinAll","","Future for the [<code>join_all</code>] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to …",null,[[],["select",3]]],[3,"Select","","Future for the [<code>select()</code>] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of …",null,[[],["selectall",3]]],[3,"SelectAll","","Future for the [<code>select_all</code>] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to …",null,[[],["tryjoin",3]]],[5,"try_join3","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin3",3]]],[5,"try_join4","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin4",3]]],[5,"try_join5","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin5",3]]],[3,"TryJoin","","Future for the <code>try_join</code> function.",null,null],[3,"TryJoin3","","Future for the [<code>try_join3</code>] function.",null,null],[3,"TryJoin4","","Future for the [<code>try_join4</code>] function.",null,null],[3,"TryJoin5","","Future for the [<code>try_join5</code>] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of …",null,[[],["tryjoinall",3]]],[3,"TryJoinAll","","Future for the [<code>try_join_all</code>] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to …",null,[[],["tryselect",3]]],[3,"TrySelect","","Future for the [<code>try_select()</code>] function.",null,null],[5,"select_ok","","Creates a new future which will select the first …",null,[[],["selectok",3]]],[3,"SelectOk","","Future for the [<code>select_ok</code>] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","First branch of the type",8,null],[13,"Right","","Second branch of the type",8,null],[3,"AbortHandle","","A handle to an <code>Abortable</code> task.",null,null],[3,"AbortRegistration","","A registration handle for an <code>Abortable</code> task. Values of …",null,null],[3,"Abortable","","A future/stream which can be remotely short-circuited …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> task was aborted.",null,null],[5,"abortable","","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …",null,[[]]],[8,"Future","futures::prelude","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value, …",0,[[["pin",3],["context",3]],["poll",4]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[0,"sink","","Asynchronous sinks.",null,null],[8,"SinkExt","futures::prelude::sink","An extension trait for <code>Sink</code>s that provides a variety of …",null,null],[11,"with","","Composes a function <em>in front of</em> the sink.",9,[[],["with",3]]],[11,"with_flat_map","","Composes a function <em>in front of</em> the sink.",9,[[],["withflatmap",3]]],[11,"sink_map_err","","Transforms the error returned by the sink.",9,[[],["sinkmaperr",3]]],[11,"sink_err_into","","Map this sink\'s error to a different error type using the …",9,[[],["sinkerrinto",3]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",9,[[["usize",15]],["buffer",3]]],[11,"close","","Close the sink.",9,[[],["close",3]]],[11,"fanout","","Fanout items to multiple sinks.",9,[[],["fanout",3]]],[11,"flush","","Flush the sink, processing all pending items.",9,[[],["flush",3]]],[11,"send","","A future that completes after the given item has been …",9,[[],["send",3]]],[11,"feed","","A future that completes after the given item has been …",9,[[],["feed",3]]],[11,"send_all","","A future that completes after the given stream has been …",9,[[],["sendall",3]]],[11,"left_sink","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …",9,[[],["either",4]]],[11,"right_sink","","Wrap this stream in an <code>Either</code> stream, making it the …",9,[[],["either",4]]],[11,"poll_ready_unpin","","A convenience method for calling [<code>Sink::poll_ready</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[11,"start_send_unpin","","A convenience method for calling [<code>Sink::start_send</code>] on […",9,[[],["result",4]]],[11,"poll_flush_unpin","","A convenience method for calling [<code>Sink::poll_flush</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[11,"poll_close_unpin","","A convenience method for calling [<code>Sink::poll_close</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[8,"Sink","","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",10,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",10,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"drain","","Create a sink that will just discard all items given to …",null,[[],["drain",3]]],[3,"Drain","","Sink for the [<code>drain</code>] function.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two …",null,null],[3,"Feed","","Future for the <code>feed</code> method.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"SinkErrInto","","Sink for the <code>sink_err_into</code> method.",null,null],[3,"SinkMapErr","","Sink for the <code>sink_map_err</code> method.",null,null],[3,"Send","","Future for the <code>send</code> method.",null,null],[3,"SendAll","","Future for the <code>send_all</code> method.",null,null],[5,"unfold","","Create a sink from a function which processes one item at …",null,[[],["unfold",3]]],[3,"Unfold","","Sink for the [<code>unfold</code>] function.",null,null],[3,"With","","Sink for the <code>with</code> method.",null,null],[3,"WithFlatMap","","Sink for the <code>with_flat_map</code> method.",null,null],[3,"Buffer","","Sink for the <code>buffer</code> method.",null,null],[8,"Sink","futures::prelude","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",10,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",10,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[0,"stream","","Asynchronous streams.",null,null],[0,"futures_unordered","futures::prelude::stream","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::prelude::stream::futures_unordered","A set of futures which may complete in any order.",null,null],[3,"IntoIter","","Owned iterator over all futures in the unordered set.",null,null],[3,"Iter","","Immutable iterator over all the futures in the unordered …",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[0,"select_all","futures::prelude::stream","An unbounded set of streams",null,null],[3,"SelectAll","futures::prelude::stream::select_all","An unbounded set of streams",null,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"Iter","","Immutable iterator over all streams in the unordered set.",null,null],[3,"IterMut","","Mutable iterator over all streams in the unordered set.",null,null],[3,"IntoIter","","Owned iterator over all streams in the unordered set.",null,null],[6,"BoxStream","futures::prelude::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",11,[[],["bool",15]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",12,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",12,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",12,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",13,null],[16,"Error","","The type of failures yielded by this future",13,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",13,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[3,"Chain","","Stream for the <code>chain</code> method.",null,null],[3,"Collect","","Future for the <code>collect</code> method.",null,null],[3,"Concat","","Future for the <code>concat</code> method.",null,null],[3,"Cycle","","Stream for the <code>cycle</code> method.",null,null],[3,"Enumerate","","Stream for the <code>enumerate</code> method.",null,null],[3,"Filter","","Stream for the <code>filter</code> method.",null,null],[3,"FilterMap","","Stream for the <code>filter_map</code> method.",null,null],[3,"FlatMap","","Stream for the <code>flat_map</code> method.",null,null],[3,"Flatten","","Stream for the <code>flatten</code> method.",null,null],[3,"Fold","","Future for the <code>fold</code> method.",null,null],[3,"ForEach","","Future for the <code>for_each</code> method.",null,null],[3,"Fuse","","Stream for the <code>fuse</code> method.",null,null],[3,"Inspect","","Stream for the <code>inspect</code> method.",null,null],[3,"Map","","Stream for the <code>map</code> method.",null,null],[3,"Next","","Future for the <code>next</code> method.",null,null],[3,"NextIf","","Future for the <code>Peekable::next_if</code> method.",null,null],[3,"NextIfEq","","Future for the <code>Peekable::next_if_eq</code> method.",null,null],[3,"Peek","","Future for the <code>Peekable::peek</code> method.",null,null],[3,"PeekMut","","Future for the <code>Peekable::peek_mut</code> method.",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[3,"Scan","","Stream for the <code>scan</code> method.",null,null],[3,"SelectNextSome","","Future for the <code>select_next_some</code> method.",null,null],[3,"Skip","","Stream for the <code>skip</code> method.",null,null],[3,"SkipWhile","","Stream for the <code>skip_while</code> method.",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Creates a future that resolves to the next item in the …",14,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",14,[[],["streamfuture",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",14,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",14,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",14,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",14,[[],["filtermap",3]]],[11,"then","","Computes from this stream\'s items new items of a …",14,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",14,[[],["collect",3]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",14,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",14,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",14,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",14,[[],["fold",3]]],[11,"any","","Execute predicate over asynchronous stream, and return …",14,[[],["any",3]]],[11,"all","","Execute predicate over asynchronous stream, and return …",14,[[],["all",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",14,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",14,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",14,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",14,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",14,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",14,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",14,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",14,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",14,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",14,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",14,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",14,[[]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",14,[[],["catchunwind",3]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",14,[[],[["pin",3],["box",3]]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",14,[[],[["box",3],["pin",3]]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",14,[[["usize",15]],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",14,[[["usize",15]],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",14,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",14,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",14,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",14,[[["usize",15]],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",14,[[["usize",15]],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",14,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",14,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",14,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",14,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",14,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",14,[[["context",3]],[["poll",4],["option",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",14,[[],["selectnextsome",3]]],[3,"StreamFuture","","Future for the <code>into_future</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[3,"TakeUntil","","Stream for the <code>take_until</code> method.",null,null],[3,"TakeWhile","","Stream for the <code>take_while</code> method.",null,null],[3,"Then","","Stream for the <code>then</code> method.",null,null],[3,"Unzip","","Future for the <code>unzip</code> method.",null,null],[3,"Zip","","Stream for the <code>zip</code> method.",null,null],[3,"CatchUnwind","","Stream for the <code>catch_unwind</code> method.",null,null],[3,"Chunks","","Stream for the <code>chunks</code> method.",null,null],[3,"ReadyChunks","","Stream for the <code>ready_chunks</code> method.",null,null],[3,"Forward","","Future for the <code>forward</code> method.",null,null],[3,"BufferUnordered","","Stream for the <code>buffer_unordered</code> method.",null,null],[3,"Buffered","","Stream for the <code>buffered</code> method.",null,null],[3,"ForEachConcurrent","","Future for the <code>for_each_concurrent</code> method.",null,null],[3,"ReuniteError","","Error indicating a <code>SplitSink<S></code> and <code>SplitStream<S></code> were …",null,null],[12,"0","","",15,null],[12,"1","","",15,null],[3,"SplitSink","","A <code>Sink</code> part of the split pair",null,null],[3,"SplitStream","","A <code>Stream</code> part of the split pair",null,null],[5,"try_unfold","","Creates a <code>TryStream</code> from a seed and a closure returning a …",null,[[],["tryunfold",3]]],[3,"AndThen","","Stream for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Stream for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Stream for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Stream for the <code>inspect_ok</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"MapErr","","Stream for the <code>map_err</code> method.",null,null],[3,"MapOk","","Stream for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Stream for the <code>or_else</code> method.",null,null],[3,"TryCollect","","Future for the <code>try_collect</code> method.",null,null],[3,"TryConcat","","Future for the <code>try_concat</code> method.",null,null],[3,"TryFilter","","Stream for the <code>try_filter</code> method.",null,null],[3,"TryFilterMap","","Stream for the <code>try_filter_map</code> method.",null,null],[3,"TryFlatten","","Stream for the <code>try_flatten</code> method.",null,null],[3,"TryFold","","Future for the <code>try_fold</code> method.",null,null],[3,"TryForEach","","Future for the <code>try_for_each</code> method.",null,null],[3,"TryNext","","Future for the <code>try_next</code> method.",null,null],[3,"TrySkipWhile","","Stream for the <code>try_skip_while</code> method.",null,null],[8,"TryStreamExt","","Adapters specific to <code>Result</code>-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts …",16,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",16,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",16,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",16,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",16,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",16,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",16,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",16,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",16,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",16,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",16,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",16,[[],["trytakewhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",16,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",16,[[],["trycollect",3]]],[11,"try_chunks","","An adaptor for chunking up successful items of the stream …",16,[[["usize",15]],["trychunks",3]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",16,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",16,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",16,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",16,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",16,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",16,[[["usize",15]],["trybufferunordered",3]]],[11,"try_buffered","","Attempt to execute several futures from a stream …",16,[[["usize",15]],["trybuffered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",16,[[["context",3]],[["poll",4],["option",4]]]],[11,"into_async_read","","Adapter that converts this stream into an <code>AsyncRead</code>.",16,[[],["intoasyncread",3]]],[3,"TryTakeWhile","","Stream for the <code>try_take_while</code> method.",null,null],[3,"TryUnfold","","Stream for the [<code>try_unfold</code>] function.",null,null],[3,"IntoAsyncRead","","Reader for the <code>into_async_read</code> method.",null,null],[3,"TryBufferUnordered","","Stream for the <code>try_buffer_unordered</code> method.",null,null],[3,"TryBuffered","","Stream for the <code>try_buffered</code> method.",null,null],[3,"TryForEachConcurrent","","Future for the <code>try_for_each_concurrent</code> method.",null,null],[3,"TryChunks","","Stream for the <code>try_chunks</code> method.",null,null],[3,"TryChunksError","","Error indicating, that while chunk was collected inner …",null,null],[12,"0","","",17,null],[12,"1","","",17,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the [<code>iter</code>] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream for the [<code>repeat</code>] function.",null,null],[5,"repeat_with","","Creates a new stream that repeats elements of type <code>A</code> …",null,[[],["repeatwith",3]]],[3,"RepeatWith","","An stream that repeats elements of type <code>A</code> endlessly by …",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty</code>] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[],["once",3]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn</code>] function.",null,null],[5,"poll_immediate","","Creates a new stream that always immediately returns …",null,[[],["pollimmediate",3]]],[3,"PollImmediate","","Stream for the poll_immediate function.",null,null],[5,"select","","This function will attempt to pull items from both …",null,[[],["select",3]]],[3,"Select","","Stream for the [<code>select()</code>] function.",null,null],[5,"select_with_strategy","","This function will attempt to pull items from both …",null,[[],["selectwithstrategy",3]]],[4,"PollNext","","Type to tell [<code>SelectWithStrategy</code>] which stream to poll …",null,null],[13,"Left","","Poll the first stream.",18,null],[13,"Right","","Poll the second stream.",18,null],[3,"SelectWithStrategy","","Stream for the [<code>select_with_strategy()</code>] function. See …",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold</code>] function.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"SelectAll","","An unbounded set of streams",null,null],[3,"AbortHandle","","A handle to an <code>Abortable</code> task.",null,null],[3,"AbortRegistration","","A registration handle for an <code>Abortable</code> task. Values of …",null,null],[3,"Abortable","","A future/stream which can be remotely short-circuited …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> task was aborted.",null,null],[5,"abortable","","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …",null,[[]]],[8,"Stream","futures::prelude","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",12,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",12,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",12,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",13,null],[16,"Error","","The type of failures yielded by this future",13,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",13,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",19,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",19,[[["usize",15],["pin",3]]]],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",20,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",20,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",21,[[["seekfrom",4],["pin",3],["context",3]],[["result",4],["poll",4]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",22,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",22,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",22,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Attempt to close the object.",22,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[14,"ready","futures","Extracts the successful type of a <code>Poll<T></code>.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[0,"future","","Asynchronous values.",null,null],[8,"Future","futures::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value, …",0,[[["pin",3],["context",3]],["poll",4]]],[6,"BoxFuture","","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",1,[[],["bool",15]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[3,"Flatten","","Future for the <code>flatten</code> method.",null,null],[3,"Fuse","","Future for the <code>fuse</code> method.",null,null],[8,"FutureExt","","An extension trait for <code>Future</code>s that provides a variety of …",null,null],[11,"map","","Map this future\'s output to a different type, returning a …",4,[[],["map",3]]],[11,"map_into","","Map this future\'s output to a different type, returning a …",4,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",4,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",4,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",4,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",4,[[],["inspect",3]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",4,[[],["catchunwind",3]]],[11,"shared","","Create a cloneable handle to this future where all …",4,[[],["shared",3]]],[11,"remote_handle","","Turn this future into a future that yields <code>()</code> on …",4,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",4,[[],[["box",3],["pin",3]]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",4,[[],[["box",3],["pin",3]]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",4,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",4,[[],["option",4]]],[3,"Inspect","","Future for the <code>inspect</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Map","","Future for the <code>map</code> method.",null,null],[3,"MapInto","","Future for the <code>map_into</code> combinator.",null,null],[3,"NeverError","","Future for the <code>never_error</code> combinator.",null,null],[3,"Then","","Future for the <code>then</code> method.",null,null],[3,"UnitError","","Future for the <code>unit_error</code> combinator.",null,null],[3,"FlattenStream","","Stream for the <code>flatten_stream</code> method.",null,null],[3,"CatchUnwind","","Future for the <code>catch_unwind</code> method.",null,null],[3,"Remote","","A future which sends its output to the corresponding …",null,null],[3,"RemoteHandle","","The handle to a remote future returned by <code>remote_handle</code>. …",null,null],[3,"Shared","","Future for the <code>shared</code> method.",null,null],[3,"WeakShared","","A weak reference to a [<code>Shared</code>] that can be upgraded much …",null,null],[3,"AndThen","","Future for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Future for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Future for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Future for the <code>inspect_ok</code> method.",null,null],[3,"IntoFuture","","Future for the <code>into_future</code> method.",null,null],[3,"MapErr","","Future for the <code>map_err</code> method.",null,null],[3,"MapOk","","Future for the <code>map_ok</code> method.",null,null],[3,"MapOkOrElse","","Future for the <code>map_ok_or_else</code> method.",null,null],[3,"OkInto","","Future for the <code>ok_into</code> method.",null,null],[3,"OrElse","","Future for the <code>or_else</code> method.",null,null],[3,"TryFlatten","","Future for the <code>try_flatten</code> method.",null,null],[3,"TryFlattenStream","","Future for the <code>try_flatten_stream</code> method.",null,null],[8,"TryFutureExt","","Adapters specific to [<code>Result</code>]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful …",5,[[],["flattensink",3]]],[11,"map_ok","","Maps this future\'s success value to a different value.",5,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future\'s success value to a different value, …",5,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future\'s error value to a different value.",5,[[],["maperr",3]]],[11,"err_into","","Maps this future\'s <code>Error</code> to a new error type using the …",5,[[],["errinto",3]]],[11,"ok_into","","Maps this future\'s <code>Ok</code> to a new type using the <code>Into</code> trait.",5,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",5,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",5,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",5,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",5,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",5,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",5,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future\'s output, producing a future with …",5,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",5,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",5,[[["context",3]],[["poll",4],["result",4]]]],[3,"UnwrapOrElse","","Future for the <code>unwrap_or_else</code> method.",null,null],[3,"FlattenSink","","Sink for the <code>flatten_sink</code> method.",null,null],[5,"lazy","","Creates a new future that allows delayed execution of a …",null,[[],["lazy",3]]],[3,"Lazy","","Future for the [<code>lazy</code>] function.",null,null],[5,"pending","","Creates a future which never resolves, representing a …",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"maybe_done","","Wraps a future into a <code>MaybeDone</code>",null,[[],["maybedone",4]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",6,null],[13,"Done","","The output of the completed future",6,null],[13,"Gone","","The empty variant after the result of a [<code>MaybeDone</code>] has …",6,null],[5,"try_maybe_done","","Wraps a future into a <code>TryMaybeDone</code>",null,[[],["trymaybedone",4]]],[4,"TryMaybeDone","","A future that may have completed with an error.",null,null],[13,"Future","","A not-yet-completed future",7,null],[13,"Done","","The output of the completed future",7,null],[13,"Gone","","The empty variant after the result of a [<code>TryMaybeDone</code>] …",7,null],[3,"OptionFuture","","A future representing a value which may or may not be …",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn</code>] function.",null,null],[5,"poll_immediate","","Creates a future that is immediately ready with an Option …",null,[[],["pollimmediate",3]]],[3,"PollImmediate","","Future for the <code>poll_immediate</code> function.",null,null],[5,"err","","Create a future that is immediately ready with an error …",null,[[],[["ready",3],["result",4]]]],[5,"ok","","Create a future that is immediately ready with a success …",null,[[],[["ready",3],["result",4]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[3,"Ready","","Future for the <code>ready</code> function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to …",null,[[],["join",3]]],[5,"join3","","Same as <code>join</code>, but with more futures.",null,[[],["join3",3]]],[5,"join4","","Same as <code>join</code>, but with more futures.",null,[[],["join4",3]]],[5,"join5","","Same as <code>join</code>, but with more futures.",null,[[],["join5",3]]],[3,"Join","","Future for the <code>join</code> function.",null,null],[3,"Join3","","Future for the [<code>join3</code>] function.",null,null],[3,"Join4","","Future for the [<code>join4</code>] function.",null,null],[3,"Join5","","Future for the [<code>join5</code>] function.",null,null],[5,"join_all","","Creates a future which represents a collection of the …",null,[[],["joinall",3]]],[3,"JoinAll","","Future for the [<code>join_all</code>] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to …",null,[[],["select",3]]],[3,"Select","","Future for the [<code>select()</code>] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of …",null,[[],["selectall",3]]],[3,"SelectAll","","Future for the [<code>select_all</code>] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to …",null,[[],["tryjoin",3]]],[5,"try_join3","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin3",3]]],[5,"try_join4","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin4",3]]],[5,"try_join5","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin5",3]]],[3,"TryJoin","","Future for the <code>try_join</code> function.",null,null],[3,"TryJoin3","","Future for the [<code>try_join3</code>] function.",null,null],[3,"TryJoin4","","Future for the [<code>try_join4</code>] function.",null,null],[3,"TryJoin5","","Future for the [<code>try_join5</code>] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of …",null,[[],["tryjoinall",3]]],[3,"TryJoinAll","","Future for the [<code>try_join_all</code>] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to …",null,[[],["tryselect",3]]],[3,"TrySelect","","Future for the [<code>try_select()</code>] function.",null,null],[5,"select_ok","","Creates a new future which will select the first …",null,[[],["selectok",3]]],[3,"SelectOk","","Future for the [<code>select_ok</code>] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","First branch of the type",8,null],[13,"Right","","Second branch of the type",8,null],[3,"AbortHandle","","A handle to an <code>Abortable</code> task.",null,null],[3,"AbortRegistration","","A registration handle for an <code>Abortable</code> task. Values of …",null,null],[3,"Abortable","","A future/stream which can be remotely short-circuited …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> task was aborted.",null,null],[5,"abortable","","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …",null,[[]]],[0,"never","futures","This module contains the <code>Never</code> type.",null,null],[6,"Never","futures::never","A type with no possible values.",null,null],[0,"sink","futures","Asynchronous sinks.",null,null],[8,"SinkExt","futures::sink","An extension trait for <code>Sink</code>s that provides a variety of …",null,null],[11,"with","","Composes a function <em>in front of</em> the sink.",9,[[],["with",3]]],[11,"with_flat_map","","Composes a function <em>in front of</em> the sink.",9,[[],["withflatmap",3]]],[11,"sink_map_err","","Transforms the error returned by the sink.",9,[[],["sinkmaperr",3]]],[11,"sink_err_into","","Map this sink\'s error to a different error type using the …",9,[[],["sinkerrinto",3]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",9,[[["usize",15]],["buffer",3]]],[11,"close","","Close the sink.",9,[[],["close",3]]],[11,"fanout","","Fanout items to multiple sinks.",9,[[],["fanout",3]]],[11,"flush","","Flush the sink, processing all pending items.",9,[[],["flush",3]]],[11,"send","","A future that completes after the given item has been …",9,[[],["send",3]]],[11,"feed","","A future that completes after the given item has been …",9,[[],["feed",3]]],[11,"send_all","","A future that completes after the given stream has been …",9,[[],["sendall",3]]],[11,"left_sink","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …",9,[[],["either",4]]],[11,"right_sink","","Wrap this stream in an <code>Either</code> stream, making it the …",9,[[],["either",4]]],[11,"poll_ready_unpin","","A convenience method for calling [<code>Sink::poll_ready</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[11,"start_send_unpin","","A convenience method for calling [<code>Sink::start_send</code>] on […",9,[[],["result",4]]],[11,"poll_flush_unpin","","A convenience method for calling [<code>Sink::poll_flush</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[11,"poll_close_unpin","","A convenience method for calling [<code>Sink::poll_close</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[8,"Sink","","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",10,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",10,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"drain","","Create a sink that will just discard all items given to …",null,[[],["drain",3]]],[3,"Drain","","Sink for the [<code>drain</code>] function.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two …",null,null],[3,"Feed","","Future for the <code>feed</code> method.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"SinkErrInto","","Sink for the <code>sink_err_into</code> method.",null,null],[3,"SinkMapErr","","Sink for the <code>sink_map_err</code> method.",null,null],[3,"Send","","Future for the <code>send</code> method.",null,null],[3,"SendAll","","Future for the <code>send_all</code> method.",null,null],[5,"unfold","","Create a sink from a function which processes one item at …",null,[[],["unfold",3]]],[3,"Unfold","","Sink for the [<code>unfold</code>] function.",null,null],[3,"With","","Sink for the <code>with</code> method.",null,null],[3,"WithFlatMap","","Sink for the <code>with_flat_map</code> method.",null,null],[3,"Buffer","","Sink for the <code>buffer</code> method.",null,null],[0,"stream","futures","Asynchronous streams.",null,null],[0,"futures_unordered","futures::stream","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","A set of futures which may complete in any order.",null,null],[3,"IntoIter","","Owned iterator over all futures in the unordered set.",null,null],[3,"Iter","","Immutable iterator over all the futures in the unordered …",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[0,"select_all","futures::stream","An unbounded set of streams",null,null],[3,"SelectAll","futures::stream::select_all","An unbounded set of streams",null,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"Iter","","Immutable iterator over all streams in the unordered set.",null,null],[3,"IterMut","","Mutable iterator over all streams in the unordered set.",null,null],[3,"IntoIter","","Owned iterator over all streams in the unordered set.",null,null],[6,"BoxStream","futures::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",11,[[],["bool",15]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",12,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",12,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",12,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",13,null],[16,"Error","","The type of failures yielded by this future",13,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",13,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[3,"Chain","","Stream for the <code>chain</code> method.",null,null],[3,"Collect","","Future for the <code>collect</code> method.",null,null],[3,"Concat","","Future for the <code>concat</code> method.",null,null],[3,"Cycle","","Stream for the <code>cycle</code> method.",null,null],[3,"Enumerate","","Stream for the <code>enumerate</code> method.",null,null],[3,"Filter","","Stream for the <code>filter</code> method.",null,null],[3,"FilterMap","","Stream for the <code>filter_map</code> method.",null,null],[3,"FlatMap","","Stream for the <code>flat_map</code> method.",null,null],[3,"Flatten","","Stream for the <code>flatten</code> method.",null,null],[3,"Fold","","Future for the <code>fold</code> method.",null,null],[3,"ForEach","","Future for the <code>for_each</code> method.",null,null],[3,"Fuse","","Stream for the <code>fuse</code> method.",null,null],[3,"Inspect","","Stream for the <code>inspect</code> method.",null,null],[3,"Map","","Stream for the <code>map</code> method.",null,null],[3,"Next","","Future for the <code>next</code> method.",null,null],[3,"NextIf","","Future for the <code>Peekable::next_if</code> method.",null,null],[3,"NextIfEq","","Future for the <code>Peekable::next_if_eq</code> method.",null,null],[3,"Peek","","Future for the <code>Peekable::peek</code> method.",null,null],[3,"PeekMut","","Future for the <code>Peekable::peek_mut</code> method.",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[3,"Scan","","Stream for the <code>scan</code> method.",null,null],[3,"SelectNextSome","","Future for the <code>select_next_some</code> method.",null,null],[3,"Skip","","Stream for the <code>skip</code> method.",null,null],[3,"SkipWhile","","Stream for the <code>skip_while</code> method.",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Creates a future that resolves to the next item in the …",14,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",14,[[],["streamfuture",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",14,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",14,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",14,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",14,[[],["filtermap",3]]],[11,"then","","Computes from this stream\'s items new items of a …",14,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",14,[[],["collect",3]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",14,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",14,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",14,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",14,[[],["fold",3]]],[11,"any","","Execute predicate over asynchronous stream, and return …",14,[[],["any",3]]],[11,"all","","Execute predicate over asynchronous stream, and return …",14,[[],["all",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",14,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",14,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",14,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",14,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",14,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",14,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",14,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",14,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",14,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",14,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",14,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",14,[[]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",14,[[],["catchunwind",3]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",14,[[],[["pin",3],["box",3]]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",14,[[],[["box",3],["pin",3]]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",14,[[["usize",15]],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",14,[[["usize",15]],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",14,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",14,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",14,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",14,[[["usize",15]],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",14,[[["usize",15]],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",14,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",14,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",14,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",14,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",14,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",14,[[["context",3]],[["poll",4],["option",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",14,[[],["selectnextsome",3]]],[3,"StreamFuture","","Future for the <code>into_future</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[3,"TakeUntil","","Stream for the <code>take_until</code> method.",null,null],[3,"TakeWhile","","Stream for the <code>take_while</code> method.",null,null],[3,"Then","","Stream for the <code>then</code> method.",null,null],[3,"Unzip","","Future for the <code>unzip</code> method.",null,null],[3,"Zip","","Stream for the <code>zip</code> method.",null,null],[3,"CatchUnwind","","Stream for the <code>catch_unwind</code> method.",null,null],[3,"Chunks","","Stream for the <code>chunks</code> method.",null,null],[3,"ReadyChunks","","Stream for the <code>ready_chunks</code> method.",null,null],[3,"Forward","","Future for the <code>forward</code> method.",null,null],[3,"BufferUnordered","","Stream for the <code>buffer_unordered</code> method.",null,null],[3,"Buffered","","Stream for the <code>buffered</code> method.",null,null],[3,"ForEachConcurrent","","Future for the <code>for_each_concurrent</code> method.",null,null],[3,"ReuniteError","","Error indicating a <code>SplitSink<S></code> and <code>SplitStream<S></code> were …",null,null],[12,"0","","",15,null],[12,"1","","",15,null],[3,"SplitSink","","A <code>Sink</code> part of the split pair",null,null],[3,"SplitStream","","A <code>Stream</code> part of the split pair",null,null],[5,"try_unfold","","Creates a <code>TryStream</code> from a seed and a closure returning a …",null,[[],["tryunfold",3]]],[3,"AndThen","","Stream for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Stream for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Stream for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Stream for the <code>inspect_ok</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"MapErr","","Stream for the <code>map_err</code> method.",null,null],[3,"MapOk","","Stream for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Stream for the <code>or_else</code> method.",null,null],[3,"TryCollect","","Future for the <code>try_collect</code> method.",null,null],[3,"TryConcat","","Future for the <code>try_concat</code> method.",null,null],[3,"TryFilter","","Stream for the <code>try_filter</code> method.",null,null],[3,"TryFilterMap","","Stream for the <code>try_filter_map</code> method.",null,null],[3,"TryFlatten","","Stream for the <code>try_flatten</code> method.",null,null],[3,"TryFold","","Future for the <code>try_fold</code> method.",null,null],[3,"TryForEach","","Future for the <code>try_for_each</code> method.",null,null],[3,"TryNext","","Future for the <code>try_next</code> method.",null,null],[3,"TrySkipWhile","","Stream for the <code>try_skip_while</code> method.",null,null],[8,"TryStreamExt","","Adapters specific to <code>Result</code>-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts …",16,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",16,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",16,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",16,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",16,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",16,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",16,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",16,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",16,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",16,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",16,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",16,[[],["trytakewhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",16,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",16,[[],["trycollect",3]]],[11,"try_chunks","","An adaptor for chunking up successful items of the stream …",16,[[["usize",15]],["trychunks",3]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",16,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",16,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",16,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",16,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",16,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",16,[[["usize",15]],["trybufferunordered",3]]],[11,"try_buffered","","Attempt to execute several futures from a stream …",16,[[["usize",15]],["trybuffered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",16,[[["context",3]],[["poll",4],["option",4]]]],[11,"into_async_read","","Adapter that converts this stream into an <code>AsyncRead</code>.",16,[[],["intoasyncread",3]]],[3,"TryTakeWhile","","Stream for the <code>try_take_while</code> method.",null,null],[3,"TryUnfold","","Stream for the [<code>try_unfold</code>] function.",null,null],[3,"IntoAsyncRead","","Reader for the <code>into_async_read</code> method.",null,null],[3,"TryBufferUnordered","","Stream for the <code>try_buffer_unordered</code> method.",null,null],[3,"TryBuffered","","Stream for the <code>try_buffered</code> method.",null,null],[3,"TryForEachConcurrent","","Future for the <code>try_for_each_concurrent</code> method.",null,null],[3,"TryChunks","","Stream for the <code>try_chunks</code> method.",null,null],[3,"TryChunksError","","Error indicating, that while chunk was collected inner …",null,null],[12,"0","","",17,null],[12,"1","","",17,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the [<code>iter</code>] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream for the [<code>repeat</code>] function.",null,null],[5,"repeat_with","","Creates a new stream that repeats elements of type <code>A</code> …",null,[[],["repeatwith",3]]],[3,"RepeatWith","","An stream that repeats elements of type <code>A</code> endlessly by …",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty</code>] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[],["once",3]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn</code>] function.",null,null],[5,"poll_immediate","","Creates a new stream that always immediately returns …",null,[[],["pollimmediate",3]]],[3,"PollImmediate","","Stream for the poll_immediate function.",null,null],[5,"select","","This function will attempt to pull items from both …",null,[[],["select",3]]],[3,"Select","","Stream for the [<code>select()</code>] function.",null,null],[5,"select_with_strategy","","This function will attempt to pull items from both …",null,[[],["selectwithstrategy",3]]],[4,"PollNext","","Type to tell [<code>SelectWithStrategy</code>] which stream to poll …",null,null],[13,"Left","","Poll the first stream.",18,null],[13,"Right","","Poll the second stream.",18,null],[3,"SelectWithStrategy","","Stream for the [<code>select_with_strategy()</code>] function. See …",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold</code>] function.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"SelectAll","","An unbounded set of streams",null,null],[3,"AbortHandle","","A handle to an <code>Abortable</code> task.",null,null],[3,"AbortRegistration","","A registration handle for an <code>Abortable</code> task. Values of …",null,null],[3,"Abortable","","A future/stream which can be remotely short-circuited …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> task was aborted.",null,null],[5,"abortable","","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …",null,[[]]],[0,"task","futures","Tools for working with tasks.",null,null],[3,"Context","futures::task","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",23,null],[13,"Pending","","Represents that a value is not ready yet.",23,null],[3,"RawWaker","","A <code>RawWaker</code> allows the implementor of a task executor to …",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies …",null,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"LocalSpawn","","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",24,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",24,[[],[["result",4],["spawnerror",3]]]],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",25,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status","","Determines whether the executor is able to spawn new …",25,[[],[["result",4],["spawnerror",3]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[5,"noop_waker_ref","","Get a static reference to a [<code>Waker</code>] which does nothing …",null,[[],["waker",3]]],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make …",26,[[["arc",3]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make …",26,[[["arc",3]]]],[5,"waker","","Creates a [<code>Waker</code>] from an <code>Arc<impl ArcWake></code>.",null,[[["arc",3]],["waker",3]]],[5,"waker_ref","","Creates a reference to a [<code>Waker</code>] from a reference to …",null,[[["arc",3]],["wakerref",3]]],[3,"WakerRef","","A [<code>Waker</code>] that is only valid for a given lifetime.",null,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[8,"LocalSpawnExt","","Extension trait for <code>LocalSpawn</code>.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output <code>()</code> …",27,[[],[["result",4],["spawnerror",3]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion …",27,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[8,"SpawnExt","","Extension trait for <code>Spawn</code>.",null,null],[11,"spawn","","Spawns a task that polls the given future with output <code>()</code> …",28,[[],[["result",4],["spawnerror",3]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion …",28,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[0,"mpsc","futures::channel","A multi-producer, single-consumer queue for sending …",null,null],[3,"Sender","futures::channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for <code>Sender</code>s used as <code>Sink</code>s.",null,null],[3,"TrySendError","","The error type returned from <code>try_send</code>.",null,null],[3,"TryRecvError","","The error type returned from <code>try_next</code>.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between …",null,[[["usize",15]]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating …",null,[[]]],[0,"oneshot","futures::channel","A channel for sending a single message between …",null,null],[3,"Receiver","futures::channel::oneshot","A future for a value that will be provided by another …",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending a single value …",null,[[]]],[3,"Cancellation","","A future that resolves when the receiving end of a …",null,null],[3,"Canceled","","Error returned from a <code>Receiver</code> when the corresponding …",null,null],[0,"lock","futures","Futures-powered synchronization primitives.",null,null],[3,"MappedMutexGuard","futures::lock","An RAII guard returned by the <code>MutexGuard::map</code> and …",null,null],[3,"Mutex","","A futures-aware mutex.",null,null],[3,"MutexGuard","","An RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …",null,null],[3,"MutexLockFuture","","A future which resolves when the target mutex has been …",null,null],[0,"io","futures","Asynchronous I/O.",null,null],[8,"AsyncReadExt","futures::io","An extension trait which adds utility methods to <code>AsyncRead</code>…",null,null],[11,"chain","","Creates an adaptor which will chain this stream with …",29,[[],["chain",3]]],[11,"read","","Tries to read some bytes directly into the given <code>buf</code> in …",29,[[],["read",3]]],[11,"read_vectored","","Creates a future which will read from the <code>AsyncRead</code> into …",29,[[],["readvectored",3]]],[11,"read_exact","","Creates a future which will read exactly enough bytes to …",29,[[],["readexact",3]]],[11,"read_to_end","","Creates a future which will read all the bytes from this …",29,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Creates a future which will read all the bytes from this …",29,[[["string",3]],["readtostring",3]]],[11,"split","","Helper method for splitting this read/write object into …",29,[[]]],[11,"take","","Creates an AsyncRead adapter which will read at most <code>limit</code>…",29,[[["u64",15]],["take",3]]],[8,"AsyncWriteExt","","An extension trait which adds utility methods to …",null,null],[11,"flush","","Creates a future which will entirely flush this <code>AsyncWrite</code>…",30,[[],["flush",3]]],[11,"close","","Creates a future which will entirely close this <code>AsyncWrite</code>…",30,[[],["close",3]]],[11,"write","","Creates a future which will write bytes from <code>buf</code> into the …",30,[[],["write",3]]],[11,"write_vectored","","Creates a future which will write bytes from <code>bufs</code> into …",30,[[],["writevectored",3]]],[11,"write_all","","Write data into this object.",30,[[],["writeall",3]]],[11,"into_sink","","Allow using an [<code>AsyncWrite</code>] as a <code>Sink</code><code><Item: AsRef<[u8]>></code>.",30,[[],["intosink",3]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to <code>AsyncSeek</code>…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then …",31,[[["seekfrom",4]],["seek",3]]],[11,"stream_position","","Creates a future which will return the current seek …",31,[[],["seek",3]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to …",null,null],[11,"fill_buf","","Creates a future which will wait for a non-empty buffer …",32,[[],["fillbuf",3]]],[11,"consume_unpin","","A convenience for calling [<code>AsyncBufRead::consume</code>] on […",32,[[["usize",15]]]],[11,"read_until","","Creates a future which will read all the bytes associated …",32,[[["vec",3],["u8",15]],["readuntil",3]]],[11,"read_line","","Creates a future which will read all the bytes associated …",32,[[["string",3]],["readline",3]]],[11,"lines","","Returns a stream over the lines of this reader. This …",32,[[],["lines",3]]],[3,"Error","","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",33,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",33,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",33,null],[13,"ConnectionReset","","The connection was reset by the remote server.",33,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote …",33,null],[13,"NotConnected","","The network operation failed because it was not connected …",33,null],[13,"AddrInUse","","A socket address could not be bound because the address …",33,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested …",33,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",33,null],[13,"AlreadyExists","","An entity already exists, often a file.",33,null],[13,"WouldBlock","","The operation needs to block to complete, but the …",33,null],[13,"InvalidInput","","A parameter was incorrect.",33,null],[13,"InvalidData","","Data not valid for the operation were encountered.",33,null],[13,"TimedOut","","The I/O operation\'s timeout expired, causing it to be …",33,null],[13,"WriteZero","","An error returned when an operation could not be …",33,null],[13,"Interrupted","","This operation was interrupted.",33,null],[13,"Other","","Any I/O error not part of this list.",33,null],[13,"UnexpectedEof","","An error returned when an operation could not be …",33,null],[3,"IoSlice","","A buffer type used with <code>Write::write_vectored</code>.",null,null],[3,"IoSliceMut","","A buffer type used with <code>Read::read_vectored</code>.",null,null],[6,"Result","","A specialized <code>Result</code> type for I/O operations.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O …",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",34,null],[13,"End","","Sets the offset to the size of this object plus the …",34,null],[13,"Current","","Sets the offset to the current position plus the …",34,null],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",19,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",19,[[["usize",15],["pin",3]]]],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",20,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",20,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",21,[[["seekfrom",4],["pin",3],["context",3]],[["result",4],["poll",4]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",22,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",22,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",22,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Attempt to close the object.",22,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[3,"AllowStdIo","","A simple wrapper type which allows types which implement …",null,null],[3,"BufReader","","The <code>BufReader</code> struct adds buffering to any reader.",null,null],[3,"SeeKRelative","","Future for the <code>BufReader::seek_relative</code> method.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Chain","","Reader for the <code>chain</code> method.",null,null],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"copy","","Creates a future which copies all the bytes from one …",null,[[],["copy",3]]],[3,"Copy","","Future for the [<code>copy()</code>] function.",null,null],[5,"copy_buf","","Creates a future which copies all the bytes from one …",null,[[],["copybuf",3]]],[3,"CopyBuf","","Future for the [<code>copy_buf()</code>] function.",null,null],[3,"Cursor","","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …",null,null],[5,"empty","","Constructs a new handle to an empty reader.",null,[[],["empty",3]]],[3,"Empty","","Reader for the [<code>empty()</code>] function.",null,null],[3,"FillBuf","","Future for the <code>fill_buf</code> method.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"IntoSink","","Sink for the <code>into_sink</code> method.",null,null],[3,"Lines","","Stream for the <code>lines</code> method.",null,null],[3,"Read","","Future for the <code>read</code> method.",null,null],[3,"ReadVectored","","Future for the <code>read_vectored</code> method.",null,null],[3,"ReadExact","","Future for the <code>read_exact</code> method.",null,null],[3,"ReadLine","","Future for the <code>read_line</code> method.",null,null],[3,"ReadToEnd","","Future for the <code>read_to_end</code> method.",null,null],[3,"ReadToString","","Future for the <code>read_to_string</code> method.",null,null],[3,"ReadUntil","","Future for the <code>read_until</code> method.",null,null],[5,"repeat","","Creates an instance of a reader that infinitely repeats …",null,[[["u8",15]],["repeat",3]]],[3,"Repeat","","Reader for the [<code>repeat()</code>] function.",null,null],[3,"Seek","","Future for the <code>seek</code> method.",null,null],[5,"sink","","Creates an instance of a writer which will successfully …",null,[[],["sink",3]]],[3,"Sink","","Writer for the [<code>sink()</code>] function.",null,null],[3,"ReadHalf","","The readable half of an object returned from …",null,null],[3,"ReuniteError","","Error indicating a <code>ReadHalf<T></code> and <code>WriteHalf<T></code> were not …",null,null],[12,"0","","",35,null],[12,"1","","",35,null],[3,"WriteHalf","","The writable half of an object returned from …",null,null],[3,"Take","","Reader for the <code>take</code> method.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"Write","","Future for the <code>write</code> method.",null,null],[3,"WriteVectored","","Future for the <code>write_vectored</code> method.",null,null],[3,"WriteAll","","Future for the <code>write_all</code> method.",null,null],[11,"from","futures::task","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_future","","",36,[[]]],[11,"try_poll","","",36,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_future","","",37,[[]]],[11,"try_poll","","",37,[[["pin",3],["context",3]],["poll",4]]],[11,"from","futures::future","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_future","","",38,[[]]],[11,"try_poll","","",38,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_future","","",39,[[]]],[11,"try_poll","","",39,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_future","","",40,[[]]],[11,"try_poll","","",40,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"try_poll_next","","",41,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_future","","",42,[[]]],[11,"try_poll","","",42,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_future","","",43,[[]]],[11,"try_poll","","",43,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_future","","",44,[[]]],[11,"try_poll","","",44,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_future","","",45,[[]]],[11,"try_poll","","",45,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_future","","",46,[[]]],[11,"try_poll","","",46,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"try_poll_next","","",47,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_future","","",48,[[]]],[11,"try_poll","","",48,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_future","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"try_poll","","",50,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_future","","",51,[[]]],[11,"try_poll","","",51,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_future","","",53,[[]]],[11,"try_poll","","",53,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_future","","",54,[[]]],[11,"try_poll","","",54,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_future","","",55,[[]]],[11,"try_poll","","",55,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_future","","",56,[[]]],[11,"try_poll","","",56,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_future","","",57,[[]]],[11,"try_poll","","",57,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_future","","",58,[[]]],[11,"try_poll","","",58,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_future","","",59,[[]]],[11,"try_poll","","",59,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_future","","",60,[[]]],[11,"try_poll","","",60,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_future","","",61,[[]]],[11,"try_poll","","",61,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_future","","",62,[[]]],[11,"try_poll","","",62,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_future","","",63,[[]]],[11,"try_poll","","",63,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"try_poll_next","","",64,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_future","","",65,[[]]],[11,"try_poll","","",65,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"try_poll_next","","",66,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_future","","",67,[[]]],[11,"try_poll","","",67,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_future","","",68,[[]]],[11,"try_poll","","",68,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_future","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_future","","",70,[[]]],[11,"try_poll","","",70,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_future","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_future","","",72,[[]]],[11,"try_poll","","",72,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_future","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_future","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_future","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_future","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_future","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_future","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_future","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_future","","",80,[[]]],[11,"try_poll","","",80,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_future","","",81,[[]]],[11,"try_poll","","",81,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_future","","",82,[[]]],[11,"try_poll","","",82,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_future","","",83,[[]]],[11,"try_poll","","",83,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_future","","",84,[[]]],[11,"try_poll","","",84,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_future","","",85,[[]]],[11,"try_poll","","",85,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_future","","",86,[[]]],[11,"try_poll","","",86,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_future","","",8,[[]]],[11,"try_poll","","",8,[[["pin",3],["context",3]],["poll",4]]],[11,"try_poll_next","","",8,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","futures::stream","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_future","","",89,[[]]],[11,"try_poll","","",89,[[["pin",3],["context",3]],["poll",4]]],[11,"try_poll_next","","",89,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","futures::sink","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_future","","",91,[[]]],[11,"try_poll","","",91,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_future","","",94,[[]]],[11,"try_poll","","",94,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_future","","",95,[[]]],[11,"try_poll","","",95,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"try_poll_next","","",96,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"try_poll_next","","",97,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_future","","",98,[[]]],[11,"try_poll","","",98,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"into_future","","",99,[[]]],[11,"try_poll","","",99,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"try_poll_next","","",101,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"try_poll_next","","",102,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"try_poll_next","","",103,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","futures::stream","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"try_poll_next","","",104,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","futures::stream::futures_unordered","",105,[[]]],[11,"into","","",105,[[]]],[11,"into_iter","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"into_iter","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"into_iter","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"into_iter","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"into_iter","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","futures::stream","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"try_poll_next","","",110,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","futures::stream::select_all","",111,[[]]],[11,"into","","",111,[[]]],[11,"into_iter","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"into_iter","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"into_iter","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","futures::stream","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"try_poll_next","","",114,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"into_future","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"into_future","","",116,[[]]],[11,"try_poll","","",116,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"try_poll_next","","",117,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"try_poll_next","","",119,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"try_poll_next","","",120,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"try_poll_next","","",121,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"try_poll_next","","",122,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"into_future","","",123,[[]]],[11,"try_poll","","",123,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"into_future","","",124,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"try_poll_next","","",125,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"try_poll_next","","",126,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"try_poll_next","","",127,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"into_future","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"into_future","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"into_future","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"into_future","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"into_future","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"try_poll_next","","",133,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"try_poll_next","","",134,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"into_future","","",135,[[]]],[11,"try_poll","","",135,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"try_poll_next","","",136,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"try_poll_next","","",137,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"into_future","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"try_poll_next","","",139,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"try_poll_next","","",140,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"try_poll_next","","",141,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"try_poll_next","","",142,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"into_future","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"try_poll_next","","",145,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"into_future","","",148,[[]]],[11,"try_poll","","",148,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"try_poll_next","","",149,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"try_poll_next","","",150,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"into_future","","",151,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"try_poll_next","","",153,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"try_poll_next","","",154,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"try_poll_next","","",155,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"try_poll_next","","",156,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"try_poll_next","","",157,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"try_poll_next","","",158,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"try_poll_next","","",159,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"try_poll_next","","",160,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"try_poll_next","","",161,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"into_future","","",162,[[]]],[11,"try_poll","","",162,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"into_future","","",163,[[]]],[11,"try_poll","","",163,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"try_poll_next","","",164,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"try_poll_next","","",165,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"try_poll_next","","",166,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"into_future","","",167,[[]]],[11,"try_poll","","",167,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"into_future","","",168,[[]]],[11,"try_poll","","",168,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"into_future","","",169,[[]]],[11,"try_poll","","",169,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"try_poll_next","","",170,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"try_poll_next","","",171,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"try_poll_next","","",172,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"try_poll_next","","",174,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"try_poll_next","","",175,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"into_future","","",176,[[]]],[11,"try_poll","","",176,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"try_poll_next","","",177,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"try_poll_next","","",178,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"try_poll_next","","",179,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"try_poll_next","","",180,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"try_poll_next","","",181,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"try_poll_next","","",182,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"try_poll_next","","",183,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"try_poll_next","","",184,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"try_poll_next","","",186,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"try_poll_next","","",187,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"try_poll_next","","",188,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"try_poll_next","","",189,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","futures::task","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_string","","",194,[[],["string",3]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","futures::channel::mpsc","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"try_poll_next","","",199,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"try_poll_next","","",200,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"to_string","","",201,[[],["string",3]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"to_string","","",202,[[],["string",3]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_string","","",203,[[],["string",3]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","futures::channel::oneshot","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"into_future","","",204,[[]]],[11,"try_poll","","",204,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"into_future","","",206,[[]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"to_string","","",207,[[],["string",3]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","futures::lock","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",209,[[]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"into_future","","",211,[[]]],[11,"from","futures::io","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_string","","",212,[[],["string",3]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"into_future","","",217,[[]]],[11,"try_poll","","",217,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"into_future","","",220,[[]]],[11,"try_poll","","",220,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"into_future","","",221,[[]]],[11,"try_poll","","",221,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"into_future","","",222,[[]]],[11,"try_poll","","",222,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"into_future","","",225,[[]]],[11,"try_poll","","",225,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"into_future","","",226,[[]]],[11,"try_poll","","",226,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"try_poll_next","","",228,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"into_future","","",229,[[]]],[11,"try_poll","","",229,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"into_future","","",230,[[]]],[11,"try_poll","","",230,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"into_future","","",231,[[]]],[11,"try_poll","","",231,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"into_future","","",232,[[]]],[11,"try_poll","","",232,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"into_future","","",233,[[]]],[11,"try_poll","","",233,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"into_future","","",234,[[]]],[11,"try_poll","","",234,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"into_future","","",235,[[]]],[11,"try_poll","","",235,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"into_future","","",237,[[]]],[11,"try_poll","","",237,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"into_future","","",243,[[]]],[11,"try_poll","","",243,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"into_future","","",244,[[]]],[11,"try_poll","","",244,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"into_future","","",245,[[]]],[11,"try_poll","","",245,[[["pin",3],["context",3]],["poll",4]]],[11,"deref_mut","","",214,[[]]],[11,"description","","",212,[[],["str",15]]],[11,"cause","","",212,[[],[["option",4],["error",8]]]],[11,"source","","",212,[[],[["option",4],["error",8]]]],[11,"eq","","",34,[[["seekfrom",4]],["bool",15]]],[11,"ne","","",34,[[["seekfrom",4]],["bool",15]]],[11,"eq","","",33,[[["errorkind",4]],["bool",15]]],[11,"partial_cmp","","",33,[[["errorkind",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",213,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",33,[[],["errorkind",4]]],[11,"clone","","",34,[[],["seekfrom",4]]],[11,"clone","","",213,[[],["ioslice",3]]],[11,"fmt","","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",212,[[["intoinnererror",3]],["error",3]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",212,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",212,[[["nulerror",3]],["error",3]]],[11,"hash","","",33,[[]]],[11,"cmp","","",33,[[["errorkind",4]],["ordering",4]]],[11,"deref","","",214,[[]]],[11,"deref","","",213,[[]]],[11,"cmp","futures::task","",23,[[["poll",4]],["ordering",4]]],[11,"clone","","",192,[[],["rawwakervtable",3]]],[11,"clone","","",23,[[],["poll",4]]],[11,"clone","","",193,[[],["waker",3]]],[11,"hash","","",23,[[]]],[11,"from","","Convert to a <code>Ready</code> variant.",23,[[],["poll",4]]],[11,"eq","","",192,[[["rawwakervtable",3]],["bool",15]]],[11,"ne","","",192,[[["rawwakervtable",3]],["bool",15]]],[11,"eq","","",191,[[["rawwaker",3]],["bool",15]]],[11,"ne","","",191,[[["rawwaker",3]],["bool",15]]],[11,"eq","","",23,[[["poll",4]],["bool",15]]],[11,"ne","","",23,[[["poll",4]],["bool",15]]],[11,"partial_cmp","","",23,[[["poll",4]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["poll",4]],["bool",15]]],[11,"le","","",23,[[["poll",4]],["bool",15]]],[11,"gt","","",23,[[["poll",4]],["bool",15]]],[11,"ge","","",23,[[["poll",4]],["bool",15]]],[11,"drop","","",193,[[]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"into_result","","",23,[[],["result",4]]],[11,"from_error","","",23,[[],[["poll",4],["option",4]]]],[11,"from_ok","","",23,[[],[["poll",4],["option",4]]]],[11,"into_result","","",23,[[],["result",4]]],[11,"from_error","","",23,[[],[["poll",4],["result",4]]]],[11,"from_ok","","",23,[[],[["poll",4],["result",4]]]],[11,"from","","",191,[[["arc",3]],["rawwaker",3]]],[11,"from","","",193,[[["arc",3]],["waker",3]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",196,[[],["atomicwaker",3]]],[11,"fmt","futures::io","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","futures::io","",215,[[]]],[11,"hash","futures::stream","",18,[[]]],[11,"poll_fill_buf","futures::io","",216,[[["pin",3],["bufreader",3],["context",3]],[["poll",4],["result",4]]]],[11,"consume","","",216,[[["pin",3],["bufreader",3],["usize",15]]]],[11,"poll_fill_buf","","",241,[[["pin",3],["take",3],["context",3]],[["poll",4],["result",4]]]],[11,"consume","","",241,[[["usize",15],["pin",3],["take",3]]]],[11,"poll_fill_buf","","",215,[[["allowstdio",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"consume","","",215,[[["allowstdio",3],["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",224,[[["pin",3],["empty",3],["context",3]],[["poll",4],["result",4]]]],[11,"consume","","",224,[[["pin",3],["empty",3],["usize",15]]]],[11,"poll_fill_buf","futures::stream","",173,[[["pin",3],["intoasyncread",3],["context",3]],[["poll",4],["result",4]]]],[11,"consume","","",173,[[["pin",3],["intoasyncread",3],["usize",15]]]],[11,"poll_fill_buf","futures::io","",223,[[["context",3],["pin",3],["cursor",3]],[["poll",4],["result",4]]]],[11,"consume","","",223,[[["usize",15],["pin",3],["cursor",3]]]],[11,"poll_fill_buf","","",219,[[["pin",3],["chain",3],["context",3]],[["poll",4],["result",4]]]],[11,"consume","","",219,[[["pin",3],["usize",15],["chain",3]]]],[11,"poll_fill_buf","futures::future","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["result",4]]]],[11,"consume","","",8,[[["usize",15],["pin",3],["either",4]]]],[11,"poll_fill_buf","futures::io","",218,[[["context",3],["bufwriter",3],["pin",3]],[["poll",4],["result",4]]]],[11,"consume","","",218,[[["usize",15],["bufwriter",3],["pin",3]]]],[11,"seek","","",215,[[["seekfrom",4]],[["result",4],["error",3],["u64",15]]]],[11,"from","futures::future","",69,[[["option",4]],["optionfuture",3]]],[11,"from","futures::lock","",209,[[],["mutex",3]]],[11,"deref","","",210,[[]]],[11,"deref","","",208,[[]]],[11,"poll_next","futures::stream","",179,[[["context",3],["repeat",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",179,[[]]],[11,"poll_next","","",117,[[["context",3],["cycle",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",117,[[]]],[11,"poll_next","","",187,[[["context",3],["pin",3],["selectwithstrategy",3]],[["poll",4],["option",4]]]],[11,"poll_next","futures::future","",66,[[["flattensink",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",66,[[]]],[11,"poll_next","futures::stream","",181,[[["pin",3],["empty",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",181,[[]]],[11,"poll_next","","",175,[[["pin",3],["context",3],["trybuffered",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",120,[[["filtermap",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",120,[[]]],[11,"poll_next","","",119,[[["pin",3],["filter",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",119,[[]]],[11,"poll_next","futures::future","",71,[[["context",3],["pin",3],["pollimmediate",3]],[["poll",4],["option",4]]]],[11,"poll_next","futures::stream","",189,[[["futuresordered",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",189,[[]]],[11,"poll_next","","",150,[[["buffered",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",150,[[]]],[11,"poll_next","","",165,[[["context",3],["tryfiltermap",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",165,[[]]],[11,"poll_next","","",137,[[["context",3],["pin",3],["skipwhile",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",137,[[]]],[11,"poll_next","","",144,[[["zip",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",144,[[]]],[11,"poll_next","","",164,[[["tryfilter",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",164,[[]]],[11,"poll_next","","",121,[[["flatmap",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",121,[[]]],[11,"poll_next","","",166,[[["pin",3],["context",3],["tryflatten",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures::sink","",101,[[["with",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",101,[[]]],[11,"poll_next","futures::stream","",118,[[["pin",3],["context",3],["enumerate",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",118,[[]]],[11,"poll_next","futures::sink","",97,[[["sinkmaperr",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",97,[[]]],[11,"poll_next","futures::stream","",89,[[["pin",3],["context",3],["abortable",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",186,[[["select",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",133,[[["pin",3],["context",3],["peekable",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",133,[[]]],[11,"poll_next","","",145,[[["catchunwind",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",145,[[]]],[11,"poll_next","","",139,[[["take",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",139,[[]]],[11,"poll_next","","",147,[[["pin",3],["readychunks",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",147,[[]]],[11,"poll_next","","",188,[[["pin",3],["unfold",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",160,[[["mapok",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",160,[[]]],[11,"poll_next","futures::sink","",102,[[["pin",3],["context",3],["withflatmap",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",102,[[]]],[11,"poll_next","futures::stream","",149,[[["bufferunordered",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",149,[[]]],[11,"poll_next","","",185,[[["context",3],["pin",3],["pollimmediate",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",185,[[]]],[11,"poll_next","","",158,[[["pin",3],["intostream",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",158,[[]]],[11,"poll_next","","",170,[[["context",3],["pin",3],["tryskipwhile",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",170,[[]]],[11,"poll_next","futures::sink","",103,[[["context",3],["pin",3],["buffer",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",103,[[]]],[11,"poll_next","futures::stream","",136,[[["pin",3],["skip",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",136,[[]]],[11,"poll_next","","",156,[[["inspecterr",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",156,[[]]],[11,"poll_next","","",140,[[["takeuntil",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",140,[[]]],[11,"poll_next","","",177,[[["pin",3],["trychunks",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",177,[[]]],[11,"poll_next","","",110,[[["pin",3],["selectall",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",127,[[["pin",3],["context",3],["map",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",127,[[]]],[11,"poll_next","","",183,[[["context",3],["pin",3],["pending",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",183,[[]]],[11,"poll_next","futures::future","",64,[[["tryflattenstream",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",64,[[]]],[11,"poll_next","futures::io","",228,[[["lines",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures::stream","",114,[[["chain",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",114,[[]]],[11,"poll_next","","",122,[[["flatten",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",122,[[]]],[11,"poll_next","","",125,[[["context",3],["pin",3],["fuse",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",125,[[]]],[11,"poll_next","futures::future","",41,[[["pin",3],["intostream",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",41,[[]]],[11,"poll_next","futures::stream","",180,[[["pin",3],["repeatwith",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",180,[[]]],[11,"poll_next","","",184,[[["pollfn",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",126,[[["pin",3],["context",3],["inspect",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",126,[[]]],[11,"poll_next","","",154,[[["context",3],["pin",3],["andthen",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",154,[[]]],[11,"poll_next","","",134,[[["scan",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",134,[[]]],[11,"poll_next","","",159,[[["maperr",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",159,[[]]],[11,"poll_next","","",141,[[["context",3],["takewhile",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",141,[[]]],[11,"poll_next","","",171,[[["context",3],["trytakewhile",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",171,[[]]],[11,"poll_next","","",153,[[["context",3],["pin",3],["splitstream",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",142,[[["pin",3],["then",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",142,[[]]],[11,"poll_next","","",178,[[["iter",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",178,[[]]],[11,"poll_next","","",104,[[["futuresunordered",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",104,[[]]],[11,"poll_next","","",174,[[["pin",3],["trybufferunordered",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","futures::future","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["option",4]]]],[11,"size_hint","","",8,[[]]],[11,"poll_next","futures::stream","",146,[[["pin",3],["chunks",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",146,[[]]],[11,"poll_next","","",172,[[["pin",3],["tryunfold",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures::sink","",96,[[["context",3],["pin",3],["sinkerrinto",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",96,[[]]],[11,"poll_next","futures::stream","",155,[[["context",3],["pin",3],["errinto",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",155,[[]]],[11,"poll_next","","",182,[[["once",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",182,[[]]],[11,"poll_next","","",157,[[["pin",3],["context",3],["inspectok",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",157,[[]]],[11,"poll_next","futures::future","",47,[[["pin",3],["context",3],["flattenstream",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",47,[[]]],[11,"poll_next","futures::stream","",161,[[["context",3],["orelse",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",161,[[]]],[11,"poll","futures::future","",61,[[["okinto",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::io","",234,[[["pin",3],["readtostring",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",45,[[["context",3],["then",3],["pin",3]],["poll",4]]],[11,"poll","","",55,[[["inspecterr",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::sink","",94,[[["feed",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",83,[[["context",3],["tryjoin5",3],["pin",3]],["poll",4]]],[11,"poll","futures::stream","",89,[[["abortable",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",62,[[["context",3],["orelse",3],["pin",3]],["poll",4]]],[11,"poll","futures::io","",231,[[["context",3],["readexact",3],["pin",3]],["poll",4]]],[11,"poll","futures::sink","",95,[[["flush",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",226,[[["pin",3],["flush",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",151,[[["pin",3],["context",3],["foreachconcurrent",3]],["poll",4]]],[11,"poll","futures::io","",222,[[["context",3],["pin",3],["copybuf",3]],["poll",4]]],[11,"poll","futures::future","",48,[[["pin",3],["catchunwind",3],["context",3]],["poll",4]]],[11,"poll","","",42,[[["map",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",6,[[["maybedone",4],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",131,[[["peek",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::sink","",99,[[["pin",3],["context",3],["sendall",3]],["poll",4]]],[11,"poll","futures::future","",75,[[["join4",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",130,[[["context",3],["pin",3],["nextifeq",3]],["poll",4]]],[11,"poll","futures::future","",60,[[["mapokorelse",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",49,[[["context",3],["pin",3],["remote",3]],["poll",4]]],[11,"poll","","",59,[[["pin",3],["context",3],["mapok",3]],["poll",4]]],[11,"poll","","",38,[[["flatten",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",230,[[["context",3],["pin",3],["readvectored",3]],["poll",4]]],[11,"poll","futures::future","",84,[[["context",3],["pin",3],["tryjoinall",3]],["poll",4]]],[11,"poll","futures::stream","",124,[[["context",3],["pin",3],["foreach",3]],["poll",4]]],[11,"poll","futures::io","",221,[[["copy",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",72,[[["ready",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",244,[[["writevectored",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",44,[[["pin",3],["nevererror",3],["context",3]],["poll",4]]],[11,"poll","","",82,[[["tryjoin4",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",65,[[["unwraporelse",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",143,[[["pin",3],["context",3],["unzip",3]],["poll",4]]],[11,"poll","futures::future","",57,[[["intofuture",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::stream","",163,[[["context",3],["pin",3],["tryconcat",3]],["poll",4]]],[11,"poll","futures::future","",54,[[["context",3],["errinto",3],["pin",3]],["poll",4]]],[11,"poll","","",70,[[["context",3],["pin",3],["pollfn",3]],["poll",4]]],[11,"poll","futures::stream","",176,[[["pin",3],["tryforeachconcurrent",3],["context",3]],["poll",4]]],[11,"poll","","",168,[[["tryforeach",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",56,[[["context",3],["pin",3],["inspectok",3]],["poll",4]]],[11,"poll","","",80,[[["pin",3],["context",3],["tryjoin",3]],["poll",4]]],[11,"poll","futures::io","",233,[[["context",3],["readtoend",3],["pin",3]],["poll",4]]],[11,"poll","futures::stream","",116,[[["context",3],["pin",3],["concat",3]],["poll",4]]],[11,"poll","futures::future","",58,[[["pin",3],["context",3],["maperr",3]],["poll",4]]],[11,"poll","futures::io","",217,[[["pin",3],["context",3],["seekrelative",3]],["poll",4]]],[11,"poll","futures::future","",53,[[["context",3],["andthen",3],["pin",3]],["poll",4]]],[11,"poll","","",69,[[["pin",3],["optionfuture",3],["context",3]],["poll",4]]],[11,"poll","","",71,[[["context",3],["pin",3],["pollimmediate",3]],[["option",4],["poll",4]]]],[11,"poll","","",67,[[["context",3],["pin",3],["lazy",3]],["poll",4]]],[11,"poll","","",85,[[["tryselect",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",232,[[["context",3],["pin",3],["readline",3]],["poll",4]]],[11,"poll","futures::lock","",211,[[["mutexlockfuture",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",46,[[["pin",3],["context",3],["uniterror",3]],["poll",4]]],[11,"poll","futures::io","",237,[[["seek",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",115,[[["context",3],["pin",3],["collect",3]],["poll",4]]],[11,"poll","futures::future","",39,[[["fuse",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",78,[[["context",3],["pin",3],["select",3]],["poll",4]]],[11,"poll","","",77,[[["pin",3],["joinall",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",132,[[["pin",3],["peekmut",3],["context",3]],["poll",4]]],[11,"poll","","",128,[[["context",3],["pin",3],["next",3]],["poll",4]]],[11,"poll","futures::sink","",98,[[["pin",3],["send",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",40,[[["pin",3],["context",3],["inspect",3]],["poll",4]]],[11,"poll","futures::io","",220,[[["close",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",135,[[["selectnextsome",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",162,[[["trycollect",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",86,[[["pin",3],["context",3],["selectok",3]],["poll",4]]],[11,"poll","futures::stream","",169,[[["context",3],["pin",3],["trynext",3]],["poll",4]]],[11,"poll","futures::future","",68,[[["pin",3],["pending",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",245,[[["pin",3],["context",3],["writeall",3]],[["poll",4],["result",4]]]],[11,"poll","","",225,[[["pin",3],["fillbuf",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",43,[[["pin",3],["mapinto",3],["context",3]],["poll",4]]],[11,"poll","","",76,[[["join5",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",50,[[["pin",3],["context",3],["remotehandle",3]],["poll",4]]],[11,"poll","","",73,[[["join",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",123,[[["context",3],["pin",3],["fold",3]],["poll",4]]],[11,"poll","futures::future","",81,[[["pin",3],["tryjoin3",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",148,[[["pin",3],["forward",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",7,[[["pin",3],["trymaybedone",4],["context",3]],["poll",4]]],[11,"poll","","",51,[[["context",3],["shared",3],["pin",3]],["poll",4]]],[11,"poll","","",79,[[["pin",3],["selectall",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",243,[[["pin",3],["write",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",63,[[["tryflatten",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",138,[[["streamfuture",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",129,[[["nextif",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",8,[[["context",3],["pin",3],["either",4]],["poll",4]]],[11,"poll","futures::io","",235,[[["context",3],["pin",3],["readuntil",3]],["poll",4]]],[11,"poll","futures::stream","",167,[[["context",3],["tryfold",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",74,[[["pin",3],["context",3],["join3",3]],["poll",4]]],[11,"poll","futures::io","",229,[[["pin",3],["read",3],["context",3]],["poll",4]]],[11,"poll","futures::sink","",91,[[["context",3],["pin",3],["close",3]],["poll",4]]],[11,"extend","futures::stream","",189,[[]]],[11,"extend","","",104,[[]]],[11,"extend","","",110,[[]]],[11,"poll_seek","futures::io","Seek to the offset, in bytes, in the underlying writer.",218,[[["seekfrom",4],["bufwriter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_seek","","",223,[[["seekfrom",4],["cursor",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_seek","","Seek to an offset, in bytes, in the underlying reader.",216,[[["seekfrom",4],["bufreader",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_seek","futures::future","",8,[[["seekfrom",4],["pin",3],["either",4],["context",3]],[["result",4],["poll",4]]]],[11,"poll_seek","futures::io","",215,[[["pin",3],["seekfrom",4],["allowstdio",3],["context",3]],[["result",4],["poll",4]]]],[11,"fill_buf","","",215,[[],[["error",3],["result",4]]]],[11,"consume","","",215,[[["usize",15]]]],[11,"deref_mut","futures::lock","",208,[[]]],[11,"deref_mut","","",210,[[]]],[11,"write","futures::io","",215,[[],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored","","",215,[[],[["usize",15],["result",4],["error",3]]]],[11,"flush","","",215,[[],[["result",4],["error",3]]]],[11,"write_all","","",215,[[],[["result",4],["error",3]]]],[11,"write_fmt","","",215,[[["arguments",3]],[["result",4],["error",3]]]],[11,"into_iter","futures::stream","",110,[[]]],[11,"into_iter","","",104,[[]]],[11,"from_iter","futures::future","",77,[[],["joinall",3]]],[11,"from_iter","futures::stream","",189,[[],["futuresordered",3]]],[11,"from_iter","futures::future","",86,[[],["selectok",3]]],[11,"from_iter","futures::stream","",104,[[],["futuresunordered",3]]],[11,"from_iter","","",110,[[],["selectall",3]]],[11,"from_iter","futures::future","",84,[[],["tryjoinall",3]]],[11,"from_iter","","",79,[[],["selectall",3]]],[11,"cmp","futures::io","",215,[[["allowstdio",3]],["ordering",4]]],[11,"drop","futures::future","",51,[[]]],[11,"drop","futures::stream","",104,[[]]],[11,"drop","futures::lock","",208,[[]]],[11,"drop","","",211,[[]]],[11,"drop","","",210,[[]]],[11,"as_mut","futures::io","",242,[[]]],[11,"spawn_local_obj","futures::stream","",104,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"clone","futures::io","",223,[[],["cursor",3]]],[11,"clone","futures::stream","",185,[[],["pollimmediate",3]]],[11,"clone","","",89,[[],["abortable",3]]],[11,"clone","futures::future","",69,[[],["optionfuture",3]]],[11,"clone","","",51,[[],["shared",3]]],[11,"clone","futures::io","",215,[[],["allowstdio",3]]],[11,"clone","futures::future","",72,[[],["ready",3]]],[11,"clone","futures::stream","",18,[[],["pollnext",4]]],[11,"clone","","",179,[[],["repeat",3]]],[11,"clone","","",90,[[],["aborted",3]]],[11,"clone","","",181,[[],["empty",3]]],[11,"clone","futures::sink","",101,[[],["with",3]]],[11,"clone","futures::stream","",180,[[],["repeatwith",3]]],[11,"clone","futures::future","",8,[[],["either",4]]],[11,"clone","futures::stream","",87,[[],["aborthandle",3]]],[11,"clone","futures::future","",52,[[],["weakshared",3]]],[11,"clone","","",68,[[],["pending",3]]],[11,"clone","futures::stream","",178,[[],["iter",3]]],[11,"clone","","",183,[[],["pending",3]]],[11,"clone","futures::future","",71,[[],["pollimmediate",3]]],[11,"clone","futures::sink","",97,[[],["sinkmaperr",3]]],[11,"spawn_obj","futures::stream","",104,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"next","futures::stream::select_all","",112,[[],["option",4]]],[11,"size_hint","","",112,[[]]],[11,"next","","",113,[[],["option",4]]],[11,"size_hint","","",113,[[]]],[11,"next","","",111,[[],["option",4]]],[11,"size_hint","","",111,[[]]],[11,"next","futures::stream::futures_unordered","",107,[[],["option",4]]],[11,"size_hint","","",107,[[]]],[11,"next","","",109,[[],["option",4]]],[11,"size_hint","","",109,[[]]],[11,"next","","",105,[[],["option",4]]],[11,"size_hint","","",105,[[]]],[11,"next","","",106,[[],["option",4]]],[11,"size_hint","","",106,[[]]],[11,"next","","",108,[[],["option",4]]],[11,"size_hint","","",108,[[]]],[11,"eq","futures::io","",215,[[["allowstdio",3]],["bool",15]]],[11,"ne","","",215,[[["allowstdio",3]],["bool",15]]],[11,"eq","futures::stream","",17,[[["trychunkserror",3]],["bool",15]]],[11,"ne","","",17,[[["trychunkserror",3]],["bool",15]]],[11,"eq","","",90,[[["aborted",3]],["bool",15]]],[11,"eq","","",18,[[["pollnext",4]],["bool",15]]],[11,"is_terminated","futures::future","",42,[[],["bool",15]]],[11,"is_terminated","","",8,[[],["bool",15]]],[11,"is_terminated","futures::stream","",132,[[],["bool",15]]],[11,"is_terminated","","",128,[[],["bool",15]]],[11,"is_terminated","futures::future","",38,[[],["bool",15]]],[11,"is_terminated","","",76,[[],["bool",15]]],[11,"is_terminated","","",46,[[],["bool",15]]],[11,"is_terminated","futures::stream","",135,[[],["bool",15]]],[11,"is_terminated","futures::future","",74,[[],["bool",15]]],[11,"is_terminated","","",75,[[],["bool",15]]],[11,"is_terminated","futures::stream","",162,[[],["bool",15]]],[11,"is_terminated","futures::future","",59,[[],["bool",15]]],[11,"is_terminated","","",56,[[],["bool",15]]],[11,"is_terminated","","",43,[[],["bool",15]]],[11,"is_terminated","","",73,[[],["bool",15]]],[11,"is_terminated","futures::stream","",131,[[],["bool",15]]],[11,"is_terminated","futures::future","",7,[[],["bool",15]]],[11,"is_terminated","","",58,[[],["bool",15]]],[11,"is_terminated","futures::stream","",138,[[],["bool",15]]],[11,"is_terminated","futures::future","",61,[[],["bool",15]]],[11,"is_terminated","","",69,[[],["bool",15]]],[11,"is_terminated","","",44,[[],["bool",15]]],[11,"is_terminated","futures::stream","",167,[[],["bool",15]]],[11,"is_terminated","","",151,[[],["bool",15]]],[11,"is_terminated","","",115,[[],["bool",15]]],[11,"is_terminated","futures::future","",45,[[],["bool",15]]],[11,"is_terminated","","",54,[[],["bool",15]]],[11,"is_terminated","futures::stream","",143,[[],["bool",15]]],[11,"is_terminated","futures::future","",63,[[],["bool",15]]],[11,"is_terminated","","",68,[[],["bool",15]]],[11,"is_terminated","","",51,[[],["bool",15]]],[11,"is_terminated","futures::stream","",123,[[],["bool",15]]],[11,"is_terminated","futures::future","",65,[[],["bool",15]]],[11,"is_terminated","","",6,[[],["bool",15]]],[11,"is_terminated","","",53,[[],["bool",15]]],[11,"is_terminated","","",40,[[],["bool",15]]],[11,"is_terminated","futures::stream","",124,[[],["bool",15]]],[11,"is_terminated","futures::future","",72,[[],["bool",15]]],[11,"is_terminated","futures::stream","",169,[[],["bool",15]]],[11,"is_terminated","futures::future","",55,[[],["bool",15]]],[11,"is_terminated","","",71,[[],["bool",15]]],[11,"is_terminated","","",60,[[],["bool",15]]],[11,"is_terminated","","",39,[[],["bool",15]]],[11,"is_terminated","futures::stream","",148,[[],["bool",15]]],[11,"is_terminated","","",130,[[],["bool",15]]],[11,"is_terminated","","",129,[[],["bool",15]]],[11,"is_terminated","futures::future","",67,[[],["bool",15]]],[11,"is_terminated","futures::stream","",176,[[],["bool",15]]],[11,"is_terminated","futures::future","",62,[[],["bool",15]]],[11,"is_terminated","","",57,[[],["bool",15]]],[11,"is_terminated","futures::stream","",116,[[],["bool",15]]],[11,"is_terminated","futures::future","",78,[[],["bool",15]]],[11,"is_terminated","futures::lock","",211,[[],["bool",15]]],[11,"fmt","futures::io","",238,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",226,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::lock","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream::futures_unordered","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",235,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",222,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",244,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",230,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",225,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",233,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",240,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream::futures_unordered","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream::futures_unordered","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",231,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",234,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",130,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::lock","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",241,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream::select_all","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",218,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",232,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream::futures_unordered","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",127,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::lock","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",243,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",223,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream::futures_unordered","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",219,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",242,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream::select_all","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",245,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::lock","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",239,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",221,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream::select_all","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",224,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",217,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",237,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",236,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::io","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",220,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::sink","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::future","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::stream","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","futures::io","",215,[[["allowstdio",3]],[["option",4],["ordering",4]]]],[11,"lt","","",215,[[["allowstdio",3]],["bool",15]]],[11,"le","","",215,[[["allowstdio",3]],["bool",15]]],[11,"gt","","",215,[[["allowstdio",3]],["bool",15]]],[11,"ge","","",215,[[["allowstdio",3]],["bool",15]]],[11,"read","","",215,[[],[["usize",15],["result",4],["error",3]]]],[11,"read_vectored","","",215,[[],[["usize",15],["result",4],["error",3]]]],[11,"read_to_end","","",215,[[["vec",3]],[["usize",15],["result",4],["error",3]]]],[11,"read_to_string","","",215,[[["string",3]],[["usize",15],["result",4],["error",3]]]],[11,"read_exact","","",215,[[],[["result",4],["error",3]]]],[11,"as_ref","","",242,[[]]],[11,"default","futures::lock","",209,[[],["mutex",3]]],[11,"default","futures::future","",69,[[],["optionfuture",3]]],[11,"default","futures::stream","",110,[[],["selectall",3]]],[11,"default","","",18,[[],["pollnext",4]]],[11,"default","futures::io","",223,[[],["cursor",3]]],[11,"default","futures::stream","",104,[[],["futuresunordered",3]]],[11,"default","","",189,[[],["futuresordered",3]]],[11,"poll_read","futures::io","",219,[[["pin",3],["chain",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",219,[[["pin",3],["chain",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",241,[[["pin",3],["take",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",223,[[["context",3],["pin",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",223,[[["context",3],["pin",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",224,[[["pin",3],["empty",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",236,[[["repeat",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",236,[[["repeat",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","futures::stream","",173,[[["pin",3],["intoasyncread",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","futures::future","",8,[[["context",3],["pin",3],["either",4]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",8,[[["context",3],["pin",3],["either",4]],[["result",4],["poll",4]]]],[11,"poll_read","futures::io","",218,[[["context",3],["bufwriter",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",218,[[["context",3],["bufwriter",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",239,[[["readhalf",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",239,[[["readhalf",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",216,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",216,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",215,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",215,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"is_terminated","futures::stream","",141,[[],["bool",15]]],[11,"is_terminated","","",145,[[],["bool",15]]],[11,"is_terminated","","",160,[[],["bool",15]]],[11,"is_terminated","","",139,[[],["bool",15]]],[11,"is_terminated","futures::future","",64,[[],["bool",15]]],[11,"is_terminated","","",66,[[],["bool",15]]],[11,"is_terminated","futures::stream","",179,[[],["bool",15]]],[11,"is_terminated","","",144,[[],["bool",15]]],[11,"is_terminated","futures::sink","",102,[[],["bool",15]]],[11,"is_terminated","futures::stream","",165,[[],["bool",15]]],[11,"is_terminated","","",142,[[],["bool",15]]],[11,"is_terminated","","",119,[[],["bool",15]]],[11,"is_terminated","","",161,[[],["bool",15]]],[11,"is_terminated","","",171,[[],["bool",15]]],[11,"is_terminated","","",146,[[],["bool",15]]],[11,"is_terminated","","",147,[[],["bool",15]]],[11,"is_terminated","","",140,[[],["bool",15]]],[11,"is_terminated","","",121,[[],["bool",15]]],[11,"is_terminated","","",185,[[],["bool",15]]],[11,"is_terminated","","",118,[[],["bool",15]]],[11,"is_terminated","","",122,[[],["bool",15]]],[11,"is_terminated","","",186,[[],["bool",15]]],[11,"is_terminated","futures::sink","",97,[[],["bool",15]]],[11,"is_terminated","futures::stream","",159,[[],["bool",15]]],[11,"is_terminated","","",133,[[],["bool",15]]],[11,"is_terminated","futures::future","",41,[[],["bool",15]]],[11,"is_terminated","futures::stream","",158,[[],["bool",15]]],[11,"is_terminated","","",134,[[],["bool",15]]],[11,"is_terminated","","",183,[[],["bool",15]]],[11,"is_terminated","","",127,[[],["bool",15]]],[11,"is_terminated","","",180,[[],["bool",15]]],[11,"is_terminated","","",136,[[],["bool",15]]],[11,"is_terminated","","",189,[[],["bool",15]]],[11,"is_terminated","","",114,[[],["bool",15]]],[11,"is_terminated","","",117,[[],["bool",15]]],[11,"is_terminated","","",104,[[],["bool",15]]],[11,"is_terminated","","",164,[[],["bool",15]]],[11,"is_terminated","","",187,[[],["bool",15]]],[11,"is_terminated","","",126,[[],["bool",15]]],[11,"is_terminated","futures::sink","",96,[[],["bool",15]]],[11,"is_terminated","futures::stream","",170,[[],["bool",15]]],[11,"is_terminated","futures::future","",8,[[],["bool",15]]],[11,"is_terminated","futures::stream","",154,[[],["bool",15]]],[11,"is_terminated","","",156,[[],["bool",15]]],[11,"is_terminated","futures::sink","",103,[[],["bool",15]]],[11,"is_terminated","futures::stream","",177,[[],["bool",15]]],[11,"is_terminated","","",149,[[],["bool",15]]],[11,"is_terminated","","",188,[[],["bool",15]]],[11,"is_terminated","","",155,[[],["bool",15]]],[11,"is_terminated","","",181,[[],["bool",15]]],[11,"is_terminated","","",182,[[],["bool",15]]],[11,"is_terminated","","",137,[[],["bool",15]]],[11,"is_terminated","","",120,[[],["bool",15]]],[11,"is_terminated","","",157,[[],["bool",15]]],[11,"is_terminated","","",166,[[],["bool",15]]],[11,"is_terminated","","",125,[[],["bool",15]]],[11,"is_terminated","futures::future","",47,[[],["bool",15]]],[11,"is_terminated","futures::stream","",110,[[],["bool",15]]],[11,"poll_ready","","",155,[[["context",3],["pin",3],["errinto",3]],[["poll",4],["result",4]]]],[11,"start_send","","",155,[[["pin",3],["errinto",3]],["result",4]]],[11,"poll_flush","","",155,[[["context",3],["pin",3],["errinto",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",155,[[["context",3],["pin",3],["errinto",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::sink","",93,[[["pin",3],["fanout",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",93,[[["pin",3],["fanout",3]],["result",4]]],[11,"poll_flush","","",93,[[["pin",3],["fanout",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",93,[[["pin",3],["fanout",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",121,[[["flatmap",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",121,[[["flatmap",3],["pin",3]],["result",4]]],[11,"poll_flush","","",121,[[["flatmap",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",121,[[["flatmap",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",118,[[["enumerate",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",118,[[["enumerate",3],["pin",3]],["result",4]]],[11,"poll_flush","","",118,[[["enumerate",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",118,[[["enumerate",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",164,[[["pin",3],["tryfilter",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",164,[[["pin",3],["tryfilter",3]],["result",4]]],[11,"poll_flush","","",164,[[["pin",3],["tryfilter",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",164,[[["pin",3],["tryfilter",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",159,[[["maperr",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",159,[[["maperr",3],["pin",3]],["result",4]]],[11,"poll_flush","","",159,[[["maperr",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",159,[[["maperr",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",166,[[["tryflatten",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",166,[[["tryflatten",3],["pin",3]],["result",4]]],[11,"poll_flush","","",166,[[["tryflatten",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",166,[[["tryflatten",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",156,[[["inspecterr",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",156,[[["inspecterr",3],["pin",3]],["result",4]]],[11,"poll_flush","","",156,[[["inspecterr",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",156,[[["inspecterr",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",142,[[["pin",3],["context",3],["then",3]],[["result",4],["poll",4]]]],[11,"start_send","","",142,[[["pin",3],["then",3]],["result",4]]],[11,"poll_flush","","",142,[[["pin",3],["context",3],["then",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",142,[[["pin",3],["context",3],["then",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",157,[[["pin",3],["context",3],["inspectok",3]],[["result",4],["poll",4]]]],[11,"start_send","","",157,[[["pin",3],["inspectok",3]],["result",4]]],[11,"poll_flush","","",157,[[["pin",3],["context",3],["inspectok",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",157,[[["pin",3],["context",3],["inspectok",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",147,[[["context",3],["pin",3],["readychunks",3]],[["poll",4],["result",4]]]],[11,"start_send","","",147,[[["pin",3],["readychunks",3]],["result",4]]],[11,"poll_flush","","",147,[[["context",3],["pin",3],["readychunks",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",147,[[["context",3],["pin",3],["readychunks",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",119,[[["context",3],["pin",3],["filter",3]],[["poll",4],["result",4]]]],[11,"start_send","","",119,[[["pin",3],["filter",3]],["result",4]]],[11,"poll_flush","","",119,[[["context",3],["pin",3],["filter",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",119,[[["context",3],["pin",3],["filter",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",158,[[["intostream",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",158,[[["intostream",3],["pin",3]],["result",4]]],[11,"poll_flush","","",158,[[["intostream",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",158,[[["intostream",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",126,[[["pin",3],["context",3],["inspect",3]],[["result",4],["poll",4]]]],[11,"start_send","","",126,[[["pin",3],["inspect",3]],["result",4]]],[11,"poll_flush","","",126,[[["pin",3],["context",3],["inspect",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",126,[[["pin",3],["context",3],["inspect",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",160,[[["mapok",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",160,[[["mapok",3],["pin",3]],["result",4]]],[11,"poll_flush","","",160,[[["mapok",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",160,[[["mapok",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::io","",227,[[["pin",3],["intosink",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",227,[[["pin",3],["intosink",3]],["result",4]]],[11,"poll_flush","","",227,[[["pin",3],["intosink",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",227,[[["pin",3],["intosink",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",149,[[["bufferunordered",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",149,[[["bufferunordered",3],["pin",3]],["result",4]]],[11,"poll_flush","","",149,[[["bufferunordered",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",149,[[["bufferunordered",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::sink","",103,[[["context",3],["pin",3],["buffer",3]],[["poll",4],["result",4]]]],[11,"start_send","","",103,[[["pin",3],["buffer",3]],["result",4]]],[11,"poll_flush","","",103,[[["context",3],["pin",3],["buffer",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",103,[[["context",3],["pin",3],["buffer",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::future","",47,[[["pin",3],["context",3],["flattenstream",3]],[["poll",4],["result",4]]]],[11,"start_send","","",47,[[["pin",3],["flattenstream",3]],["result",4]]],[11,"poll_flush","","",47,[[["pin",3],["context",3],["flattenstream",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",47,[[["pin",3],["context",3],["flattenstream",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",171,[[["context",3],["pin",3],["trytakewhile",3]],[["result",4],["poll",4]]]],[11,"start_send","","",171,[[["pin",3],["trytakewhile",3]],["result",4]]],[11,"poll_flush","","",171,[[["context",3],["pin",3],["trytakewhile",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",171,[[["context",3],["pin",3],["trytakewhile",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",133,[[["pin",3],["context",3],["peekable",3]],[["poll",4],["result",4]]]],[11,"start_send","","",133,[[["pin",3],["peekable",3]],["result",4]]],[11,"poll_flush","","",133,[[["pin",3],["context",3],["peekable",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",133,[[["pin",3],["context",3],["peekable",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",150,[[["buffered",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",150,[[["buffered",3],["pin",3]],["result",4]]],[11,"poll_flush","","",150,[[["buffered",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",150,[[["buffered",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::sink","",96,[[["context",3],["sinkerrinto",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",96,[[["sinkerrinto",3],["pin",3]],["result",4]]],[11,"poll_flush","","",96,[[["context",3],["sinkerrinto",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",96,[[["context",3],["sinkerrinto",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",139,[[["context",3],["take",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",139,[[["take",3],["pin",3]],["result",4]]],[11,"poll_flush","","",139,[[["context",3],["take",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",139,[[["context",3],["take",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",170,[[["pin",3],["tryskipwhile",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",170,[[["pin",3],["tryskipwhile",3]],["result",4]]],[11,"poll_flush","","",170,[[["pin",3],["tryskipwhile",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",170,[[["pin",3],["tryskipwhile",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",140,[[["context",3],["pin",3],["takeuntil",3]],[["poll",4],["result",4]]]],[11,"start_send","","",140,[[["pin",3],["takeuntil",3]],["result",4]]],[11,"poll_flush","","",140,[[["context",3],["pin",3],["takeuntil",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",140,[[["context",3],["pin",3],["takeuntil",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",165,[[["tryfiltermap",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",165,[[["tryfiltermap",3],["pin",3]],["result",4]]],[11,"poll_flush","","",165,[[["tryfiltermap",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",165,[[["tryfiltermap",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",152,[[["pin",3],["splitsink",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",152,[[["pin",3],["splitsink",3]],["result",4]]],[11,"poll_flush","","",152,[[["pin",3],["splitsink",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",152,[[["pin",3],["splitsink",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",174,[[["context",3],["trybufferunordered",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",174,[[["trybufferunordered",3],["pin",3]],["result",4]]],[11,"poll_flush","","",174,[[["context",3],["trybufferunordered",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",174,[[["context",3],["trybufferunordered",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::future","",66,[[["flattensink",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",66,[[["flattensink",3],["pin",3]],["result",4]]],[11,"poll_flush","","",66,[[["flattensink",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",66,[[["flattensink",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",134,[[["pin",3],["scan",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",134,[[["pin",3],["scan",3]],["result",4]]],[11,"poll_flush","","",134,[[["pin",3],["scan",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",134,[[["pin",3],["scan",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",122,[[["flatten",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",122,[[["flatten",3],["pin",3]],["result",4]]],[11,"poll_flush","","",122,[[["flatten",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",122,[[["flatten",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::future","",64,[[["tryflattenstream",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",64,[[["tryflattenstream",3],["pin",3]],["result",4]]],[11,"poll_flush","","",64,[[["tryflattenstream",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",64,[[["tryflattenstream",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",120,[[["pin",3],["filtermap",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",120,[[["pin",3],["filtermap",3]],["result",4]]],[11,"poll_flush","","",120,[[["pin",3],["filtermap",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",120,[[["pin",3],["filtermap",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",175,[[["trybuffered",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",175,[[["trybuffered",3],["pin",3]],["result",4]]],[11,"poll_flush","","",175,[[["trybuffered",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",175,[[["trybuffered",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",125,[[["context",3],["pin",3],["fuse",3]],[["result",4],["poll",4]]]],[11,"start_send","","",125,[[["pin",3],["fuse",3]],["result",4]]],[11,"poll_flush","","",125,[[["context",3],["pin",3],["fuse",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",125,[[["context",3],["pin",3],["fuse",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::future","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["result",4]]]],[11,"start_send","","",8,[[["pin",3],["either",4]],["result",4]]],[11,"poll_flush","","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["result",4]]]],[11,"poll_close","","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::sink","",101,[[["pin",3],["with",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",101,[[["pin",3],["with",3]],["result",4]]],[11,"poll_flush","","",101,[[["pin",3],["with",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",101,[[["pin",3],["with",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",141,[[["takewhile",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",141,[[["takewhile",3],["pin",3]],["result",4]]],[11,"poll_flush","","",141,[[["takewhile",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",141,[[["takewhile",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",146,[[["context",3],["pin",3],["chunks",3]],[["poll",4],["result",4]]]],[11,"start_send","","",146,[[["pin",3],["chunks",3]],["result",4]]],[11,"poll_flush","","",146,[[["context",3],["pin",3],["chunks",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",146,[[["context",3],["pin",3],["chunks",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",137,[[["skipwhile",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",137,[[["skipwhile",3],["pin",3]],["result",4]]],[11,"poll_flush","","",137,[[["skipwhile",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",137,[[["skipwhile",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",161,[[["context",3],["orelse",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",161,[[["orelse",3],["pin",3]],["result",4]]],[11,"poll_flush","","",161,[[["context",3],["orelse",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",161,[[["context",3],["orelse",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",154,[[["andthen",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",154,[[["andthen",3],["pin",3]],["result",4]]],[11,"poll_flush","","",154,[[["andthen",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",154,[[["andthen",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",136,[[["context",3],["skip",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",136,[[["skip",3],["pin",3]],["result",4]]],[11,"poll_flush","","",136,[[["context",3],["skip",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",136,[[["context",3],["skip",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::sink","",97,[[["context",3],["sinkmaperr",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",97,[[["sinkmaperr",3],["pin",3]],["result",4]]],[11,"poll_flush","","",97,[[["context",3],["sinkmaperr",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",97,[[["context",3],["sinkmaperr",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",102,[[["pin",3],["context",3],["withflatmap",3]],[["result",4],["poll",4]]]],[11,"start_send","","",102,[[["pin",3],["withflatmap",3]],["result",4]]],[11,"poll_flush","","",102,[[["pin",3],["context",3],["withflatmap",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",102,[[["pin",3],["context",3],["withflatmap",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",177,[[["context",3],["trychunks",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",177,[[["trychunks",3],["pin",3]],["result",4]]],[11,"poll_flush","","",177,[[["context",3],["trychunks",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",177,[[["context",3],["trychunks",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::sink","",100,[[["unfold",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",100,[[["unfold",3],["pin",3]],["result",4]]],[11,"poll_flush","","",100,[[["unfold",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",100,[[["unfold",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",92,[[["context",3],["drain",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",92,[[["drain",3],["pin",3]],["result",4]]],[11,"poll_flush","","",92,[[["context",3],["drain",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",92,[[["context",3],["drain",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",127,[[["pin",3],["context",3],["map",3]],[["result",4],["poll",4]]]],[11,"start_send","","",127,[[["pin",3],["map",3]],["result",4]]],[11,"poll_flush","","",127,[[["pin",3],["context",3],["map",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",127,[[["pin",3],["context",3],["map",3]],[["result",4],["poll",4]]]],[11,"poll_write","futures::future","",8,[[["context",3],["pin",3],["either",4]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",8,[[["context",3],["pin",3],["either",4]],[["result",4],["poll",4]]]],[11,"poll_flush","","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["result",4]]]],[11,"poll_close","","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["result",4]]]],[11,"poll_write","futures::io","",223,[[["context",3],["pin",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",223,[[["context",3],["pin",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",223,[[["context",3],["pin",3],["cursor",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",223,[[["context",3],["pin",3],["cursor",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",223,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",223,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",223,[[["pin",3],["cursor",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",223,[[["pin",3],["cursor",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",223,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",223,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",223,[[["pin",3],["cursor",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",223,[[["pin",3],["cursor",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",238,[[["sink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",238,[[["sink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",238,[[["sink",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",238,[[["sink",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",216,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",216,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",216,[[["pin",3],["bufreader",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",216,[[["pin",3],["bufreader",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write","futures::stream","",173,[[["pin",3],["intoasyncread",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",173,[[["pin",3],["intoasyncread",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",173,[[["pin",3],["intoasyncread",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write","futures::io","",240,[[["pin",3],["context",3],["writehalf",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",240,[[["pin",3],["context",3],["writehalf",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",240,[[["pin",3],["context",3],["writehalf",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",240,[[["pin",3],["context",3],["writehalf",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",223,[[["pin",3],["context",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",223,[[["pin",3],["context",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",223,[[["pin",3],["context",3],["cursor",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",223,[[["pin",3],["context",3],["cursor",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",218,[[["context",3],["bufwriter",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",218,[[["context",3],["bufwriter",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",218,[[["context",3],["bufwriter",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",218,[[["context",3],["bufwriter",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",215,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",215,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",215,[[["allowstdio",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",215,[[["allowstdio",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"fmt","futures::task","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref","","",195,[[],["waker",3]]],[11,"poll","","",37,[[["context",3],["pin",3],["localfutureobj",3]],["poll",4]]],[11,"poll","","",36,[[["pin",3],["futureobj",3],["context",3]],["poll",4]]],[11,"drop","","",37,[[]]],[11,"from","","",36,[[["future",8],["global",3],["box",3]],["futureobj",3]]],[11,"from","","",37,[[["futureobj",3]],["localfutureobj",3]]],[11,"from","","",36,[[["pin",3],["box",3]],["futureobj",3]]],[11,"from","","",36,[[["box",3],["global",3]],["futureobj",3]]],[11,"from","","",37,[[["box",3],["pin",3]],["localfutureobj",3]]],[11,"from","","",37,[[["box",3],["global",3]],["localfutureobj",3]]],[11,"from","","",37,[[["box",3],["global",3],["future",8]],["localfutureobj",3]]],[11,"from","","",36,[[["box",3],["pin",3]],["futureobj",3]]],[11,"from","","",37,[[["box",3],["pin",3]],["localfutureobj",3]]],[11,"fmt","futures::channel::oneshot","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::channel::mpsc","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::channel::oneshot","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::channel::mpsc","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::channel::oneshot","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","futures::channel::mpsc","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"poll_ready","","",198,[[["pin",3],["unboundedsender",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",198,[[["pin",3],["unboundedsender",3]],["result",4]]],[11,"poll_flush","","",198,[[["pin",3],["unboundedsender",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",198,[[["pin",3],["unboundedsender",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",197,[[["context",3],["sender",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",197,[[["sender",3],["pin",3]],["result",4]]],[11,"poll_flush","","",197,[[["context",3],["sender",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",197,[[["context",3],["sender",3],["pin",3]],[["result",4],["poll",4]]]],[11,"is_terminated","","",200,[[],["bool",15]]],[11,"is_terminated","","",199,[[],["bool",15]]],[11,"poll_next","","",200,[[["context",3],["unboundedreceiver",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",199,[[["receiver",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll","futures::channel::oneshot","",206,[[["context",3],["pin",3],["cancellation",3]],["poll",4]]],[11,"poll","","",204,[[["context",3],["receiver",3],["pin",3]],[["result",4],["poll",4]]]],[11,"drop","futures::channel::mpsc","",200,[[]]],[11,"drop","","",199,[[]]],[11,"drop","futures::channel::oneshot","",205,[[]]],[11,"drop","","",204,[[]]],[11,"clone","","",207,[[],["canceled",3]]],[11,"clone","futures::channel::mpsc","",198,[[],["unboundedsender",3]]],[11,"clone","","",201,[[],["senderror",3]]],[11,"clone","","",202,[[],["trysenderror",3]]],[11,"clone","","",197,[[],["sender",3]]],[11,"eq","","",201,[[["senderror",3]],["bool",15]]],[11,"ne","","",201,[[["senderror",3]],["bool",15]]],[11,"eq","futures::channel::oneshot","",207,[[["canceled",3]],["bool",15]]],[11,"eq","futures::channel::mpsc","",202,[[["trysenderror",3]],["bool",15]]],[11,"ne","","",202,[[["trysenderror",3]],["bool",15]]],[11,"is_terminated","futures::channel::oneshot","",204,[[],["bool",15]]],[11,"new","futures::task","Create a <code>FutureObj</code> from a custom trait object …",36,[[],["futureobj",3]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",37,[[],["localfutureobj",3]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",37,[[],["futureobj",3]]],[11,"terminated","futures::future","Creates a new <code>Fuse</code>-wrapped future which is already …",39,[[],["fuse",3]]],[11,"forget","","Drops this handle <em>without</em> canceling the underlying future.",50,[[]]],[11,"peek","","Returns [<code>Some</code>] containing a reference to this [<code>Shared</code>]\'s …",51,[[],["option",4]]],[11,"downgrade","","Creates a new [<code>WeakShared</code>] for this [<code>Shared</code>].",51,[[],[["weakshared",3],["option",4]]]],[11,"strong_count","","Gets the number of strong pointers to this allocation.",51,[[],[["usize",15],["option",4]]]],[11,"weak_count","","Gets the number of weak pointers to this allocation.",51,[[],[["usize",15],["option",4]]]],[11,"upgrade","","Attempts to upgrade this [<code>WeakShared</code>] into a [<code>Shared</code>].",52,[[],[["shared",3],["option",4]]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",6,[[["maybedone",4],["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>MaybeDone</code> without driving …",6,[[["maybedone",4],["pin",3]],["option",4]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",7,[[["pin",3],["trymaybedone",4]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>TryMaybeDone</code> without …",7,[[["pin",3],["trymaybedone",4]],["option",4]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",72,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",79,[[],[["global",3],["vec",3]]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",8,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",8,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",8,[[]]],[11,"new_pair","futures::stream","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which …",87,[[]]],[11,"abort","","Abort the <code>Abortable</code> stream/future associated with this …",87,[[]]],[11,"new","","Creates a new <code>Abortable</code> future/stream using an existing …",89,[[["abortregistration",3]],["abortable",3]]],[11,"is_aborted","","Checks whether the task has been aborted. Note that all …",89,[[],["bool",15]]],[11,"get_ref","futures::sink","Get a shared reference to the inner sinks.",93,[[]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",93,[[]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",93,[[["pin",3],["fanout",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",93,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",96,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",96,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",96,[[["sinkerrinto",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",96,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",97,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",97,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",97,[[["sinkmaperr",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",97,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",101,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",101,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",101,[[["pin",3],["with",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",101,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",102,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",102,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",102,[[["pin",3],["withflatmap",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",102,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",103,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",103,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",103,[[["pin",3],["buffer",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",103,[[]]],[11,"new","futures::stream","Constructs a new, empty [<code>FuturesUnordered</code>].",104,[[],["futuresunordered",3]]],[11,"len","","Returns the number of futures contained in the set.",104,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no futures.",104,[[],["bool",15]]],[11,"push","","Push a future into the set.",104,[[]]],[11,"iter","","Returns an iterator that allows inspecting each future in …",104,[[],["iter",3]]],[11,"iter_pin_ref","","Returns an iterator that allows inspecting each future in …",104,[[["pin",3],["futuresunordered",3]],["iterpinref",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in …",104,[[],["itermut",3]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in …",104,[[["futuresunordered",3],["pin",3]],["iterpinmut",3]]],[11,"clear","","Clears the set, removing all futures.",104,[[]]],[11,"new","","Constructs a new, empty <code>SelectAll</code>",110,[[],["selectall",3]]],[11,"len","","Returns the number of streams contained in the set.",110,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no streams",110,[[],["bool",15]]],[11,"push","","Push a stream into the set.",110,[[]]],[11,"iter","","Returns an iterator that allows inspecting each stream in …",110,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each stream in …",110,[[],["itermut",3]]],[11,"clear","","Clears the set, removing all streams.",110,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",118,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",118,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",118,[[["pin",3],["enumerate",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",118,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",119,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",119,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",119,[[["pin",3],["filter",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",119,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",120,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",120,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",120,[[["filtermap",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",120,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",121,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",121,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",121,[[["flatmap",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",121,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",122,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",122,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",122,[[["flatten",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",122,[[]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",125,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",125,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",125,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",125,[[["fuse",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",125,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",126,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",126,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",126,[[["pin",3],["inspect",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",126,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",127,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",127,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",127,[[["pin",3],["map",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",127,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",133,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",133,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",133,[[["pin",3],["peekable",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",133,[[]]],[11,"peek","","Produces a future which retrieves a reference to the next …",133,[[["pin",3],["peekable",3]],["peek",3]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",133,[[["pin",3],["peekable",3],["context",3]],[["option",4],["poll",4]]]],[11,"peek_mut","","Produces a future which retrieves a mutable reference to …",133,[[["pin",3],["peekable",3]],["peekmut",3]]],[11,"poll_peek_mut","","Peek retrieves a mutable reference to the next item in …",133,[[["pin",3],["peekable",3],["context",3]],[["option",4],["poll",4]]]],[11,"next_if","","Creates a future which will consume and return the next …",133,[[["pin",3],["peekable",3]],["nextif",3]]],[11,"next_if_eq","","Creates a future which will consume and return the next …",133,[[["peekable",3],["pin",3]],["nextifeq",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",134,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",134,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",134,[[["scan",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",134,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",136,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",136,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",136,[[["pin",3],["skip",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",136,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",137,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",137,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",137,[[["pin",3],["skipwhile",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",137,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",138,[[],["option",4]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",138,[[],["option",4]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",138,[[["streamfuture",3],["pin",3]],[["pin",3],["option",4]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",138,[[],["option",4]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",139,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",139,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",139,[[["take",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",139,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",140,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",140,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",140,[[["takeuntil",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",140,[[]]],[11,"take_future","","Extract the stopping future out of the combinator. The …",140,[[],["option",4]]],[11,"take_result","","Once the stopping future is resolved, this method can be …",140,[[],["option",4]]],[11,"is_stopped","","Whether the stream was stopped yet by the stopping future …",140,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",141,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",141,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",141,[[["takewhile",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",141,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",142,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",142,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",142,[[["pin",3],["then",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",142,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",144,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",144,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",144,[[["zip",3],["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",144,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",145,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",145,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",145,[[["catchunwind",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",145,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",146,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",146,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",146,[[["pin",3],["chunks",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",146,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",147,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",147,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",147,[[["pin",3],["readychunks",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",147,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",149,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",149,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",149,[[["bufferunordered",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",149,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",150,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",150,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",150,[[["buffered",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",150,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",152,[[["splitstream",3]],[["reuniteerror",3],["result",4]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",153,[[["splitsink",3]],[["reuniteerror",3],["result",4]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",154,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",154,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",154,[[["pin",3],["andthen",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",154,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",155,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",155,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",155,[[["pin",3],["errinto",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",155,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",156,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",156,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",156,[[["inspecterr",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",156,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",157,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",157,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",157,[[["pin",3],["inspectok",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",157,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",158,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",158,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",158,[[["pin",3],["intostream",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",158,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",159,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",159,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",159,[[["maperr",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",159,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",160,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",160,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",160,[[["mapok",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",160,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",161,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",161,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",161,[[["orelse",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",161,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",164,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",164,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",164,[[["tryfilter",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",164,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",165,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",165,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",165,[[["tryfiltermap",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",165,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",166,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",166,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",166,[[["pin",3],["tryflatten",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",166,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",170,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",170,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",170,[[["pin",3],["tryskipwhile",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",170,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",171,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",171,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",171,[[["trytakewhile",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",171,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",174,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",174,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",174,[[["pin",3],["trybufferunordered",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",174,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",175,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",175,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",175,[[["pin",3],["trybuffered",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",175,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",177,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",177,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",177,[[["pin",3],["trychunks",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",177,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",186,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",186,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",186,[[["select",3],["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",186,[[]]],[11,"toggle","","Toggle the value and return the old one.",18,[[],["pollnext",4]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",187,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",187,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",187,[[["pin",3],["selectwithstrategy",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",187,[[]]],[11,"new","","Constructs a new, empty <code>FuturesOrdered</code>",189,[[],["futuresordered",3]]],[11,"len","","Returns the number of futures contained in the queue.",189,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the queue contains no futures",189,[[],["bool",15]]],[11,"push","","Push a future into the queue.",189,[[]]],[11,"from_waker","futures::task","Create a new <code>Context</code> from a <code>&Waker</code>.",190,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",190,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",23,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",23,[[],["bool",15]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",23,[[],["bool",15]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",23,[[],[["poll",4],["result",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",23,[[],[["result",4],["poll",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",23,[[],[["option",4],["poll",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",23,[[],[["poll",4],["option",4]]]],[11,"new","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …",191,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>…",192,[[],["rawwakervtable",3]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",193,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",193,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",193,[[["waker",3]],["bool",15]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",193,[[["rawwaker",3]],["waker",3]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",194,[[],["spawnerror",3]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",194,[[],["bool",15]]],[11,"new","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] reference.",195,[[["waker",3]],["wakerref",3]]],[11,"new_unowned","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] that must not be …",195,[[["manuallydrop",3],["waker",3]],["wakerref",3]]],[11,"new","","Create an <code>AtomicWaker</code>.",196,[[],["atomicwaker",3]]],[11,"register","","Registers the waker to be notified on calls to <code>wake</code>.",196,[[["waker",3]]]],[11,"wake","","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.",196,[[]]],[11,"take","","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …",196,[[],[["option",4],["waker",3]]]],[11,"try_send","futures::channel::mpsc","Attempts to send a message on this <code>Sender</code>, returning the …",197,[[],[["trysenderror",3],["result",4]]]],[11,"start_send","","Send a message on the channel.",197,[[],[["result",4],["senderror",3]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed …",197,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",197,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",197,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",197,[[]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",197,[[["sender",3]],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",197,[[["receiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",197,[[]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",198,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",198,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",198,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",198,[[]]],[11,"start_send","","Send a message on the channel.",198,[[],[["result",4],["senderror",3]]]],[11,"unbounded_send","","Sends a message along this channel.",198,[[],[["trysenderror",3],["result",4]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",198,[[["unboundedsender",3]],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",198,[[["unboundedreceiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",198,[[]]],[11,"close","","Closes the receiving half of a channel, without dropping …",199,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",199,[[],[["result",4],["tryrecverror",3],["option",4]]]],[11,"close","","Closes the receiving half of a channel, without dropping …",200,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",200,[[],[["result",4],["tryrecverror",3],["option",4]]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",201,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",201,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",202,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",202,[[],["bool",15]]],[11,"into_inner","","Returns the message that was attempted to be sent but …",202,[[]]],[11,"into_send_error","","Drops the message and converts into a <code>SendError</code>.",202,[[],["senderror",3]]],[11,"close","futures::channel::oneshot","Gracefully close this receiver, preventing any subsequent …",204,[[]]],[11,"try_recv","","Attempts to receive a message outside of the context of a …",204,[[],[["option",4],["canceled",3],["result",4]]]],[11,"send","","Completes this oneshot with a successful result.",205,[[],["result",4]]],[11,"poll_canceled","","Polls this <code>Sender</code> half to detect whether its associated …",205,[[["context",3]],["poll",4]]],[11,"cancellation","","Creates a future that resolves when this <code>Sender</code>\'s …",205,[[],["cancellation",3]]],[11,"is_canceled","","Tests to see whether this <code>Sender</code>\'s corresponding <code>Receiver</code> …",205,[[],["bool",15]]],[11,"is_connected_to","","Tests to see whether this <code>Sender</code> is connected to the …",205,[[["receiver",3]],["bool",15]]],[11,"map","futures::lock","Returns a locked view over a portion of the locked data.",208,[[["mappedmutexguard",3]],["mappedmutexguard",3]]],[11,"new","","Creates a new futures-aware mutex.",209,[[],["mutex",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",209,[[]]],[11,"try_lock","","Attempt to acquire the lock immediately.",209,[[],[["option",4],["mutexguard",3]]]],[11,"lock","","Acquire the lock asynchronously.",209,[[],["mutexlockfuture",3]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",209,[[]]],[11,"map","","Returns a locked view over a portion of the locked data.",210,[[["mutexguard",3]],["mappedmutexguard",3]]],[11,"new","futures::io","Creates a new I/O error from a known kind of error as …",212,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",212,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",212,[[["i32",15]],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",212,[[],[["option",4],["i32",15]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",212,[[],[["option",4],["error",8]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",212,[[],[["error",8],["option",4]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",212,[[],[["box",3],["option",4]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",212,[[],["errorkind",4]]],[11,"new","","Creates a new <code>IoSlice</code> wrapping a byte slice.",213,[[],["ioslice",3]]],[11,"advance","","Advance the internal cursor of the slice.",213,[[["usize",15]]]],[11,"new","","Creates a new <code>IoSliceMut</code> wrapping a byte slice.",214,[[],["ioslicemut",3]]],[11,"advance","","Advance the internal cursor of the slice.",214,[[["usize",15]]]],[11,"new","","Creates a new <code>AllowStdIo</code> from an existing IO object.",215,[[],["allowstdio",3]]],[11,"get_ref","","Returns a reference to the contained IO object.",215,[[]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",215,[[]]],[11,"into_inner","","Consumes self and returns the contained IO object.",215,[[]]],[11,"new","","Creates a new <code>BufReader</code> with a default buffer capacity. …",216,[[],["bufreader",3]]],[11,"with_capacity","","Creates a new <code>BufReader</code> with the specified buffer …",216,[[["usize",15]],["bufreader",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",216,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",216,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",216,[[["pin",3],["bufreader",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",216,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",216,[[]]],[11,"seek_relative","","Seeks relative to the current position. If the new …",216,[[["pin",3],["bufreader",3],["i64",15]],["seekrelative",3]]],[11,"poll_seek_relative","","Attempts to seek relative to the current position. If the …",216,[[["bufreader",3],["pin",3],["i64",15],["context",3]],[["poll",4],["result",4]]]],[11,"new","","Creates a new <code>BufWriter</code> with a default buffer capacity. …",218,[[],["bufwriter",3]]],[11,"with_capacity","","Creates a new <code>BufWriter</code> with the specified buffer …",218,[[["usize",15]],["bufwriter",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",218,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",218,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",218,[[["bufwriter",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",218,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",218,[[]]],[11,"get_ref","","Gets references to the underlying readers in this <code>Chain</code>.",219,[[]]],[11,"get_mut","","Gets mutable references to the underlying readers in this …",219,[[]]],[11,"get_pin_mut","","Gets pinned mutable references to the underlying readers …",219,[[["pin",3],["chain",3]]]],[11,"into_inner","","Consumes the <code>Chain</code>, returning the wrapped readers.",219,[[]]],[11,"new","","Creates a new cursor wrapping the provided underlying …",223,[[],["cursor",3]]],[11,"into_inner","","Consumes this cursor, returning the underlying value.",223,[[]]],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",223,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this …",223,[[]]],[11,"position","","Returns the current position of this cursor.",223,[[],["u64",15]]],[11,"set_position","","Sets the position of this cursor.",223,[[["u64",15]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split …",239,[[["writehalf",3]],[["result",4],["reuniteerror",3]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split …",240,[[["readhalf",3]],[["result",4],["reuniteerror",3]]]],[11,"limit","","Returns the remaining number of bytes that can be read …",241,[[],["u64",15]]],[11,"set_limit","","Sets the number of bytes that can be read before this …",241,[[["u64",15]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",241,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",241,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",241,[[["pin",3],["take",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",241,[[]]],[11,"new","","Creates a new window around the buffer <code>t</code> defaulting to …",242,[[],["window",3]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside …",242,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside …",242,[[]]],[11,"into_inner","","Consumes this <code>Window</code>, returning the underlying buffer.",242,[[]]],[11,"start","","Returns the starting index of this window into the …",242,[[],["usize",15]]],[11,"end","","Returns the end index of this window into the underlying …",242,[[],["usize",15]]],[11,"set","","Changes the range of this window to the range specified.",242,[[]]]],"p":[[8,"Future"],[8,"FusedFuture"],[8,"TryFuture"],[8,"UnsafeFutureObj"],[8,"FutureExt"],[8,"TryFutureExt"],[4,"MaybeDone"],[4,"TryMaybeDone"],[4,"Either"],[8,"SinkExt"],[8,"Sink"],[8,"FusedStream"],[8,"Stream"],[8,"TryStream"],[8,"StreamExt"],[3,"ReuniteError"],[8,"TryStreamExt"],[3,"TryChunksError"],[4,"PollNext"],[8,"AsyncBufRead"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncWrite"],[4,"Poll"],[8,"LocalSpawn"],[8,"Spawn"],[8,"ArcWake"],[8,"LocalSpawnExt"],[8,"SpawnExt"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncSeekExt"],[8,"AsyncBufReadExt"],[4,"ErrorKind"],[4,"SeekFrom"],[3,"ReuniteError"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Flatten"],[3,"Fuse"],[3,"Inspect"],[3,"IntoStream"],[3,"Map"],[3,"MapInto"],[3,"NeverError"],[3,"Then"],[3,"UnitError"],[3,"FlattenStream"],[3,"CatchUnwind"],[3,"Remote"],[3,"RemoteHandle"],[3,"Shared"],[3,"WeakShared"],[3,"AndThen"],[3,"ErrInto"],[3,"InspectErr"],[3,"InspectOk"],[3,"IntoFuture"],[3,"MapErr"],[3,"MapOk"],[3,"MapOkOrElse"],[3,"OkInto"],[3,"OrElse"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"UnwrapOrElse"],[3,"FlattenSink"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollFn"],[3,"PollImmediate"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"JoinAll"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TryJoinAll"],[3,"TrySelect"],[3,"SelectOk"],[3,"AbortHandle"],[3,"AbortRegistration"],[3,"Abortable"],[3,"Aborted"],[3,"Close"],[3,"Drain"],[3,"Fanout"],[3,"Feed"],[3,"Flush"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Send"],[3,"SendAll"],[3,"Unfold"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[3,"FuturesUnordered"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterPinMut"],[3,"IterPinRef"],[3,"SelectAll"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Chain"],[3,"Collect"],[3,"Concat"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"Fuse"],[3,"Inspect"],[3,"Map"],[3,"Next"],[3,"NextIf"],[3,"NextIfEq"],[3,"Peek"],[3,"PeekMut"],[3,"Peekable"],[3,"Scan"],[3,"SelectNextSome"],[3,"Skip"],[3,"SkipWhile"],[3,"StreamFuture"],[3,"Take"],[3,"TakeUntil"],[3,"TakeWhile"],[3,"Then"],[3,"Unzip"],[3,"Zip"],[3,"CatchUnwind"],[3,"Chunks"],[3,"ReadyChunks"],[3,"Forward"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitSink"],[3,"SplitStream"],[3,"AndThen"],[3,"ErrInto"],[3,"InspectErr"],[3,"InspectOk"],[3,"IntoStream"],[3,"MapErr"],[3,"MapOk"],[3,"OrElse"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryFold"],[3,"TryForEach"],[3,"TryNext"],[3,"TrySkipWhile"],[3,"TryTakeWhile"],[3,"TryUnfold"],[3,"IntoAsyncRead"],[3,"TryBufferUnordered"],[3,"TryBuffered"],[3,"TryForEachConcurrent"],[3,"TryChunks"],[3,"Iter"],[3,"Repeat"],[3,"RepeatWith"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"PollImmediate"],[3,"Select"],[3,"SelectWithStrategy"],[3,"Unfold"],[3,"FuturesOrdered"],[3,"Context"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"Waker"],[3,"SpawnError"],[3,"WakerRef"],[3,"AtomicWaker"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"TryRecvError"],[3,"Receiver"],[3,"Sender"],[3,"Cancellation"],[3,"Canceled"],[3,"MappedMutexGuard"],[3,"Mutex"],[3,"MutexGuard"],[3,"MutexLockFuture"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"],[3,"AllowStdIo"],[3,"BufReader"],[3,"SeeKRelative"],[3,"BufWriter"],[3,"Chain"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Cursor"],[3,"Empty"],[3,"FillBuf"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadVectored"],[3,"ReadExact"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"Repeat"],[3,"Seek"],[3,"Sink"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Take"],[3,"Window"],[3,"Write"],[3,"WriteVectored"],[3,"WriteAll"]]},\
"futures_channel":{"doc":"Asynchronous channels.","i":[[0,"mpsc","futures_channel","A multi-producer, single-consumer queue for sending …",null,null],[3,"Sender","futures_channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for <code>Sender</code>s used as <code>Sink</code>s.",null,null],[3,"TrySendError","","The error type returned from <code>try_send</code>.",null,null],[3,"TryRecvError","","The error type returned from <code>try_next</code>.",null,null],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",0,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",0,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",1,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",1,[[],["bool",15]]],[11,"into_inner","","Returns the message that was attempted to be sent but …",1,[[]]],[11,"into_send_error","","Drops the message and converts into a <code>SendError</code>.",1,[[],["senderror",3]]],[5,"channel","","Creates a bounded mpsc channel for communicating between …",null,[[["usize",15]]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating …",null,[[]]],[11,"try_send","","Attempts to send a message on this <code>Sender</code>, returning the …",2,[[],[["result",4],["trysenderror",3]]]],[11,"start_send","","Send a message on the channel.",2,[[],[["senderror",3],["result",4]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed …",2,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",2,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",2,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",2,[[]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",2,[[],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",2,[[["receiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",2,[[]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",3,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",3,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",3,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",3,[[]]],[11,"start_send","","Send a message on the channel.",3,[[],[["senderror",3],["result",4]]]],[11,"unbounded_send","","Sends a message along this channel.",3,[[],[["result",4],["trysenderror",3]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",3,[[],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",3,[[["unboundedreceiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",3,[[]]],[11,"close","","Closes the receiving half of a channel, without dropping …",4,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",4,[[],[["tryrecverror",3],["option",4],["result",4]]]],[11,"close","","Closes the receiving half of a channel, without dropping …",5,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",5,[[],[["tryrecverror",3],["option",4],["result",4]]]],[0,"oneshot","futures_channel","A channel for sending a single message between …",null,null],[3,"Receiver","futures_channel::oneshot","A future for a value that will be provided by another …",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending a single value …",null,[[]]],[11,"send","","Completes this oneshot with a successful result.",6,[[],["result",4]]],[11,"poll_canceled","","Polls this <code>Sender</code> half to detect whether its associated …",6,[[["context",3]],["poll",4]]],[11,"cancellation","","Creates a future that resolves when this <code>Sender</code>\'s …",6,[[],["cancellation",3]]],[11,"is_canceled","","Tests to see whether this <code>Sender</code>\'s corresponding <code>Receiver</code> …",6,[[],["bool",15]]],[11,"is_connected_to","","Tests to see whether this <code>Sender</code> is connected to the …",6,[[["receiver",3]],["bool",15]]],[3,"Cancellation","","A future that resolves when the receiving end of a …",null,null],[3,"Canceled","","Error returned from a <code>Receiver</code> when the corresponding …",null,null],[11,"close","","Gracefully close this receiver, preventing any subsequent …",7,[[]]],[11,"try_recv","","Attempts to receive a message outside of the context of a …",7,[[],[["result",4],["option",4],["canceled",3]]]],[11,"from","futures_channel::mpsc","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"try_poll_next","","",4,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"try_poll_next","","",5,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","futures_channel::oneshot","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_future","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","futures_channel::mpsc","",4,[[]]],[11,"drop","","",5,[[]]],[11,"drop","futures_channel::oneshot","",6,[[]]],[11,"drop","","",7,[[]]],[11,"clone","futures_channel::mpsc","",0,[[],["senderror",3]]],[11,"clone","","",1,[[],["trysenderror",3]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","futures_channel::oneshot","",10,[[],["canceled",3]]],[11,"eq","futures_channel::mpsc","",0,[[["senderror",3]],["bool",15]]],[11,"ne","","",0,[[["senderror",3]],["bool",15]]],[11,"eq","","",1,[[["trysenderror",3]],["bool",15]]],[11,"ne","","",1,[[["trysenderror",3]],["bool",15]]],[11,"eq","futures_channel::oneshot","",10,[[["canceled",3]],["bool",15]]],[11,"fmt","futures_channel::mpsc","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::oneshot","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::mpsc","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::oneshot","",10,[[["formatter",3]],["result",6]]],[11,"poll","","",9,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",7,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_terminated","","",7,[[],["bool",15]]],[11,"poll_next","futures_channel::mpsc","",4,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",5,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"is_terminated","","",4,[[],["bool",15]]],[11,"is_terminated","","",5,[[],["bool",15]]],[11,"poll_ready","","",2,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",2,[[["pin",3]],["result",4]]],[11,"poll_flush","","",2,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",2,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",3,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",3,[[["pin",3]],["result",4]]],[11,"poll_flush","","",3,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",3,[[["pin",3],["context",3]],[["result",4],["poll",4]]]]],"p":[[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Sender"],[3,"Receiver"],[3,"TryRecvError"],[3,"Cancellation"],[3,"Canceled"]]},\
"futures_core":{"doc":"Core traits and types for asynchronous operations in Rust.","i":[[0,"future","futures_core","Futures.",null,null],[6,"BoxFuture","futures_core::future","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",0,[[],["bool",15]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",1,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[0,"stream","futures_core","Asynchronous streams.",null,null],[6,"BoxStream","futures_core::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",2,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",2,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",2,[[]]],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",3,[[],["bool",15]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",4,null],[16,"Error","","The type of failures yielded by this future",4,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",4,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[0,"task","futures_core","Task notification.",null,null],[14,"ready","","Extracts the successful type of a <code>Poll<T></code>.",null,null]],"p":[[8,"FusedFuture"],[8,"TryFuture"],[8,"Stream"],[8,"FusedStream"],[8,"TryStream"]]},\
"futures_io":{"doc":"Asynchronous I/O","i":[[8,"AsyncRead","futures_io","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",0,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",0,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",1,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",1,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",1,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[10,"poll_close","","Attempt to close the object.",1,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",2,[[["pin",3],["context",3],["seekfrom",4]],[["result",6],["poll",4]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",3,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",3,[[["pin",3],["usize",15]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",0,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",1,[[["pin",3],["context",3]],[["result",6],["poll",4]]]]],"p":[[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"]]},\
"futures_sink":{"doc":"Asynchronous sinks","i":[[8,"Sink","futures_sink","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",0,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",0,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",0,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",0,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",0,[[["pin",3],["context",3]],[["poll",4],["result",4]]]]],"p":[[8,"Sink"]]},\
"futures_task":{"doc":"Tools for working with tasks.","i":[[8,"LocalSpawn","futures_task","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",0,[[["localfutureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",0,[[],[["spawnerror",3],["result",4]]]],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",1,[[["futureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status","","Determines whether the executor is able to spawn new …",1,[[],[["spawnerror",3],["result",4]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make …",2,[[["arc",3]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make …",2,[[["arc",3]]]],[5,"waker","","Creates a [<code>Waker</code>] from an <code>Arc<impl ArcWake></code>.",null,[[["arc",3]],["waker",3]]],[5,"waker_ref","","Creates a reference to a [<code>Waker</code>] from a reference to …",null,[[["arc",3]],["wakerref",3]]],[3,"WakerRef","","A [<code>Waker</code>] that is only valid for a given lifetime.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[5,"noop_waker_ref","","Get a static reference to a [<code>Waker</code>] which does nothing …",null,[[],["waker",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",6,[[["futureobj",3]]]],[11,"from","","",7,[[["box",3]]]],[11,"from","","",7,[[["box",3],["future",8]]]],[11,"from","","",7,[[["box",3],["pin",3]]]],[11,"from","","",7,[[["pin",3],["box",3]]]],[11,"from","","",6,[[["box",3]]]],[11,"from","","",6,[[["box",3],["future",8]]]],[11,"from","","",6,[[["box",3],["pin",3]]]],[11,"from","","",6,[[["box",3],["pin",3]]]],[11,"deref","","",5,[[],["waker",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"poll","","",6,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"status","","Determines whether the executor is able to spawn new …",1,[[],[["spawnerror",3],["result",4]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",0,[[],[["spawnerror",3],["result",4]]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",4,[[]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",4,[[],["bool",15]]],[11,"wake","","Indicates that the associated task is ready to make …",2,[[["arc",3]]]],[11,"new","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] reference.",5,[[["waker",3]]]],[11,"new_unowned","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] that must not be …",5,[[["manuallydrop",3],["waker",3]]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",6,[[["unsafefutureobj",8]]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",6,[[],["futureobj",3]]],[11,"new","","Create a <code>FutureObj</code> from a custom trait object …",7,[[["unsafefutureobj",8],["send",8]]]]],"p":[[8,"LocalSpawn"],[8,"Spawn"],[8,"ArcWake"],[8,"UnsafeFutureObj"],[3,"SpawnError"],[3,"WakerRef"],[3,"LocalFutureObj"],[3,"FutureObj"]]},\
"futures_util":{"doc":"Combinators and utilities for working with <code>Future</code>s, <code>Stream</code>…","i":[[0,"future","futures_util","Asynchronous values.",null,null],[6,"BoxFuture","futures_util::future","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",0,[[],["bool",15]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",1,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",2,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",2,[[]]],[3,"Flatten","","Future for the <code>flatten</code> method.",null,null],[3,"Fuse","","Future for the <code>fuse</code> method.",null,null],[8,"FutureExt","","An extension trait for <code>Future</code>s that provides a variety of …",null,null],[11,"map","","Map this future\'s output to a different type, returning a …",3,[[],["map",3]]],[11,"map_into","","Map this future\'s output to a different type, returning a …",3,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",3,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",3,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",3,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",3,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",3,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",3,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",3,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",3,[[],["inspect",3]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",3,[[],["catchunwind",3]]],[11,"shared","","Create a cloneable handle to this future where all …",3,[[],["shared",3]]],[11,"remote_handle","","Turn this future into a future that yields <code>()</code> on …",3,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",3,[[],["boxfuture",6]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",3,[[],["localboxfuture",6]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",3,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",3,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",3,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",3,[[],["option",4]]],[3,"Inspect","","Future for the <code>inspect</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Map","","Future for the <code>map</code> method.",null,null],[3,"MapInto","","Future for the <code>map_into</code> combinator.",null,null],[3,"NeverError","","Future for the <code>never_error</code> combinator.",null,null],[3,"Then","","Future for the <code>then</code> method.",null,null],[3,"UnitError","","Future for the <code>unit_error</code> combinator.",null,null],[3,"FlattenStream","","Stream for the <code>flatten_stream</code> method.",null,null],[3,"CatchUnwind","","Future for the <code>catch_unwind</code> method.",null,null],[3,"Remote","","A future which sends its output to the corresponding …",null,null],[3,"RemoteHandle","","The handle to a remote future returned by <code>remote_handle</code>. …",null,null],[3,"Shared","","Future for the <code>shared</code> method.",null,null],[3,"WeakShared","","A weak reference to a [<code>Shared</code>] that can be upgraded much …",null,null],[3,"AndThen","","Future for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Future for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Future for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Future for the <code>inspect_ok</code> method.",null,null],[3,"IntoFuture","","Future for the <code>into_future</code> method.",null,null],[3,"MapErr","","Future for the <code>map_err</code> method.",null,null],[3,"MapOk","","Future for the <code>map_ok</code> method.",null,null],[3,"MapOkOrElse","","Future for the <code>map_ok_or_else</code> method.",null,null],[3,"OkInto","","Future for the <code>ok_into</code> method.",null,null],[3,"OrElse","","Future for the <code>or_else</code> method.",null,null],[3,"TryFlatten","","Future for the <code>try_flatten</code> method.",null,null],[3,"TryFlattenStream","","Future for the <code>try_flatten_stream</code> method.",null,null],[8,"TryFutureExt","","Adapters specific to [<code>Result</code>]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful …",4,[[],["flattensink",3]]],[11,"map_ok","","Maps this future\'s success value to a different value.",4,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future\'s success value to a different value, …",4,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future\'s error value to a different value.",4,[[],["maperr",3]]],[11,"err_into","","Maps this future\'s <code>Error</code> to a new error type using the …",4,[[],["errinto",3]]],[11,"ok_into","","Maps this future\'s <code>Ok</code> to a new type using the <code>Into</code> trait.",4,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",4,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",4,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",4,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",4,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",4,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future\'s output, producing a future with …",4,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",4,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",4,[[["context",3]],[["poll",4],["result",4]]]],[3,"UnwrapOrElse","","Future for the <code>unwrap_or_else</code> method.",null,null],[3,"FlattenSink","","Sink for the <code>flatten_sink</code> method.",null,null],[5,"lazy","","Creates a new future that allows delayed execution of a …",null,[[],["lazy",3]]],[3,"Lazy","","Future for the [<code>lazy</code>] function.",null,null],[5,"pending","","Creates a future which never resolves, representing a …",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"maybe_done","","Wraps a future into a <code>MaybeDone</code>",null,[[["future",8]],[["maybedone",4],["future",8]]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",5,null],[13,"Done","","The output of the completed future",5,null],[13,"Gone","","The empty variant after the result of a [<code>MaybeDone</code>] has …",5,null],[5,"try_maybe_done","","Wraps a future into a <code>TryMaybeDone</code>",null,[[["tryfuture",8]],[["tryfuture",8],["trymaybedone",4]]]],[4,"TryMaybeDone","","A future that may have completed with an error.",null,null],[13,"Future","","A not-yet-completed future",6,null],[13,"Done","","The output of the completed future",6,null],[13,"Gone","","The empty variant after the result of a [<code>TryMaybeDone</code>] …",6,null],[3,"OptionFuture","","A future representing a value which may or may not be …",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn</code>] function.",null,null],[5,"poll_immediate","","Creates a future that is immediately ready with an Option …",null,[[["future",8]],[["pollimmediate",3],["future",8]]]],[3,"PollImmediate","","Future for the <code>poll_immediate</code> function.",null,null],[5,"err","","Create a future that is immediately ready with an error …",null,[[],[["result",4],["ready",3]]]],[5,"ok","","Create a future that is immediately ready with a success …",null,[[],[["result",4],["ready",3]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[3,"Ready","","Future for the <code>ready</code> function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to …",null,[[],["join",3]]],[5,"join3","","Same as <code>join</code>, but with more futures.",null,[[],["join3",3]]],[5,"join4","","Same as <code>join</code>, but with more futures.",null,[[],["join4",3]]],[5,"join5","","Same as <code>join</code>, but with more futures.",null,[[],["join5",3]]],[3,"Join","","Future for the <code>join</code> function.",null,null],[3,"Join3","","Future for the [<code>join3</code>] function.",null,null],[3,"Join4","","Future for the [<code>join4</code>] function.",null,null],[3,"Join5","","Future for the [<code>join5</code>] function.",null,null],[5,"join_all","","Creates a future which represents a collection of the …",null,[[],["joinall",3]]],[3,"JoinAll","","Future for the [<code>join_all</code>] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to …",null,[[],["select",3]]],[3,"Select","","Future for the [<code>select()</code>] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of …",null,[[],["selectall",3]]],[3,"SelectAll","","Future for the [<code>select_all</code>] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to …",null,[[],["tryjoin",3]]],[5,"try_join3","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin3",3]]],[5,"try_join4","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin4",3]]],[5,"try_join5","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin5",3]]],[3,"TryJoin","","Future for the <code>try_join</code> function.",null,null],[3,"TryJoin3","","Future for the [<code>try_join3</code>] function.",null,null],[3,"TryJoin4","","Future for the [<code>try_join4</code>] function.",null,null],[3,"TryJoin5","","Future for the [<code>try_join5</code>] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of …",null,[[],["tryjoinall",3]]],[3,"TryJoinAll","","Future for the [<code>try_join_all</code>] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to …",null,[[],["tryselect",3]]],[3,"TrySelect","","Future for the [<code>try_select()</code>] function.",null,null],[5,"select_ok","","Creates a new future which will select the first …",null,[[],["selectok",3]]],[3,"SelectOk","","Future for the [<code>select_ok</code>] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","First branch of the type",7,null],[13,"Right","","Second branch of the type",7,null],[3,"AbortHandle","","A handle to an <code>Abortable</code> task.",null,null],[3,"AbortRegistration","","A registration handle for an <code>Abortable</code> task. Values of …",null,null],[3,"Abortable","","A future/stream which can be remotely short-circuited …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> task was aborted.",null,null],[5,"abortable","","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …",null,[[]]],[0,"stream","futures_util","Asynchronous streams.",null,null],[0,"futures_unordered","futures_util::stream","An unbounded set of futures.",null,null],[3,"IntoIter","futures_util::stream::futures_unordered","Owned iterator over all futures in the unordered set.",null,null],[3,"Iter","","Immutable iterator over all the futures in the unordered …",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[11,"new","","Constructs a new, empty [<code>FuturesUnordered</code>].",8,[[]]],[11,"len","","Returns the number of futures contained in the set.",8,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no futures.",8,[[],["bool",15]]],[11,"push","","Push a future into the set.",8,[[]]],[11,"iter","","Returns an iterator that allows inspecting each future in …",8,[[],["iter",3]]],[11,"iter_pin_ref","","Returns an iterator that allows inspecting each future in …",8,[[["pin",3]],["iterpinref",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in …",8,[[],["itermut",3]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in …",8,[[["pin",3]],["iterpinmut",3]]],[11,"clear","","Clears the set, removing all futures.",8,[[]]],[0,"select_all","futures_util::stream","An unbounded set of streams",null,null],[3,"SelectAll","futures_util::stream::select_all","An unbounded set of streams",null,null],[11,"new","","Constructs a new, empty <code>SelectAll</code>",9,[[]]],[11,"len","","Returns the number of streams contained in the set.",9,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no streams",9,[[],["bool",15]]],[11,"push","","Push a stream into the set.",9,[[]]],[11,"iter","","Returns an iterator that allows inspecting each stream in …",9,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each stream in …",9,[[],["itermut",3]]],[11,"clear","","Clears the set, removing all streams.",9,[[]]],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"Iter","","Immutable iterator over all streams in the unordered set.",null,null],[3,"IterMut","","Mutable iterator over all streams in the unordered set.",null,null],[3,"IntoIter","","Owned iterator over all streams in the unordered set.",null,null],[6,"BoxStream","futures_util::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",10,[[],["bool",15]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",11,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",11,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",11,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",12,null],[16,"Error","","The type of failures yielded by this future",12,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",12,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[3,"Chain","","Stream for the <code>chain</code> method.",null,null],[3,"Collect","","Future for the <code>collect</code> method.",null,null],[3,"Concat","","Future for the <code>concat</code> method.",null,null],[3,"Cycle","","Stream for the <code>cycle</code> method.",null,null],[3,"Enumerate","","Stream for the <code>enumerate</code> method.",null,null],[3,"Filter","","Stream for the <code>filter</code> method.",null,null],[3,"FilterMap","","Stream for the <code>filter_map</code> method.",null,null],[3,"FlatMap","","Stream for the <code>flat_map</code> method.",null,null],[3,"Flatten","","Stream for the <code>flatten</code> method.",null,null],[3,"Fold","","Future for the <code>fold</code> method.",null,null],[3,"ForEach","","Future for the <code>for_each</code> method.",null,null],[3,"Fuse","","Stream for the <code>fuse</code> method.",null,null],[3,"Inspect","","Stream for the <code>inspect</code> method.",null,null],[3,"Map","","Stream for the <code>map</code> method.",null,null],[3,"Next","","Future for the <code>next</code> method.",null,null],[3,"NextIf","","Future for the <code>Peekable::next_if</code> method.",null,null],[3,"NextIfEq","","Future for the <code>Peekable::next_if_eq</code> method.",null,null],[3,"Peek","","Future for the <code>Peekable::peek</code> method.",null,null],[3,"PeekMut","","Future for the <code>Peekable::peek_mut</code> method.",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[3,"Scan","","Stream for the <code>scan</code> method.",null,null],[3,"SelectNextSome","","Future for the <code>select_next_some</code> method.",null,null],[3,"Skip","","Stream for the <code>skip</code> method.",null,null],[3,"SkipWhile","","Stream for the <code>skip_while</code> method.",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Creates a future that resolves to the next item in the …",13,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",13,[[],["streamfuture",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",13,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",13,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",13,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",13,[[],["filtermap",3]]],[11,"then","","Computes from this stream\'s items new items of a …",13,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",13,[[],[["collect",3],["extend",8],["default",8]]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",13,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",13,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",13,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",13,[[],["fold",3]]],[11,"any","","Execute predicate over asynchronous stream, and return …",13,[[],["any",3]]],[11,"all","","Execute predicate over asynchronous stream, and return …",13,[[],["all",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",13,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",13,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",13,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",13,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",13,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",13,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",13,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",13,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",13,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",13,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",13,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",13,[[]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",13,[[],["catchunwind",3]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",13,[[],["boxstream",6]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",13,[[],["localboxstream",6]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",13,[[["usize",15]],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",13,[[["usize",15]],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",13,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",13,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",13,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",13,[[["usize",15]],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",13,[[["usize",15]],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",13,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",13,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",13,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",13,[[["context",3]],[["option",4],["poll",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",13,[[],["selectnextsome",3]]],[3,"StreamFuture","","Future for the <code>into_future</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[3,"TakeUntil","","Stream for the <code>take_until</code> method.",null,null],[3,"TakeWhile","","Stream for the <code>take_while</code> method.",null,null],[3,"Then","","Stream for the <code>then</code> method.",null,null],[3,"Unzip","","Future for the <code>unzip</code> method.",null,null],[3,"Zip","","Stream for the <code>zip</code> method.",null,null],[3,"CatchUnwind","","Stream for the <code>catch_unwind</code> method.",null,null],[3,"Chunks","","Stream for the <code>chunks</code> method.",null,null],[3,"ReadyChunks","","Stream for the <code>ready_chunks</code> method.",null,null],[3,"Forward","","Future for the <code>forward</code> method.",null,null],[3,"BufferUnordered","","Stream for the <code>buffer_unordered</code> method.",null,null],[3,"Buffered","","Stream for the <code>buffered</code> method.",null,null],[3,"ForEachConcurrent","","Future for the <code>for_each_concurrent</code> method.",null,null],[3,"ReuniteError","","Error indicating a <code>SplitSink<S></code> and <code>SplitStream<S></code> were …",null,null],[12,"0","","",14,null],[12,"1","","",14,null],[3,"SplitSink","","A <code>Sink</code> part of the split pair",null,null],[3,"SplitStream","","A <code>Stream</code> part of the split pair",null,null],[5,"try_unfold","","Creates a <code>TryStream</code> from a seed and a closure returning a …",null,[[],["tryunfold",3]]],[3,"AndThen","","Stream for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Stream for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Stream for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Stream for the <code>inspect_ok</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"MapErr","","Stream for the <code>map_err</code> method.",null,null],[3,"MapOk","","Stream for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Stream for the <code>or_else</code> method.",null,null],[3,"TryCollect","","Future for the <code>try_collect</code> method.",null,null],[3,"TryConcat","","Future for the <code>try_concat</code> method.",null,null],[3,"TryFilter","","Stream for the <code>try_filter</code> method.",null,null],[3,"TryFilterMap","","Stream for the <code>try_filter_map</code> method.",null,null],[3,"TryFlatten","","Stream for the <code>try_flatten</code> method.",null,null],[3,"TryFold","","Future for the <code>try_fold</code> method.",null,null],[3,"TryForEach","","Future for the <code>try_for_each</code> method.",null,null],[3,"TryNext","","Future for the <code>try_next</code> method.",null,null],[3,"TrySkipWhile","","Stream for the <code>try_skip_while</code> method.",null,null],[8,"TryStreamExt","","Adapters specific to <code>Result</code>-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts …",15,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",15,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",15,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",15,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",15,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",15,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",15,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",15,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",15,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",15,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",15,[[],["trytakewhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",15,[[],[["trycollect",3],["default",8],["extend",8]]]],[11,"try_chunks","","An adaptor for chunking up successful items of the stream …",15,[[["usize",15]],["trychunks",3]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",15,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",15,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",15,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",15,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",15,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",15,[[["usize",15]],["trybufferunordered",3]]],[11,"try_buffered","","Attempt to execute several futures from a stream …",15,[[["usize",15]],["trybuffered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",15,[[["context",3]],[["poll",4],["option",4]]]],[11,"into_async_read","","Adapter that converts this stream into an <code>AsyncRead</code>.",15,[[],["intoasyncread",3]]],[3,"TryTakeWhile","","Stream for the <code>try_take_while</code> method.",null,null],[3,"TryUnfold","","Stream for the [<code>try_unfold</code>] function.",null,null],[3,"IntoAsyncRead","","Reader for the <code>into_async_read</code> method.",null,null],[3,"TryBufferUnordered","","Stream for the <code>try_buffer_unordered</code> method.",null,null],[3,"TryBuffered","","Stream for the <code>try_buffered</code> method.",null,null],[3,"TryForEachConcurrent","","Future for the <code>try_for_each_concurrent</code> method.",null,null],[3,"TryChunks","","Stream for the <code>try_chunks</code> method.",null,null],[3,"TryChunksError","","Error indicating, that while chunk was collected inner …",null,null],[12,"0","","",16,null],[12,"1","","",16,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the [<code>iter</code>] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream for the [<code>repeat</code>] function.",null,null],[5,"repeat_with","","Creates a new stream that repeats elements of type <code>A</code> …",null,[[["fnmut",8]],[["fnmut",8],["repeatwith",3]]]],[3,"RepeatWith","","An stream that repeats elements of type <code>A</code> endlessly by …",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty</code>] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[["future",8]],[["future",8],["once",3]]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn</code>] function.",null,null],[5,"poll_immediate","","Creates a new stream that always immediately returns …",null,[[["stream",8]],[["pollimmediate",3],["stream",8]]]],[3,"PollImmediate","","Stream for the poll_immediate function.",null,null],[5,"select","","This function will attempt to pull items from both …",null,[[],["select",3]]],[3,"Select","","Stream for the [<code>select()</code>] function.",null,null],[5,"select_with_strategy","","This function will attempt to pull items from both …",null,[[],["selectwithstrategy",3]]],[4,"PollNext","","Type to tell [<code>SelectWithStrategy</code>] which stream to poll …",null,null],[13,"Left","","Poll the first stream.",17,null],[13,"Right","","Poll the second stream.",17,null],[3,"SelectWithStrategy","","Stream for the [<code>select_with_strategy()</code>] function. See …",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold</code>] function.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"SelectAll","","An unbounded set of streams",null,null],[3,"AbortHandle","","A handle to an <code>Abortable</code> task.",null,null],[3,"AbortRegistration","","A registration handle for an <code>Abortable</code> task. Values of …",null,null],[3,"Abortable","","A future/stream which can be remotely short-circuited …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> task was aborted.",null,null],[5,"abortable","","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …",null,[[]]],[0,"sink","futures_util","Asynchronous sinks.",null,null],[8,"Sink","futures_util::sink","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",18,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",18,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",18,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",18,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",18,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"drain","","Create a sink that will just discard all items given to …",null,[[],["drain",3]]],[3,"Drain","","Sink for the [<code>drain</code>] function.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two …",null,null],[3,"Feed","","Future for the <code>feed</code> method.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"SinkErrInto","","Sink for the <code>sink_err_into</code> method.",null,null],[3,"SinkMapErr","","Sink for the <code>sink_map_err</code> method.",null,null],[3,"Send","","Future for the <code>send</code> method.",null,null],[3,"SendAll","","Future for the <code>send_all</code> method.",null,null],[5,"unfold","","Create a sink from a function which processes one item at …",null,[[],["unfold",3]]],[3,"Unfold","","Sink for the [<code>unfold</code>] function.",null,null],[3,"With","","Sink for the <code>with</code> method.",null,null],[3,"WithFlatMap","","Sink for the <code>with_flat_map</code> method.",null,null],[3,"Buffer","","Sink for the <code>buffer</code> method.",null,null],[8,"SinkExt","","An extension trait for <code>Sink</code>s that provides a variety of …",null,null],[11,"with","","Composes a function <em>in front of</em> the sink.",19,[[],["with",3]]],[11,"with_flat_map","","Composes a function <em>in front of</em> the sink.",19,[[],["withflatmap",3]]],[11,"sink_map_err","","Transforms the error returned by the sink.",19,[[],["sinkmaperr",3]]],[11,"sink_err_into","","Map this sink\'s error to a different error type using the …",19,[[],["sinkerrinto",3]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",19,[[["usize",15]],["buffer",3]]],[11,"close","","Close the sink.",19,[[],["close",3]]],[11,"fanout","","Fanout items to multiple sinks.",19,[[],["fanout",3]]],[11,"flush","","Flush the sink, processing all pending items.",19,[[],["flush",3]]],[11,"send","","A future that completes after the given item has been …",19,[[],["send",3]]],[11,"feed","","A future that completes after the given item has been …",19,[[],["feed",3]]],[11,"send_all","","A future that completes after the given stream has been …",19,[[],[["sendall",3],["sized",8]]]],[11,"left_sink","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …",19,[[],["either",4]]],[11,"right_sink","","Wrap this stream in an <code>Either</code> stream, making it the …",19,[[],["either",4]]],[11,"poll_ready_unpin","","A convenience method for calling [<code>Sink::poll_ready</code>] on […",19,[[["context",3]],[["poll",4],["result",4]]]],[11,"start_send_unpin","","A convenience method for calling [<code>Sink::start_send</code>] on […",19,[[],["result",4]]],[11,"poll_flush_unpin","","A convenience method for calling [<code>Sink::poll_flush</code>] on […",19,[[["context",3]],[["poll",4],["result",4]]]],[11,"poll_close_unpin","","A convenience method for calling [<code>Sink::poll_close</code>] on […",19,[[["context",3]],[["poll",4],["result",4]]]],[0,"task","futures_util","Tools for working with tasks.",null,null],[3,"FutureObj","futures_util::task","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"LocalSpawn","","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",20,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",20,[[],[["result",4],["spawnerror",3]]]],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",21,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status","","Determines whether the executor is able to spawn new …",21,[[],[["result",4],["spawnerror",3]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",2,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",2,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[5,"noop_waker_ref","","Get a static reference to a [<code>Waker</code>] which does nothing …",null,[[],["waker",3]]],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make …",22,[[["arc",3]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make …",22,[[["arc",3]]]],[5,"waker","","Creates a [<code>Waker</code>] from an <code>Arc<impl ArcWake></code>.",null,[[["arc",3]],["waker",3]]],[5,"waker_ref","","Creates a reference to a [<code>Waker</code>] from a reference to …",null,[[["arc",3]],["wakerref",3]]],[3,"WakerRef","","A [<code>Waker</code>] that is only valid for a given lifetime.",null,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[8,"LocalSpawnExt","","Extension trait for <code>LocalSpawn</code>.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output <code>()</code> …",23,[[],[["result",4],["spawnerror",3]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion …",23,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[8,"SpawnExt","","Extension trait for <code>Spawn</code>.",null,null],[11,"spawn","","Spawns a task that polls the given future with output <code>()</code> …",24,[[],[["result",4],["spawnerror",3]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion …",24,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[0,"never","futures_util","This module contains the <code>Never</code> type.",null,null],[6,"Never","futures_util::never","A type with no possible values.",null,null],[0,"io","futures_util","Asynchronous I/O.",null,null],[8,"AsyncBufRead","futures_util::io","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",25,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",25,[[["usize",15],["pin",3]]]],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",26,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",26,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",27,[[["seekfrom",4],["pin",3],["context",3]],[["result",4],["poll",4]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",28,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",28,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",28,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Attempt to close the object.",28,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[3,"AllowStdIo","","A simple wrapper type which allows types which implement …",null,null],[3,"BufReader","","The <code>BufReader</code> struct adds buffering to any reader.",null,null],[3,"SeeKRelative","","Future for the <code>BufReader::seek_relative</code> method.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Chain","","Reader for the <code>chain</code> method.",null,null],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"copy","","Creates a future which copies all the bytes from one …",null,[[],[["sized",8],["copy",3]]]],[3,"Copy","","Future for the [<code>copy()</code>] function.",null,null],[5,"copy_buf","","Creates a future which copies all the bytes from one …",null,[[],[["copybuf",3],["sized",8]]]],[3,"CopyBuf","","Future for the [<code>copy_buf()</code>] function.",null,null],[3,"Cursor","","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …",null,null],[5,"empty","","Constructs a new handle to an empty reader.",null,[[],["empty",3]]],[3,"Empty","","Reader for the [<code>empty()</code>] function.",null,null],[3,"FillBuf","","Future for the <code>fill_buf</code> method.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"IntoSink","","Sink for the <code>into_sink</code> method.",null,null],[3,"Lines","","Stream for the <code>lines</code> method.",null,null],[3,"Read","","Future for the <code>read</code> method.",null,null],[3,"ReadVectored","","Future for the <code>read_vectored</code> method.",null,null],[3,"ReadExact","","Future for the <code>read_exact</code> method.",null,null],[3,"ReadLine","","Future for the <code>read_line</code> method.",null,null],[3,"ReadToEnd","","Future for the <code>read_to_end</code> method.",null,null],[3,"ReadToString","","Future for the <code>read_to_string</code> method.",null,null],[3,"ReadUntil","","Future for the <code>read_until</code> method.",null,null],[5,"repeat","","Creates an instance of a reader that infinitely repeats …",null,[[["u8",15]],["repeat",3]]],[3,"Repeat","","Reader for the [<code>repeat()</code>] function.",null,null],[3,"Seek","","Future for the <code>seek</code> method.",null,null],[5,"sink","","Creates an instance of a writer which will successfully …",null,[[],["sink",3]]],[3,"Sink","","Writer for the [<code>sink()</code>] function.",null,null],[3,"ReadHalf","","The readable half of an object returned from …",null,null],[3,"ReuniteError","","Error indicating a <code>ReadHalf<T></code> and <code>WriteHalf<T></code> were not …",null,null],[12,"0","","",29,null],[12,"1","","",29,null],[3,"WriteHalf","","The writable half of an object returned from …",null,null],[3,"Take","","Reader for the <code>take</code> method.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"Write","","Future for the <code>write</code> method.",null,null],[3,"WriteVectored","","Future for the <code>write_vectored</code> method.",null,null],[3,"WriteAll","","Future for the <code>write_all</code> method.",null,null],[8,"AsyncReadExt","","An extension trait which adds utility methods to <code>AsyncRead</code>…",null,null],[11,"chain","","Creates an adaptor which will chain this stream with …",30,[[],["chain",3]]],[11,"read","","Tries to read some bytes directly into the given <code>buf</code> in …",30,[[],["read",3]]],[11,"read_vectored","","Creates a future which will read from the <code>AsyncRead</code> into …",30,[[],["readvectored",3]]],[11,"read_exact","","Creates a future which will read exactly enough bytes to …",30,[[],["readexact",3]]],[11,"read_to_end","","Creates a future which will read all the bytes from this …",30,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Creates a future which will read all the bytes from this …",30,[[["string",3]],["readtostring",3]]],[11,"split","","Helper method for splitting this read/write object into …",30,[[]]],[11,"take","","Creates an AsyncRead adapter which will read at most <code>limit</code>…",30,[[["u64",15]],["take",3]]],[8,"AsyncWriteExt","","An extension trait which adds utility methods to …",null,null],[11,"flush","","Creates a future which will entirely flush this <code>AsyncWrite</code>…",31,[[],["flush",3]]],[11,"close","","Creates a future which will entirely close this <code>AsyncWrite</code>…",31,[[],["close",3]]],[11,"write","","Creates a future which will write bytes from <code>buf</code> into the …",31,[[],["write",3]]],[11,"write_vectored","","Creates a future which will write bytes from <code>bufs</code> into …",31,[[],["writevectored",3]]],[11,"write_all","","Write data into this object.",31,[[],["writeall",3]]],[11,"into_sink","","Allow using an [<code>AsyncWrite</code>] as a <code>Sink</code><code><Item: AsRef<[u8]>></code>.",31,[[],[["intosink",3],["asref",8]]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to <code>AsyncSeek</code>…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then …",32,[[["seekfrom",4]],["seek",3]]],[11,"stream_position","","Creates a future which will return the current seek …",32,[[],["seek",3]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to …",null,null],[11,"fill_buf","","Creates a future which will wait for a non-empty buffer …",33,[[],["fillbuf",3]]],[11,"consume_unpin","","A convenience for calling [<code>AsyncBufRead::consume</code>] on […",33,[[["usize",15]]]],[11,"read_until","","Creates a future which will read all the bytes associated …",33,[[["vec",3],["u8",15]],["readuntil",3]]],[11,"read_line","","Creates a future which will read all the bytes associated …",33,[[["string",3]],["readline",3]]],[11,"lines","","Returns a stream over the lines of this reader. This …",33,[[],["lines",3]]],[0,"lock","futures_util","Futures-powered synchronization primitives.",null,null],[3,"MappedMutexGuard","futures_util::lock","An RAII guard returned by the <code>MutexGuard::map</code> and …",null,null],[3,"Mutex","","A futures-aware mutex.",null,null],[3,"MutexGuard","","An RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …",null,null],[3,"MutexLockFuture","","A future which resolves when the target mutex has been …",null,null],[11,"new","futures_util::future","Creates a new <code>Abortable</code> future/stream using an existing …",34,[[["abortregistration",3]]]],[11,"is_aborted","","Checks whether the task has been aborted. Note that all …",34,[[],["bool",15]]],[11,"new_pair","","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which …",35,[[]]],[11,"abort","","Abort the <code>Abortable</code> stream/future associated with this …",35,[[]]],[14,"ready","futures_util","Extracts the successful type of a <code>Poll<T></code>.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[11,"from","futures_util::future","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_future","","",36,[[]]],[11,"try_poll","","",36,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_future","","",37,[[]]],[11,"try_poll","","",37,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_future","","",38,[[]]],[11,"try_poll","","",38,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_future","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_future","","",40,[[]]],[11,"try_poll","","",40,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_future","","",42,[[]]],[11,"try_poll","","",42,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"try_poll_next","","",43,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_future","","",44,[[]]],[11,"try_poll","","",44,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"try_poll_next","","",45,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_future","","",46,[[]]],[11,"try_poll","","",46,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_future","","",47,[[]]],[11,"try_poll","","",47,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_future","","",48,[[]]],[11,"try_poll","","",48,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_future","","",49,[[]]],[11,"try_poll","","",49,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"try_poll","","",50,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_future","","",51,[[]]],[11,"try_poll","","",51,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_future","","",52,[[]]],[11,"try_poll","","",52,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"try_poll_next","","",53,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"try_poll_next","","",54,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_future","","",55,[[]]],[11,"try_poll","","",55,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_future","","",56,[[]]],[11,"try_poll","","",56,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_future","","",57,[[]]],[11,"try_poll","","",57,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_future","","",58,[[]]],[11,"try_poll","","",58,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_future","","",59,[[]]],[11,"try_poll","","",59,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_future","","",60,[[]]],[11,"try_poll","","",60,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_future","","",61,[[]]],[11,"try_poll","","",61,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_future","","",62,[[]]],[11,"try_poll","","",62,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_future","","",63,[[]]],[11,"try_poll","","",63,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_future","","",64,[[]]],[11,"try_poll","","",64,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_future","","",65,[[]]],[11,"try_poll","","",65,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_future","","",66,[[]]],[11,"try_poll","","",66,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_future","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"try_poll","","",6,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_future","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_future","","",68,[[]]],[11,"try_poll","","",68,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_future","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_future","","",70,[[]]],[11,"try_poll","","",70,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_future","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_future","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_future","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_future","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_future","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_future","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_future","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_future","","",78,[[]]],[11,"try_poll","","",78,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_future","","",79,[[]]],[11,"try_poll","","",79,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_future","","",80,[[]]],[11,"try_poll","","",80,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_future","","",81,[[]]],[11,"try_poll","","",81,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_future","","",82,[[]]],[11,"try_poll","","",82,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_future","","",83,[[]]],[11,"try_poll","","",83,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_future","","",84,[[]]],[11,"try_poll","","",84,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"try_poll_next","","",7,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","futures_util::task","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_future","","",85,[[]]],[11,"try_poll","","",85,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_future","","",86,[[]]],[11,"try_poll","","",86,[[["pin",3],["context",3]],["poll",4]]],[11,"from","futures_util::future","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_future","","",34,[[]]],[11,"try_poll","","",34,[[["pin",3],["context",3]],["poll",4]]],[11,"try_poll_next","","",34,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","futures_util::stream","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"try_poll_next","","",89,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_future","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_future","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_future","","",92,[[]]],[11,"try_poll","","",92,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"try_poll_next","","",93,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"try_poll_next","","",95,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"try_poll_next","","",96,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_future","","",97,[[]]],[11,"try_poll","","",97,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_future","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"try_poll_next","","",99,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_future","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"try_poll_next","","",101,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_future","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"into_future","","",103,[[]]],[11,"try_poll","","",103,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"try_poll_next","","",104,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"into_future","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"into_future","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"into_future","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"into_future","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"try_poll_next","","",109,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"try_poll_next","","",110,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"try_poll_next","","",111,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"try_poll_next","","",112,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"try_poll_next","","",113,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"try_poll_next","","",114,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"try_poll_next","","",118,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"try_poll_next","","",119,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"try_poll_next","","",120,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"into_future","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"try_poll_next","","",122,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"try_poll_next","","",124,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"try_poll_next","","",125,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"into_future","","",126,[[]]],[11,"try_poll","","",126,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"try_poll_next","","",127,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"try_poll_next","","",128,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"try_poll_next","","",129,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"try_poll_next","","",130,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"try_poll_next","","",131,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"into_future","","",132,[[]]],[11,"try_poll","","",132,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"into_future","","",133,[[]]],[11,"try_poll","","",133,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"try_poll_next","","",134,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"try_poll_next","","",135,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"try_poll_next","","",136,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"into_future","","",137,[[]]],[11,"try_poll","","",137,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"into_future","","",138,[[]]],[11,"try_poll","","",138,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"try_poll_next","","",139,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"into_future","","",140,[[]]],[11,"try_poll","","",140,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"try_poll_next","","",141,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"try_poll_next","","",142,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"try_poll_next","","",143,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"try_poll_next","","",144,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"try_poll_next","","",145,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"into_future","","",146,[[]]],[11,"try_poll","","",146,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"try_poll_next","","",148,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"try_poll_next","","",149,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"try_poll_next","","",150,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"try_poll_next","","",151,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"try_poll_next","","",152,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"try_poll_next","","",153,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"try_poll_next","","",154,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"try_poll_next","","",155,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"try_poll_next","","",156,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"try_poll_next","","",157,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"try_poll_next","","",158,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"try_poll_next","","",159,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"try_poll_next","","",161,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"try_poll_next","","",162,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"try_poll_next","","",163,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"try_poll_next","","",164,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","futures_util::stream::futures_unordered","",165,[[]]],[11,"into","","",165,[[]]],[11,"into_iter","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"into_iter","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"into_iter","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"into_iter","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"into_iter","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","futures_util::stream","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"try_poll_next","","",8,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"try_poll_next","","",9,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","futures_util::stream::select_all","",170,[[]]],[11,"into","","",170,[[]]],[11,"into_iter","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"into_iter","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"into_iter","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","futures_util::sink","",173,[[]]],[11,"into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"into_future","","",173,[[]]],[11,"try_poll","","",173,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"into_future","","",176,[[]]],[11,"try_poll","","",176,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"into_future","","",177,[[]]],[11,"try_poll","","",177,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"try_poll_next","","",178,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"try_poll_next","","",179,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"into_future","","",180,[[]]],[11,"try_poll","","",180,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"into_future","","",181,[[]]],[11,"try_poll","","",181,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"try_poll_next","","",183,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"try_poll_next","","",184,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"try_poll_next","","",185,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","futures_util::task","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_string","","",186,[[],["string",3]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","futures_util::io","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"into_future","","",191,[[]]],[11,"try_poll","","",191,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"into_future","","",194,[[]]],[11,"try_poll","","",194,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"into_future","","",195,[[]]],[11,"try_poll","","",195,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"into_future","","",196,[[]]],[11,"try_poll","","",196,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"into_future","","",199,[[]]],[11,"try_poll","","",199,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"into_future","","",200,[[]]],[11,"try_poll","","",200,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"try_poll_next","","",202,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"into_future","","",203,[[]]],[11,"try_poll","","",203,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"into_future","","",204,[[]]],[11,"try_poll","","",204,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"into_future","","",205,[[]]],[11,"try_poll","","",205,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"into_future","","",206,[[]]],[11,"try_poll","","",206,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"into_future","","",207,[[]]],[11,"try_poll","","",207,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"into_future","","",208,[[]]],[11,"try_poll","","",208,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"into_future","","",209,[[]]],[11,"try_poll","","",209,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"into_future","","",211,[[]]],[11,"try_poll","","",211,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"into_future","","",217,[[]]],[11,"try_poll","","",217,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"into_future","","",218,[[]]],[11,"try_poll","","",218,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"into_future","","",219,[[]]],[11,"try_poll","","",219,[[["pin",3],["context",3]],["poll",4]]],[11,"from","futures_util::lock","",220,[[]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"into_future","","",221,[[]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"fmt","futures_util::task","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",188,[[],["atomicwaker",3]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref","","",187,[[],["waker",3]]],[11,"poll","","",86,[[["localfutureobj",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",85,[[["futureobj",3],["context",3],["pin",3]],["poll",4]]],[11,"drop","","",86,[[]]],[11,"from","","",85,[[["global",3],["box",3],["future",8]],["futureobj",3]]],[11,"from","","",86,[[["futureobj",3]],["localfutureobj",3]]],[11,"from","","",85,[[["pin",3],["box",3]],["futureobj",3]]],[11,"from","","",85,[[["box",3],["global",3]],["futureobj",3]]],[11,"from","","",86,[[["pin",3],["box",3]],["localfutureobj",3]]],[11,"from","","",86,[[["box",3],["global",3]],["localfutureobj",3]]],[11,"from","","",86,[[["box",3],["future",8],["global",3]],["localfutureobj",3]]],[11,"from","","",85,[[["pin",3],["box",3]],["futureobj",3]]],[11,"from","","",86,[[["pin",3],["box",3]],["localfutureobj",3]]],[11,"drop","futures_util::future","",40,[[]]],[11,"drop","futures_util::stream","",8,[[]]],[11,"drop","futures_util::lock","",221,[[]]],[11,"drop","","",222,[[]]],[11,"drop","","",223,[[]]],[11,"as_mut","futures_util::io","",216,[[]]],[11,"as_ref","","",216,[[]]],[11,"from","futures_util::future","",67,[[["option",4]]]],[11,"from","futures_util::lock","",220,[[]]],[11,"extend","futures_util::stream","",164,[[]]],[11,"extend","","",8,[[]]],[11,"extend","","",9,[[["intoiterator",8]]]],[11,"into_iter","","",8,[[]]],[11,"into_iter","","",9,[[]]],[11,"next","futures_util::stream::futures_unordered","",169,[[],["option",4]]],[11,"size_hint","","",169,[[]]],[11,"next","","",165,[[],["option",4]]],[11,"size_hint","","",165,[[]]],[11,"next","","",166,[[],["option",4]]],[11,"size_hint","","",166,[[]]],[11,"next","","",167,[[],["option",4]]],[11,"size_hint","","",167,[[]]],[11,"next","","",168,[[],["option",4]]],[11,"size_hint","","",168,[[]]],[11,"next","futures_util::stream::select_all","",170,[[],["option",4]]],[11,"size_hint","","",170,[[]]],[11,"next","","",171,[[],["option",4]]],[11,"size_hint","","",171,[[]]],[11,"next","","",172,[[],["option",4]]],[11,"size_hint","","",172,[[]]],[11,"clone","futures_util::future","",41,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[],["optionfuture",3]]],[11,"clone","","",69,[[],["pollimmediate",3]]],[11,"clone","","",70,[[],["ready",3]]],[11,"clone","","",7,[[],["either",4]]],[11,"clone","futures_util::stream","",153,[[],["iter",3]]],[11,"clone","","",154,[[],["repeat",3]]],[11,"clone","","",155,[[],["repeatwith",3]]],[11,"clone","","",156,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",160,[[],["pollimmediate",3]]],[11,"clone","","",17,[[],["pollnext",4]]],[11,"clone","futures_util::sink","",179,[[],["sinkmaperr",3]]],[11,"clone","","",183,[[]]],[11,"clone","futures_util::io","",189,[[],["allowstdio",3]]],[11,"clone","","",197,[[],["cursor",3]]],[11,"clone","futures_util::future","",34,[[],["abortable",3]]],[11,"clone","","",35,[[],["aborthandle",3]]],[11,"clone","","",88,[[],["aborted",3]]],[11,"default","","",67,[[]]],[11,"default","futures_util::stream","",17,[[]]],[11,"default","","",164,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","futures_util::io","",197,[[],["cursor",3]]],[11,"default","futures_util::lock","",220,[[]]],[11,"cmp","futures_util::io","",189,[[["allowstdio",3]],["ordering",4]]],[11,"eq","futures_util::stream","",16,[[["trychunkserror",3]],["bool",15]]],[11,"ne","","",16,[[["trychunkserror",3]],["bool",15]]],[11,"eq","","",17,[[["pollnext",4]],["bool",15]]],[11,"eq","futures_util::io","",189,[[["allowstdio",3]],["bool",15]]],[11,"ne","","",189,[[["allowstdio",3]],["bool",15]]],[11,"eq","futures_util::future","",88,[[["aborted",3]],["bool",15]]],[11,"partial_cmp","futures_util::io","",189,[[["allowstdio",3]],[["option",4],["ordering",4]]]],[11,"lt","","",189,[[["allowstdio",3]],["bool",15]]],[11,"le","","",189,[[["allowstdio",3]],["bool",15]]],[11,"gt","","",189,[[["allowstdio",3]],["bool",15]]],[11,"ge","","",189,[[["allowstdio",3]],["bool",15]]],[11,"deref","futures_util::lock","",222,[[]]],[11,"deref","","",223,[[]]],[11,"deref_mut","","",222,[[]]],[11,"deref_mut","","",223,[[]]],[11,"fmt","futures_util::future","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream::futures_unordered","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream::select_all","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::sink","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::io","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::lock","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::future","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::io","",29,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::future","",88,[[["formatter",3]],["result",6]]],[11,"hash","futures_util::stream","",17,[[]]],[11,"hash","futures_util::io","",189,[[]]],[11,"from_iter","futures_util::future","",75,[[["intoiterator",8]]]],[11,"from_iter","","",77,[[["intoiterator",8]]]],[11,"from_iter","","",82,[[["intoiterator",8]]]],[11,"from_iter","","",84,[[["intoiterator",8]]]],[11,"from_iter","futures_util::stream","",164,[[]]],[11,"from_iter","","",8,[[]]],[11,"from_iter","","",9,[[["intoiterator",8]]]],[11,"fill_buf","futures_util::io","",189,[[],["result",6]]],[11,"consume","","",189,[[["usize",15]]]],[11,"read","","",189,[[],[["usize",15],["result",6]]]],[11,"read_vectored","","",189,[[],[["usize",15],["result",6]]]],[11,"read_to_end","","",189,[[["vec",3]],[["usize",15],["result",6]]]],[11,"read_to_string","","",189,[[["string",3]],[["usize",15],["result",6]]]],[11,"read_exact","","",189,[[],["result",6]]],[11,"seek","","",189,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"write","","",189,[[],[["usize",15],["result",6]]]],[11,"write_vectored","","",189,[[],[["usize",15],["result",6]]]],[11,"flush","","",189,[[],["result",6]]],[11,"write_all","","",189,[[],["result",6]]],[11,"write_fmt","","",189,[[["arguments",3]],["result",6]]],[11,"poll","futures_util::future","",36,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",42,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",44,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",46,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",47,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",48,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",49,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",50,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",37,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",38,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",39,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",40,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",51,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",52,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",55,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",56,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",57,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",58,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",59,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",60,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",61,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",62,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",63,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",64,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",65,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",66,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",5,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",6,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",67,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",68,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",69,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll","","",70,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",71,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",72,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",73,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",74,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",75,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",76,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",77,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",78,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",79,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",80,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",81,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",82,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",83,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",84,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_util::stream","",90,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",91,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",92,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",97,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",126,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",98,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",100,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",102,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",103,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",105,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",106,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",107,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",108,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",121,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",132,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",133,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",137,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",138,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",140,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",146,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_util::sink","",173,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",176,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",177,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",180,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",181,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_util::io","",191,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",194,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",195,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",196,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",199,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",200,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",203,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",204,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",205,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",206,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",207,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",208,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",209,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",211,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",217,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",218,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",219,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll","futures_util::lock","",221,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_util::future","",34,[[["pin",3],["context",3]],["poll",4]]],[11,"is_terminated","","",36,[[],["bool",15]]],[11,"is_terminated","","",42,[[],["bool",15]]],[11,"is_terminated","","",44,[[],["bool",15]]],[11,"is_terminated","","",46,[[],["bool",15]]],[11,"is_terminated","","",47,[[],["bool",15]]],[11,"is_terminated","","",48,[[],["bool",15]]],[11,"is_terminated","","",49,[[],["bool",15]]],[11,"is_terminated","","",50,[[],["bool",15]]],[11,"is_terminated","","",40,[[],["bool",15]]],[11,"is_terminated","","",51,[[],["bool",15]]],[11,"is_terminated","","",52,[[],["bool",15]]],[11,"is_terminated","","",55,[[],["bool",15]]],[11,"is_terminated","","",56,[[],["bool",15]]],[11,"is_terminated","","",57,[[],["bool",15]]],[11,"is_terminated","","",58,[[],["bool",15]]],[11,"is_terminated","","",59,[[],["bool",15]]],[11,"is_terminated","","",60,[[],["bool",15]]],[11,"is_terminated","","",61,[[],["bool",15]]],[11,"is_terminated","","",62,[[],["bool",15]]],[11,"is_terminated","","",63,[[],["bool",15]]],[11,"is_terminated","","",64,[[],["bool",15]]],[11,"is_terminated","","",65,[[],["bool",15]]],[11,"is_terminated","","",66,[[],["bool",15]]],[11,"is_terminated","","",5,[[],["bool",15]]],[11,"is_terminated","","",6,[[],["bool",15]]],[11,"is_terminated","","",67,[[],["bool",15]]],[11,"is_terminated","","",69,[[],["bool",15]]],[11,"is_terminated","","",70,[[],["bool",15]]],[11,"is_terminated","","",71,[[],["bool",15]]],[11,"is_terminated","","",72,[[],["bool",15]]],[11,"is_terminated","","",73,[[],["bool",15]]],[11,"is_terminated","","",74,[[],["bool",15]]],[11,"is_terminated","","",76,[[],["bool",15]]],[11,"is_terminated","","",7,[[],["bool",15]]],[11,"is_terminated","futures_util::stream","",90,[[],["bool",15]]],[11,"is_terminated","","",91,[[],["bool",15]]],[11,"is_terminated","","",92,[[],["bool",15]]],[11,"is_terminated","","",97,[[],["bool",15]]],[11,"is_terminated","","",126,[[],["bool",15]]],[11,"is_terminated","","",98,[[],["bool",15]]],[11,"is_terminated","","",100,[[],["bool",15]]],[11,"is_terminated","","",102,[[],["bool",15]]],[11,"is_terminated","","",103,[[],["bool",15]]],[11,"is_terminated","","",105,[[],["bool",15]]],[11,"is_terminated","","",106,[[],["bool",15]]],[11,"is_terminated","","",107,[[],["bool",15]]],[11,"is_terminated","","",108,[[],["bool",15]]],[11,"is_terminated","","",121,[[],["bool",15]]],[11,"is_terminated","","",132,[[],["bool",15]]],[11,"is_terminated","","",137,[[],["bool",15]]],[11,"is_terminated","","",140,[[],["bool",15]]],[11,"is_terminated","","",146,[[],["bool",15]]],[11,"is_terminated","futures_util::lock","",221,[[],["bool",15]]],[11,"poll_next","futures_util::future","",43,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",43,[[]]],[11,"poll_next","","",45,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",45,[[]]],[11,"poll_next","","",53,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",53,[[]]],[11,"poll_next","","",54,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",54,[[]]],[11,"poll_next","","",69,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",7,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",7,[[]]],[11,"poll_next","futures_util::stream","",89,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",89,[[]]],[11,"poll_next","","",93,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",93,[[]]],[11,"poll_next","","",94,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",94,[[]]],[11,"poll_next","","",95,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",95,[[]]],[11,"poll_next","","",96,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",96,[[]]],[11,"poll_next","","",125,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",125,[[]]],[11,"poll_next","","",99,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",99,[[]]],[11,"poll_next","","",127,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",127,[[]]],[11,"poll_next","","",101,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",101,[[]]],[11,"poll_next","","",128,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",128,[[]]],[11,"poll_next","","",104,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",104,[[]]],[11,"poll_next","","",109,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",109,[[]]],[11,"poll_next","","",110,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",110,[[]]],[11,"poll_next","","",111,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",111,[[]]],[11,"poll_next","","",112,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",112,[[]]],[11,"poll_next","","",113,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",113,[[]]],[11,"poll_next","","",114,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",114,[[]]],[11,"poll_next","","",115,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",115,[[]]],[11,"poll_next","","",116,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",116,[[]]],[11,"poll_next","","",117,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",117,[[]]],[11,"poll_next","","",118,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",118,[[]]],[11,"poll_next","","",119,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",119,[[]]],[11,"poll_next","","",120,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",120,[[]]],[11,"poll_next","","",122,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",124,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",124,[[]]],[11,"poll_next","","",129,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",129,[[]]],[11,"poll_next","","",148,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",148,[[]]],[11,"poll_next","","",149,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",149,[[]]],[11,"poll_next","","",150,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",150,[[]]],[11,"poll_next","","",130,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",130,[[]]],[11,"poll_next","","",151,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",151,[[]]],[11,"poll_next","","",152,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",152,[[]]],[11,"poll_next","","",131,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",131,[[]]],[11,"poll_next","","",134,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",134,[[]]],[11,"poll_next","","",135,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",135,[[]]],[11,"poll_next","","",136,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",139,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",139,[[]]],[11,"poll_next","","",141,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",142,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",142,[[]]],[11,"poll_next","","",143,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",143,[[]]],[11,"poll_next","","",144,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",145,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",153,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",153,[[]]],[11,"poll_next","","",154,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",154,[[]]],[11,"poll_next","","",155,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",155,[[]]],[11,"poll_next","","",156,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",156,[[]]],[11,"poll_next","","",157,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",157,[[]]],[11,"poll_next","","",158,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",158,[[]]],[11,"poll_next","","",159,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",160,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",160,[[]]],[11,"poll_next","","",161,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",162,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",163,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",164,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",164,[[]]],[11,"poll_next","","",8,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",8,[[]]],[11,"poll_next","","",9,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures_util::sink","",178,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",178,[[]]],[11,"poll_next","","",179,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",179,[[]]],[11,"poll_next","","",183,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",183,[[]]],[11,"poll_next","","",184,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",184,[[]]],[11,"poll_next","","",185,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",185,[[]]],[11,"poll_next","futures_util::io","",202,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures_util::future","",34,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"is_terminated","","",43,[[],["bool",15]]],[11,"is_terminated","","",45,[[],["bool",15]]],[11,"is_terminated","","",53,[[],["bool",15]]],[11,"is_terminated","","",54,[[],["bool",15]]],[11,"is_terminated","","",7,[[],["bool",15]]],[11,"is_terminated","futures_util::stream","",89,[[],["bool",15]]],[11,"is_terminated","","",93,[[],["bool",15]]],[11,"is_terminated","","",94,[[],["bool",15]]],[11,"is_terminated","","",95,[[],["bool",15]]],[11,"is_terminated","","",96,[[],["bool",15]]],[11,"is_terminated","","",125,[[],["bool",15]]],[11,"is_terminated","","",99,[[],["bool",15]]],[11,"is_terminated","","",127,[[],["bool",15]]],[11,"is_terminated","","",101,[[],["bool",15]]],[11,"is_terminated","","",128,[[],["bool",15]]],[11,"is_terminated","","",104,[[],["bool",15]]],[11,"is_terminated","","",109,[[],["bool",15]]],[11,"is_terminated","","",110,[[],["bool",15]]],[11,"is_terminated","","",111,[[],["bool",15]]],[11,"is_terminated","","",112,[[],["bool",15]]],[11,"is_terminated","","",113,[[],["bool",15]]],[11,"is_terminated","","",114,[[],["bool",15]]],[11,"is_terminated","","",115,[[],["bool",15]]],[11,"is_terminated","","",116,[[],["bool",15]]],[11,"is_terminated","","",117,[[],["bool",15]]],[11,"is_terminated","","",118,[[],["bool",15]]],[11,"is_terminated","","",119,[[],["bool",15]]],[11,"is_terminated","","",124,[[],["bool",15]]],[11,"is_terminated","","",129,[[],["bool",15]]],[11,"is_terminated","","",148,[[],["bool",15]]],[11,"is_terminated","","",149,[[],["bool",15]]],[11,"is_terminated","","",150,[[],["bool",15]]],[11,"is_terminated","","",130,[[],["bool",15]]],[11,"is_terminated","","",151,[[],["bool",15]]],[11,"is_terminated","","",152,[[],["bool",15]]],[11,"is_terminated","","",131,[[],["bool",15]]],[11,"is_terminated","","",134,[[],["bool",15]]],[11,"is_terminated","","",135,[[],["bool",15]]],[11,"is_terminated","","",136,[[],["bool",15]]],[11,"is_terminated","","",139,[[],["bool",15]]],[11,"is_terminated","","",142,[[],["bool",15]]],[11,"is_terminated","","",143,[[],["bool",15]]],[11,"is_terminated","","",154,[[],["bool",15]]],[11,"is_terminated","","",155,[[],["bool",15]]],[11,"is_terminated","","",156,[[],["bool",15]]],[11,"is_terminated","","",157,[[],["bool",15]]],[11,"is_terminated","","",158,[[],["bool",15]]],[11,"is_terminated","","",160,[[],["bool",15]]],[11,"is_terminated","","",161,[[],["bool",15]]],[11,"is_terminated","","",162,[[],["bool",15]]],[11,"is_terminated","","",163,[[],["bool",15]]],[11,"is_terminated","","",164,[[],["bool",15]]],[11,"is_terminated","","",8,[[],["bool",15]]],[11,"is_terminated","","",9,[[],["bool",15]]],[11,"is_terminated","futures_util::sink","",178,[[],["bool",15]]],[11,"is_terminated","","",179,[[],["bool",15]]],[11,"is_terminated","","",184,[[],["bool",15]]],[11,"is_terminated","","",185,[[],["bool",15]]],[11,"spawn_obj","futures_util::stream","",8,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"spawn_local_obj","","",8,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"poll_ready","futures_util::future","",43,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",43,[[["pin",3]],["result",4]]],[11,"poll_flush","","",43,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",43,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",53,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",53,[[["pin",3]],["result",4]]],[11,"poll_flush","","",53,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",53,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",54,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",54,[[["pin",3]],["result",4]]],[11,"poll_flush","","",54,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",54,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",7,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",7,[[["pin",3]],["result",4]]],[11,"poll_flush","","",7,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",7,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures_util::stream","",94,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",94,[[["pin",3]],["result",4]]],[11,"poll_flush","","",94,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",94,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",95,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",95,[[["pin",3]],["result",4]]],[11,"poll_flush","","",95,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",95,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",96,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",96,[[["pin",3]],["result",4]]],[11,"poll_flush","","",96,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",96,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",125,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",125,[[["pin",3]],["result",4]]],[11,"poll_flush","","",125,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",125,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",99,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",99,[[["pin",3]],["result",4]]],[11,"poll_flush","","",99,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",99,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",127,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",127,[[["pin",3]],["result",4]]],[11,"poll_flush","","",127,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",127,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",101,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",101,[[["pin",3]],["result",4]]],[11,"poll_flush","","",101,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",101,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",128,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",128,[[["pin",3]],["result",4]]],[11,"poll_flush","","",128,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",128,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",104,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",104,[[["pin",3]],["result",4]]],[11,"poll_flush","","",104,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",104,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",109,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",109,[[["pin",3]],["result",4]]],[11,"poll_flush","","",109,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",109,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",110,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",110,[[["pin",3]],["result",4]]],[11,"poll_flush","","",110,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",110,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",111,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",111,[[["pin",3]],["result",4]]],[11,"poll_flush","","",111,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",111,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",112,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",112,[[["pin",3]],["result",4]]],[11,"poll_flush","","",112,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",112,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",113,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",113,[[["pin",3]],["result",4]]],[11,"poll_flush","","",113,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",113,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",114,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",114,[[["pin",3]],["result",4]]],[11,"poll_flush","","",114,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",114,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",116,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",116,[[["pin",3]],["result",4]]],[11,"poll_flush","","",116,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",116,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",117,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",117,[[["pin",3]],["result",4]]],[11,"poll_flush","","",117,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",117,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",118,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",118,[[["pin",3]],["result",4]]],[11,"poll_flush","","",118,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",118,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",119,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",119,[[["pin",3]],["result",4]]],[11,"poll_flush","","",119,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",119,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",120,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",120,[[["pin",3]],["result",4]]],[11,"poll_flush","","",120,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",120,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",123,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",123,[[["pin",3]],["result",4]]],[11,"poll_flush","","",123,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",123,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",129,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",129,[[["pin",3]],["result",4]]],[11,"poll_flush","","",129,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",129,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",148,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",148,[[["pin",3]],["result",4]]],[11,"poll_flush","","",148,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",148,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",149,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",149,[[["pin",3]],["result",4]]],[11,"poll_flush","","",149,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",149,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",150,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",150,[[["pin",3]],["result",4]]],[11,"poll_flush","","",150,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",150,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",130,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",130,[[["pin",3]],["result",4]]],[11,"poll_flush","","",130,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",130,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",151,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",151,[[["pin",3]],["result",4]]],[11,"poll_flush","","",151,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",151,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",152,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",152,[[["pin",3]],["result",4]]],[11,"poll_flush","","",152,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",152,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",131,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",131,[[["pin",3]],["result",4]]],[11,"poll_flush","","",131,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",131,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",134,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",134,[[["pin",3]],["result",4]]],[11,"poll_flush","","",134,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",134,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",135,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",135,[[["pin",3]],["result",4]]],[11,"poll_flush","","",135,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",135,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",136,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",136,[[["pin",3]],["result",4]]],[11,"poll_flush","","",136,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",136,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",139,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",139,[[["pin",3]],["result",4]]],[11,"poll_flush","","",139,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",139,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",142,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",142,[[["pin",3]],["result",4]]],[11,"poll_flush","","",142,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",142,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",143,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",143,[[["pin",3]],["result",4]]],[11,"poll_flush","","",143,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",143,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",144,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",144,[[["pin",3]],["result",4]]],[11,"poll_flush","","",144,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",144,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",145,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",145,[[["pin",3]],["result",4]]],[11,"poll_flush","","",145,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",145,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures_util::sink","",174,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",174,[[["pin",3]],["result",4]]],[11,"poll_flush","","",174,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",174,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",175,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",175,[[["pin",3]],["result",4]]],[11,"poll_flush","","",175,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",175,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",178,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",178,[[["pin",3]],["result",4]]],[11,"poll_flush","","",178,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",178,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",179,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",179,[[["pin",3]],["result",4]]],[11,"poll_flush","","",179,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",179,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",182,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",182,[[["pin",3]],["result",4]]],[11,"poll_flush","","",182,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",182,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",183,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",183,[[["pin",3]],["result",4]]],[11,"poll_flush","","",183,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",183,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",184,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",184,[[["pin",3]],["result",4]]],[11,"poll_flush","","",184,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",184,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",185,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",185,[[["pin",3]],["result",4]]],[11,"poll_flush","","",185,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",185,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures_util::io","",201,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",201,[[["pin",3]],["result",4]]],[11,"poll_flush","","",201,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",201,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_read","futures_util::future","",7,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","",7,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_read","futures_util::stream","",147,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_read","futures_util::io","",189,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",189,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",190,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",190,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",192,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","",192,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",193,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",193,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",198,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",210,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",210,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",213,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",213,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",215,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write","futures_util::future","",7,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",7,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",7,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",7,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","futures_util::stream","",147,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",147,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",147,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","futures_util::io","",189,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",189,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",189,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",189,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",190,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",190,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",190,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",190,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",192,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",192,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",192,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",192,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",212,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",212,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",212,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",212,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",214,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",214,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",214,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",214,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_seek","futures_util::future","",7,[[["pin",3],["context",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_seek","futures_util::io","",189,[[["pin",3],["context",3],["seekfrom",4]],[["poll",4],["result",6]]]],[11,"poll_seek","","Seek to an offset, in bytes, in the underlying reader.",190,[[["pin",3],["context",3],["seekfrom",4]],[["poll",4],["result",6]]]],[11,"poll_seek","","Seek to the offset, in bytes, in the underlying writer.",192,[[["pin",3],["context",3],["seekfrom",4]],[["poll",4],["result",6]]]],[11,"poll_seek","","",197,[[["pin",3],["context",3],["seekfrom",4]],[["poll",4],["result",6]]]],[11,"poll_fill_buf","futures_util::future","",7,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",7,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","futures_util::stream","",147,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",147,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","futures_util::io","",189,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",189,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","","",190,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",190,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","","",192,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"consume","","",192,[[["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",193,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",193,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","","",197,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",197,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","","",198,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",198,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","","",215,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",215,[[["pin",3],["usize",15]]]],[11,"terminated","futures_util::future","Creates a new <code>Fuse</code>-wrapped future which is already …",36,[[]]],[11,"forget","","Drops this handle <em>without</em> canceling the underlying future.",38,[[]]],[11,"peek","","Returns [<code>Some</code>] containing a reference to this [<code>Shared</code>]\'s …",40,[[],["option",4]]],[11,"downgrade","","Creates a new [<code>WeakShared</code>] for this [<code>Shared</code>].",40,[[],[["weakshared",3],["option",4]]]],[11,"strong_count","","Gets the number of strong pointers to this allocation.",40,[[],[["usize",15],["option",4]]]],[11,"weak_count","","Gets the number of weak pointers to this allocation.",40,[[],[["usize",15],["option",4]]]],[11,"upgrade","","Attempts to upgrade this [<code>WeakShared</code>] into a [<code>Shared</code>].",41,[[],[["option",4],["shared",3]]]],[11,"map","","Map this future\'s output to a different type, returning a …",3,[[],["map",3]]],[11,"map_into","","Map this future\'s output to a different type, returning a …",3,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",3,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",3,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",3,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",3,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",3,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",3,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",3,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",3,[[],["inspect",3]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",3,[[],["catchunwind",3]]],[11,"shared","","Create a cloneable handle to this future where all …",3,[[],["shared",3]]],[11,"remote_handle","","Turn this future into a future that yields <code>()</code> on …",3,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",3,[[],["boxfuture",6]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",3,[[],["localboxfuture",6]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",3,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",3,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",3,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",3,[[],["option",4]]],[11,"flatten_sink","","Flattens the execution of this future when the successful …",4,[[],["flattensink",3]]],[11,"map_ok","","Maps this future\'s success value to a different value.",4,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future\'s success value to a different value, …",4,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future\'s error value to a different value.",4,[[],["maperr",3]]],[11,"err_into","","Maps this future\'s <code>Error</code> to a new error type using the …",4,[[],["errinto",3]]],[11,"ok_into","","Maps this future\'s <code>Ok</code> to a new type using the <code>Into</code> trait.",4,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",4,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",4,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",4,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",4,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",4,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future\'s output, producing a future with …",4,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",4,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",4,[[["context",3]],[["poll",4],["result",4]]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",5,[[["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>MaybeDone</code> without driving …",5,[[["pin",3]],["option",4]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",6,[[["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>TryMaybeDone</code> without …",6,[[["pin",3]],["option",4]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",70,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",77,[[],["vec",3]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",7,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",7,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",7,[[]]],[11,"new","futures_util::task","Create a <code>FutureObj</code> from a custom trait object …",85,[[],["futureobj",3]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",86,[[],["localfutureobj",3]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",86,[[],["futureobj",3]]],[11,"get_ref","futures_util::stream","Acquires a reference to the underlying sink or stream …",94,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",94,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",94,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",94,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",95,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",95,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",95,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",95,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",96,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",96,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",96,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",96,[[]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",99,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",99,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",99,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",99,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",99,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",100,[[],["option",4]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",100,[[],["option",4]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",100,[[["pin",3]],[["pin",3],["option",4]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",100,[[],["option",4]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",101,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",101,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",101,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",101,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",104,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",104,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",104,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",104,[[]]],[11,"peek","","Produces a future which retrieves a reference to the next …",104,[[["pin",3]],["peek",3]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",104,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"peek_mut","","Produces a future which retrieves a mutable reference to …",104,[[["pin",3]],["peekmut",3]]],[11,"poll_peek_mut","","Peek retrieves a mutable reference to the next item in …",104,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"next_if","","Creates a future which will consume and return the next …",104,[[["pin",3]],["nextif",3]]],[11,"next_if_eq","","Creates a future which will consume and return the next …",104,[[["pin",3]],["nextifeq",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",109,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",109,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",109,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",109,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",110,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",110,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",110,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",110,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",111,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",111,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",111,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",111,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",112,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",112,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",112,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",112,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",113,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",113,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",113,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",113,[[]]],[11,"take_future","","Extract the stopping future out of the combinator. The …",113,[[],["option",4]]],[11,"take_result","","Once the stopping future is resolved, this method can be …",113,[[],["option",4]]],[11,"is_stopped","","Whether the stream was stopped yet by the stopping future …",113,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",114,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",114,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",114,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",114,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",115,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",115,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",115,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",115,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",116,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",116,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",116,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",116,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",117,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",117,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",117,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",117,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",118,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",118,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",118,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",118,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",119,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",119,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",119,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",119,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",120,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",120,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",120,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",120,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",122,[[["splitsink",3]],[["reuniteerror",3],["result",4]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",123,[[["splitstream",3]],[["reuniteerror",3],["result",4]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",124,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",124,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",124,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",124,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",125,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",125,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",125,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",125,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",127,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",127,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",127,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",127,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",128,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",128,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",128,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",128,[[]]],[11,"next","","Creates a future that resolves to the next item in the …",13,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",13,[[],["streamfuture",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",13,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",13,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",13,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",13,[[],["filtermap",3]]],[11,"then","","Computes from this stream\'s items new items of a …",13,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",13,[[],[["collect",3],["extend",8],["default",8]]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",13,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",13,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",13,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",13,[[],["fold",3]]],[11,"any","","Execute predicate over asynchronous stream, and return …",13,[[],["any",3]]],[11,"all","","Execute predicate over asynchronous stream, and return …",13,[[],["all",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",13,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",13,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",13,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",13,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",13,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",13,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",13,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",13,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",13,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",13,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",13,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",13,[[]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",13,[[],["catchunwind",3]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",13,[[],["boxstream",6]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",13,[[],["localboxstream",6]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",13,[[["usize",15]],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",13,[[["usize",15]],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",13,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",13,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",13,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",13,[[["usize",15]],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",13,[[["usize",15]],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",13,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",13,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",13,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",13,[[["context",3]],[["option",4],["poll",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",13,[[],["selectnextsome",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",129,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",129,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",129,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",129,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",130,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",130,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",130,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",130,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",131,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",131,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",131,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",131,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",134,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",134,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",134,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",134,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",135,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",135,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",135,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",135,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",136,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",136,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",136,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",136,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",139,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",139,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",139,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",139,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",142,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",142,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",142,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",142,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",143,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",143,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",143,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",143,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",144,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",144,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",144,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",144,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",145,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",145,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",145,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",145,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",148,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",148,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",148,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",148,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",149,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",149,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",149,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",149,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",150,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",150,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",150,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",150,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",151,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",151,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",151,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",151,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",152,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",152,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",152,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",152,[[]]],[11,"err_into","","Wraps the current stream in a new stream which converts …",15,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",15,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",15,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",15,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",15,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",15,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",15,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",15,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",15,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",15,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",15,[[],["trytakewhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",15,[[],[["trycollect",3],["default",8],["extend",8]]]],[11,"try_chunks","","An adaptor for chunking up successful items of the stream …",15,[[["usize",15]],["trychunks",3]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",15,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",15,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",15,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",15,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",15,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",15,[[["usize",15]],["trybufferunordered",3]]],[11,"try_buffered","","Attempt to execute several futures from a stream …",15,[[["usize",15]],["trybuffered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",15,[[["context",3]],[["poll",4],["option",4]]]],[11,"into_async_read","","Adapter that converts this stream into an <code>AsyncRead</code>.",15,[[],["intoasyncread",3]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",161,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",161,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",161,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",161,[[]]],[11,"toggle","","Toggle the value and return the old one.",17,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",162,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",162,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",162,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",162,[[]]],[11,"new","","Constructs a new, empty <code>FuturesOrdered</code>",164,[[]]],[11,"len","","Returns the number of futures contained in the queue.",164,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the queue contains no futures",164,[[],["bool",15]]],[11,"push","","Push a future into the queue.",164,[[]]],[11,"get_ref","futures_util::sink","Get a shared reference to the inner sinks.",175,[[]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",175,[[]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",175,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",175,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",178,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",178,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",178,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",178,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",179,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",179,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",179,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",179,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",183,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",183,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",183,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",183,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",184,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",184,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",184,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",184,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",185,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",185,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",185,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",185,[[]]],[11,"spawn","futures_util::task","Spawns a task that polls the given future with output <code>()</code> …",24,[[],[["result",4],["spawnerror",3]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion …",24,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[11,"spawn_local","","Spawns a task that polls the given future with output <code>()</code> …",23,[[],[["result",4],["spawnerror",3]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion …",23,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",186,[[],["spawnerror",3]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",186,[[],["bool",15]]],[11,"new","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] reference.",187,[[["waker",3]],["wakerref",3]]],[11,"new_unowned","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] that must not be …",187,[[["manuallydrop",3],["waker",3]],["wakerref",3]]],[11,"new","","Create an <code>AtomicWaker</code>.",188,[[],["atomicwaker",3]]],[11,"register","","Registers the waker to be notified on calls to <code>wake</code>.",188,[[["waker",3]]]],[11,"wake","","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.",188,[[]]],[11,"take","","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …",188,[[],[["option",4],["waker",3]]]],[11,"new","futures_util::io","Creates a new <code>AllowStdIo</code> from an existing IO object.",189,[[]]],[11,"get_ref","","Returns a reference to the contained IO object.",189,[[]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",189,[[]]],[11,"into_inner","","Consumes self and returns the contained IO object.",189,[[]]],[11,"new","","Creates a new <code>BufReader</code> with a default buffer capacity. …",190,[[]]],[11,"with_capacity","","Creates a new <code>BufReader</code> with the specified buffer …",190,[[["usize",15]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",190,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",190,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",190,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",190,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",190,[[]]],[11,"seek_relative","","Seeks relative to the current position. If the new …",190,[[["pin",3],["i64",15]],["seekrelative",3]]],[11,"poll_seek_relative","","Attempts to seek relative to the current position. If the …",190,[[["pin",3],["context",3],["i64",15]],[["poll",4],["result",6]]]],[11,"new","","Creates a new <code>BufWriter</code> with a default buffer capacity. …",192,[[]]],[11,"with_capacity","","Creates a new <code>BufWriter</code> with the specified buffer …",192,[[["usize",15]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",192,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",192,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",192,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",192,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",192,[[]]],[11,"get_ref","","Gets references to the underlying readers in this <code>Chain</code>.",193,[[]]],[11,"get_mut","","Gets mutable references to the underlying readers in this …",193,[[]]],[11,"get_pin_mut","","Gets pinned mutable references to the underlying readers …",193,[[["pin",3]]]],[11,"into_inner","","Consumes the <code>Chain</code>, returning the wrapped readers.",193,[[]]],[11,"new","","Creates a new cursor wrapping the provided underlying …",197,[[]]],[11,"into_inner","","Consumes this cursor, returning the underlying value.",197,[[]]],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",197,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this …",197,[[]]],[11,"position","","Returns the current position of this cursor.",197,[[],["u64",15]]],[11,"set_position","","Sets the position of this cursor.",197,[[["u64",15]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split …",213,[[["writehalf",3]],[["reuniteerror",3],["result",4]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split …",214,[[["readhalf",3]],[["reuniteerror",3],["result",4]]]],[11,"limit","","Returns the remaining number of bytes that can be read …",215,[[],["u64",15]]],[11,"set_limit","","Sets the number of bytes that can be read before this …",215,[[["u64",15]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",215,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",215,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",215,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",215,[[]]],[11,"new","","Creates a new window around the buffer <code>t</code> defaulting to …",216,[[]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside …",216,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside …",216,[[]]],[11,"into_inner","","Consumes this <code>Window</code>, returning the underlying buffer.",216,[[]]],[11,"start","","Returns the starting index of this window into the …",216,[[],["usize",15]]],[11,"end","","Returns the end index of this window into the underlying …",216,[[],["usize",15]]],[11,"set","","Changes the range of this window to the range specified.",216,[[["rangebounds",8],["usize",15]]]],[11,"new","futures_util::lock","Creates a new futures-aware mutex.",220,[[]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",220,[[]]],[11,"try_lock","","Attempt to acquire the lock immediately.",220,[[],[["mutexguard",3],["option",4]]]],[11,"lock","","Acquire the lock asynchronously.",220,[[],["mutexlockfuture",3]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",220,[[]]],[11,"map","","Returns a locked view over a portion of the locked data.",222,[[],[["mappedmutexguard",3],["sized",8]]]],[11,"map","","Returns a locked view over a portion of the locked data.",223,[[],[["sized",8],["mappedmutexguard",3]]]]],"p":[[8,"FusedFuture"],[8,"TryFuture"],[8,"UnsafeFutureObj"],[8,"FutureExt"],[8,"TryFutureExt"],[4,"MaybeDone"],[4,"TryMaybeDone"],[4,"Either"],[3,"FuturesUnordered"],[3,"SelectAll"],[8,"FusedStream"],[8,"Stream"],[8,"TryStream"],[8,"StreamExt"],[3,"ReuniteError"],[8,"TryStreamExt"],[3,"TryChunksError"],[4,"PollNext"],[8,"Sink"],[8,"SinkExt"],[8,"LocalSpawn"],[8,"Spawn"],[8,"ArcWake"],[8,"LocalSpawnExt"],[8,"SpawnExt"],[8,"AsyncBufRead"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncWrite"],[3,"ReuniteError"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncSeekExt"],[8,"AsyncBufReadExt"],[3,"Abortable"],[3,"AbortHandle"],[3,"Fuse"],[3,"CatchUnwind"],[3,"RemoteHandle"],[3,"Remote"],[3,"Shared"],[3,"WeakShared"],[3,"Flatten"],[3,"FlattenStream"],[3,"Map"],[3,"IntoStream"],[3,"MapInto"],[3,"Then"],[3,"Inspect"],[3,"NeverError"],[3,"UnitError"],[3,"IntoFuture"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"FlattenSink"],[3,"AndThen"],[3,"OrElse"],[3,"ErrInto"],[3,"OkInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"MapOkOrElse"],[3,"UnwrapOrElse"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollFn"],[3,"PollImmediate"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"JoinAll"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TryJoinAll"],[3,"TrySelect"],[3,"SelectOk"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"AbortRegistration"],[3,"Aborted"],[3,"Chain"],[3,"Collect"],[3,"Unzip"],[3,"Concat"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Fold"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Map"],[3,"Next"],[3,"SelectNextSome"],[3,"Peekable"],[3,"Peek"],[3,"PeekMut"],[3,"NextIf"],[3,"NextIfEq"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"TakeUntil"],[3,"Then"],[3,"Zip"],[3,"Chunks"],[3,"ReadyChunks"],[3,"Scan"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitStream"],[3,"SplitSink"],[3,"CatchUnwind"],[3,"Flatten"],[3,"Forward"],[3,"Inspect"],[3,"FlatMap"],[3,"AndThen"],[3,"IntoStream"],[3,"OrElse"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryChunks"],[3,"TryFold"],[3,"TryUnfold"],[3,"TrySkipWhile"],[3,"TryTakeWhile"],[3,"TryBufferUnordered"],[3,"TryBuffered"],[3,"TryForEachConcurrent"],[3,"IntoAsyncRead"],[3,"ErrInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"Iter"],[3,"Repeat"],[3,"RepeatWith"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"PollImmediate"],[3,"Select"],[3,"SelectWithStrategy"],[3,"Unfold"],[3,"FuturesOrdered"],[3,"IterPinMut"],[3,"IterMut"],[3,"IterPinRef"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Close"],[3,"Drain"],[3,"Fanout"],[3,"Feed"],[3,"Flush"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Send"],[3,"SendAll"],[3,"Unfold"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[3,"SpawnError"],[3,"WakerRef"],[3,"AtomicWaker"],[3,"AllowStdIo"],[3,"BufReader"],[3,"SeeKRelative"],[3,"BufWriter"],[3,"Chain"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Cursor"],[3,"Empty"],[3,"FillBuf"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadVectored"],[3,"ReadExact"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"Repeat"],[3,"Seek"],[3,"Sink"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Take"],[3,"Window"],[3,"Write"],[3,"WriteVectored"],[3,"WriteAll"],[3,"Mutex"],[3,"MutexLockFuture"],[3,"MutexGuard"],[3,"MappedMutexGuard"]]},\
"gdbstub":{"doc":"An ergonomic and easy-to-integrate implementation of the …","i":[[0,"arch","gdbstub","Traits to encode architecture-specific target information.",null,null],[8,"RegId","gdbstub::arch","Register identifier for target registers.",null,null],[10,"from_raw_id","","Map raw GDB register number corresponding <code>RegId</code> and …",0,[[["usize",15]],["option",4]]],[8,"Registers","","Methods to read/write architecture-specific registers.",null,null],[16,"ProgramCounter","","The type of the architecture\'s program counter / …",1,null],[10,"pc","","Return the value of the program counter / instruction …",1,[[]]],[10,"gdb_serialize","","Serialize <code>self</code> into a GDB register bytestream.",1,[[]]],[10,"gdb_deserialize","","Deserialize a GDB register bytestream into <code>self</code>.",1,[[],["result",4]]],[8,"BreakpointKind","","Breakpoint kind for specific architectures.",null,null],[10,"from_usize","","Parse <code>Self</code> from a raw usize.",2,[[["usize",15]],["option",4]]],[8,"Arch","","Encodes architecture-specific information, such as …",null,null],[16,"Usize","","The architecture\'s pointer size (e.g: <code>u32</code> on a 32-bit …",3,null],[16,"Registers","","The architecture\'s register file. See [<code>Registers</code>] for …",3,null],[16,"BreakpointKind","","The architecture\'s breakpoint \\\"kind\\\", used to determine …",3,null],[16,"RegId","","Register identifier enum/struct.",3,null],[11,"target_description_xml","","(optional) Return the arch\'s description XML file (…",3,[[],[["str",15],["option",4]]]],[0,"common","gdbstub","Common types and definitions.",null,null],[6,"Tid","gdbstub::common","Thread ID",null,null],[6,"Pid","","Process ID",null,null],[0,"target","gdbstub","The core [<code>Target</code>] trait, and all its various protocol …",null,null],[0,"ext","gdbstub::target","Extensions to <code>Target</code> which add support for various …",null,null],[0,"base","gdbstub::target::ext","Base operations required to debug any target (read/write …",null,null],[0,"multithread","gdbstub::target::ext::base","Base debugging operations for multi threaded targets.",null,null],[8,"MultiThreadOps","gdbstub::target::ext::base::multithread","Base debugging operations for multi threaded targets.",null,null],[10,"resume","","Resume execution on the target.",4,[[["resumeaction",4],["gdbinterrupt",3]],[["result",4],["threadstopreason",4]]]],[10,"clear_resume_actions","","Clear all previously set resume actions.",4,[[],["result",4]]],[10,"set_resume_action","","Specify what action each thread should take when <code>resume</code> …",4,[[["tid",6],["resumeaction",4]],["result",4]]],[11,"support_range_step","","Support for the optimized range stepping resume action.",4,[[],[["multithreadrangesteppingops",6],["option",4]]]],[11,"support_reverse_step","","Support for reverse stepping a target.",4,[[],[["multithreadreversestepops",6],["option",4]]]],[11,"support_reverse_cont","","Support for reverse continuing a target.",4,[[],[["option",4],["multithreadreversecontops",6]]]],[10,"read_registers","","Read the target\'s registers.",4,[[["tid",6]],["targetresult",6]]],[10,"write_registers","","Write the target\'s registers.",4,[[["tid",6]],["targetresult",6]]],[11,"single_register_access","","Support for single-register access. See …",4,[[],[["option",4],["singleregisteraccessops",6]]]],[10,"read_addrs","","Read bytes from the specified address range.",4,[[["tid",6]],["targetresult",6]]],[10,"write_addrs","","Write bytes to the specified address range.",4,[[["tid",6]],["targetresult",6]]],[10,"list_active_threads","","List all currently active threads.",4,[[["fnmut",8]],["result",4]]],[11,"is_thread_alive","","Check if the specified thread is alive.",4,[[["tid",6]],[["bool",15],["result",4]]]],[8,"MultiThreadReverseCont","","Target Extension - Reverse continue for multi threaded …",null,null],[10,"reverse_cont","","Reverse-continue the target.",5,[[["gdbinterrupt",3]],[["result",4],["threadstopreason",4]]]],[6,"MultiThreadReverseContOps","","See <code>MultiThreadReverseCont</code>.",null,null],[8,"MultiThreadReverseStep","","Target Extension - Reverse stepping for multi threaded …",null,null],[10,"reverse_step","","Reverse-step the specified [<code>Tid</code>].",6,[[["tid",6],["gdbinterrupt",3]],[["result",4],["threadstopreason",4]]]],[6,"MultiThreadReverseStepOps","","See <code>MultiThreadReverseStep</code>.",null,null],[8,"MultiThreadRangeStepping","","Target Extension - Optimized range stepping for multi …",null,null],[10,"set_resume_action_range_step","","See [<code>MultiThreadOps::set_resume_action</code>].",7,[[["tid",6]],["result",4]]],[6,"MultiThreadRangeSteppingOps","","See <code>MultiThreadRangeStepping</code>.",null,null],[4,"ThreadStopReason","","Describes why a thread stopped.",null,null],[13,"DoneStep","","Completed the single-step request.",8,null],[13,"GdbInterrupt","","<code>check_gdb_interrupt</code> returned <code>true</code>.",8,null],[13,"Exited","","The process exited with the specified exit status.",8,null],[13,"Terminated","","The process terminated with the specified signal number.",8,null],[13,"Signal","","The program received a signal.",8,null],[13,"SwBreak","","A thread hit a software breakpoint (e.g. due to a trap …",8,null],[13,"HwBreak","","A thread hit a hardware breakpoint.",8,null],[13,"Watch","","A thread hit a watchpoint.",8,null],[12,"tid","gdbstub::target::ext::base::multithread::ThreadStopReason","Which thread hit the watchpoint",9,null],[12,"kind","","Kind of watchpoint that was hit",9,null],[12,"addr","","Address of watched memory",9,null],[13,"ReplayLog","gdbstub::target::ext::base::multithread","The program has reached the end of the logged replay …",8,null],[0,"singlethread","gdbstub::target::ext::base","Base debugging operations for single threaded targets.",null,null],[8,"SingleThreadOps","gdbstub::target::ext::base::singlethread","Base debugging operations for single threaded targets.",null,null],[10,"resume","","Resume execution on the target.",10,[[["resumeaction",4],["gdbinterrupt",3]],[["result",4],["stopreason",4]]]],[11,"support_resume_range_step","","Support for the optimized range stepping resume action.",10,[[],[["singlethreadrangesteppingops",6],["option",4]]]],[11,"support_reverse_step","","Support for reverse stepping a target.",10,[[],[["singlethreadreversestepops",6],["option",4]]]],[11,"support_reverse_cont","","Support for reverse continuing a target.",10,[[],[["singlethreadreversecontops",6],["option",4]]]],[10,"read_registers","","Read the target\'s registers.",10,[[],["targetresult",6]]],[10,"write_registers","","Write the target\'s registers.",10,[[],["targetresult",6]]],[11,"single_register_access","","Support for single-register access. See …",10,[[],[["singleregisteraccessops",6],["option",4]]]],[10,"read_addrs","","Read bytes from the specified address range.",10,[[],["targetresult",6]]],[10,"write_addrs","","Write bytes to the specified address range.",10,[[],["targetresult",6]]],[8,"SingleThreadReverseCont","","Target Extension - Reverse continue for single threaded …",null,null],[10,"reverse_cont","","Reverse-continue the target.",11,[[["gdbinterrupt",3]],[["result",4],["stopreason",4]]]],[6,"SingleThreadReverseContOps","","See <code>SingleThreadReverseCont</code>.",null,null],[8,"SingleThreadReverseStep","","Target Extension - Reverse stepping for single threaded …",null,null],[10,"reverse_step","","Reverse-step the target.",12,[[["gdbinterrupt",3]],[["result",4],["stopreason",4]]]],[6,"SingleThreadReverseStepOps","","See <code>SingleThreadReverseStep</code>.",null,null],[8,"SingleThreadRangeStepping","","Target Extension - Optimized range stepping for single …",null,null],[10,"resume_range_step","","See [<code>SingleThreadOps::resume</code>].",13,[[["gdbinterrupt",3]],[["result",4],["stopreason",4]]]],[6,"SingleThreadRangeSteppingOps","","See <code>SingleThreadRangeStepping</code>.",null,null],[4,"StopReason","","Describes why the target stopped.",null,null],[13,"DoneStep","","Completed the single-step request.",14,null],[13,"GdbInterrupt","","<code>check_gdb_interrupt</code> returned <code>true</code>.",14,null],[13,"Exited","","The process exited with the specified exit status.",14,null],[13,"Terminated","","The process terminated with the specified signal number.",14,null],[13,"Signal","","The program received a signal.",14,null],[13,"SwBreak","","Hit a software breakpoint (e.g. due to a trap …",14,null],[13,"HwBreak","","Hit a hardware breakpoint.",14,null],[13,"Watch","","Hit a watchpoint.",14,null],[12,"kind","gdbstub::target::ext::base::singlethread::StopReason","Kind of watchpoint that was hit",15,null],[12,"addr","","Address of watched memory",15,null],[13,"ReplayLog","gdbstub::target::ext::base::singlethread","The program has reached the end of the logged replay …",14,null],[8,"SingleRegisterAccess","gdbstub::target::ext::base","Target Extension - Support for single-register access.",null,null],[10,"read_register","","Read to a single register on the target.",16,[[],["targetresult",6]]],[10,"write_register","","Write from a single register on the target.",16,[[],["targetresult",6]]],[6,"SingleRegisterAccessOps","","See [<code>SingleRegisterAccess</code>]",null,null],[4,"BaseOps","","Base operations for single/multi threaded targets.",null,null],[13,"SingleThread","","Single-threaded target",17,null],[13,"MultiThread","","Multi-threaded target",17,null],[4,"ResumeAction","","Describes how the target should be resumed.",null,null],[13,"Continue","","Continue execution, stopping once a <code>StopReason</code> occurs.",18,null],[13,"Step","","Step execution.",18,null],[13,"ContinueWithSignal","","Continue with signal.",18,null],[13,"StepWithSignal","","Step with signal.",18,null],[4,"ReplayLogPosition","","Describes the point reached in a replay log for the …",null,null],[13,"Begin","","Reached the beginning of the replay log.",19,null],[13,"End","","Reached the end of the replay log.",19,null],[3,"GdbInterrupt","","A handle to check for incoming GDB interrupts.",null,null],[11,"no_async","","Returns a [<code>GdbInterruptNoAsync</code>] struct which can be …",20,[[],["gdbinterruptnoasync",3]]],[3,"GdbInterruptNoAsync","","A simplified interface to [<code>GdbInterrupt</code>] for projects …",null,null],[11,"pending","","Checks if there is a pending GDB interrupt.",21,[[],["bool",15]]],[0,"breakpoints","gdbstub::target::ext","Add/Remove various kinds of breakpoints.",null,null],[8,"Breakpoints","gdbstub::target::ext::breakpoints","Target Extension - Set/Remove Breakpoints.",null,null],[11,"sw_breakpoint","","Set/Remote software breakpoints.",22,[[],[["swbreakpointops",6],["option",4]]]],[11,"hw_breakpoint","","Set/Remote hardware breakpoints.",22,[[],[["hwbreakpointops",6],["option",4]]]],[11,"hw_watchpoint","","Set/Remote hardware watchpoints.",22,[[],[["hwwatchpointops",6],["option",4]]]],[6,"BreakpointsOps","","See <code>Breakpoints</code>.",null,null],[8,"SwBreakpoint","","Nested Target Extension - Set/Remove Software Breakpoints.",null,null],[10,"add_sw_breakpoint","","Add a new software breakpoint. Return <code>Ok(false)</code> if the …",23,[[],[["bool",15],["targetresult",6]]]],[10,"remove_sw_breakpoint","","Remove an existing software breakpoint. Return <code>Ok(false)</code> …",23,[[],[["bool",15],["targetresult",6]]]],[6,"SwBreakpointOps","","See <code>SwBreakpoint</code>.",null,null],[8,"HwBreakpoint","","Nested Target Extension - Set/Remove Hardware Breakpoints.",null,null],[10,"add_hw_breakpoint","","Add a new hardware breakpoint. Return <code>Ok(false)</code> if the …",24,[[],[["bool",15],["targetresult",6]]]],[10,"remove_hw_breakpoint","","Remove an existing hardware breakpoint. Return <code>Ok(false)</code> …",24,[[],[["bool",15],["targetresult",6]]]],[6,"HwBreakpointOps","","See <code>HwBreakpoint</code>.",null,null],[4,"WatchKind","","The kind of watchpoint that should be set/removed.",null,null],[13,"Write","","Fire when the memory location is written to.",25,null],[13,"Read","","Fire when the memory location is read from.",25,null],[13,"ReadWrite","","Fire when the memory location is written to and/or read …",25,null],[8,"HwWatchpoint","","Nested Target Extension - Set/Remove Hardware Watchpoints.",null,null],[10,"add_hw_watchpoint","","Add a new hardware watchpoint. Return <code>Ok(false)</code> if the …",26,[[["watchkind",4]],[["bool",15],["targetresult",6]]]],[10,"remove_hw_watchpoint","","Remove an existing hardware watchpoint. Return <code>Ok(false)</code> …",26,[[["watchkind",4]],[["bool",15],["targetresult",6]]]],[6,"HwWatchpointOps","","See <code>HwWatchpoint</code>.",null,null],[0,"extended_mode","gdbstub::target::ext","Enables Extended Mode functionality when connecting using …",null,null],[4,"ShouldTerminate","gdbstub::target::ext::extended_mode","Returned from <code>ExtendedMode::kill</code>",null,null],[13,"Yes","","Terminate GdbStub",27,null],[13,"No","","Don\'t Terminate GdbStub",27,null],[11,"into_bool","","Convert <code>ShouldTerminate::Yes</code> into <code>true</code>, and …",27,[[],["bool",15]]],[4,"AttachKind","","Describes how the target attached to a process.",null,null],[13,"Attach","","It attached to an existing process.",28,null],[13,"Run","","It spawned a new process.",28,null],[8,"ExtendedMode","","Target Extension - Support Extended Mode functionality.",null,null],[10,"run","","Spawn and attach to the program <code>filename</code>, passing it the …",29,[[["option",4],["args",3]],[["targetresult",6],["pid",6]]]],[10,"attach","","Attach to a new process with the specified PID.",29,[[["pid",6]],["targetresult",6]]],[10,"query_if_attached","","Query if specified PID was spawned by the target (via <code>run</code>…",29,[[["pid",6]],[["attachkind",4],["targetresult",6]]]],[10,"kill","","Called when the GDB client sends a Kill request.",29,[[["option",4],["pid",6]],[["shouldterminate",4],["targetresult",6]]]],[10,"restart","","Restart the program being debugged.",29,[[],["result",4]]],[11,"on_start","","(optional) Invoked when GDB client switches to extended …",29,[[],["result",4]]],[11,"configure_aslr","","Enable/Disable ASLR for spawned processes.",29,[[],[["configureaslrops",6],["option",4]]]],[11,"configure_env","","Set/Remove/Reset Environment variables for spawned …",29,[[],[["configureenvops",6],["option",4]]]],[11,"configure_startup_shell","","Configure if spawned processes should be spawned using a …",29,[[],[["option",4],["configurestartupshellops",6]]]],[11,"configure_working_dir","","Configure the working directory for spawned processes.",29,[[],[["option",4],["configureworkingdirops",6]]]],[6,"ExtendedModeOps","","See <code>ExtendedMode</code>.",null,null],[3,"Args","","Iterator of <code>args</code> passed to a spawned process (used in …",null,null],[8,"ConfigureAslr","","Nested Target Extension - Enable/Disable ASLR for spawned …",null,null],[10,"cfg_aslr","","Enable/Disable ASLR for spawned processes.",30,[[["bool",15]],["targetresult",6]]],[6,"ConfigureAslrOps","","See <code>ConfigureAslr</code>.",null,null],[8,"ConfigureEnv","","Nested Target Extension - Set/Remove/Reset the …",null,null],[10,"set_env","","Set an environment variable.",31,[[["option",4]],["targetresult",6]]],[10,"remove_env","","Remove an environment variable.",31,[[],["targetresult",6]]],[10,"reset_env","","Reset all environment variables to their initial state …",31,[[],["targetresult",6]]],[6,"ConfigureEnvOps","","See <code>ConfigureEnv</code>.",null,null],[8,"ConfigureStartupShell","","Nested Target Extension - Configure if spawned processes …",null,null],[10,"cfg_startup_with_shell","","Configure if spawned processes should be spawned using a …",32,[[["bool",15]],["targetresult",6]]],[6,"ConfigureStartupShellOps","","See <code>ConfigureStartupShell</code>.",null,null],[8,"ConfigureWorkingDir","","Nested Target Extension - Configure the working directory …",null,null],[10,"cfg_working_dir","","Set the working directory for spawned processes.",33,[[["option",4]],["targetresult",6]]],[6,"ConfigureWorkingDirOps","","See <code>ConfigureWorkingDir</code>.",null,null],[0,"monitor_cmd","gdbstub::target::ext","Create custom target-specific debugging commands …",null,null],[3,"ConsoleOutput","gdbstub::target::ext::monitor_cmd","Helper struct to send console output to GDB.",null,null],[8,"MonitorCmd","","Target Extension - Handle custom GDB <code>monitor</code> commands.",null,null],[10,"handle_monitor_cmd","","Handle custom commands sent using the <code>monitor</code> command.",34,[[["consoleoutput",3]],["result",4]]],[6,"MonitorCmdOps","","See <code>MonitorCmd</code>.",null,null],[0,"section_offsets","gdbstub::target::ext","Get section/segment relocation offsets from the target.",null,null],[4,"Offsets","gdbstub::target::ext::section_offsets","Describes the offset the target loaded the image sections …",null,null],[13,"Sections","","Section offsets relative to their base addresses.",35,null],[12,"text","gdbstub::target::ext::section_offsets::Offsets","The offset of the <code>.text</code> section.",36,null],[12,"data","","The offset of the <code>.data</code> section.",36,null],[12,"bss","","The offset of the <code>.bss</code> section.",36,null],[13,"Segments","gdbstub::target::ext::section_offsets","Absolute addresses of the first two segments.",35,null],[12,"text_seg","gdbstub::target::ext::section_offsets::Offsets","The absolute address of the first segment which …",37,null],[12,"data_seg","","The absolute address of the second segment which …",37,null],[8,"SectionOffsets","gdbstub::target::ext::section_offsets","Target Extension - Get section/segment relocation offsets …",null,null],[10,"get_section_offsets","","Return the target\'s current section (or segment) offsets.",38,[[],[["offsets",4],["result",4]]]],[6,"SectionOffsetsOps","","See <code>SectionOffsets</code>.",null,null],[0,"target_description_xml_override","gdbstub::target::ext","Override the target description XML specified by …",null,null],[8,"TargetDescriptionXmlOverride","gdbstub::target::ext::target_description_xml_override","Target Extension - Override the target description XML …",null,null],[10,"target_description_xml","","Return the target\'s description XML file (<code>target.xml</code>).",39,[[],["str",15]]],[6,"TargetDescriptionXmlOverrideOps","","See <code>TargetDescriptionXmlOverride</code>.",null,null],[4,"TargetError","gdbstub::target","The error type for various methods on <code>Target</code> and its …",null,null],[13,"NonFatal","","A non-specific, non-fatal error has occurred.",40,null],[13,"Io","","I/O Error. Only available when the <code>std</code> feature is enabled.",40,null],[13,"Errno","","An operation-specific non-fatal error code.",40,null],[13,"Fatal","","A target-specific fatal error.",40,null],[6,"TargetResult","","A specialized <code>Result</code> type for <code>Target</code> operations.",null,null],[8,"Target","","Describes the architecture and capabilities of a target …",null,null],[16,"Arch","","The target\'s architecture.",41,null],[16,"Error","","A target-specific <strong>fatal</strong> error.",41,null],[10,"base_ops","","Base operations such as reading/writing from …",41,[[],["baseops",4]]],[11,"breakpoints","","Set/Remove software breakpoints.",41,[[],[["option",4],["breakpointsops",6]]]],[11,"monitor_cmd","","Handle custom GDB <code>monitor</code> commands.",41,[[],[["option",4],["monitorcmdops",6]]]],[11,"extended_mode","","Support for Extended Mode operations.",41,[[],[["extendedmodeops",6],["option",4]]]],[11,"section_offsets","","Handle requests to get the target\'s current section (or …",41,[[],[["option",4],["sectionoffsetsops",6]]]],[11,"target_description_xml_override","","Override the target description XML specified by …",41,[[],[["option",4],["targetdescriptionxmloverrideops",6]]]],[8,"Connection","gdbstub","A trait to perform in-order, serial, byte-wise I/O.",null,null],[16,"Error","","Transport-specific error type.",42,null],[10,"read","","Read a single byte.",42,[[],[["result",4],["u8",15]]]],[11,"read_exact","","Read the exact number of bytes required to fill the …",42,[[],["result",4]]],[10,"write","","Write a single byte.",42,[[["u8",15]],["result",4]]],[11,"write_all","","Write the entire buffer, blocking until complete.",42,[[],["result",4]]],[10,"peek","","Peek a single byte. This MUST be a <strong>non-blocking</strong> …",42,[[],[["result",4],["option",4]]]],[10,"flush","","Flush this Connection, ensuring that all intermediately …",42,[[],["result",4]]],[11,"on_session_start","","Called at the start of a debugging session <em>before</em> any GDB …",42,[[],["result",4]]],[3,"GdbStubBuilder","","Helper to construct and customize [<code>GdbStub</code>].",null,null],[4,"GdbStubBuilderError","","An error which may occur when building a [<code>GdbStub</code>].",null,null],[13,"MissingPacketBuffer","","Must provide buffer using <code>with_packet_buffer</code> in <code>#![no_std]</code>…",43,null],[13,"PacketBufSizeMismatch","","Custom packet buffer size is larger than the provided …",43,null],[4,"GdbStubError","","An error which may occur during a GDB debugging session.",null,null],[13,"ConnectionRead","","Connection Error while reading request.",44,null],[13,"ConnectionWrite","","Connection Error while writing response.",44,null],[13,"ClientSentNack","","Client nack\'d the last packet, but <code>gdbstub</code> doesn\'t …",44,null],[13,"PacketBufferOverflow","","Packet cannot fit in the provided packet buffer.",44,null],[13,"PacketParse","","Could not parse the packet into a valid command.",44,null],[13,"PacketUnexpected","","GDB client sent an unexpected packet. This should never …",44,null],[13,"TargetMismatch","","GDB client sent a packet with too much data for the given …",44,null],[13,"TargetError","","Target encountered a fatal error.",44,null],[13,"UnsupportedStopReason","","Target responded with an unsupported stop reason.",44,null],[13,"NoActiveThreads","","Target didn\'t report any active threads when there should …",44,null],[4,"DisconnectReason","","Describes why the GDB session ended.",null,null],[13,"TargetExited","","Target exited with given status code",45,null],[13,"TargetTerminated","","Target terminated with given signal",45,null],[13,"Disconnect","","GDB issued a disconnect command",45,null],[13,"Kill","","GDB issued a kill command",45,null],[3,"GdbStub","","Debug a [<code>Target</code>] using the GDB Remote Serial Protocol …",null,null],[14,"output","","Send formatted data to the GDB client console.",null,null],[14,"outputln","","Send formatted data to the GDB client console, with a …",null,null],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","gdbstub::target::ext::monitor_cmd","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","gdbstub::target::ext::base::multithread","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","gdbstub::target::ext::base::singlethread","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","gdbstub::target::ext::base","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","gdbstub::target::ext::breakpoints","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","gdbstub::target::ext::extended_mode","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"into_iter","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","gdbstub::target::ext::section_offsets","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","gdbstub::target","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"drop","gdbstub::target::ext::monitor_cmd","",48,[[]]],[11,"from","gdbstub::target::ext::base::multithread","",8,[[["stopreason",4]],["threadstopreason",4]]],[11,"from","gdbstub::target","",40,[[],["targeterror",4]]],[11,"from","","",40,[[["error",3]],["targeterror",4]]],[11,"next","gdbstub::target::ext::extended_mode","",49,[[],["option",4]]],[11,"clone","gdbstub","",45,[[],["disconnectreason",4]]],[11,"clone","gdbstub::target::ext::base::multithread","",8,[[],["threadstopreason",4]]],[11,"clone","gdbstub::target::ext::base::singlethread","",14,[[],["stopreason",4]]],[11,"clone","gdbstub::target::ext::base","",18,[[],["resumeaction",4]]],[11,"clone","","",19,[[],["replaylogposition",4]]],[11,"clone","gdbstub::target::ext::breakpoints","",25,[[],["watchkind",4]]],[11,"eq","gdbstub","",45,[[["disconnectreason",4]],["bool",15]]],[11,"ne","","",45,[[["disconnectreason",4]],["bool",15]]],[11,"eq","gdbstub::target::ext::base::multithread","",8,[[["threadstopreason",4]],["bool",15]]],[11,"ne","","",8,[[["threadstopreason",4]],["bool",15]]],[11,"eq","gdbstub::target::ext::base::singlethread","",14,[[["stopreason",4]],["bool",15]]],[11,"ne","","",14,[[["stopreason",4]],["bool",15]]],[11,"eq","gdbstub::target::ext::base","",18,[[["resumeaction",4]],["bool",15]]],[11,"ne","","",18,[[["resumeaction",4]],["bool",15]]],[11,"eq","","",19,[[["replaylogposition",4]],["bool",15]]],[11,"eq","gdbstub::target::ext::breakpoints","",25,[[["watchkind",4]],["bool",15]]],[11,"fmt","gdbstub","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub::target::ext::base::multithread","",8,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub::target::ext::base::singlethread","",14,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub::target::ext::base","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub::target::ext::breakpoints","",25,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub::target::ext::extended_mode","",49,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"write_str","gdbstub::target::ext::monitor_cmd","",48,[[["str",15]],["result",6]]],[11,"read_exact","gdbstub","Read the exact number of bytes required to fill the …",42,[[],["result",4]]],[11,"write_all","","Write the entire buffer, blocking until complete.",42,[[],["result",4]]],[11,"on_session_start","","Called at the start of a debugging session <em>before</em> any GDB …",42,[[],["result",4]]],[11,"new","","Create a new <code>GdbStubBuilder</code> using the provided Connection.",46,[[],["gdbstubbuilder",3]]],[11,"with_packet_buffer","","Use a pre-allocated packet buffer (instead of …",46,[[]]],[11,"packet_buffer_size","","Specify a custom size for the packet buffer. Defaults to …",46,[[["usize",15]]]],[11,"build","","Build the GdbStub, returning an error if something went …",46,[[],[["result",4],["gdbstubbuildererror",4],["gdbstub",3]]]],[11,"builder","","Create a [<code>GdbStubBuilder</code>] using the provided Connection.",47,[[],["gdbstubbuilder",3]]],[11,"new","","Create a new <code>GdbStub</code> using the provided connection.",47,[[],["gdbstub",3]]],[11,"run","","Starts a GDB remote debugging session.",47,[[],[["result",4],["disconnectreason",4],["error",4]]]],[11,"write_raw","gdbstub::target::ext::monitor_cmd","Write raw (non UTF-8) data to the GDB console.",48,[[]]],[11,"flush","","Flush the internal output buffer.",48,[[]]]],"p":[[8,"RegId"],[8,"Registers"],[8,"BreakpointKind"],[8,"Arch"],[8,"MultiThreadOps"],[8,"MultiThreadReverseCont"],[8,"MultiThreadReverseStep"],[8,"MultiThreadRangeStepping"],[4,"ThreadStopReason"],[13,"Watch"],[8,"SingleThreadOps"],[8,"SingleThreadReverseCont"],[8,"SingleThreadReverseStep"],[8,"SingleThreadRangeStepping"],[4,"StopReason"],[13,"Watch"],[8,"SingleRegisterAccess"],[4,"BaseOps"],[4,"ResumeAction"],[4,"ReplayLogPosition"],[3,"GdbInterrupt"],[3,"GdbInterruptNoAsync"],[8,"Breakpoints"],[8,"SwBreakpoint"],[8,"HwBreakpoint"],[4,"WatchKind"],[8,"HwWatchpoint"],[4,"ShouldTerminate"],[4,"AttachKind"],[8,"ExtendedMode"],[8,"ConfigureAslr"],[8,"ConfigureEnv"],[8,"ConfigureStartupShell"],[8,"ConfigureWorkingDir"],[8,"MonitorCmd"],[4,"Offsets"],[13,"Sections"],[13,"Segments"],[8,"SectionOffsets"],[8,"TargetDescriptionXmlOverride"],[4,"TargetError"],[8,"Target"],[8,"Connection"],[4,"GdbStubBuilderError"],[4,"GdbStubError"],[4,"DisconnectReason"],[3,"GdbStubBuilder"],[3,"GdbStub"],[3,"ConsoleOutput"],[3,"Args"]]},\
"gdbstub_arch":{"doc":"Community-created implementations of [<code>gdbstub::arch::Arch</code>]…","i":[[0,"arm","gdbstub_arch","Implementations for various ARM architectures.",null,null],[0,"reg","gdbstub_arch::arm","<code>Register</code> structs for various ARM architectures.",null,null],[0,"id","gdbstub_arch::arm::reg","<code>RegId</code> definitions for ARM architectures.",null,null],[4,"ArmCoreRegId","gdbstub_arch::arm::reg::id","32-bit ARM core register identifier.",null,null],[13,"Gpr","","General purpose registers (R0-R12)",0,null],[13,"Sp","","Stack Pointer (R13)",0,null],[13,"Lr","","Link Register (R14)",0,null],[13,"Pc","","Program Counter (R15)",0,null],[13,"Fpr","","Floating point registers (F0-F7)",0,null],[13,"Fps","","Floating point status",0,null],[13,"Cpsr","","Current Program Status Register (cpsr)",0,null],[3,"ArmCoreRegs","gdbstub_arch::arm::reg","32-bit ARM core registers.",null,null],[12,"r","","General purpose registers (R0-R12)",1,null],[12,"sp","","Stack Pointer (R13)",1,null],[12,"lr","","Link Register (R14)",1,null],[12,"pc","","Program Counter (R15)",1,null],[12,"cpsr","","Current Program Status Register (cpsr)",1,null],[4,"ArmBreakpointKind","gdbstub_arch::arm","ARM-specific breakpoint kinds.",null,null],[13,"Thumb16","","16-bit Thumb mode breakpoint.",2,null],[13,"Thumb32","","32-bit Thumb mode (Thumb-2) breakpoint.",2,null],[13,"Arm32","","32-bit ARM mode breakpoint.",2,null],[4,"Armv4t","","Implements <code>Arch</code> for ARMv4T",null,null],[0,"mips","gdbstub_arch","Implementations for the MIPS architecture.",null,null],[0,"reg","gdbstub_arch::mips","<code>Register</code> structs for MIPS architectures.",null,null],[0,"id","gdbstub_arch::mips::reg","<code>RegId</code> definitions for MIPS architectures.",null,null],[4,"MipsRegId","gdbstub_arch::mips::reg::id","MIPS register identifier.",null,null],[13,"Gpr","","General purpose registers (R0-R31)",3,null],[13,"Status","","Status register",3,null],[13,"Lo","","Low register",3,null],[13,"Hi","","High register",3,null],[13,"Badvaddr","","Bad Virtual Address register",3,null],[13,"Cause","","Exception Cause register",3,null],[13,"Pc","","Program Counter",3,null],[13,"Fpr","","Floating point registers (F0-F31)",3,null],[13,"Fcsr","","Floating-point Control Status register",3,null],[13,"Fir","","Floating-point Implementation Register",3,null],[13,"Hi1","","High 1 register",3,null],[13,"Lo1","","Low 1 register",3,null],[13,"Hi2","","High 2 register",3,null],[13,"Lo2","","Low 2 register",3,null],[13,"Hi3","","High 3 register",3,null],[13,"Lo3","","Low 3 register",3,null],[13,"Dspctl","","DSP Control register",3,null],[13,"Restart","","Restart register",3,null],[3,"MipsCoreRegs","gdbstub_arch::mips::reg","MIPS registers.",null,null],[12,"r","","General purpose registers (R0-R31)",4,null],[12,"lo","","Low register (regnum 33)",4,null],[12,"hi","","High register (regnum 34)",4,null],[12,"pc","","Program Counter (regnum 37)",4,null],[12,"cp0","","CP0 registers",4,null],[12,"fpu","","FPU registers",4,null],[3,"MipsCoreRegsWithDsp","","MIPS core and DSP registers.",null,null],[12,"core","","Core registers",5,null],[12,"dsp","","DSP registers",5,null],[3,"MipsCp0Regs","","MIPS CP0 (coprocessor 0) registers.",null,null],[12,"status","","Status register (regnum 32)",6,null],[12,"badvaddr","","Bad Virtual Address register (regnum 35)",6,null],[12,"cause","","Exception Cause register (regnum 36)",6,null],[3,"MipsFpuRegs","","MIPS FPU registers.",null,null],[12,"r","","FP registers (F0-F31) starting at regnum 38",7,null],[12,"fcsr","","Floating-point Control Status register",7,null],[12,"fir","","Floating-point Implementation Register",7,null],[4,"MipsBreakpointKind","gdbstub_arch::mips","MIPS-specific breakpoint kinds.",null,null],[13,"Mips16","","16-bit MIPS16 mode breakpoint.",8,null],[13,"MicroMips16","","16-bit microMIPS mode breakpoint.",8,null],[13,"Mips32","","32-bit standard MIPS mode breakpoint.",8,null],[13,"MicroMips32","","32-bit microMIPS mode breakpoint.",8,null],[4,"Mips","","Implements <code>Arch</code> for 32-bit MIPS.",null,null],[4,"Mips64","","Implements <code>Arch</code> for 64-bit MIPS.",null,null],[4,"MipsWithDsp","","Implements <code>Arch</code> for 32-bit MIPS with the DSP feature …",null,null],[4,"Mips64WithDsp","","Implements <code>Arch</code> for 64-bit MIPS with the DSP feature …",null,null],[0,"msp430","gdbstub_arch","Implementations for the TI-MSP430 family of MCUs.",null,null],[0,"reg","gdbstub_arch::msp430","<code>Register</code> structs for various TI-MSP430 CPUs.",null,null],[0,"id","gdbstub_arch::msp430::reg","<code>RegId</code> definitions for various TI-MSP430 CPUs.",null,null],[4,"Msp430RegId","gdbstub_arch::msp430::reg::id","TI-MSP430 register identifier.",null,null],[13,"Pc","","Program Counter (R0)",9,null],[13,"Sp","","Stack Pointer (R1)",9,null],[13,"Sr","","Status Register (R2)",9,null],[13,"Cg","","Constant Generator (R3)",9,null],[13,"Gpr","","General Purpose Registers (R4-R15)",9,null],[3,"Msp430Regs","gdbstub_arch::msp430::reg","16-bit TI-MSP430 registers.",null,null],[12,"pc","","Program Counter (R0)",10,null],[12,"sp","","Stack Pointer (R1)",10,null],[12,"sr","","Status Register (R2)",10,null],[12,"r","","General Purpose Registers (R4-R15)",10,null],[4,"Msp430","gdbstub_arch::msp430","Implements <code>Arch</code> for standard 16-bit TI-MSP430 MCUs.",null,null],[0,"ppc","gdbstub_arch","Implementations for various PowerPC architectures.",null,null],[0,"reg","gdbstub_arch::ppc","<code>Register</code> structs for PowerPC architectures",null,null],[0,"id","gdbstub_arch::ppc::reg","<code>RegId</code> definitions for PowerPC architectures.",null,null],[3,"PowerPcCommonRegs","","32-bit PowerPC core registers, FPU registers, and AltiVec …",null,null],[12,"r","","General purpose registers",11,null],[12,"f","","Floating Point registers",11,null],[12,"pc","","Program counter",11,null],[12,"msr","","Machine state",11,null],[12,"cr","","Condition register",11,null],[12,"lr","","Link register",11,null],[12,"ctr","","Count register",11,null],[12,"xer","","Integer exception register",11,null],[12,"fpscr","","Floating-point status and control register",11,null],[12,"vr","","Vector registers",11,null],[12,"vscr","","Vector status and control register",11,null],[12,"vrsave","","Vector context save register",11,null],[4,"PowerPcAltivec32","gdbstub_arch::ppc","Implements <code>Arch</code> for 32-bit PowerPC + AltiVec SIMD.",null,null],[0,"riscv","gdbstub_arch","Implementations for the RISC-V architecture.",null,null],[0,"reg","gdbstub_arch::riscv","<code>Register</code> structs for RISC-V architectures.",null,null],[0,"id","gdbstub_arch::riscv::reg","<code>RegId</code> definitions for RISC-V architectures.",null,null],[4,"RiscvRegId","gdbstub_arch::riscv::reg::id","RISC-V Register identifier.",null,null],[13,"Gpr","","General Purpose Register (x0-x31).",12,null],[13,"Fpr","","Floating Point Register (f0-f31).",12,null],[13,"Pc","","Program Counter.",12,null],[13,"Csr","","Control and Status Register.",12,null],[13,"Priv","","Privilege level.",12,null],[3,"RiscvCoreRegs","gdbstub_arch::riscv::reg","RISC-V Integer registers.",null,null],[12,"x","","General purpose registers (x0-x31)",13,null],[12,"pc","","Program counter",13,null],[4,"Riscv32","gdbstub_arch::riscv","Implements <code>Arch</code> for 32-bit RISC-V.",null,null],[4,"Riscv64","","Implements <code>Arch</code> for 64-bit RISC-V.",null,null],[0,"x86","gdbstub_arch","Implementations for various x86 architectures.",null,null],[0,"reg","gdbstub_arch::x86","<code>Register</code> structs for x86 architectures.",null,null],[0,"id","gdbstub_arch::x86::reg","<code>RegId</code> definitions for x86 architectures.",null,null],[4,"X87FpuInternalRegId","gdbstub_arch::x86::reg::id","FPU register identifier.",null,null],[13,"Fctrl","","Floating-point control register",14,null],[13,"Fstat","","Floating-point status register",14,null],[13,"Ftag","","Tag word",14,null],[13,"Fiseg","","FPU instruction pointer segment",14,null],[13,"Fioff","","FPU instruction pointer offset",14,null],[13,"Foseg","","FPU operand segment",14,null],[13,"Fooff","","FPU operand offset",14,null],[13,"Fop","","Floating-point opcode",14,null],[4,"X86SegmentRegId","","Segment register identifier.",null,null],[13,"CS","","Code Segment",15,null],[13,"SS","","Stack Segment",15,null],[13,"DS","","Data Segment",15,null],[13,"ES","","Extra Segment",15,null],[13,"FS","","General Purpose Segment",15,null],[13,"GS","","General Purpose Segment",15,null],[4,"X86CoreRegId","","32-bit x86 core + SSE register identifier.",null,null],[13,"Eax","","Accumulator",16,null],[13,"Ecx","","Count register",16,null],[13,"Edx","","Data register",16,null],[13,"Ebx","","Base register",16,null],[13,"Esp","","Stack pointer",16,null],[13,"Ebp","","Base pointer",16,null],[13,"Esi","","Source index",16,null],[13,"Edi","","Destination index",16,null],[13,"Eip","","Instruction pointer",16,null],[13,"Eflags","","Status register",16,null],[13,"Segment","","Segment registers",16,null],[13,"St","","FPU registers: ST0 through ST7",16,null],[13,"Fpu","","FPU internal registers",16,null],[13,"Xmm","","SIMD Registers: XMM0 through XMM7",16,null],[13,"Mxcsr","","SSE Status/Control Register",16,null],[4,"X86_64CoreRegId","","64-bit x86 core + SSE register identifier.",null,null],[13,"Gpr","","General purpose registers: RAX, RBX, RCX, RDX, RSI, RDI, …",17,null],[13,"Rip","","Instruction pointer",17,null],[13,"Eflags","","Status register",17,null],[13,"Segment","","Segment registers",17,null],[13,"St","","FPU registers: ST0 through ST7",17,null],[13,"Fpu","","FPU internal registers",17,null],[13,"Xmm","","SIMD Registers: XMM0 through XMM15",17,null],[13,"Mxcsr","","SSE Status/Control Register",17,null],[3,"X86CoreRegs","gdbstub_arch::x86::reg","32-bit x86 core registers (+ SSE extensions).",null,null],[12,"eax","","Accumulator",18,null],[12,"ecx","","Count register",18,null],[12,"edx","","Data register",18,null],[12,"ebx","","Base register",18,null],[12,"esp","","Stack pointer",18,null],[12,"ebp","","Base pointer",18,null],[12,"esi","","Source index",18,null],[12,"edi","","Destination index",18,null],[12,"eip","","Instruction pointer",18,null],[12,"eflags","","Status register",18,null],[12,"segments","","Segment registers: CS, SS, DS, ES, FS, GS",18,null],[12,"st","","FPU registers: ST0 through ST7",18,null],[12,"fpu","","FPU internal registers",18,null],[12,"xmm","","SIMD Registers: XMM0 through XMM7",18,null],[12,"mxcsr","","SSE Status/Control Register",18,null],[3,"X86_64CoreRegs","","64-bit x86 core registers (+ SSE extensions).",null,null],[12,"regs","","RAX, RBX, RCX, RDX, RSI, RDI, RBP, RSP, r8-r15",19,null],[12,"eflags","","Status register",19,null],[12,"rip","","Instruction pointer",19,null],[12,"segments","","Segment registers: CS, SS, DS, ES, FS, GS",19,null],[12,"st","","FPU registers: ST0 through ST7",19,null],[12,"fpu","","FPU internal registers",19,null],[12,"xmm","","SIMD Registers: XMM0 through XMM15",19,null],[12,"mxcsr","","SSE Status/Control Register",19,null],[6,"F80","","80-bit floating point value",null,null],[3,"X87FpuInternalRegs","","FPU registers",null,null],[12,"fctrl","","Floating-point control register",20,null],[12,"fstat","","Floating-point status register",20,null],[12,"ftag","","Tag word",20,null],[12,"fiseg","","FPU instruction pointer segment",20,null],[12,"fioff","","FPU instruction pointer offset",20,null],[12,"foseg","","FPU operand segment",20,null],[12,"fooff","","FPU operand offset",20,null],[12,"fop","","Floating-point opcode",20,null],[3,"X86SegmentRegs","","x86 segment registers.",null,null],[12,"cs","","Code Segment",21,null],[12,"ss","","Stack Segment",21,null],[12,"ds","","Data Segment",21,null],[12,"es","","Extra Segment",21,null],[12,"fs","","General Purpose Segment",21,null],[12,"gs","","General Purpose Segment",21,null],[4,"X86_64_SSE","gdbstub_arch::x86","Implements <code>Arch</code> for 64-bit x86 + SSE Extensions.",null,null],[4,"X86_SSE","","Implements <code>Arch</code> for 32-bit x86 + SSE Extensions.",null,null],[11,"from","gdbstub_arch::arm::reg::id","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","gdbstub_arch::arm::reg","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","gdbstub_arch::arm","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","gdbstub_arch::mips::reg::id","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","gdbstub_arch::mips::reg","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","gdbstub_arch::mips","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","gdbstub_arch::msp430::reg::id","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","gdbstub_arch::msp430::reg","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","gdbstub_arch::msp430","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","gdbstub_arch::ppc::reg","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","gdbstub_arch::ppc","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","gdbstub_arch::riscv::reg::id","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","gdbstub_arch::riscv::reg","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"from","gdbstub_arch::riscv","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","gdbstub_arch::x86::reg::id","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","gdbstub_arch::x86::reg","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"from","gdbstub_arch::x86","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"fmt","gdbstub_arch::arm::reg::id","",0,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::arm::reg","",1,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::arm","",2,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::mips::reg::id","",3,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::mips::reg","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::mips","",8,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::msp430::reg::id","",9,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::msp430::reg","",10,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::ppc::reg","",11,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::riscv::reg::id","",12,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::riscv::reg","",13,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::x86::reg::id","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","gdbstub_arch::x86::reg","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"eq","gdbstub_arch::arm::reg","",1,[[["armcoreregs",3]],["bool",15]]],[11,"ne","","",1,[[["armcoreregs",3]],["bool",15]]],[11,"eq","gdbstub_arch::mips::reg","",4,[[["mipscoreregs",3]],["bool",15]]],[11,"ne","","",4,[[["mipscoreregs",3]],["bool",15]]],[11,"eq","","",6,[[["mipscp0regs",3]],["bool",15]]],[11,"ne","","",6,[[["mipscp0regs",3]],["bool",15]]],[11,"eq","","",7,[[["mipsfpuregs",3]],["bool",15]]],[11,"ne","","",7,[[["mipsfpuregs",3]],["bool",15]]],[11,"eq","","",5,[[["mipscoreregswithdsp",3]],["bool",15]]],[11,"ne","","",5,[[["mipscoreregswithdsp",3]],["bool",15]]],[11,"eq","gdbstub_arch::msp430::reg","",10,[[["msp430regs",3]],["bool",15]]],[11,"ne","","",10,[[["msp430regs",3]],["bool",15]]],[11,"eq","gdbstub_arch::ppc::reg","",11,[[["powerpccommonregs",3]],["bool",15]]],[11,"ne","","",11,[[["powerpccommonregs",3]],["bool",15]]],[11,"eq","gdbstub_arch::riscv::reg","",13,[[["riscvcoreregs",3]],["bool",15]]],[11,"ne","","",13,[[["riscvcoreregs",3]],["bool",15]]],[11,"eq","gdbstub_arch::x86::reg","",18,[[["x86coreregs",3]],["bool",15]]],[11,"ne","","",18,[[["x86coreregs",3]],["bool",15]]],[11,"eq","","",19,[[["x86_64coreregs",3]],["bool",15]]],[11,"ne","","",19,[[["x86_64coreregs",3]],["bool",15]]],[11,"eq","","",20,[[["x87fpuinternalregs",3]],["bool",15]]],[11,"ne","","",20,[[["x87fpuinternalregs",3]],["bool",15]]],[11,"eq","","",21,[[["x86segmentregs",3]],["bool",15]]],[11,"ne","","",21,[[["x86segmentregs",3]],["bool",15]]],[11,"clone","gdbstub_arch::arm::reg::id","",0,[[],["armcoreregid",4]]],[11,"clone","gdbstub_arch::arm::reg","",1,[[],["armcoreregs",3]]],[11,"clone","gdbstub_arch::mips::reg::id","",3,[[],["mipsregid",4]]],[11,"clone","gdbstub_arch::mips::reg","",4,[[],["mipscoreregs",3]]],[11,"clone","","",6,[[],["mipscp0regs",3]]],[11,"clone","","",7,[[],["mipsfpuregs",3]]],[11,"clone","","",5,[[],["mipscoreregswithdsp",3]]],[11,"clone","gdbstub_arch::msp430::reg::id","",9,[[],["msp430regid",4]]],[11,"clone","gdbstub_arch::msp430::reg","",10,[[],["msp430regs",3]]],[11,"clone","gdbstub_arch::ppc::reg","",11,[[],["powerpccommonregs",3]]],[11,"clone","gdbstub_arch::riscv::reg::id","",12,[[],["riscvregid",4]]],[11,"clone","gdbstub_arch::riscv::reg","",13,[[],["riscvcoreregs",3]]],[11,"clone","gdbstub_arch::x86::reg::id","",14,[[],["x87fpuinternalregid",4]]],[11,"clone","","",15,[[],["x86segmentregid",4]]],[11,"clone","","",16,[[],["x86coreregid",4]]],[11,"clone","","",17,[[],["x86_64coreregid",4]]],[11,"clone","gdbstub_arch::x86::reg","",18,[[],["x86coreregs",3]]],[11,"clone","","",19,[[],["x86_64coreregs",3]]],[11,"clone","","",20,[[],["x87fpuinternalregs",3]]],[11,"clone","","",21,[[],["x86segmentregs",3]]],[11,"default","gdbstub_arch::arm::reg","",1,[[],["armcoreregs",3]]],[11,"default","gdbstub_arch::mips::reg","",4,[[],["mipscoreregs",3]]],[11,"default","","",6,[[],["mipscp0regs",3]]],[11,"default","","",7,[[],["mipsfpuregs",3]]],[11,"default","","",5,[[],["mipscoreregswithdsp",3]]],[11,"default","gdbstub_arch::msp430::reg","",10,[[],["msp430regs",3]]],[11,"default","gdbstub_arch::ppc::reg","",11,[[],["powerpccommonregs",3]]],[11,"default","gdbstub_arch::riscv::reg","",13,[[],["riscvcoreregs",3]]],[11,"default","gdbstub_arch::x86::reg","",18,[[],["x86coreregs",3]]],[11,"default","","",19,[[],["x86_64coreregs",3]]],[11,"default","","",20,[[],["x87fpuinternalregs",3]]],[11,"default","","",21,[[],["x86segmentregs",3]]],[11,"target_description_xml","gdbstub_arch::arm","",22,[[],[["str",15],["option",4]]]],[11,"target_description_xml","gdbstub_arch::mips","",23,[[],[["str",15],["option",4]]]],[11,"target_description_xml","","",24,[[],[["str",15],["option",4]]]],[11,"target_description_xml","","",25,[[],[["str",15],["option",4]]]],[11,"target_description_xml","","",26,[[],[["str",15],["option",4]]]],[11,"target_description_xml","gdbstub_arch::msp430","",27,[[],[["str",15],["option",4]]]],[11,"target_description_xml","gdbstub_arch::ppc","",28,[[],[["str",15],["option",4]]]],[11,"target_description_xml","gdbstub_arch::riscv","",29,[[],[["str",15],["option",4]]]],[11,"target_description_xml","","",30,[[],[["str",15],["option",4]]]],[11,"target_description_xml","gdbstub_arch::x86","",31,[[],[["str",15],["option",4]]]],[11,"target_description_xml","","",32,[[],[["str",15],["option",4]]]],[11,"pc","gdbstub_arch::arm::reg","",1,[[]]],[11,"gdb_serialize","","",1,[[]]],[11,"gdb_deserialize","","",1,[[],["result",4]]],[11,"pc","gdbstub_arch::mips::reg","",4,[[]]],[11,"gdb_serialize","","",4,[[]]],[11,"gdb_deserialize","","",4,[[],["result",4]]],[11,"pc","","",5,[[]]],[11,"gdb_serialize","","",5,[[]]],[11,"gdb_deserialize","","",5,[[],["result",4]]],[11,"pc","gdbstub_arch::msp430::reg","",10,[[]]],[11,"gdb_serialize","","",10,[[]]],[11,"gdb_deserialize","","",10,[[],["result",4]]],[11,"pc","gdbstub_arch::ppc::reg","",11,[[]]],[11,"gdb_serialize","","",11,[[]]],[11,"gdb_deserialize","","",11,[[],["result",4]]],[11,"pc","gdbstub_arch::riscv::reg","",13,[[]]],[11,"gdb_serialize","","",13,[[]]],[11,"gdb_deserialize","","",13,[[],["result",4]]],[11,"pc","gdbstub_arch::x86::reg","",18,[[]]],[11,"gdb_serialize","","",18,[[]]],[11,"gdb_deserialize","","",18,[[],["result",4]]],[11,"pc","","",19,[[]]],[11,"gdb_serialize","","",19,[[]]],[11,"gdb_deserialize","","",19,[[],["result",4]]],[11,"pc","","",20,[[]]],[11,"gdb_serialize","","",20,[[]]],[11,"gdb_deserialize","","",20,[[],["result",4]]],[11,"pc","","",21,[[]]],[11,"gdb_serialize","","",21,[[]]],[11,"gdb_deserialize","","",21,[[],["result",4]]],[11,"from_usize","gdbstub_arch::arm","",2,[[["usize",15]],["option",4]]],[11,"from_usize","gdbstub_arch::mips","",8,[[["usize",15]],["option",4]]],[11,"from_raw_id","gdbstub_arch::arm::reg::id","",0,[[["usize",15]],["option",4]]],[11,"from_raw_id","gdbstub_arch::mips::reg::id","",3,[[["usize",15]],["option",4]]],[11,"from_raw_id","","",3,[[["usize",15]],["option",4]]],[11,"from_raw_id","gdbstub_arch::msp430::reg::id","",9,[[["usize",15]],["option",4]]],[11,"from_raw_id","gdbstub_arch::riscv::reg::id","",12,[[["usize",15]],["option",4]]],[11,"from_raw_id","","",12,[[["usize",15]],["option",4]]],[11,"from_raw_id","gdbstub_arch::x86::reg::id","",16,[[["usize",15]],["option",4]]],[11,"from_raw_id","","",17,[[["usize",15]],["option",4]]]],"p":[[4,"ArmCoreRegId"],[3,"ArmCoreRegs"],[4,"ArmBreakpointKind"],[4,"MipsRegId"],[3,"MipsCoreRegs"],[3,"MipsCoreRegsWithDsp"],[3,"MipsCp0Regs"],[3,"MipsFpuRegs"],[4,"MipsBreakpointKind"],[4,"Msp430RegId"],[3,"Msp430Regs"],[3,"PowerPcCommonRegs"],[4,"RiscvRegId"],[3,"RiscvCoreRegs"],[4,"X87FpuInternalRegId"],[4,"X86SegmentRegId"],[4,"X86CoreRegId"],[4,"X86_64CoreRegId"],[3,"X86CoreRegs"],[3,"X86_64CoreRegs"],[3,"X87FpuInternalRegs"],[3,"X86SegmentRegs"],[4,"Armv4t"],[4,"Mips"],[4,"Mips64"],[4,"MipsWithDsp"],[4,"Mips64WithDsp"],[4,"Msp430"],[4,"PowerPcAltivec32"],[4,"Riscv32"],[4,"Riscv64"],[4,"X86_64_SSE"],[4,"X86_SSE"]]},\
"getopts":{"doc":"Simple getopt alternative.","i":[[3,"Options","getopts","A description of the options that a program can handle.",null,null],[11,"new","","Create a blank set of options.",0,[[],["options",3]]],[11,"parsing_style","","Set the parsing style.",0,[[["parsingstyle",4]],["options",3]]],[11,"long_only","","Set or clear \\\"long options only\\\" mode.",0,[[["bool",15]],["options",3]]],[11,"opt","","Create a generic option group, stating all parameters …",0,[[["occur",4],["hasarg",4],["str",15]],["options",3]]],[11,"optflag","","Create a long option that is optional and does not take …",0,[[["str",15]],["options",3]]],[11,"optflagmulti","","Create a long option that can occur more than once and …",0,[[["str",15]],["options",3]]],[11,"optflagopt","","Create a long option that is optional and takes an …",0,[[["str",15]],["options",3]]],[11,"optmulti","","Create a long option that is optional, takes an argument, …",0,[[["str",15]],["options",3]]],[11,"optopt","","Create a long option that is optional and takes an …",0,[[["str",15]],["options",3]]],[11,"reqopt","","Create a long option that is required and takes an …",0,[[["str",15]],["options",3]]],[11,"parse","","Parse command line arguments according to the provided …",0,[[["intoiterator",8]],["result",6]]],[11,"short_usage","","Derive a short one-line usage summary from a set of long …",0,[[["str",15]],["string",3]]],[11,"usage","","Derive a formatted message from a set of options.",0,[[["str",15]],["string",3]]],[11,"usage_with_format","","Derive a custom formatted message from a set of options. …",0,[[["fnmut",8]],["string",3]]],[4,"ParsingStyle","","What parsing style to use when parsing arguments.",null,null],[13,"FloatingFrees","","Flags and \\\"free\\\" arguments can be freely inter-mixed.",1,null],[13,"StopAtFirstFree","","As soon as a \\\"free\\\" argument (i.e. non-flag) is …",1,null],[4,"HasArg","","Describes whether an option has an argument.",null,null],[13,"Yes","","The option requires an argument.",2,null],[13,"No","","The option takes no argument.",2,null],[13,"Maybe","","The option argument is optional.",2,null],[4,"Occur","","Describes how often an option may occur.",null,null],[13,"Req","","The option occurs once.",3,null],[13,"Optional","","The option occurs at most once.",3,null],[13,"Multi","","The option occurs zero or more times.",3,null],[3,"Matches","","The result of checking command line arguments. Contains a …",null,null],[12,"free","","Free string fragments",4,null],[4,"Fail","","The type returned when the command line does not conform …",null,null],[13,"ArgumentMissing","","The option requires an argument but none was passed.",5,null],[13,"UnrecognizedOption","","The passed option is not declared among the possible …",5,null],[13,"OptionMissing","","A required option is not present.",5,null],[13,"OptionDuplicated","","A single occurrence option is being used multiple times.",5,null],[13,"UnexpectedArgument","","There\'s an argument being passed to a non-argument option.",5,null],[6,"Result","","The result of parsing a command line with a set of …",null,null],[11,"opt_defined","","Returns true if an option was defined",4,[[["str",15]],["bool",15]]],[11,"opt_present","","Returns true if an option was matched.",4,[[["str",15]],["bool",15]]],[11,"opt_count","","Returns the number of times an option was matched.",4,[[["str",15]],["usize",15]]],[11,"opt_positions","","Returns a vector of all the positions in which an option …",4,[[["str",15]],[["usize",15],["vec",3]]]],[11,"opts_present","","Returns true if any of several options were matched.",4,[[],["bool",15]]],[11,"opts_str","","Returns the string argument supplied to one of several …",4,[[],[["string",3],["option",4]]]],[11,"opt_strs","","Returns a vector of the arguments provided to all matches …",4,[[["str",15]],[["vec",3],["string",3]]]],[11,"opt_strs_pos","","Returns a vector of the arguments provided to all matches …",4,[[["str",15]],["vec",3]]],[11,"opt_str","","Returns the string argument supplied to a matching option …",4,[[["str",15]],[["string",3],["option",4]]]],[11,"opt_default","","Returns the matching string, a default, or <code>None</code>.",4,[[["str",15]],[["string",3],["option",4]]]],[11,"opt_get","","Returns some matching value or <code>None</code>.",4,[[["str",15]],[["option",4],["result",4]]]],[11,"opt_get_default","","Returns a matching value or default.",4,[[["str",15]],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",1,[[],["parsingstyle",4]]],[11,"clone","","",2,[[],["hasarg",4]]],[11,"clone","","",3,[[],["occur",4]]],[11,"clone","","",4,[[],["matches",3]]],[11,"clone","","",5,[[],["fail",4]]],[11,"default","","",0,[[]]],[11,"eq","","",1,[[["parsingstyle",4]],["bool",15]]],[11,"eq","","",2,[[["hasarg",4]],["bool",15]]],[11,"eq","","",3,[[["occur",4]],["bool",15]]],[11,"eq","","",4,[[["matches",3]],["bool",15]]],[11,"ne","","",4,[[["matches",3]],["bool",15]]],[11,"eq","","",5,[[["fail",4]],["bool",15]]],[11,"ne","","",5,[[["fail",4]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"description","","",5,[[],["str",15]]]],"p":[[3,"Options"],[4,"ParsingStyle"],[4,"HasArg"],[4,"Occur"],[3,"Matches"],[4,"Fail"]]},\
"getrandom":{"doc":"Interface to the operating system\'s random number …","i":[[3,"Error","getrandom","A small and <code>no_std</code> compatible error type",null,null],[5,"getrandom","","Fill <code>dest</code> with random bytes from the system\'s preferred …",null,[[],[["result",4],["error",3]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",0,[[["nonzerou32",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",3]],["bool",15]]],[11,"ne","","",0,[[["error",3]],["bool",15]]],[11,"clone","","",0,[[],["error",3]]],[18,"UNSUPPORTED","","This target/platform is not supported by <code>getrandom</code>.",0,null],[18,"ERRNO_NOT_POSITIVE","","The platform-specific <code>errno</code> returned a non-positive value.",0,null],[18,"IOS_SEC_RANDOM","","Call to iOS <code>SecRandomCopyBytes</code> failed.",0,null],[18,"WINDOWS_RTL_GEN_RANDOM","","Call to Windows <code>RtlGenRandom</code> failed.",0,null],[18,"FAILED_RDRAND","","RDRAND instruction failed due to a hardware issue.",0,null],[18,"NO_RDRAND","","RDRAND instruction unsupported on this target.",0,null],[18,"WEB_CRYPTO","","The browser does not have support for <code>self.crypto</code>.",0,null],[18,"WEB_GET_RANDOM_VALUES","","The browser does not have support for …",0,null],[18,"VXWORKS_RAND_SECURE","","On VxWorks, call to <code>randSecure</code> failed (random number …",0,null],[18,"NODE_CRYPTO","","NodeJS does not have support for the <code>crypto</code> module.",0,null],[18,"NODE_RANDOM_FILL_SYNC","","NodeJS does not have support for <code>crypto.randomFillSync</code>.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive …",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to …",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from …",0,[[],[["option",4],["i32",15]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32",3]]]],"p":[[3,"Error"]]},\
"gpu_display":{"doc":"Crate for displaying simple surfaces and GPU buffers over …","i":[[3,"EventDevice","gpu_display","Encapsulates a virtual event device, such as a mouse or …",null,null],[4,"EventDeviceKind","","",null,null],[13,"Mouse","","Produces relative mouse motions, wheel, and button clicks …",0,null],[13,"Touchscreen","","Produces absolute motion and touch events from the …",0,null],[13,"Keyboard","","Produces key events while the display window has focus.",0,null],[4,"GpuDisplayError","","An error generated by <code>GpuDisplay</code>.",null,null],[13,"Allocate","","An internal allocation failed.",1,null],[13,"BaseError","","A base error occurred.",1,null],[13,"Connect","","Connecting to the compositor failed.",1,null],[13,"CreateEvent","","Creating event file descriptor failed.",1,null],[13,"CreateSurface","","Failed to create a surface on the compositor.",1,null],[13,"FailedImport","","Failed to import a buffer to the compositor.",1,null],[13,"InvalidImportId","","The import ID is invalid.",1,null],[13,"InvalidPath","","The path is invalid.",1,null],[13,"InvalidSurfaceId","","The surface ID is invalid.",1,null],[13,"IoError","","An input/output error occured.",1,null],[13,"RequiredFeature","","A required feature was missing.",1,null],[13,"Unsupported","","The method is unsupported by the implementation.",1,null],[6,"GpuDisplayResult","","",null,null],[4,"SurfaceType","","A surface type",null,null],[13,"Scanout","","Scanout surface",2,null],[13,"Cursor","","Mouse cursor surface",2,null],[4,"DisplayPollToken","","Poll token for display instances",null,null],[13,"Display","","",3,null],[13,"EventDevice","","",3,null],[12,"event_device_id","gpu_display::DisplayPollToken","",4,null],[3,"GpuDisplayFramebuffer","gpu_display","",null,null],[11,"as_volatile_slice","","",5,[[],["volatileslice",3]]],[11,"stride","","",5,[[],["u32",15]]],[3,"GpuDisplay","","A connection to the compositor and associated collection …",null,null],[11,"open_x","","Opens a connection to X server",6,[[["asref",8],["option",4],["str",15]],[["gpudisplayresult",6],["gpudisplay",3]]]],[11,"open_wayland","","Opens a fresh connection to the compositor.",6,[[["asref",8],["option",4],["path",3]],[["gpudisplayresult",6],["gpudisplay",3]]]],[11,"open_stub","","",6,[[],[["gpudisplayresult",6],["gpudisplay",3]]]],[11,"is_x","","Return whether this display is an X display",6,[[],["bool",15]]],[11,"dispatch_events","","Dispatches internal events that were received from the …",6,[[],["gpudisplayresult",6]]],[11,"create_surface","","Creates a surface on the the compositor as either a top …",6,[[["u32",15],["option",4],["surfacetype",4]],[["u32",15],["gpudisplayresult",6]]]],[11,"release_surface","","Releases a previously created surface identified by the …",6,[[["u32",15]]]],[11,"framebuffer","","Gets a reference to an unused framebuffer for the …",6,[[["u32",15]],[["gpudisplayframebuffer",3],["option",4]]]],[11,"framebuffer_region","","Gets a reference to an unused framebuffer for the …",6,[[["u32",15]],[["gpudisplayframebuffer",3],["option",4]]]],[11,"next_buffer_in_use","","Returns true if the next buffer in the buffer queue for …",6,[[["u32",15]],["bool",15]]],[11,"flip","","Changes the visible contents of the identified surface to …",6,[[["u32",15]]]],[11,"close_requested","","Returns true if the identified top level surface has been …",6,[[["u32",15]],["bool",15]]],[11,"import_event_device","","Imports the given <code>event_device</code> into the display, …",6,[[["eventdevice",3]],[["u32",15],["gpudisplayresult",6]]]],[11,"release_event_device","","Release an event device from the display, given an …",6,[[["u32",15]]]],[11,"import_memory","","Imports memory to the compositor for use as a surface …",6,[[["asrawdescriptor",8],["u32",15],["u64",15]],[["u32",15],["gpudisplayresult",6]]]],[11,"release_import","","Releases a previously imported memory identified by the …",6,[[["u32",15]]]],[11,"commit","","Commits any pending state for the identified surface.",6,[[["u32",15]],["gpudisplayresult",6]]],[11,"flip_to","","Changes the visible contents of the identified surface to …",6,[[["u32",15]],["gpudisplayresult",6]]],[11,"set_position","","Sets the position of the identified subsurface relative …",6,[[["u32",15]],["gpudisplayresult",6]]],[11,"set_scanout_id","","Associates the scanout id with the given surface.",6,[[["u32",15]],["gpudisplayresult",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"as_raw_descriptors","","",7,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"as_raw_descriptors","","",6,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","","",1,[[["baseerror",3]],["gpudisplayerror",4]]],[11,"from","","",1,[[["ioerror",3]],["gpudisplayerror",4]]],[11,"clone","","",0,[[],["eventdevicekind",4]]],[11,"clone","","",2,[[],["surfacetype",4]]],[11,"clone","","",5,[[],["gpudisplayframebuffer",3]]],[11,"eq","","",0,[[["eventdevicekind",4]],["bool",15]]],[11,"eq","","",2,[[["surfacetype",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"as_raw_descriptor","","",7,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",6,[[],["rawdescriptor",6]]],[11,"as_raw_token","","",3,[[],["u64",15]]],[11,"from_raw_token","","",3,[[["u64",15]]]],[11,"new","","",7,[[["unixstream",3],["eventdevicekind",4]],["eventdevice",3]]],[11,"mouse","","",7,[[["unixstream",3]],["eventdevice",3]]],[11,"touchscreen","","",7,[[["unixstream",3]],["eventdevice",3]]],[11,"keyboard","","",7,[[["unixstream",3]],["eventdevice",3]]],[11,"kind","","",7,[[],["eventdevicekind",4]]],[11,"flush_buffered_events","","Flushes the buffered events that did not fit into the …",7,[[],[["bool",15],["result",6]]]],[11,"is_buffered_events_empty","","",7,[[],["bool",15]]],[11,"send_report","","",7,[[["intoiterator",8]],[["bool",15],["result",6]]]],[11,"send_event_encoded","","Sends the given <code>event</code>, returning <code>Ok(true)</code> if, after this …",7,[[["virtio_input_event",3]],[["bool",15],["result",6]]]],[11,"recv_event_encoded","","",7,[[],[["result",6],["virtio_input_event",3]]]]],"p":[[4,"EventDeviceKind"],[4,"GpuDisplayError"],[4,"SurfaceType"],[4,"DisplayPollToken"],[13,"EventDevice"],[3,"GpuDisplayFramebuffer"],[3,"GpuDisplay"],[3,"EventDevice"]]},\
"hypervisor":{"doc":"A crate for abstracting the underlying kernel hypervisor …","i":[[0,"caps","hypervisor","",null,null],[4,"HypervisorCap","hypervisor::caps","An enumeration of different hypervisor capabilities.",null,null],[13,"ArmPmuV3","","",0,null],[13,"ImmediateExit","","",0,null],[13,"S390UserSigp","","",0,null],[13,"TscDeadlineTimer","","",0,null],[13,"UserMemory","","",0,null],[13,"Xcrs","","",0,null],[4,"VmCap","","A capability the <code>Vm</code> can possibly expose.",null,null],[13,"DirtyLog","","Track dirty pages",1,null],[13,"PvClock","","Paravirtualized clock device",1,null],[13,"PvClockSuspend","","PV clock can be notified when guest is being paused",1,null],[13,"Protected","","VM can be run in protected mode, where the host does not …",1,null],[0,"kvm","hypervisor","",null,null],[5,"dirty_log_bitmap_size","hypervisor::kvm","Helper function to determine the size in bytes of a dirty …",null,[[["usize",15]],["usize",15]]],[3,"Kvm","","",null,null],[11,"new_with_path","","",2,[[["path",3]],[["kvm",3],["result",6]]]],[11,"new","","Opens <code>/dev/kvm/</code> and returns a Kvm object on success.",2,[[],[["kvm",3],["result",6]]]],[11,"get_vcpu_mmap_size","","Gets the size of the mmap required to use vcpu\'s <code>kvm_run</code> …",2,[[],[["result",6],["usize",15]]]],[3,"KvmVm","","A wrapper around creating and using a KVM VM.",null,null],[11,"new","","Constructs a new <code>KvmVm</code> using the given <code>Kvm</code> instance.",3,[[["kvm",3],["guestmemory",3]],[["result",6],["kvmvm",3]]]],[11,"create_irq_chip","","Creates an in kernel interrupt controller.",3,[[],["result",6]]],[11,"set_irq_line","","Sets the level on the given irq to 1 if <code>active</code> is true, …",3,[[["u32",15],["bool",15]],["result",6]]],[11,"register_irqfd","","Registers an event that will, when signalled, trigger the …",3,[[["u32",15],["event",3],["option",4]],["result",6]]],[11,"unregister_irqfd","","Unregisters an event that was previously registered with …",3,[[["u32",15],["event",3]],["result",6]]],[11,"set_gsi_routing","","Sets the GSI routing table, replacing any table set with …",3,[[],["result",6]]],[3,"KvmVcpu","","A wrapper around using a KVM Vcpu.",null,null],[11,"get_mp_state","","Gets the vcpu\'s current \\\"multiprocessing state\\\".",4,[[],[["result",6],["kvm_mp_state",3]]]],[11,"set_mp_state","","Sets the vcpu\'s current \\\"multiprocessing state\\\".",4,[[["kvm_mp_state",3]],["result",6]]],[0,"x86_64","hypervisor","",null,null],[8,"HypervisorX86_64","hypervisor::x86_64","A trait for managing cpuids for an x86_64 hypervisor and …",null,null],[10,"get_supported_cpuid","","Get the system supported CPUID values.",5,[[],[["cpuid",3],["result",6]]]],[10,"get_emulated_cpuid","","Get the system emulated CPUID values.",5,[[],[["cpuid",3],["result",6]]]],[10,"get_msr_index_list","","Gets the list of supported MSRs.",5,[[],[["vec",3],["result",6]]]],[8,"VmX86_64","","A wrapper for using a VM on x86_64 and getting/setting …",null,null],[10,"get_hypervisor","","Gets the <code>HypervisorX86_64</code> that created this VM.",6,[[],["hypervisorx86_64",8]]],[10,"create_vcpu","","Create a Vcpu with the specified Vcpu ID.",6,[[["usize",15]],[["box",3],["result",6]]]],[10,"set_tss_addr","","Sets the address of the three-page region in the VM\'s …",6,[[["guestaddress",3]],["result",6]]],[10,"set_identity_map_addr","","Sets the address of a one-page region in the VM\'s address …",6,[[["guestaddress",3]],["result",6]]],[8,"VcpuX86_64","","A wrapper around creating and using a VCPU on x86_64.",null,null],[10,"set_interrupt_window_requested","","Sets or clears the flag that requests the VCPU to exit …",7,[[["bool",15]]]],[10,"ready_for_interrupt","","Checks if we can inject an interrupt into the VCPU.",7,[[],["bool",15]]],[10,"interrupt","","Injects interrupt vector <code>irq</code> into the VCPU.",7,[[["u32",15]],["result",6]]],[10,"inject_nmi","","Injects a non-maskable interrupt into the VCPU.",7,[[],["result",6]]],[10,"get_regs","","Gets the VCPU general purpose registers.",7,[[],[["result",6],["regs",3]]]],[10,"set_regs","","Sets the VCPU general purpose registers.",7,[[["regs",3]],["result",6]]],[10,"get_sregs","","Gets the VCPU special registers.",7,[[],[["result",6],["sregs",3]]]],[10,"set_sregs","","Sets the VCPU special registers.",7,[[["sregs",3]],["result",6]]],[10,"get_fpu","","Gets the VCPU FPU registers.",7,[[],[["result",6],["fpu",3]]]],[10,"set_fpu","","Sets the VCPU FPU registers.",7,[[["fpu",3]],["result",6]]],[10,"get_debugregs","","Gets the VCPU debug registers.",7,[[],[["debugregs",3],["result",6]]]],[10,"set_debugregs","","Sets the VCPU debug registers.",7,[[["debugregs",3]],["result",6]]],[10,"get_xcrs","","Gets the VCPU extended control registers.",7,[[],[["result",6],["vec",3]]]],[10,"set_xcrs","","Sets the VCPU extended control registers.",7,[[],["result",6]]],[10,"get_msrs","","Gets the model-specific registers.  <code>msrs</code> specifies the …",7,[[["vec",3]],["result",6]]],[10,"set_msrs","","Sets the model-specific registers.",7,[[],["result",6]]],[10,"set_cpuid","","Sets up the data returned by the CPUID instruction.",7,[[["cpuid",3]],["result",6]]],[10,"get_hyperv_cpuid","","Gets the system emulated hyper-v CPUID values.",7,[[],[["cpuid",3],["result",6]]]],[10,"set_guest_debug","","Sets up debug registers and configure vcpu for handling …",7,[[["bool",15]],["result",6]]],[11,"is","","Returns true if the trait object wraps an object of type …",7,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",7,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",7,[[["rc",3]],[["rc",3],["result",4],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",7,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",7,[[],["option",4]]],[3,"CpuIdEntry","","A CpuId Entry contains supported feature information for …",null,null],[12,"function","","",8,null],[12,"index","","",8,null],[12,"flags","","",8,null],[12,"eax","","",8,null],[12,"ebx","","",8,null],[12,"ecx","","",8,null],[12,"edx","","",8,null],[3,"CpuId","","A container for the list of cpu id entries for the …",null,null],[12,"cpu_id_entries","","",9,null],[11,"new","","Constructs a new CpuId, with space allocated for …",9,[[["usize",15]]]],[4,"DestinationMode","","",null,null],[13,"Physical","","",10,null],[13,"Logical","","",10,null],[4,"TriggerMode","","",null,null],[13,"Edge","","",11,null],[13,"Level","","",11,null],[4,"DeliveryMode","","",null,null],[13,"Fixed","","",12,null],[13,"Lowest","","",12,null],[13,"SMI","","",12,null],[13,"RemoteRead","","",12,null],[13,"NMI","","",12,null],[13,"Init","","",12,null],[13,"Startup","","",12,null],[13,"External","","",12,null],[3,"MsiAddressMessage","","",null,null],[11,"new","","",13,[[],["msiaddressmessage",3]]],[11,"get_bit","","",13,[[["usize",15]],["bool",15]]],[11,"set_bit","","",13,[[["usize",15],["bool",15]]]],[11,"get","","",13,[[["usize",15],["u8",15]],["u64",15]]],[11,"set","","",13,[[["usize",15],["u64",15],["u8",15]]]],[11,"get_reserved","","",13,[[]]],[11,"set_reserved","","",13,[[]]],[11,"get_destination_mode","","",13,[[]]],[11,"set_destination_mode","","",13,[[]]],[11,"get_redirection_hint","","",13,[[]]],[11,"set_redirection_hint","","",13,[[]]],[11,"get_reserved_2","","",13,[[]]],[11,"set_reserved_2","","",13,[[]]],[11,"get_destination_id","","",13,[[]]],[11,"set_destination_id","","",13,[[]]],[11,"get_always_0xfee","","",13,[[]]],[11,"set_always_0xfee","","",13,[[]]],[3,"MsiDataMessage","","",null,null],[11,"new","","",14,[[],["msidatamessage",3]]],[11,"get_bit","","",14,[[["usize",15]],["bool",15]]],[11,"set_bit","","",14,[[["usize",15],["bool",15]]]],[11,"get","","",14,[[["usize",15],["u8",15]],["u64",15]]],[11,"set","","",14,[[["usize",15],["u64",15],["u8",15]]]],[11,"get_vector","","",14,[[]]],[11,"set_vector","","",14,[[]]],[11,"get_delivery_mode","","",14,[[]]],[11,"set_delivery_mode","","",14,[[]]],[11,"get_reserved","","",14,[[]]],[11,"set_reserved","","",14,[[]]],[11,"get_level","","",14,[[]]],[11,"set_level","","",14,[[]]],[11,"get_trigger","","",14,[[]]],[11,"set_trigger","","",14,[[]]],[11,"get_reserved2","","",14,[[]]],[11,"set_reserved2","","",14,[[]]],[4,"DeliveryStatus","","",null,null],[13,"Idle","","",15,null],[13,"Pending","","",15,null],[4,"Level","","The level of a level-triggered interrupt: asserted or …",null,null],[13,"Deassert","","",16,null],[13,"Assert","","",16,null],[3,"IoapicRedirectionTableEntry","","Represents a IOAPIC redirection table entry.",null,null],[11,"new","","",17,[[],["ioapicredirectiontableentry",3]]],[11,"get_bit","","",17,[[["usize",15]],["bool",15]]],[11,"set_bit","","",17,[[["usize",15],["bool",15]]]],[11,"get","","",17,[[["usize",15],["u8",15]],["u64",15]]],[11,"set","","",17,[[["usize",15],["u64",15],["u8",15]]]],[11,"get_vector","","",17,[[]]],[11,"set_vector","","",17,[[]]],[11,"get_delivery_mode","","",17,[[]]],[11,"set_delivery_mode","","",17,[[]]],[11,"get_dest_mode","","",17,[[]]],[11,"set_dest_mode","","",17,[[]]],[11,"get_delivery_status","","",17,[[]]],[11,"set_delivery_status","","",17,[[]]],[11,"get_polarity","","",17,[[]]],[11,"set_polarity","","",17,[[]]],[11,"get_remote_irr","","",17,[[]]],[11,"set_remote_irr","","",17,[[]]],[11,"get_trigger_mode","","",17,[[]]],[11,"set_trigger_mode","","",17,[[]]],[11,"get_interrupt_mask","","",17,[[]]],[11,"set_interrupt_mask","","",17,[[]]],[11,"get_reserved","","",17,[[]]],[11,"set_reserved","","",17,[[]]],[11,"get_dest_id","","",17,[[]]],[11,"set_dest_id","","",17,[[]]],[17,"NUM_IOAPIC_PINS","","Number of pins on the standard KVM/IOAPIC.",null,null],[17,"MAX_IOAPIC_PINS","","Maximum number of pins on the IOAPIC.",null,null],[3,"IoapicState","","Represents the state of the IOAPIC.",null,null],[12,"base_address","","base_address is the memory base address for this IOAPIC. …",18,null],[12,"ioregsel","","ioregsel register. Used for selecting which entry of the …",18,null],[12,"ioapicid","","ioapicid register. Bits 24 - 27 contain the APIC ID for …",18,null],[12,"current_interrupt_level_bitmap","","current_interrupt_level_bitmap represents a bitmap of the …",18,null],[12,"redirect_table","","redirect_table contains the irq settings for each irq line",18,null],[4,"PicSelect","","",null,null],[13,"Primary","","",19,null],[13,"Secondary","","",19,null],[4,"PicInitState","","",null,null],[13,"Icw1","","",20,null],[13,"Icw2","","",20,null],[13,"Icw3","","",20,null],[13,"Icw4","","",20,null],[11,"n","","",20,[[["i64",15],["into",8]],["option",4]]],[3,"PicState","","Represents the state of the PIC.",null,null],[12,"last_irr","","Edge detection.",21,null],[12,"irr","","Interrupt Request Register.",21,null],[12,"imr","","Interrupt Mask Register.",21,null],[12,"isr","","Interrupt Service Register.",21,null],[12,"priority_add","","Highest priority, for priority rotation.",21,null],[12,"irq_base","","",21,null],[12,"read_reg_select","","",21,null],[12,"poll","","",21,null],[12,"special_mask","","",21,null],[12,"init_state","","",21,null],[12,"auto_eoi","","",21,null],[12,"rotate_on_auto_eoi","","",21,null],[12,"special_fully_nested_mode","","",21,null],[12,"use_4_byte_icw","","PIC takes either 3 or 4 bytes of initialization command …",21,null],[12,"elcr","","\\\"Edge/Level Control Registers\\\", for edge trigger …",21,null],[12,"elcr_mask","","",21,null],[3,"LapicState","","The LapicState represents the state of an x86 CPU\'s Local …",null,null],[12,"regs","","",22,null],[6,"LapicRegister","","",null,null],[3,"PitState","","The PitState represents the state of the PIT (aka the …",null,null],[12,"channels","","",23,null],[12,"flags","","Hypervisor-specific flags for setting the pit state.",23,null],[4,"PitRWMode","","The PitRWMode enum represents the access mode of a PIT …",null,null],[13,"None","","None mode means that no access mode has been set.",24,null],[13,"Least","","Least mode means all reads/writes will read/write the …",24,null],[13,"Most","","Most mode means all reads/writes will read/write the most …",24,null],[13,"Both","","Both mode means first the least significant byte will be …",24,null],[11,"n","","",24,[[["i64",15],["into",8]],["option",4]]],[4,"PitRWState","","The PitRWState enum represents the state of reading to or …",null,null],[13,"None","","None mode means that no access mode has been set.",25,null],[13,"LSB","","LSB means that the channel is in PitRWMode::Least access …",25,null],[13,"MSB","","MSB means that the channel is in PitRWMode::Most access …",25,null],[13,"Word0","","Word0 means that the channel is in PitRWMode::Both mode, …",25,null],[13,"Word1","","Word1 means that the channel is in PitRWMode::Both mode …",25,null],[11,"n","","",25,[[["i64",15],["into",8]],["option",4]]],[3,"PitChannelState","","The PitChannelState represents the state of one of the …",null,null],[12,"count","","The starting value for the counter.",26,null],[12,"latched_count","","Stores the channel count from the last time the count was …",26,null],[12,"count_latched","","Indicates the PitRWState state of reading the latch value.",26,null],[12,"status_latched","","Indicates whether ReadBack status has been latched.",26,null],[12,"status","","Stores the channel status from the last time the status …",26,null],[12,"read_state","","Indicates the PitRWState state of reading the counter.",26,null],[12,"write_state","","Indicates the PitRWState state of writing the counter.",26,null],[12,"reload_value","","Stores the value with which the counter was initialized. …",26,null],[12,"rw_mode","","The command access mode of this channel.",26,null],[12,"mode","","The operation mode of this channel.",26,null],[12,"bcd","","Whether or not we are in bcd mode. Not supported by KVM …",26,null],[12,"gate","","Value of the gate input pin. This only applies to channel …",26,null],[12,"count_load_time","","Nanosecond timestamp of when the count value was loaded.",26,null],[3,"Regs","","State of a VCPU\'s general purpose registers.",null,null],[12,"rax","","",27,null],[12,"rbx","","",27,null],[12,"rcx","","",27,null],[12,"rdx","","",27,null],[12,"rsi","","",27,null],[12,"rdi","","",27,null],[12,"rsp","","",27,null],[12,"rbp","","",27,null],[12,"r8","","",27,null],[12,"r9","","",27,null],[12,"r10","","",27,null],[12,"r11","","",27,null],[12,"r12","","",27,null],[12,"r13","","",27,null],[12,"r14","","",27,null],[12,"r15","","",27,null],[12,"rip","","",27,null],[12,"rflags","","",27,null],[3,"Segment","","State of a memory segment.",null,null],[12,"base","","",28,null],[12,"limit","","",28,null],[12,"selector","","",28,null],[12,"type_","","",28,null],[12,"present","","",28,null],[12,"dpl","","",28,null],[12,"db","","",28,null],[12,"s","","",28,null],[12,"l","","",28,null],[12,"g","","",28,null],[12,"avl","","",28,null],[3,"DescriptorTable","","State of a global descriptor table or interrupt …",null,null],[12,"base","","",29,null],[12,"limit","","",29,null],[3,"Sregs","","State of a VCPU\'s special registers.",null,null],[12,"cs","","",30,null],[12,"ds","","",30,null],[12,"es","","",30,null],[12,"fs","","",30,null],[12,"gs","","",30,null],[12,"ss","","",30,null],[12,"tr","","",30,null],[12,"ldt","","",30,null],[12,"gdt","","",30,null],[12,"idt","","",30,null],[12,"cr0","","",30,null],[12,"cr2","","",30,null],[12,"cr3","","",30,null],[12,"cr4","","",30,null],[12,"cr8","","",30,null],[12,"efer","","",30,null],[12,"apic_base","","",30,null],[12,"interrupt_bitmap","","A bitmap of pending external interrupts.  At most one bit …",30,null],[3,"Fpu","","State of a VCPU\'s floating point unit.",null,null],[12,"fpr","","",31,null],[12,"fcw","","",31,null],[12,"fsw","","",31,null],[12,"ftwx","","",31,null],[12,"last_opcode","","",31,null],[12,"last_ip","","",31,null],[12,"last_dp","","",31,null],[12,"xmm","","",31,null],[12,"mxcsr","","",31,null],[3,"DebugRegs","","State of a VCPU\'s debug registers.",null,null],[12,"db","","",32,null],[12,"dr6","","",32,null],[12,"dr7","","",32,null],[3,"Register","","State of one VCPU register.  Currently used for MSRs and …",null,null],[12,"id","","",33,null],[12,"value","","",33,null],[6,"MemSlot","hypervisor","An index in the list of guest-mapped memory regions.",null,null],[8,"Hypervisor","","A trait for checking hypervisor capabilities.",null,null],[10,"try_clone","","Makes a shallow clone of this <code>Hypervisor</code>.",34,[[],["result",6]]],[10,"check_capability","","Checks if a particular <code>HypervisorCap</code> is available.",34,[[["hypervisorcap",4]],["bool",15]]],[8,"Vm","","A wrapper for using a VM and getting/setting its state.",null,null],[10,"try_clone","","Makes a shallow clone of this <code>Vm</code>.",35,[[],["result",6]]],[10,"check_capability","","Checks if a particular <code>VmCap</code> is available.",35,[[["vmcap",4]],["bool",15]]],[10,"get_memory","","Gets the guest-mapped memory for the Vm.",35,[[],["guestmemory",3]]],[10,"add_memory_region","","Inserts the given <code>MappedRegion</code> into the VM\'s address …",35,[[["mappedregion",8],["box",3],["bool",15],["guestaddress",3]],[["result",6],["memslot",6]]]],[10,"msync_memory_region","","Does a synchronous msync of the memory mapped at <code>slot</code>, …",35,[[["usize",15],["memslot",6]],["result",6]]],[10,"remove_memory_region","","Removes and drops the <code>UserMemoryRegion</code> that was …",35,[[["memslot",6]],[["box",3],["result",6]]]],[10,"create_device","","Creates an emulated device.",35,[[["devicekind",4]],[["result",6],["safedescriptor",3]]]],[10,"get_dirty_log","","Gets the bitmap of dirty pages since the last call to …",35,[[["memslot",6]],["result",6]]],[10,"register_ioevent","","Registers an event to be signaled whenever a certain …",35,[[["event",3],["datamatch",4],["ioeventaddress",4]],["result",6]]],[10,"unregister_ioevent","","Unregisters an event previously registered with …",35,[[["event",3],["datamatch",4],["ioeventaddress",4]],["result",6]]],[10,"handle_io_events","","Trigger any matching registered io events based on an …",35,[[["ioeventaddress",4]],["result",6]]],[10,"get_pvclock","","Retrieves the current timestamp of the paravirtual clock …",35,[[],[["result",6],["clockstate",3]]]],[10,"set_pvclock","","Sets the current timestamp of the paravirtual clock as …",35,[[["clockstate",3]],["result",6]]],[10,"add_fd_mapping","","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …",35,[[["u32",15],["usize",15],["asrawfd",8],["u64",15],["protection",3]],["result",6]]],[10,"remove_mapping","","Remove <code>size</code>-byte mapping starting at <code>offset</code>.",35,[[["u32",15],["usize",15]],["result",6]]],[3,"VcpuRunHandleFingerprint","","A unique fingerprint for a particular <code>VcpuRunHandle</code>, used …",null,null],[11,"as_u64","","",36,[[],["u64",15]]],[3,"VcpuRunHandle","","A handle returned by a <code>Vcpu</code> to be used with <code>Vcpu::run</code> to …",null,null],[11,"new","","Used by <code>Vcpu</code> impls to create a unique run handle, that …",37,[[]]],[11,"fingerprint","","Gets the unique fingerprint which may be copied and …",37,[[],["vcpurunhandlefingerprint",3]]],[8,"Vcpu","","A virtual CPU holding a virtualized hardware thread\'s …",null,null],[10,"try_clone","","Makes a shallow clone of this <code>Vcpu</code>.",38,[[],["result",6]]],[10,"as_vcpu","","Casts this architecture specific trait object to the base …",38,[[],["vcpu",8]]],[10,"take_run_handle","","Returns a unique <code>VcpuRunHandle</code>. A <code>VcpuRunHandle</code> is …",38,[[["option",4],["c_int",6]],[["vcpurunhandle",3],["result",6]]]],[10,"run","","Runs the VCPU until it exits, returning the reason for …",38,[[["vcpurunhandle",3]],[["result",6],["vcpuexit",4]]]],[10,"id","","Returns the vcpu id.",38,[[],["usize",15]]],[10,"set_immediate_exit","","Sets the bit that requests an immediate exit.",38,[[["bool",15]]]],[10,"set_local_immediate_exit","","Sets/clears the bit for immediate exit for the vcpu on …",38,[[["bool",15]]]],[10,"set_local_immediate_exit_fn","","Returns a function pointer that invokes …",38,[[]]],[10,"set_data","","Sets the data received by a mmio read, ioport in, or …",38,[[],["result",6]]],[10,"pvclock_ctrl","","Signals to the hypervisor that this guest is being paused …",38,[[],["result",6]]],[10,"set_signal_mask","","Specifies set of signals that are blocked during …",38,[[],["result",6]]],[10,"enable_raw_capability","","Enables a hypervisor-specific extension on this Vcpu.  <code>cap</code>…",38,[[["u32",15]],["result",6]]],[11,"is","","Returns true if the trait object wraps an object of type …",38,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",38,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",38,[[["rc",3]],[["rc",3],["result",4],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",38,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",38,[[],["option",4]]],[11,"downcast_arc","","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …",38,[[["arc",3]],[["result",4],["arc",3],["arc",3]]]],[4,"IoEventAddress","","An address either in programmable I/O space or in memory …",null,null],[13,"Pio","","",39,null],[13,"Mmio","","",39,null],[4,"Datamatch","","Used in <code>Vm::register_ioevent</code> to indicate a size and …",null,null],[13,"AnyLength","","",40,null],[13,"U8","","",40,null],[13,"U16","","",40,null],[13,"U32","","",40,null],[13,"U64","","",40,null],[4,"VcpuExit","","A reason why a VCPU exited. One of these returns every …",null,null],[13,"IoOut","","An out port instruction was run on the given port with …",41,null],[12,"port","hypervisor::VcpuExit","",42,null],[12,"size","","",42,null],[12,"data","","",42,null],[13,"IoIn","hypervisor","An in port instruction was run on the given port.",41,null],[12,"port","hypervisor::VcpuExit","",43,null],[12,"size","","",43,null],[13,"MmioRead","hypervisor","A read instruction was run against the given MMIO address.",41,null],[12,"address","hypervisor::VcpuExit","",44,null],[12,"size","","",44,null],[13,"MmioWrite","hypervisor","A write instruction was run against the given MMIO …",41,null],[12,"address","hypervisor::VcpuExit","",45,null],[12,"size","","",45,null],[12,"data","","",45,null],[13,"IoapicEoi","hypervisor","",41,null],[12,"vector","hypervisor::VcpuExit","",46,null],[13,"HypervSynic","hypervisor","",41,null],[12,"msr","hypervisor::VcpuExit","",47,null],[12,"control","","",47,null],[12,"evt_page","","",47,null],[12,"msg_page","","",47,null],[13,"HypervHcall","hypervisor","",41,null],[12,"input","hypervisor::VcpuExit","",48,null],[12,"params","","",48,null],[13,"Unknown","hypervisor","",41,null],[13,"Exception","","",41,null],[13,"Hypercall","","",41,null],[13,"Debug","","",41,null],[13,"Hlt","","",41,null],[13,"IrqWindowOpen","","",41,null],[13,"Shutdown","","",41,null],[13,"FailEntry","","",41,null],[12,"hardware_entry_failure_reason","hypervisor::VcpuExit","",49,null],[13,"Intr","hypervisor","",41,null],[13,"SetTpr","","",41,null],[13,"TprAccess","","",41,null],[13,"S390Sieic","","",41,null],[13,"S390Reset","","",41,null],[13,"Dcr","","",41,null],[13,"Nmi","","",41,null],[13,"InternalError","","",41,null],[13,"Osi","","",41,null],[13,"PaprHcall","","",41,null],[13,"S390Ucontrol","","",41,null],[13,"Watchdog","","",41,null],[13,"S390Tsch","","",41,null],[13,"Epr","","",41,null],[13,"SystemEvent","","The cpu triggered a system level event which is specified …",41,null],[4,"DeviceKind","","A device type to create with <code>Vm.create_device</code>.",null,null],[13,"Vfio","","VFIO device for direct access to devices from userspace",50,null],[4,"IrqSourceChip","","The source chip of an <code>IrqSource</code>",null,null],[13,"PicPrimary","","",51,null],[13,"PicSecondary","","",51,null],[13,"Ioapic","","",51,null],[13,"Gic","","",51,null],[4,"IrqSource","","A source of IRQs in an <code>IrqRoute</code>.",null,null],[13,"Irqchip","","",52,null],[12,"chip","hypervisor::IrqSource","",53,null],[12,"pin","","",53,null],[13,"Msi","hypervisor","",52,null],[12,"address","hypervisor::IrqSource","",54,null],[12,"data","","",54,null],[3,"IrqRoute","hypervisor","A single route for an IRQ.",null,null],[12,"gsi","","",55,null],[12,"source","","",55,null],[3,"ClockState","","The state of the paravirtual clock.",null,null],[12,"clock","","Current pv clock timestamp, as seen by the guest",56,null],[12,"flags","","Hypervisor-specific feature flags for the pv clock",56,null],[4,"MPState","","The MPState represents the state of a processor.",null,null],[13,"Runnable","","the vcpu is currently running (x86/x86_64,arm/arm64)",57,null],[13,"Uninitialized","","the vcpu is an application processor (AP) which has not …",57,null],[13,"InitReceived","","the vcpu has received an INIT signal, and is now ready …",57,null],[13,"Halted","","the vcpu has executed a HLT instruction and is waiting …",57,null],[13,"SipiReceived","","the vcpu has just received a SIPI (vector accessible via …",57,null],[13,"Stopped","","the vcpu is stopped (arm/arm64)",57,null],[11,"from","hypervisor::caps","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","hypervisor::kvm","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"as_raw_descriptors","","",2,[[],[["vec",3],["global",3],["i32",15]]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"as_raw_descriptors","","",3,[[],[["vec",3],["global",3],["i32",15]]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"as_raw_descriptors","","",4,[[],[["vec",3],["global",3],["i32",15]]]],[11,"into_any","","",4,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","hypervisor::x86_64","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_any","","",17,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any","","",18,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any","","",19,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any","","",22,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_any","","",23,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_any","","",24,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any","","",26,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_any","","",27,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_any","","",28,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any","","",29,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_any","","",30,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_any","","",31,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_any","","",32,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_any","","",33,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","hypervisor","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_any","","",36,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_any","","",37,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_any","","",39,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"into_any_arc","","",39,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_any","","",40,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any_arc","","",40,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any","","",41,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_any","","",50,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any","","",51,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_any","","",52,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any_arc","","",52,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any","","",55,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any","","",56,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_any","","",57,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["arc",3],["any",8]]]],[11,"get_supported_cpuid","hypervisor::kvm","",2,[[],[["cpuid",3],["result",6]]]],[11,"get_emulated_cpuid","","",2,[[],[["cpuid",3],["result",6]]]],[11,"get_msr_index_list","","",2,[[],[["vec",3],["result",6]]]],[11,"get_hypervisor","","",3,[[],["hypervisorx86_64",8]]],[11,"create_vcpu","","",3,[[["usize",15]],[["box",3],["result",6]]]],[11,"set_tss_addr","","Sets the address of the three-page region in the VM\'s …",3,[[["guestaddress",3]],["result",6]]],[11,"set_identity_map_addr","","Sets the address of a one-page region in the VM\'s address …",3,[[["guestaddress",3]],["result",6]]],[11,"set_interrupt_window_requested","","",4,[[["bool",15]]]],[11,"ready_for_interrupt","","",4,[[],["bool",15]]],[11,"interrupt","","Use the KVM_INTERRUPT ioctl to inject the specified …",4,[[["u32",15]],["result",6]]],[11,"inject_nmi","","",4,[[],["result",6]]],[11,"get_regs","","",4,[[],[["result",6],["regs",3]]]],[11,"set_regs","","",4,[[["regs",3]],["result",6]]],[11,"get_sregs","","",4,[[],[["result",6],["sregs",3]]]],[11,"set_sregs","","",4,[[["sregs",3]],["result",6]]],[11,"get_fpu","","",4,[[],[["result",6],["fpu",3]]]],[11,"set_fpu","","",4,[[["fpu",3]],["result",6]]],[11,"get_debugregs","","",4,[[],[["debugregs",3],["result",6]]]],[11,"set_debugregs","","",4,[[["debugregs",3]],["result",6]]],[11,"get_xcrs","","",4,[[],[["result",6],["vec",3]]]],[11,"set_xcrs","","",4,[[],["result",6]]],[11,"get_msrs","","",4,[[["vec",3]],["result",6]]],[11,"set_msrs","","",4,[[],["result",6]]],[11,"set_cpuid","","",4,[[["cpuid",3]],["result",6]]],[11,"get_hyperv_cpuid","","",4,[[],[["cpuid",3],["result",6]]]],[11,"set_guest_debug","","",4,[[["bool",15]],["result",6]]],[11,"try_clone","","",2,[[],["result",6]]],[11,"check_capability","","",2,[[["hypervisorcap",4]],["bool",15]]],[11,"try_clone","","",3,[[],["result",6]]],[11,"check_capability","","",3,[[["vmcap",4]],["bool",15]]],[11,"get_memory","","",3,[[],["guestmemory",3]]],[11,"add_memory_region","","",3,[[["mappedregion",8],["box",3],["bool",15],["guestaddress",3]],[["result",6],["memslot",6]]]],[11,"msync_memory_region","","",3,[[["usize",15],["memslot",6]],["result",6]]],[11,"remove_memory_region","","",3,[[["memslot",6]],[["box",3],["result",6]]]],[11,"create_device","","",3,[[["devicekind",4]],[["result",6],["safedescriptor",3]]]],[11,"get_dirty_log","","",3,[[["memslot",6]],["result",6]]],[11,"register_ioevent","","",3,[[["event",3],["datamatch",4],["ioeventaddress",4]],["result",6]]],[11,"unregister_ioevent","","",3,[[["event",3],["datamatch",4],["ioeventaddress",4]],["result",6]]],[11,"handle_io_events","","",3,[[["ioeventaddress",4]],["result",6]]],[11,"get_pvclock","","",3,[[],[["result",6],["clockstate",3]]]],[11,"set_pvclock","","",3,[[["clockstate",3]],["result",6]]],[11,"add_fd_mapping","","",3,[[["u32",15],["usize",15],["asrawfd",8],["u64",15],["protection",3]],["result",6]]],[11,"remove_mapping","","",3,[[["u32",15],["usize",15]],["result",6]]],[11,"try_clone","","",4,[[],["result",6]]],[11,"as_vcpu","","",4,[[],["vcpu",8]]],[11,"take_run_handle","","",4,[[["option",4],["c_int",6]],[["vcpurunhandle",3],["result",6]]]],[11,"id","","",4,[[],["usize",15]]],[11,"set_immediate_exit","","",4,[[["bool",15]]]],[11,"set_local_immediate_exit","","",4,[[["bool",15]]]],[11,"set_local_immediate_exit_fn","","",4,[[]]],[11,"set_data","","",4,[[],["result",6]]],[11,"pvclock_ctrl","","",4,[[],["result",6]]],[11,"set_signal_mask","","",4,[[],["result",6]]],[11,"enable_raw_capability","","",4,[[["u32",15]],["result",6]]],[11,"run","","",4,[[["vcpurunhandle",3]],[["result",6],["vcpuexit",4]]]],[11,"drop","hypervisor","",37,[[]]],[11,"from","hypervisor::x86_64","",9,[[["cpuid",6]],["cpuid",3]]],[11,"from","hypervisor","",56,[[["kvm_clock_data",3]]]],[11,"from","hypervisor::x86_64","",21,[[["kvm_pic_state",3]]]],[11,"from","","",18,[[["kvm_ioapic_state",3]]]],[11,"from","","",17,[[["kvm_ioapic_state__bindgen_ty_1",19]]]],[11,"from","","",22,[[["kvm_lapic_state",3]]]],[11,"from","","",23,[[["kvm_pit_state2",3]]]],[11,"from","","",26,[[["kvm_pit_channel_state",3]]]],[11,"from","","",27,[[["kvm_regs",3]]]],[11,"from","","",28,[[["kvm_segment",3]]]],[11,"from","","",29,[[["kvm_dtable",3]]]],[11,"from","","",30,[[["kvm_sregs",3]]]],[11,"from","","",31,[[["kvm_fpu",3]]]],[11,"from","","",32,[[["kvm_debugregs",3]]]],[11,"from","hypervisor","",57,[[["kvm_mp_state",3]]]],[11,"from","hypervisor::x86_64","",20,[[["u8",15]]]],[11,"from","","",24,[[["u8",15]]]],[11,"from","","",25,[[["u8",15]]]],[11,"clone","hypervisor::caps","",1,[[],["vmcap",4]]],[11,"clone","hypervisor::x86_64","",8,[[],["cpuidentry",3]]],[11,"clone","","",10,[[],["destinationmode",4]]],[11,"clone","","",11,[[],["triggermode",4]]],[11,"clone","","",12,[[],["deliverymode",4]]],[11,"clone","","",13,[[],["msiaddressmessage",3]]],[11,"clone","","",14,[[],["msidatamessage",3]]],[11,"clone","","",15,[[],["deliverystatus",4]]],[11,"clone","","",16,[[],["level",4]]],[11,"clone","","",17,[[],["ioapicredirectiontableentry",3]]],[11,"clone","","",18,[[],["ioapicstate",3]]],[11,"clone","","",19,[[],["picselect",4]]],[11,"clone","","",20,[[],["picinitstate",4]]],[11,"clone","","",21,[[],["picstate",3]]],[11,"clone","","",22,[[],["lapicstate",3]]],[11,"clone","","",23,[[],["pitstate",3]]],[11,"clone","","",24,[[],["pitrwmode",4]]],[11,"clone","","",25,[[],["pitrwstate",4]]],[11,"clone","","",26,[[],["pitchannelstate",3]]],[11,"clone","","",27,[[],["regs",3]]],[11,"clone","","",28,[[],["segment",3]]],[11,"clone","","",29,[[],["descriptortable",3]]],[11,"clone","","",30,[[],["sregs",3]]],[11,"clone","","",31,[[],["fpu",3]]],[11,"clone","","",32,[[],["debugregs",3]]],[11,"clone","","",33,[[],["register",3]]],[11,"clone","hypervisor","",36,[[],["vcpurunhandlefingerprint",3]]],[11,"clone","","",39,[[],["ioeventaddress",4]]],[11,"clone","","",50,[[],["devicekind",4]]],[11,"clone","","",51,[[],["irqsourcechip",4]]],[11,"clone","","",52,[[],["irqsource",4]]],[11,"clone","","",55,[[],["irqroute",3]]],[11,"clone","","",56,[[],["clockstate",3]]],[11,"clone","","",57,[[],["mpstate",4]]],[11,"default","hypervisor::x86_64","",8,[[],["cpuidentry",3]]],[11,"default","","",17,[[],["ioapicredirectiontableentry",3]]],[11,"default","","",18,[[],["ioapicstate",3]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[],["picstate",3]]],[11,"default","","",27,[[],["regs",3]]],[11,"default","","",28,[[],["segment",3]]],[11,"default","","",29,[[],["descriptortable",3]]],[11,"default","","",30,[[],["sregs",3]]],[11,"default","","",31,[[],["fpu",3]]],[11,"default","","",32,[[],["debugregs",3]]],[11,"default","","",33,[[],["register",3]]],[11,"default","hypervisor","",56,[[],["clockstate",3]]],[11,"eq","hypervisor::caps","",1,[[["vmcap",4]],["bool",15]]],[11,"eq","hypervisor::x86_64","",8,[[["cpuidentry",3]],["bool",15]]],[11,"ne","","",8,[[["cpuidentry",3]],["bool",15]]],[11,"eq","","",10,[[["destinationmode",4]],["bool",15]]],[11,"eq","","",11,[[["triggermode",4]],["bool",15]]],[11,"eq","","",12,[[["deliverymode",4]],["bool",15]]],[11,"eq","","",13,[[["msiaddressmessage",3]],["bool",15]]],[11,"ne","","",13,[[["msiaddressmessage",3]],["bool",15]]],[11,"eq","","",14,[[["msidatamessage",3]],["bool",15]]],[11,"ne","","",14,[[["msidatamessage",3]],["bool",15]]],[11,"eq","","",15,[[["deliverystatus",4]],["bool",15]]],[11,"eq","","",16,[[["level",4]],["bool",15]]],[11,"eq","","",17,[[["ioapicredirectiontableentry",3]],["bool",15]]],[11,"ne","","",17,[[["ioapicredirectiontableentry",3]],["bool",15]]],[11,"eq","","",18,[[["ioapicstate",3]],["bool",15]]],[11,"ne","","",18,[[["ioapicstate",3]],["bool",15]]],[11,"eq","","",19,[[["picselect",4]],["bool",15]]],[11,"eq","","",20,[[["picinitstate",4]],["bool",15]]],[11,"eq","","",21,[[["picstate",3]],["bool",15]]],[11,"ne","","",21,[[["picstate",3]],["bool",15]]],[11,"eq","","",22,[[["lapicstate",3]],["bool",15]]],[11,"eq","","",23,[[["pitstate",3]],["bool",15]]],[11,"ne","","",23,[[["pitstate",3]],["bool",15]]],[11,"eq","","",24,[[["pitrwmode",4]],["bool",15]]],[11,"eq","","",25,[[["pitrwstate",4]],["bool",15]]],[11,"eq","","",26,[[["pitchannelstate",3]],["bool",15]]],[11,"ne","","",26,[[["pitchannelstate",3]],["bool",15]]],[11,"eq","hypervisor","",36,[[["vcpurunhandlefingerprint",3]],["bool",15]]],[11,"ne","","",36,[[["vcpurunhandlefingerprint",3]],["bool",15]]],[11,"eq","","",39,[[["ioeventaddress",4]],["bool",15]]],[11,"ne","","",39,[[["ioeventaddress",4]],["bool",15]]],[11,"eq","","",40,[[["datamatch",4]],["bool",15]]],[11,"ne","","",40,[[["datamatch",4]],["bool",15]]],[11,"eq","","",50,[[["devicekind",4]],["bool",15]]],[11,"eq","","",51,[[["irqsourcechip",4]],["bool",15]]],[11,"eq","","",52,[[["irqsource",4]],["bool",15]]],[11,"ne","","",52,[[["irqsource",4]],["bool",15]]],[11,"eq","","",55,[[["irqroute",3]],["bool",15]]],[11,"ne","","",55,[[["irqroute",3]],["bool",15]]],[11,"eq","","",57,[[["mpstate",4]],["bool",15]]],[11,"fmt","hypervisor::caps","",1,[[["formatter",3]],["result",6]]],[11,"fmt","hypervisor::x86_64","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","hypervisor","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"hash","","",39,[[]]],[11,"as_raw_descriptor","hypervisor::kvm","",2,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",3,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",4,[[],["rawdescriptor",6]]],[11,"deserialize","hypervisor::x86_64","",33,[[],["result",4]]],[11,"deserialize","hypervisor","",39,[[],["result",4]]],[11,"serialize","hypervisor::x86_64","",33,[[],["result",4]]],[11,"serialize","hypervisor","",39,[[],["result",4]]],[11,"from_u64","hypervisor::x86_64","",10,[[["u64",15]]]],[11,"into_u64","","",10,[[],["u64",15]]],[11,"from_u64","","",11,[[["u64",15]]]],[11,"into_u64","","",11,[[],["u64",15]]],[11,"from_u64","","",12,[[["u64",15]]]],[11,"into_u64","","",12,[[],["u64",15]]],[11,"from_u64","","",15,[[["u64",15]]]],[11,"into_u64","","",15,[[],["u64",15]]],[11,"from_u64","","",16,[[["u64",15]]]],[11,"into_u64","","",16,[[],["u64",15]]],[11,"get_cpuid","hypervisor::kvm","",2,[[["ioctlnr",6]],[["cpuid",3],["result",6]]]],[11,"check_capability_arch","","Checks if a particular <code>VmCap</code> is available, or returns …",3,[[["vmcap",4]],[["bool",15],["option",4]]]],[11,"get_device_params_arch","","Returns the params to pass to KVM_CREATE_DEVICE for a <code>kind</code>…",3,[[["devicekind",4]],[["kvm_create_device",3],["option",4]]]],[11,"get_pvclock_arch","","Arch-specific implementation of <code>Vm::get_pvclock</code>.",3,[[],[["result",6],["clockstate",3]]]],[11,"set_pvclock_arch","","Arch-specific implementation of <code>Vm::set_pvclock</code>.",3,[[["clockstate",3]],["result",6]]],[11,"get_pic_state","","Retrieves the state of given interrupt controller by …",3,[[["picselect",4]],[["result",6],["kvm_pic_state",3]]]],[11,"set_pic_state","","Sets the state of given interrupt controller by issuing …",3,[[["picselect",4],["kvm_pic_state",3]],["result",6]]],[11,"get_ioapic_num_pins","","Retrieves the KVM_IOAPIC_NUM_PINS value for emulated …",3,[[],[["result",6],["usize",15]]]],[11,"get_ioapic_state","","Retrieves the state of IOAPIC by issuing KVM_GET_IRQCHIP …",3,[[],[["kvm_ioapic_state",3],["result",6]]]],[11,"set_ioapic_state","","Sets the state of IOAPIC by issuing KVM_SET_IRQCHIP ioctl.",3,[[["kvm_ioapic_state",3]],["result",6]]],[11,"create_pit","","Creates a PIT as per the KVM_CREATE_PIT2 ioctl.",3,[[],["result",6]]],[11,"get_pit_state","","Retrieves the state of PIT by issuing KVM_GET_PIT2 ioctl.",3,[[],[["result",6],["kvm_pit_state2",3]]]],[11,"set_pit_state","","Sets the state of PIT by issuing KVM_SET_PIT2 ioctl.",3,[[["kvm_pit_state2",3]],["result",6]]],[11,"enable_split_irqchip","","Enable support for split-irqchip.",3,[[["usize",15]],["result",6]]],[11,"pvclock_ctrl_arch","","Arch-specific implementation of <code>Vcpu::pvclock_ctrl</code>.",4,[[],["result",6]]],[11,"get_lapic","","X86 specific call to get the state of the \\\"Local Advanced …",4,[[],[["kvm_lapic_state",3],["result",6]]]],[11,"set_lapic","","X86 specific call to set the state of the \\\"Local Advanced …",4,[[["kvm_lapic_state",3]],["result",6]]],[11,"ioapic_irq_route","hypervisor","",55,[[["u32",15]],["irqroute",3]]],[11,"pic_irq_route","","",55,[[["irqsourcechip",4],["u32",15]],["irqroute",3]]]],"p":[[4,"HypervisorCap"],[4,"VmCap"],[3,"Kvm"],[3,"KvmVm"],[3,"KvmVcpu"],[8,"HypervisorX86_64"],[8,"VmX86_64"],[8,"VcpuX86_64"],[3,"CpuIdEntry"],[3,"CpuId"],[4,"DestinationMode"],[4,"TriggerMode"],[4,"DeliveryMode"],[3,"MsiAddressMessage"],[3,"MsiDataMessage"],[4,"DeliveryStatus"],[4,"Level"],[3,"IoapicRedirectionTableEntry"],[3,"IoapicState"],[4,"PicSelect"],[4,"PicInitState"],[3,"PicState"],[3,"LapicState"],[3,"PitState"],[4,"PitRWMode"],[4,"PitRWState"],[3,"PitChannelState"],[3,"Regs"],[3,"Segment"],[3,"DescriptorTable"],[3,"Sregs"],[3,"Fpu"],[3,"DebugRegs"],[3,"Register"],[8,"Hypervisor"],[8,"Vm"],[3,"VcpuRunHandleFingerprint"],[3,"VcpuRunHandle"],[8,"Vcpu"],[4,"IoEventAddress"],[4,"Datamatch"],[4,"VcpuExit"],[13,"IoOut"],[13,"IoIn"],[13,"MmioRead"],[13,"MmioWrite"],[13,"IoapicEoi"],[13,"HypervSynic"],[13,"HypervHcall"],[13,"FailEntry"],[4,"DeviceKind"],[4,"IrqSourceChip"],[4,"IrqSource"],[13,"Irqchip"],[13,"Msi"],[3,"IrqRoute"],[3,"ClockState"],[4,"MPState"]]},\
"intrusive_collections":{"doc":"Intrusive collections for Rust.","i":[[0,"linked_list","intrusive_collections","Intrusive doubly-linked list.",null,null],[8,"LinkedListOps","intrusive_collections::linked_list","Link operations for <code>LinkedList</code>.",null,null],[10,"next","","Returns the \\\"next\\\" link pointer of <code>ptr</code>.",0,[[],["option",4]]],[10,"prev","","Returns the \\\"prev\\\" link pointer of <code>ptr</code>.",0,[[],["option",4]]],[10,"set_next","","Sets the \\\"next\\\" link pointer of <code>ptr</code>.",0,[[["option",4]]]],[10,"set_prev","","Sets the \\\"prev\\\" link pointer of <code>ptr</code>.",0,[[["option",4]]]],[3,"Link","","Intrusive link that allows an object to be inserted into a…",null,null],[11,"new","","Creates a new <code>Link</code>.",1,[[],["link",3]]],[11,"is_linked","","Checks whether the <code>Link</code> is linked into a <code>LinkedList</code>.",1,[[],["bool",15]]],[11,"force_unlink","","Forcibly unlinks an object from a <code>LinkedList</code>.",1,[[]]],[3,"LinkOps","","Default <code>LinkOps</code> implementation for <code>LinkedList</code>.",null,null],[3,"Cursor","","A cursor which provides read-only access to a <code>LinkedList</code>.",null,null],[11,"is_null","","Checks if the cursor is currently pointing to the null …",2,[[],["bool",15]]],[11,"get","","Returns a reference to the object that the cursor is …",2,[[],["option",4]]],[11,"clone_pointer","","Clones and returns the pointer that points to the element …",2,[[],["option",4]]],[11,"move_next","","Moves the cursor to the next element of the <code>LinkedList</code>.",2,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the <code>LinkedList</code>…",2,[[]]],[11,"peek_next","","Returns a cursor pointing to the next element of the …",2,[[],["cursor",3]]],[11,"peek_prev","","Returns a cursor pointing to the previous element of the …",2,[[],["cursor",3]]],[3,"CursorMut","","A cursor which provides mutable access to a <code>LinkedList</code>.",null,null],[11,"is_null","","Checks if the cursor is currently pointing to the null …",3,[[],["bool",15]]],[11,"get","","Returns a reference to the object that the cursor is …",3,[[],["option",4]]],[11,"as_cursor","","Returns a read-only cursor pointing to the current …",3,[[],["cursor",3]]],[11,"move_next","","Moves the cursor to the next element of the <code>LinkedList</code>.",3,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the <code>LinkedList</code>…",3,[[]]],[11,"peek_next","","Returns a cursor pointing to the next element of the …",3,[[],["cursor",3]]],[11,"peek_prev","","Returns a cursor pointing to the previous element of the …",3,[[],["cursor",3]]],[11,"remove","","Removes the current element from the <code>LinkedList</code>.",3,[[],["option",4]]],[11,"replace_with","","Removes the current element from the <code>LinkedList</code> and …",3,[[],["result",4]]],[11,"insert_after","","Inserts a new element into the <code>LinkedList</code> after the …",3,[[]]],[11,"insert_before","","Inserts a new element into the <code>LinkedList</code> before the …",3,[[]]],[11,"splice_after","","Inserts the elements from the given <code>LinkedList</code> after the …",3,[[["linkedlist",3]]]],[11,"splice_before","","Moves all element from the given <code>LinkedList</code> before the …",3,[[["linkedlist",3]]]],[11,"split_after","","Splits the list into two after the current element. This …",3,[[],["linkedlist",3]]],[11,"split_before","","Splits the list into two before the current element. This …",3,[[],["linkedlist",3]]],[3,"LinkedList","","An intrusive doubly-linked list.",null,null],[11,"new","","Creates an empty <code>LinkedList</code>.",4,[[],["linkedlist",3]]],[11,"is_empty","","Returns <code>true</code> if the <code>LinkedList</code> is empty.",4,[[],["bool",15]]],[11,"cursor","","Returns a null <code>Cursor</code> for this list.",4,[[],["cursor",3]]],[11,"cursor_mut","","Returns a null <code>CursorMut</code> for this list.",4,[[],["cursormut",3]]],[11,"cursor_from_ptr","","Creates a <code>Cursor</code> from a pointer to an element.",4,[[],["cursor",3]]],[11,"cursor_mut_from_ptr","","Creates a <code>CursorMut</code> from a pointer to an element.",4,[[],["cursormut",3]]],[11,"front","","Returns a <code>Cursor</code> pointing to the first element of the …",4,[[],["cursor",3]]],[11,"front_mut","","Returns a <code>CursorMut</code> pointing to the first element of the …",4,[[],["cursormut",3]]],[11,"back","","Returns a <code>Cursor</code> pointing to the last element of the …",4,[[],["cursor",3]]],[11,"back_mut","","Returns a <code>CursorMut</code> pointing to the last element of the …",4,[[],["cursormut",3]]],[11,"iter","","Gets an iterator over the objects in the <code>LinkedList</code>.",4,[[],["iter",3]]],[11,"clear","","Removes all elements from the <code>LinkedList</code>.",4,[[]]],[11,"fast_clear","","Empties the <code>LinkedList</code> without unlinking or freeing …",4,[[]]],[11,"take","","Takes all the elements out of the <code>LinkedList</code>, leaving it …",4,[[],["linkedlist",3]]],[11,"push_front","","Inserts a new element at the start of the <code>LinkedList</code>.",4,[[]]],[11,"push_back","","Inserts a new element at the end of the <code>LinkedList</code>.",4,[[]]],[11,"pop_front","","Removes the first element of the <code>LinkedList</code>.",4,[[],["option",4]]],[11,"pop_back","","Removes the last element of the <code>LinkedList</code>.",4,[[],["option",4]]],[3,"Iter","","An iterator over references to the items of a <code>LinkedList</code>.",null,null],[3,"IntoIter","","An iterator which consumes a <code>LinkedList</code>.",null,null],[0,"rbtree","intrusive_collections","Intrusive red-black tree.",null,null],[4,"Color","intrusive_collections::rbtree","The color of a red-black tree node.",null,null],[13,"Red","","",5,null],[13,"Black","","",5,null],[8,"RBTreeOps","","Link operations for <code>RBTree</code>.",null,null],[10,"left","","Returns the left child of <code>ptr</code>.",6,[[],["option",4]]],[10,"right","","Returns the right child of <code>ptr</code>.",6,[[],["option",4]]],[10,"parent","","Returns the parent of <code>ptr</code>.",6,[[],["option",4]]],[10,"color","","Returns the color of <code>ptr</code>.",6,[[],["color",4]]],[10,"set_left","","Sets the left child of <code>ptr</code>.",6,[[["option",4]]]],[10,"set_right","","Sets the right child of <code>ptr</code>.",6,[[["option",4]]]],[10,"set_parent","","Sets the parent of <code>ptr</code>.",6,[[["option",4]]]],[10,"set_color","","Sets the color of <code>ptr</code>.",6,[[["color",4]]]],[3,"Link","","Intrusive link that allows an object to be inserted into a…",null,null],[11,"new","","Creates a new <code>Link</code>.",7,[[],["link",3]]],[11,"is_linked","","Checks whether the <code>Link</code> is linked into a <code>RBTree</code>.",7,[[],["bool",15]]],[11,"force_unlink","","Forcibly unlinks an object from a <code>RBTree</code>.",7,[[]]],[3,"LinkOps","","Default <code>LinkOps</code> implementation for <code>RBTree</code>.",null,null],[3,"Cursor","","A cursor which provides read-only access to a <code>RBTree</code>.",null,null],[11,"is_null","","Checks if the cursor is currently pointing to the null …",8,[[],["bool",15]]],[11,"get","","Returns a reference to the object that the cursor is …",8,[[],["option",4]]],[11,"clone_pointer","","Clones and returns the pointer that points to the element …",8,[[],["option",4]]],[11,"move_next","","Moves the cursor to the next element of the <code>RBTree</code>.",8,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the <code>RBTree</code>.",8,[[]]],[11,"peek_next","","Returns a cursor pointing to the next element of the …",8,[[],["cursor",3]]],[11,"peek_prev","","Returns a cursor pointing to the previous element of the …",8,[[],["cursor",3]]],[3,"CursorMut","","A cursor which provides mutable access to a <code>RBTree</code>.",null,null],[11,"is_null","","Checks if the cursor is currently pointing to the null …",9,[[],["bool",15]]],[11,"get","","Returns a reference to the object that the cursor is …",9,[[],["option",4]]],[11,"as_cursor","","Returns a read-only cursor pointing to the current …",9,[[],["cursor",3]]],[11,"move_next","","Moves the cursor to the next element of the <code>RBTree</code>.",9,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the <code>RBTree</code>.",9,[[]]],[11,"peek_next","","Returns a cursor pointing to the next element of the …",9,[[],["cursor",3]]],[11,"peek_prev","","Returns a cursor pointing to the previous element of the …",9,[[],["cursor",3]]],[11,"remove","","Removes the current element from the <code>RBTree</code>.",9,[[],["option",4]]],[11,"replace_with","","Removes the current element from the <code>RBTree</code> and inserts …",9,[[],["result",4]]],[11,"insert_after","","Inserts a new element into the <code>RBTree</code> after the current …",9,[[]]],[11,"insert_before","","Inserts a new element into the <code>RBTree</code> before the current …",9,[[]]],[11,"insert","","Inserts a new element into the <code>RBTree</code>.",9,[[]]],[3,"RBTree","","An intrusive red-black tree.",null,null],[11,"new","","Creates an empty <code>RBTree</code>.",10,[[],["rbtree",3]]],[11,"is_empty","","Returns <code>true</code> if the <code>RBTree</code> is empty.",10,[[],["bool",15]]],[11,"cursor","","Returns a null <code>Cursor</code> for this tree.",10,[[],["cursor",3]]],[11,"cursor_mut","","Returns a null <code>CursorMut</code> for this tree.",10,[[],["cursormut",3]]],[11,"cursor_from_ptr","","Creates a <code>Cursor</code> from a pointer to an element.",10,[[],["cursor",3]]],[11,"cursor_mut_from_ptr","","Creates a <code>CursorMut</code> from a pointer to an element.",10,[[],["cursormut",3]]],[11,"front","","Returns a <code>Cursor</code> pointing to the first element of the …",10,[[],["cursor",3]]],[11,"front_mut","","Returns a <code>CursorMut</code> pointing to the first element of the …",10,[[],["cursormut",3]]],[11,"back","","Returns a <code>Cursor</code> pointing to the last element of the …",10,[[],["cursor",3]]],[11,"back_mut","","Returns a <code>CursorMut</code> pointing to the last element of the …",10,[[],["cursormut",3]]],[11,"iter","","Gets an iterator over the objects in the <code>RBTree</code>.",10,[[],["iter",3]]],[11,"clear","","Removes all elements from the <code>RBTree</code>.",10,[[]]],[11,"fast_clear","","Empties the <code>RBTree</code> without unlinking or freeing objects …",10,[[]]],[11,"take","","Takes all the elements out of the <code>RBTree</code>, leaving it …",10,[[],["rbtree",3]]],[11,"find","","Returns a <code>Cursor</code> pointing to an element with the given …",10,[[],["cursor",3]]],[11,"find_mut","","Returns a <code>CursorMut</code> pointing to an element with the given …",10,[[],["cursormut",3]]],[11,"lower_bound","","Returns a <code>Cursor</code> pointing to the lowest element whose key …",10,[[["bound",4]],["cursor",3]]],[11,"lower_bound_mut","","Returns a <code>CursorMut</code> pointing to the first element whose …",10,[[["bound",4]],["cursormut",3]]],[11,"upper_bound","","Returns a <code>Cursor</code> pointing to the last element whose key …",10,[[["bound",4]],["cursor",3]]],[11,"upper_bound_mut","","Returns a <code>CursorMut</code> pointing to the last element whose …",10,[[["bound",4]],["cursormut",3]]],[11,"insert","","Inserts a new element into the <code>RBTree</code>.",10,[[],["cursormut",3]]],[11,"entry","","Returns an <code>Entry</code> for the given key which contains a …",10,[[],["entry",4]]],[11,"range","","Constructs a double-ended iterator over a sub-range of …",10,[[["bound",4],["bound",4]],["iter",3]]],[3,"InsertCursor","","A cursor pointing to a slot in which an element can be …",null,null],[11,"insert","","Inserts a new element into the <code>RBTree</code> at the location …",11,[[],["cursormut",3]]],[4,"Entry","","An entry in a <code>RBTree</code>.",null,null],[13,"Occupied","","An occupied entry.",12,null],[13,"Vacant","","A vacant entry.",12,null],[11,"or_insert","","Inserts an element into the <code>RBTree</code> if the entry is …",12,[[],["cursormut",3]]],[11,"or_insert_with","","Calls the given function and inserts the result into the …",12,[[],["cursormut",3]]],[3,"Iter","","An iterator over references to the items of a <code>RBTree</code>.",null,null],[3,"IntoIter","","An iterator which consumes a <code>RBTree</code>.",null,null],[0,"singly_linked_list","intrusive_collections","Intrusive singly-linked list.",null,null],[8,"SinglyLinkedListOps","intrusive_collections::singly_linked_list","Link operations for <code>SinglyLinkedList</code>.",null,null],[10,"next","","Returns the \\\"next\\\" link pointer of <code>ptr</code>.",13,[[],["option",4]]],[10,"set_next","","Sets the \\\"next\\\" link pointer of <code>ptr</code>.",13,[[["option",4]]]],[3,"Link","","Intrusive link that allows an object to be inserted into a…",null,null],[11,"new","","Creates a new <code>Link</code>.",14,[[],["link",3]]],[11,"is_linked","","Checks whether the <code>Link</code> is linked into a <code>SinglyLinkedList</code>.",14,[[],["bool",15]]],[11,"force_unlink","","Forcibly unlinks an object from a <code>SinglyLinkedList</code>.",14,[[]]],[3,"LinkOps","","Default <code>LinkOps</code> implementation for <code>SinglyLinkedList</code>.",null,null],[3,"Cursor","","A cursor which provides read-only access to a …",null,null],[11,"is_null","","Checks if the cursor is currently pointing to the null …",15,[[],["bool",15]]],[11,"get","","Returns a reference to the object that the cursor is …",15,[[],["option",4]]],[11,"clone_pointer","","Clones and returns the pointer that points to the element …",15,[[],["option",4]]],[11,"move_next","","Moves the cursor to the next element of the …",15,[[]]],[11,"peek_next","","Returns a cursor pointing to the next element of the …",15,[[],["cursor",3]]],[3,"CursorMut","","A cursor which provides mutable access to a …",null,null],[11,"is_null","","Checks if the cursor is currently pointing to the null …",16,[[],["bool",15]]],[11,"get","","Returns a reference to the object that the cursor is …",16,[[],["option",4]]],[11,"as_cursor","","Returns a read-only cursor pointing to the current …",16,[[],["cursor",3]]],[11,"move_next","","Moves the cursor to the next element of the …",16,[[]]],[11,"peek_next","","Returns a cursor pointing to the next element of the …",16,[[],["cursor",3]]],[11,"remove_next","","Removes the next element from the <code>SinglyLinkedList</code>.",16,[[],["option",4]]],[11,"replace_next_with","","Removes the next element from the <code>SinglyLinkedList</code> and …",16,[[],["result",4]]],[11,"insert_after","","Inserts a new element into the <code>SinglyLinkedList</code> after the …",16,[[]]],[11,"splice_after","","Inserts the elements from the given <code>SinglyLinkedList</code> …",16,[[["singlylinkedlist",3]]]],[11,"split_after","","Splits the list into two after the current element. This …",16,[[],["singlylinkedlist",3]]],[3,"SinglyLinkedList","","An intrusive singly-linked list.",null,null],[11,"new","","Creates an empty <code>SinglyLinkedList</code>.",17,[[],["singlylinkedlist",3]]],[11,"is_empty","","Returns <code>true</code> if the <code>SinglyLinkedList</code> is empty.",17,[[],["bool",15]]],[11,"cursor","","Returns a null <code>Cursor</code> for this list.",17,[[],["cursor",3]]],[11,"cursor_mut","","Returns a null <code>CursorMut</code> for this list.",17,[[],["cursormut",3]]],[11,"cursor_from_ptr","","Creates a <code>Cursor</code> from a pointer to an element.",17,[[],["cursor",3]]],[11,"cursor_mut_from_ptr","","Creates a <code>CursorMut</code> from a pointer to an element.",17,[[],["cursormut",3]]],[11,"front","","Returns a <code>Cursor</code> pointing to the first element of the …",17,[[],["cursor",3]]],[11,"front_mut","","Returns a <code>CursorMut</code> pointing to the first element of the …",17,[[],["cursormut",3]]],[11,"iter","","Gets an iterator over the objects in the <code>SinglyLinkedList</code>.",17,[[],["iter",3]]],[11,"clear","","Removes all elements from the <code>SinglyLinkedList</code>.",17,[[]]],[11,"fast_clear","","Empties the <code>SinglyLinkedList</code> without unlinking or freeing …",17,[[]]],[11,"take","","Takes all the elements out of the <code>SinglyLinkedList</code>, …",17,[[],["singlylinkedlist",3]]],[11,"push_front","","Inserts a new element at the start of the <code>SinglyLinkedList</code>…",17,[[]]],[11,"pop_front","","Removes the first element of the <code>SinglyLinkedList</code>.",17,[[],["option",4]]],[3,"Iter","","An iterator over references to the items of a …",null,null],[3,"IntoIter","","An iterator which consumes a <code>SinglyLinkedList</code>.",null,null],[0,"xor_linked_list","intrusive_collections","Intrusive xor doubly-linked list which uses less memory …",null,null],[8,"XorLinkedListOps","intrusive_collections::xor_linked_list","Link operations for <code>XorLinkedList</code>.",null,null],[10,"next","","Returns the \\\"next\\\" link pointer of <code>ptr</code>.",18,[[["option",4]],["option",4]]],[10,"prev","","Returns the \\\"prev\\\" link pointer of <code>ptr</code>.",18,[[["option",4]],["option",4]]],[10,"set","","Assigns the \\\"prev\\\" and \\\"next\\\" link pointers of <code>ptr</code>.",18,[[["option",4]]]],[10,"replace_next_or_prev","","Replaces the \\\"next\\\" or \\\"prev\\\" link pointer of <code>ptr</code>.",18,[[["option",4]]]],[3,"Link","","Intrusive link that allows an object to be inserted into a…",null,null],[11,"new","","Creates a new <code>Link</code>.",19,[[],["link",3]]],[11,"is_linked","","Checks whether the <code>Link</code> is linked into a <code>XorLinkedList</code>.",19,[[],["bool",15]]],[11,"force_unlink","","Forcibly unlinks an object from a <code>XorLinkedList</code>.",19,[[]]],[3,"LinkOps","","Default <code>LinkOps</code> implementation for <code>XorLinkedList</code>.",null,null],[3,"Cursor","","A cursor which provides read-only access to a …",null,null],[11,"is_null","","Checks if the cursor is currently pointing to the null …",20,[[],["bool",15]]],[11,"get","","Returns a reference to the object that the cursor is …",20,[[],["option",4]]],[11,"clone_pointer","","Clones and returns the pointer that points to the element …",20,[[],["option",4]]],[11,"move_next","","Moves the cursor to the next element of the <code>XorLinkedList</code>.",20,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the …",20,[[]]],[11,"peek_next","","Returns a cursor pointing to the next element of the …",20,[[],["cursor",3]]],[11,"peek_prev","","Returns a cursor pointing to the previous element of the …",20,[[],["cursor",3]]],[3,"CursorMut","","A cursor which provides mutable access to a <code>XorLinkedList</code>.",null,null],[11,"is_null","","Checks if the cursor is currently pointing to the null …",21,[[],["bool",15]]],[11,"get","","Returns a reference to the object that the cursor is …",21,[[],["option",4]]],[11,"as_cursor","","Returns a read-only cursor pointing to the current …",21,[[],["cursor",3]]],[11,"move_next","","Moves the cursor to the next element of the <code>XorLinkedList</code>.",21,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the …",21,[[]]],[11,"peek_next","","Returns a cursor pointing to the next element of the …",21,[[],["cursor",3]]],[11,"peek_prev","","Returns a cursor pointing to the previous element of the …",21,[[],["cursor",3]]],[11,"remove","","Removes the current element from the <code>XorLinkedList</code>.",21,[[],["option",4]]],[11,"replace_with","","Removes the current element from the <code>XorLinkedList</code> and …",21,[[],["result",4]]],[11,"insert_after","","Inserts a new element into the <code>XorLinkedList</code> after the …",21,[[]]],[11,"insert_before","","Inserts a new element into the <code>XorLinkedList</code> before the …",21,[[]]],[11,"splice_after","","Inserts the elements from the given <code>XorLinkedList</code> after …",21,[[["xorlinkedlist",3]]]],[11,"splice_before","","Moves all element from the given <code>XorLinkedList</code> before the …",21,[[["xorlinkedlist",3]]]],[11,"split_after","","Splits the list into two after the current element. This …",21,[[],["xorlinkedlist",3]]],[11,"split_before","","Splits the list into two before the current element. This …",21,[[],["xorlinkedlist",3]]],[3,"XorLinkedList","","Intrusive xor doubly-linked list which uses less memory …",null,null],[11,"new","","Creates an empty <code>XorLinkedList</code>.",22,[[],["xorlinkedlist",3]]],[11,"is_empty","","Returns <code>true</code> if the <code>XorLinkedList</code> is empty.",22,[[],["bool",15]]],[11,"cursor","","Returns a null <code>Cursor</code> for this list.",22,[[],["cursor",3]]],[11,"cursor_mut","","Returns a null <code>CursorMut</code> for this list.",22,[[],["cursormut",3]]],[11,"cursor_from_ptr_and_prev","","Creates a <code>Cursor</code> from a pointer to an element and a …",22,[[],["cursor",3]]],[11,"cursor_mut_from_ptr_and_prev","","Creates a <code>CursorMut</code> from a pointer to an element and a …",22,[[],["cursormut",3]]],[11,"cursor_from_ptr_and_next","","Creates a <code>Cursor</code> from a pointer to an element and a …",22,[[],["cursor",3]]],[11,"cursor_mut_from_ptr_and_next","","Creates a <code>CursorMut</code> from a pointer to an element and a …",22,[[],["cursormut",3]]],[11,"front","","Returns a <code>Cursor</code> pointing to the first element of the …",22,[[],["cursor",3]]],[11,"front_mut","","Returns a <code>CursorMut</code> pointing to the first element of the …",22,[[],["cursormut",3]]],[11,"back","","Returns a <code>Cursor</code> pointing to the last element of the …",22,[[],["cursor",3]]],[11,"back_mut","","Returns a <code>CursorMut</code> pointing to the last element of the …",22,[[],["cursormut",3]]],[11,"iter","","Gets an iterator over the objects in the <code>XorLinkedList</code>.",22,[[],["iter",3]]],[11,"clear","","Removes all elements from the <code>XorLinkedList</code>.",22,[[]]],[11,"fast_clear","","Empties the <code>XorLinkedList</code> without unlinking or freeing …",22,[[]]],[11,"take","","Takes all the elements out of the <code>XorLinkedList</code>, leaving …",22,[[],["xorlinkedlist",3]]],[11,"push_front","","Inserts a new element at the start of the <code>XorLinkedList</code>.",22,[[]]],[11,"push_back","","Inserts a new element at the end of the <code>XorLinkedList</code>.",22,[[]]],[11,"pop_front","","Removes the first element of the <code>XorLinkedList</code>.",22,[[],["option",4]]],[11,"pop_back","","Removes the last element of the <code>XorLinkedList</code>.",22,[[],["option",4]]],[11,"reverse","","Reverses the list in-place.",22,[[]]],[3,"Iter","","An iterator over references to the items of a …",null,null],[3,"IntoIter","","An iterator which consumes a <code>XorLinkedList</code>.",null,null],[8,"Adapter","intrusive_collections","Trait for a adapter which allows a type to be inserted …",null,null],[16,"LinkOps","","Collection-specific link operations which allow an object …",23,null],[16,"PointerOps","","Collection-specific pointer conversions which allow an …",23,null],[10,"get_value","","Gets a reference to an object from a reference to a link …",23,[[]]],[10,"get_link","","Gets a reference to the link for the given object.",23,[[]]],[10,"link_ops","","Returns a reference to the link operations.",23,[[]]],[10,"link_ops_mut","","Returns a reference to the mutable link operations.",23,[[]]],[10,"pointer_ops","","Returns a reference to the pointer converter.",23,[[]]],[8,"KeyAdapter","","Extension of the <code>Adapter</code> trait to provide a way of …",null,null],[16,"Key","","Type of the key returned by <code>get_key</code>.",24,null],[10,"get_key","","Gets the key for the given object.",24,[[]]],[8,"DefaultLinkOps","","The default implementation of <code>LinkOps</code> associated with a …",null,null],[16,"Ops","","The default link operations.",25,null],[18,"NEW","","The associated constant that represents <code>Ops::default()</code>.",25,null],[8,"LinkOps","","Base trait for link operations.",null,null],[16,"LinkPtr","","The link pointer type.",26,null],[10,"acquire_link","","Attempts to acquire ownership of a link so that it can be …",26,[[],["bool",15]]],[10,"release_link","","Releases ownership of a link that was previously acquired …",26,[[]]],[3,"DefaultPointerOps","","The <code>PointerOps</code> type used by an <code>Adapter</code> generated by …",null,null],[8,"PointerOps","","Trait for pointer conversion operations.",null,null],[16,"Value","","Object type which is inserted into an intrusive …",27,null],[16,"Pointer","","Pointer type which owns an instance of a value.",27,null],[10,"from_raw","","Constructs an owned pointer from a raw pointer.",27,[[]]],[10,"into_raw","","Consumes the owned pointer and returns a raw pointer to …",27,[[]]],[3,"UnsafeRef","","Unchecked shared pointer",null,null],[14,"offset_of","","Calculates the offset of the specified field from the …",null,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",28,null],[13,"Excluded","","An exclusive bound.",28,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in …",28,null],[14,"container_of","","Unsafe macro to get a raw pointer to an outer object from …",null,null],[14,"intrusive_adapter","","Macro to generate an implementation of <code>Adapter</code> for a …",null,null],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"from","intrusive_collections::linked_list","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"into_iter","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"into_iter","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","intrusive_collections::rbtree","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"into_iter","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"into_iter","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","intrusive_collections::singly_linked_list","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"into_iter","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"into_iter","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","intrusive_collections::xor_linked_list","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"into_iter","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"into_iter","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","intrusive_collections","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"acquire_link","intrusive_collections::linked_list","",31,[[],["bool",15]]],[11,"release_link","","",31,[[]]],[11,"acquire_link","intrusive_collections::rbtree","",34,[[],["bool",15]]],[11,"release_link","","",34,[[]]],[11,"acquire_link","intrusive_collections::singly_linked_list","",37,[[],["bool",15]]],[11,"release_link","","",37,[[]]],[11,"acquire_link","intrusive_collections::xor_linked_list","",40,[[],["bool",15]]],[11,"release_link","","",40,[[]]],[11,"from_raw","intrusive_collections","",30,[[]]],[11,"into_raw","","",30,[[]]],[11,"from_raw","","",30,[[],["pin",3]]],[11,"into_raw","","",30,[[["pin",3]]]],[11,"from_raw","","",30,[[],["unsaferef",3]]],[11,"into_raw","","",30,[[["unsaferef",3]]]],[11,"from_raw","","",30,[[],[["pin",3],["unsaferef",3]]]],[11,"into_raw","","",30,[[["pin",3],["unsaferef",3]]]],[11,"from_raw","","",30,[[],["box",3]]],[11,"into_raw","","",30,[[["box",3]]]],[11,"from_raw","","",30,[[],[["pin",3],["box",3]]]],[11,"into_raw","","",30,[[["pin",3],["box",3]]]],[11,"from_raw","","",30,[[],["rc",3]]],[11,"into_raw","","",30,[[["rc",3]]]],[11,"from_raw","","",30,[[],[["pin",3],["rc",3]]]],[11,"into_raw","","",30,[[["pin",3],["rc",3]]]],[11,"from_raw","","",30,[[],["arc",3]]],[11,"into_raw","","",30,[[["arc",3]]]],[11,"from_raw","","",30,[[],[["pin",3],["arc",3]]]],[11,"into_raw","","",30,[[["pin",3],["arc",3]]]],[11,"next","intrusive_collections::linked_list","",31,[[],["option",4]]],[11,"prev","","",31,[[],["option",4]]],[11,"set_next","","",31,[[["option",4]]]],[11,"set_prev","","",31,[[["option",4]]]],[11,"next","intrusive_collections::rbtree","",34,[[],["option",4]]],[11,"prev","","",34,[[],["option",4]]],[11,"set_next","","",34,[[["option",4]]]],[11,"set_prev","","",34,[[["option",4]]]],[11,"left","","",34,[[],["option",4]]],[11,"right","","",34,[[],["option",4]]],[11,"parent","","",34,[[],["option",4]]],[11,"color","","",34,[[],["color",4]]],[11,"set_left","","",34,[[["option",4]]]],[11,"set_right","","",34,[[["option",4]]]],[11,"set_parent","","",34,[[["option",4]]]],[11,"set_color","","",34,[[["color",4]]]],[11,"next","intrusive_collections::linked_list","",31,[[],["option",4]]],[11,"set_next","","",31,[[["option",4]]]],[11,"next","intrusive_collections::rbtree","",34,[[],["option",4]]],[11,"set_next","","",34,[[["option",4]]]],[11,"next","intrusive_collections::singly_linked_list","",37,[[],["option",4]]],[11,"set_next","","",37,[[["option",4]]]],[11,"next","intrusive_collections::xor_linked_list","",40,[[],["option",4]]],[11,"set_next","","",40,[[["option",4]]]],[11,"next","intrusive_collections::linked_list","",31,[[["option",4]],["option",4]]],[11,"prev","","",31,[[["option",4]],["option",4]]],[11,"set","","",31,[[["option",4]]]],[11,"replace_next_or_prev","","",31,[[["option",4]]]],[11,"next","intrusive_collections::rbtree","",34,[[["option",4]],["option",4]]],[11,"prev","","",34,[[["option",4]],["option",4]]],[11,"set","","",34,[[["option",4]]]],[11,"replace_next_or_prev","","",34,[[["option",4]]]],[11,"next","intrusive_collections::singly_linked_list","",37,[[["option",4]],["option",4]]],[11,"prev","","",37,[[["option",4]],["option",4]]],[11,"set","","",37,[[["option",4]]]],[11,"replace_next_or_prev","","",37,[[["option",4]]]],[11,"next","intrusive_collections::xor_linked_list","",40,[[["option",4]],["option",4]]],[11,"prev","","",40,[[["option",4]],["option",4]]],[11,"set","","",40,[[["option",4]]]],[11,"replace_next_or_prev","","",40,[[["option",4]]]],[11,"deref","intrusive_collections","",29,[[]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","intrusive_collections::linked_list","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","intrusive_collections::rbtree","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","intrusive_collections::singly_linked_list","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","intrusive_collections::xor_linked_list","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","intrusive_collections","",28,[[["formatter",3]],["result",6]]],[11,"eq","intrusive_collections::rbtree","",5,[[["color",4]],["bool",15]]],[11,"eq","intrusive_collections","",28,[[["bound",4]],["bool",15]]],[11,"ne","","",28,[[["bound",4]],["bool",15]]],[11,"drop","intrusive_collections::linked_list","",4,[[]]],[11,"drop","intrusive_collections::rbtree","",10,[[]]],[11,"drop","intrusive_collections::singly_linked_list","",17,[[]]],[11,"drop","intrusive_collections::xor_linked_list","",22,[[]]],[11,"hash","intrusive_collections","",28,[[]]],[11,"borrow","","",29,[[]]],[11,"as_ref","","",29,[[]]],[11,"next_back","intrusive_collections::linked_list","",32,[[],["option",4]]],[11,"next_back","","",33,[[],["option",4]]],[11,"next_back","intrusive_collections::rbtree","",35,[[],["option",4]]],[11,"next_back","","",36,[[],["option",4]]],[11,"next_back","intrusive_collections::xor_linked_list","",41,[[],["option",4]]],[11,"next_back","","",42,[[],["option",4]]],[11,"next","intrusive_collections::linked_list","",32,[[],["option",4]]],[11,"next","","",33,[[],["option",4]]],[11,"next","intrusive_collections::rbtree","",35,[[],["option",4]]],[11,"next","","",36,[[],["option",4]]],[11,"next","intrusive_collections::singly_linked_list","",38,[[],["option",4]]],[11,"next","","",39,[[],["option",4]]],[11,"next","intrusive_collections::xor_linked_list","",41,[[],["option",4]]],[11,"next","","",42,[[],["option",4]]],[11,"into_iter","intrusive_collections::linked_list","",4,[[],["intoiter",3]]],[11,"into_iter","intrusive_collections::rbtree","",10,[[],["intoiter",3]]],[11,"into_iter","intrusive_collections::singly_linked_list","",17,[[],["intoiter",3]]],[11,"into_iter","intrusive_collections::xor_linked_list","",22,[[],["intoiter",3]]],[11,"clone","intrusive_collections","",29,[[],["unsaferef",3]]],[11,"clone","","",30,[[]]],[11,"clone","intrusive_collections::linked_list","",1,[[],["link",3]]],[11,"clone","","",31,[[],["linkops",3]]],[11,"clone","","",2,[[],["cursor",3]]],[11,"clone","","",32,[[],["iter",3]]],[11,"clone","intrusive_collections::rbtree","",5,[[],["color",4]]],[11,"clone","","",7,[[],["link",3]]],[11,"clone","","",34,[[],["linkops",3]]],[11,"clone","","",8,[[],["cursor",3]]],[11,"clone","","",35,[[],["iter",3]]],[11,"clone","intrusive_collections::singly_linked_list","",14,[[],["link",3]]],[11,"clone","","",37,[[],["linkops",3]]],[11,"clone","","",15,[[],["cursor",3]]],[11,"clone","","",38,[[],["iter",3]]],[11,"clone","intrusive_collections::xor_linked_list","",19,[[],["link",3]]],[11,"clone","","",40,[[],["linkops",3]]],[11,"clone","","",20,[[],["cursor",3]]],[11,"clone","","",41,[[],["iter",3]]],[11,"clone","intrusive_collections","",28,[[],["bound",4]]],[11,"default","","",30,[[]]],[11,"default","intrusive_collections::linked_list","",1,[[],["link",3]]],[11,"default","","",31,[[],["linkops",3]]],[11,"default","","",4,[[],["linkedlist",3]]],[11,"default","intrusive_collections::rbtree","",7,[[],["link",3]]],[11,"default","","",34,[[],["linkops",3]]],[11,"default","","",10,[[],["rbtree",3]]],[11,"default","intrusive_collections::singly_linked_list","",14,[[],["link",3]]],[11,"default","","",37,[[],["linkops",3]]],[11,"default","","",17,[[],["singlylinkedlist",3]]],[11,"default","intrusive_collections::xor_linked_list","",19,[[],["link",3]]],[11,"default","","",40,[[],["linkops",3]]],[11,"default","","",22,[[],["xorlinkedlist",3]]],[11,"from_raw","intrusive_collections","Creates an <code>UnsafeRef</code> from a raw pointer",29,[[],["unsaferef",3]]],[11,"into_raw","","Converts an <code>UnsafeRef</code> into a raw pointer",29,[[]]],[11,"from_box","","Creates an <code>UnsafeRef</code> from a <code>Box</code>",29,[[["box",3]],["unsaferef",3]]],[11,"into_box","","Converts an <code>UnsafeRef</code> into a <code>Box</code>",29,[[],["box",3]]],[18,"NEW","","The associated constant that represents <code>Ops::default()</code>.",25,null],[11,"new","","Constructs an instance of <code>DefaultPointerOps</code>.",30,[[],["defaultpointerops",3]]]],"p":[[8,"LinkedListOps"],[3,"Link"],[3,"Cursor"],[3,"CursorMut"],[3,"LinkedList"],[4,"Color"],[8,"RBTreeOps"],[3,"Link"],[3,"Cursor"],[3,"CursorMut"],[3,"RBTree"],[3,"InsertCursor"],[4,"Entry"],[8,"SinglyLinkedListOps"],[3,"Link"],[3,"Cursor"],[3,"CursorMut"],[3,"SinglyLinkedList"],[8,"XorLinkedListOps"],[3,"Link"],[3,"Cursor"],[3,"CursorMut"],[3,"XorLinkedList"],[8,"Adapter"],[8,"KeyAdapter"],[8,"DefaultLinkOps"],[8,"LinkOps"],[8,"PointerOps"],[4,"Bound"],[3,"UnsafeRef"],[3,"DefaultPointerOps"],[3,"LinkOps"],[3,"Iter"],[3,"IntoIter"],[3,"LinkOps"],[3,"Iter"],[3,"IntoIter"],[3,"LinkOps"],[3,"Iter"],[3,"IntoIter"],[3,"LinkOps"],[3,"Iter"],[3,"IntoIter"]]},\
"io_uring":{"doc":"","i":[[6,"UserData","io_uring","Holds per-operation, user specified data. The usage is up …",null,null],[4,"Error","","",null,null],[13,"MappingCompleteRing","","Failed to map the completion ring.",0,null],[13,"MappingSubmitEntries","","Failed to map submit entries.",0,null],[13,"MappingSubmitRing","","Failed to map the submit ring.",0,null],[13,"NoSpace","","Too many ops are already queued.",0,null],[13,"RingEnter","","The call to <code>io_uring_enter</code> failed with the given errno.",0,null],[13,"Setup","","The call to <code>io_uring_setup</code> failed with the given errno.",0,null],[6,"Result","","",null,null],[3,"URingStats","","Basic statistics about the operations that have been …",null,null],[3,"URingContext","","Unsafe wrapper for the kernel\'s io_uring interface. …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"as_raw_fds","","",2,[[],[["vec",3],["global",3],["i32",15]]]],[11,"default","","",1,[[],["uringstats",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"as_raw_fd","","",2,[[],["rawfd",6]]],[11,"new","","Creates a <code>URingContext</code> where the underlying uring has a …",2,[[["usize",15]],[["uringcontext",3],["result",6]]]],[11,"add_write","","Asynchronously writes to <code>fd</code> from the address given in <code>ptr</code>.",2,[[["usize",15],["userdata",6],["rawfd",6],["u64",15]],["result",6]]],[11,"add_read","","Asynchronously reads from <code>fd</code> to the address given in <code>ptr</code>.",2,[[["usize",15],["rawfd",6],["u64",15],["userdata",6]],["result",6]]],[11,"add_writev_iter","","SafetySee \'writev\' but accepts an iterator instead of a …",2,[[["u64",15],["userdata",6],["rawfd",6]],["result",6]]],[11,"add_writev","","Asynchronously writes to <code>fd</code> from the addresses given in …",2,[[["box",3],["rawfd",6],["pin",3],["u64",15],["userdata",6]],["result",6]]],[11,"add_readv_iter","","SafetySee \'readv\' but accepts an iterator instead of a …",2,[[["u64",15],["userdata",6],["rawfd",6]],["result",6]]],[11,"add_readv","","Asynchronously reads from <code>fd</code> to the addresses given in …",2,[[["box",3],["rawfd",6],["pin",3],["u64",15],["userdata",6]],["result",6]]],[11,"add_nop","","Add a no-op operation that doesn\'t perform any IO. Useful …",2,[[["userdata",6]],["result",6]]],[11,"add_fsync","","Syncs all completed operations, the ordering with …",2,[[["userdata",6],["rawfd",6]],["result",6]]],[11,"add_fallocate","","See the usage of <code>fallocate</code>, this asynchronously performs …",2,[[["u32",15],["userdata",6],["u64",15],["rawfd",6]],["result",6]]],[11,"add_poll_fd","","Adds an FD to be polled based on the given flags. The …",2,[[["watchingevents",3],["userdata",6],["rawfd",6]],["result",6]]],[11,"remove_poll_fd","","Removes an FD that was previously added with <code>add_poll_fd</code>.",2,[[["watchingevents",3],["userdata",6],["rawfd",6]],["result",6]]],[11,"submit","","Sends operations added with the <code>add_*</code> functions to the …",2,[[],["result",6]]],[11,"wait","","Sends operations added with the <code>add_*</code> functions to the …",2,[[],["result",6]]]],"p":[[4,"Error"],[3,"URingStats"],[3,"URingContext"]]},\
"itoa":{"doc":"github crates-io docs-rs","i":[[5,"fmt","itoa","Write integer to an <code>fmt::Write</code>.",null,[[["write",8],["integer",8]],["result",6]]],[3,"Buffer","","A safe API for formatting integers to text.",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about …",0,[[],["buffer",3]]],[11,"format","","Print an integer into this buffer and return a reference …",0,[[["integer",8]],["str",15]]],[8,"Integer","","An integer that can be formatted by <code>itoa::write</code> and …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[],["buffer",3]]]],"p":[[3,"Buffer"]]},\
"kernel_cmdline":{"doc":"Helper for creating valid kernel command line strings.","i":[[4,"Error","kernel_cmdline","The error type for command line building operations.",null,null],[13,"HasEquals","","Key/Value Operation would have had an equals sign in it.",0,null],[13,"HasSpace","","Key/Value Operation would have had a space in it.",0,null],[13,"InvalidAscii","","Operation would have resulted in a non-printable ASCII …",0,null],[13,"TooLarge","","Operation would have made the command line too large.",0,null],[6,"Result","","Specialized Result type for command line operations.",null,null],[3,"Cmdline","","A builder for a kernel command line string that validates …",null,null],[11,"new","","Constructs an empty Cmdline with the given capacity, …",1,[[["usize",15]],["cmdline",3]]],[11,"insert","","Validates and inserts a key value pair into this command …",1,[[["asref",8],["str",15]],["result",6]]],[11,"insert_str","","Validates and inserts a string to the end of the current …",1,[[["asref",8],["str",15]],["result",6]]],[11,"as_str","","Returns the cmdline in progress without nul termination",1,[[],["str",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"eq","","",0,[[["error",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"],[3,"Cmdline"]]},\
"kernel_loader":{"doc":"","i":[[4,"Error","kernel_loader","",null,null],[13,"BigEndianElfOnLittle","","",0,null],[13,"CommandLineCopy","","",0,null],[13,"CommandLineOverflow","","",0,null],[13,"InvalidElfMagicNumber","","",0,null],[13,"InvalidProgramHeaderAddress","","",0,null],[13,"InvalidProgramHeaderMemSize","","",0,null],[13,"InvalidProgramHeaderOffset","","",0,null],[13,"InvalidProgramHeaderSize","","",0,null],[13,"ReadElfHeader","","",0,null],[13,"ReadKernelImage","","",0,null],[13,"ReadProgramHeader","","",0,null],[13,"SeekElfStart","","",0,null],[13,"SeekKernelStart","","",0,null],[13,"SeekProgramHeader","","",0,null],[6,"Result","","",null,null],[5,"load_kernel","","Loads a kernel from a vmlinux elf image to a slice",null,[[["guestaddress",3],["guestmemory",3]],[["result",6],["u64",15]]]],[5,"load_cmdline","","Writes the command line string to the given memory slice.",null,[[["guestaddress",3],["cstr",3],["guestmemory",3]],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["error",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"]]},\
"kvm":{"doc":"A safe wrapper around the kernel\'s KVM interface.","i":[[4,"Cap","kvm","A capability the kernel\'s KVM interface can possibly …",null,null],[13,"Irqchip","","",0,null],[13,"Hlt","","",0,null],[13,"MmuShadowCacheControl","","",0,null],[13,"UserMemory","","",0,null],[13,"SetTssAddr","","",0,null],[13,"Vapic","","",0,null],[13,"ExtCpuid","","",0,null],[13,"Clocksource","","",0,null],[13,"NrVcpus","","",0,null],[13,"NrMemslots","","",0,null],[13,"Pit","","",0,null],[13,"NopIoDelay","","",0,null],[13,"PvMmu","","",0,null],[13,"MpState","","",0,null],[13,"CoalescedMmio","","",0,null],[13,"SyncMmu","","",0,null],[13,"Iommu","","",0,null],[13,"DestroyMemoryRegionWorks","","",0,null],[13,"UserNmi","","",0,null],[13,"SetGuestDebug","","",0,null],[13,"ReinjectControl","","",0,null],[13,"IrqRouting","","",0,null],[13,"IrqInjectStatus","","",0,null],[13,"AssignDevIrq","","",0,null],[13,"JoinMemoryRegionsWorks","","",0,null],[13,"Mce","","",0,null],[13,"Irqfd","","",0,null],[13,"Pit2","","",0,null],[13,"SetBootCpuId","","",0,null],[13,"PitState2","","",0,null],[13,"Ioeventfd","","",0,null],[13,"SetIdentityMapAddr","","",0,null],[13,"XenHvm","","",0,null],[13,"AdjustClock","","",0,null],[13,"InternalErrorData","","",0,null],[13,"VcpuEvents","","",0,null],[13,"S390Psw","","",0,null],[13,"PpcSegstate","","",0,null],[13,"Hyperv","","",0,null],[13,"HypervVapic","","",0,null],[13,"HypervSpin","","",0,null],[13,"PciSegment","","",0,null],[13,"PpcPairedSingles","","",0,null],[13,"IntrShadow","","",0,null],[13,"Debugregs","","",0,null],[13,"X86RobustSinglestep","","",0,null],[13,"PpcOsi","","",0,null],[13,"PpcUnsetIrq","","",0,null],[13,"EnableCap","","",0,null],[13,"Xsave","","",0,null],[13,"Xcrs","","",0,null],[13,"PpcGetPvinfo","","",0,null],[13,"PpcIrqLevel","","",0,null],[13,"AsyncPf","","",0,null],[13,"TscControl","","",0,null],[13,"GetTscKhz","","",0,null],[13,"PpcBookeSregs","","",0,null],[13,"SpaprTce","","",0,null],[13,"PpcSmt","","",0,null],[13,"PpcRma","","",0,null],[13,"MaxVcpus","","",0,null],[13,"PpcHior","","",0,null],[13,"PpcPapr","","",0,null],[13,"SwTlb","","",0,null],[13,"OneReg","","",0,null],[13,"S390Gmap","","",0,null],[13,"TscDeadlineTimer","","",0,null],[13,"S390Ucontrol","","",0,null],[13,"SyncRegs","","",0,null],[13,"Pci23","","",0,null],[13,"KvmclockCtrl","","",0,null],[13,"SignalMsi","","",0,null],[13,"PpcGetSmmuInfo","","",0,null],[13,"S390Cow","","",0,null],[13,"PpcAllocHtab","","",0,null],[13,"ReadonlyMem","","",0,null],[13,"IrqfdResample","","",0,null],[13,"PpcBookeWatchdog","","",0,null],[13,"PpcHtabFd","","",0,null],[13,"S390CssSupport","","",0,null],[13,"PpcEpr","","",0,null],[13,"ArmPsci","","",0,null],[13,"ArmSetDeviceAddr","","",0,null],[13,"DeviceCtrl","","",0,null],[13,"IrqMpic","","",0,null],[13,"PpcRtas","","",0,null],[13,"IrqXics","","",0,null],[13,"ArmEl132bit","","",0,null],[13,"SpaprMultitce","","",0,null],[13,"ExtEmulCpuid","","",0,null],[13,"HypervTime","","",0,null],[13,"IoapicPolarityIgnored","","",0,null],[13,"EnableCapVm","","",0,null],[13,"S390Irqchip","","",0,null],[13,"IoeventfdNoLength","","",0,null],[13,"VmAttributes","","",0,null],[13,"ArmPsci02","","",0,null],[13,"PpcFixupHcall","","",0,null],[13,"PpcEnableHcall","","",0,null],[13,"CheckExtensionVm","","",0,null],[13,"S390UserSigp","","",0,null],[13,"ImmediateExit","","",0,null],[13,"ArmPmuV3","","",0,null],[13,"IoapicNumPins","","",0,null],[13,"ArmProtectedVm","","",0,null],[5,"dirty_log_bitmap_size","","Helper function to determine the size in bytes of a dirty …",null,[[["usize",15]],["usize",15]]],[3,"Kvm","","A wrapper around opening and using <code>/dev/kvm</code>.",null,null],[11,"new","","Opens <code>/dev/kvm/</code> and returns a Kvm object on success.",1,[[],[["kvm",3],["result",6]]]],[11,"new_with_path","","Opens a KVM device at <code>device_path</code> and returns a Kvm …",1,[[["path",3]],[["kvm",3],["result",6]]]],[11,"check_extension","","Checks if a particular <code>Cap</code> is available.",1,[[["cap",4]],["bool",15]]],[11,"get_vcpu_mmap_size","","Gets the size of the mmap required to use vcpu\'s <code>kvm_run</code> …",1,[[],[["result",6],["usize",15]]]],[11,"get_supported_cpuid","","X86 specific call to get the system supported CPUID values",1,[[],[["result",6],["cpuid",6]]]],[11,"get_emulated_cpuid","","X86 specific call to get the system emulated CPUID values",1,[[],[["result",6],["cpuid",6]]]],[11,"get_msr_index_list","","X86 specific call to get list of supported MSRS",1,[[],[["result",6],["vec",3]]]],[4,"IoeventAddress","","An address either in programmable I/O space or in memory …",null,null],[13,"Pio","","",2,null],[13,"Mmio","","",2,null],[4,"Datamatch","","Used in <code>Vm::register_ioevent</code> to indicate a size and …",null,null],[13,"AnyLength","","",3,null],[13,"U8","","",3,null],[13,"U16","","",3,null],[13,"U32","","",3,null],[13,"U64","","",3,null],[4,"IrqSource","","A source of IRQs in an <code>IrqRoute</code>.",null,null],[13,"Irqchip","","",4,null],[12,"chip","kvm::IrqSource","",5,null],[12,"pin","","",5,null],[13,"Msi","kvm","",4,null],[12,"address","kvm::IrqSource","",6,null],[12,"data","","",6,null],[3,"IrqRoute","kvm","A single route for an IRQ.",null,null],[12,"gsi","","",7,null],[12,"source","","",7,null],[4,"PicId","","Interrupt controller IDs",null,null],[13,"Primary","","",8,null],[13,"Secondary","","",8,null],[17,"NUM_IOAPIC_PINS","","Number of pins on the IOAPIC.",null,null],[3,"Vm","","A wrapper around creating and using a VM.",null,null],[11,"new","","Constructs a new <code>Vm</code> using the given <code>Kvm</code> instance.",9,[[["kvm",3],["guestmemory",3]],[["vm",3],["result",6]]]],[11,"check_extension","","Checks if a particular <code>Cap</code> is available.",9,[[["cap",4]],["bool",15]]],[11,"add_memory_region","","Inserts the given <code>mem</code> into the VM\'s address space at …",9,[[["mappedregion",8],["guestaddress",3],["box",3],["bool",15]],[["u32",15],["result",6]]]],[11,"remove_memory_region","","Removes memory that was previously added at the given …",9,[[["u32",15]],[["box",3],["result",6]]]],[11,"get_dirty_log","","Gets the bitmap of dirty pages since the last call to …",9,[[["u32",15]],["result",6]]],[11,"get_memory","","Gets a reference to the guest memory owned by this VM.",9,[[],["guestmemory",3]]],[11,"set_identity_map_addr","","Sets the address of a one-page region in the VM\'s address …",9,[[["guestaddress",3]],["result",6]]],[11,"get_clock","","Retrieves the current timestamp of kvmclock as seen by …",9,[[],[["result",6],["kvm_clock_data",3]]]],[11,"set_clock","","Sets the current timestamp of kvmclock to the specified …",9,[[["kvm_clock_data",3]],["result",6]]],[11,"create_irq_chip","","Crates an in kernel interrupt controller.",9,[[],["result",6]]],[11,"get_pic_state","","Retrieves the state of given interrupt controller by …",9,[[["picid",4]],[["result",6],["kvm_pic_state",3]]]],[11,"set_pic_state","","Sets the state of given interrupt controller by issuing …",9,[[["picid",4],["kvm_pic_state",3]],["result",6]]],[11,"get_ioapic_state","","Retrieves the state of IOAPIC by issuing KVM_GET_IRQCHIP …",9,[[],[["result",6],["kvm_ioapic_state",3]]]],[11,"set_ioapic_state","","Sets the state of IOAPIC by issuing KVM_SET_IRQCHIP ioctl.",9,[[["kvm_ioapic_state",3]],["result",6]]],[11,"set_irq_line","","Sets the level on the given irq to 1 if <code>active</code> is true, …",9,[[["u32",15],["bool",15]],["result",6]]],[11,"create_pit","","Creates a PIT as per the KVM_CREATE_PIT2 ioctl.",9,[[],["result",6]]],[11,"get_pit_state","","Retrieves the state of PIT by issuing KVM_GET_PIT2 ioctl.",9,[[],[["result",6],["kvm_pit_state2",3]]]],[11,"set_pit_state","","Sets the state of PIT by issuing KVM_SET_PIT2 ioctl.",9,[[["kvm_pit_state2",3]],["result",6]]],[11,"register_ioevent","","Registers an event to be signaled whenever a certain …",9,[[["event",3],["ioeventaddress",4],["datamatch",4]],["result",6]]],[11,"unregister_ioevent","","Unregisters an event previously registered with …",9,[[["event",3],["ioeventaddress",4],["datamatch",4]],["result",6]]],[11,"register_irqfd_resample","","Registers an event that will, when signalled, trigger the …",9,[[["u32",15],["event",3]],["result",6]]],[11,"unregister_irqfd","","Unregisters an event that was previously registered with …",9,[[["u32",15],["event",3]],["result",6]]],[11,"set_gsi_routing","","Sets the GSI routing table, replacing any table set with …",9,[[],["result",6]]],[11,"kvm_enable_cap","","Enable the specified capability. See documentation for …",9,[[["kvm_enable_cap",3]],["result",6]]],[4,"VcpuExit","","A reason why a VCPU exited. One of these returns every …",null,null],[13,"IoOut","","An out port instruction was run on the given port with …",10,null],[12,"port","kvm::VcpuExit","",11,null],[12,"size","","",11,null],[12,"data","","",11,null],[13,"IoIn","kvm","An in port instruction was run on the given port.",10,null],[12,"port","kvm::VcpuExit","",12,null],[12,"size","","",12,null],[13,"MmioRead","kvm","A read instruction was run against the given MMIO address.",10,null],[12,"address","kvm::VcpuExit","",13,null],[12,"size","","",13,null],[13,"MmioWrite","kvm","A write instruction was run against the given MMIO …",10,null],[12,"address","kvm::VcpuExit","",14,null],[12,"size","","",14,null],[12,"data","","",14,null],[13,"IoapicEoi","kvm","",10,null],[12,"vector","kvm::VcpuExit","",15,null],[13,"HypervSynic","kvm","",10,null],[12,"msr","kvm::VcpuExit","",16,null],[12,"control","","",16,null],[12,"evt_page","","",16,null],[12,"msg_page","","",16,null],[13,"HypervHcall","kvm","",10,null],[12,"input","kvm::VcpuExit","",17,null],[12,"params","","",17,null],[13,"Unknown","kvm","",10,null],[13,"Exception","","",10,null],[13,"Hypercall","","",10,null],[13,"Debug","","",10,null],[13,"Hlt","","",10,null],[13,"IrqWindowOpen","","",10,null],[13,"Shutdown","","",10,null],[13,"FailEntry","","",10,null],[12,"hardware_entry_failure_reason","kvm::VcpuExit","",18,null],[13,"Intr","kvm","",10,null],[13,"SetTpr","","",10,null],[13,"TprAccess","","",10,null],[13,"S390Sieic","","",10,null],[13,"S390Reset","","",10,null],[13,"Dcr","","",10,null],[13,"Nmi","","",10,null],[13,"InternalError","","",10,null],[13,"Osi","","",10,null],[13,"PaprHcall","","",10,null],[13,"S390Ucontrol","","",10,null],[13,"Watchdog","","",10,null],[13,"S390Tsch","","",10,null],[13,"Epr","","",10,null],[13,"SystemEvent","","The cpu triggered a system level event which is specified …",10,null],[3,"Vcpu","","A wrapper around creating and using a VCPU. <code>Vcpu</code> provides …",null,null],[3,"VcpuThread","","",null,null],[11,"new","","Constructs a new VCPU for <code>vm</code>.",19,[[["kvm",3],["vm",3],["c_ulong",6]],[["vcpu",3],["result",6]]]],[11,"to_runnable","","Consumes <code>self</code> and returns a <code>RunnableVcpu</code>. A <code>RunnableVcpu</code> …",19,[[["option",4],["c_int",6]],[["result",6],["runnablevcpu",3]]]],[11,"set_data","","Sets the data received by a mmio read, ioport in, or …",19,[[],["result",6]]],[11,"set_immediate_exit","","Sets the bit that requests an immediate exit.",19,[[["bool",15]]]],[11,"set_local_immediate_exit","","Sets/clears the bit for immediate exit for the vcpu on …",19,[[["bool",15]]]],[11,"get_regs","","Gets the VCPU registers.",19,[[],[["kvm_regs",3],["result",6]]]],[11,"set_regs","","Sets the VCPU registers.",19,[[["kvm_regs",3]],["result",6]]],[11,"get_sregs","","Gets the VCPU special registers.",19,[[],[["kvm_sregs",3],["result",6]]]],[11,"set_sregs","","Sets the VCPU special registers.",19,[[["kvm_sregs",3]],["result",6]]],[11,"get_fpu","","Gets the VCPU FPU registers.",19,[[],[["kvm_fpu",3],["result",6]]]],[11,"set_fpu","","X86 specific call to setup the FPU",19,[[["kvm_fpu",3]],["result",6]]],[11,"get_debugregs","","Gets the VCPU debug registers.",19,[[],[["result",6],["kvm_debugregs",3]]]],[11,"set_debugregs","","Sets the VCPU debug registers",19,[[["kvm_debugregs",3]],["result",6]]],[11,"get_xcrs","","Gets the VCPU extended control registers",19,[[],[["result",6],["kvm_xcrs",3]]]],[11,"set_xcrs","","Sets the VCPU extended control registers",19,[[["kvm_xcrs",3]],["result",6]]],[11,"get_msrs","","X86 specific call to get the MSRS",19,[[["vec",3]],["result",6]]],[11,"set_msrs","","X86 specific call to setup the MSRS",19,[[["kvm_msrs",3]],["result",6]]],[11,"set_cpuid2","","X86 specific call to setup the CPUID registers",19,[[["cpuid",6]],["result",6]]],[11,"get_hyperv_cpuid","","X86 specific call to get the system emulated hyper-v …",19,[[],[["result",6],["cpuid",6]]]],[11,"get_lapic","","X86 specific call to get the state of the \\\"Local Advanced …",19,[[],[["kvm_lapic_state",3],["result",6]]]],[11,"set_lapic","","X86 specific call to set the state of the \\\"Local Advanced …",19,[[["kvm_lapic_state",3]],["result",6]]],[11,"get_mp_state","","Gets the vcpu\'s current \\\"multiprocessing state\\\".",19,[[],[["result",6],["kvm_mp_state",3]]]],[11,"set_mp_state","","Sets the vcpu\'s current \\\"multiprocessing state\\\".",19,[[["kvm_mp_state",3]],["result",6]]],[11,"get_vcpu_events","","Gets the vcpu\'s currently pending exceptions, interrupts, …",19,[[],[["kvm_vcpu_events",3],["result",6]]]],[11,"set_vcpu_events","","Sets the vcpu\'s currently pending exceptions, interrupts, …",19,[[["kvm_vcpu_events",3]],["result",6]]],[11,"kvm_enable_cap","","Enable the specified capability. See documentation for …",19,[[["kvm_enable_cap",3]],["result",6]]],[11,"set_signal_mask","","Specifies set of signals that are blocked during …",19,[[],["result",6]]],[3,"RunnableVcpu","","A Vcpu that has a thread and can be run. Created by …",null,null],[11,"run","","Runs the VCPU until it exits, returning the reason for …",20,[[],[["vcpuexit",4],["result",6]]]],[6,"CpuId","","Wrapper for kvm_cpuid2 which has a zero length array at …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"as_raw_descriptors","","",1,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"as_raw_descriptors","","",9,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"as_raw_descriptors","","",19,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"as_raw_descriptors","","",20,[[],[["vec",3],["global",3],["i32",15]]]],[11,"drop","","",20,[[]]],[11,"clone","","",0,[[],["cap",4]]],[11,"clone","","",2,[[],["ioeventaddress",4]]],[11,"eq","","",0,[[["cap",4]],["bool",15]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"as_raw_descriptor","","",1,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",9,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",19,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",20,[[],["rawdescriptor",6]]]],"p":[[4,"Cap"],[3,"Kvm"],[4,"IoeventAddress"],[4,"Datamatch"],[4,"IrqSource"],[13,"Irqchip"],[13,"Msi"],[3,"IrqRoute"],[4,"PicId"],[3,"Vm"],[4,"VcpuExit"],[13,"IoOut"],[13,"IoIn"],[13,"MmioRead"],[13,"MmioWrite"],[13,"IoapicEoi"],[13,"HypervSynic"],[13,"HypervHcall"],[13,"FailEntry"],[3,"Vcpu"],[3,"RunnableVcpu"],[3,"VcpuThread"]]},\
"kvm_sys":{"doc":"","i":[[0,"x86","kvm_sys","",null,null],[0,"bindings","kvm_sys::x86","",null,null],[3,"__BindgenBitfieldUnit","kvm_sys::x86::bindings","",null,null],[11,"new","","",0,[[]]],[11,"get_bit","","",0,[[["usize",15]],["bool",15]]],[11,"set_bit","","",0,[[["usize",15],["bool",15]]]],[11,"get","","",0,[[["usize",15],["u8",15]],["u64",15]]],[11,"set","","",0,[[["usize",15],["u64",15],["u8",15]]]],[3,"__IncompleteArrayField","","",null,null],[11,"new","","",1,[[]]],[11,"as_ptr","","",1,[[]]],[11,"as_mut_ptr","","",1,[[]]],[11,"as_slice","","",1,[[["usize",15]]]],[11,"as_mut_slice","","",1,[[["usize",15]]]],[3,"__BindgenUnionField","","",null,null],[11,"new","","",2,[[]]],[11,"as_ref","","",2,[[]]],[11,"as_mut","","",2,[[]]],[17,"__BITS_PER_LONG","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_IOC_NRBITS","","",null,null],[17,"_IOC_TYPEBITS","","",null,null],[17,"_IOC_SIZEBITS","","",null,null],[17,"_IOC_DIRBITS","","",null,null],[17,"_IOC_NRMASK","","",null,null],[17,"_IOC_TYPEMASK","","",null,null],[17,"_IOC_SIZEMASK","","",null,null],[17,"_IOC_DIRMASK","","",null,null],[17,"_IOC_NRSHIFT","","",null,null],[17,"_IOC_TYPESHIFT","","",null,null],[17,"_IOC_SIZESHIFT","","",null,null],[17,"_IOC_DIRSHIFT","","",null,null],[17,"_IOC_NONE","","",null,null],[17,"_IOC_WRITE","","",null,null],[17,"_IOC_READ","","",null,null],[17,"IOC_IN","","",null,null],[17,"IOC_OUT","","",null,null],[17,"IOC_INOUT","","",null,null],[17,"IOCSIZE_MASK","","",null,null],[17,"IOCSIZE_SHIFT","","",null,null],[17,"KVM_PIO_PAGE_OFFSET","","",null,null],[17,"KVM_COALESCED_MMIO_PAGE_OFFSET","","",null,null],[17,"DE_VECTOR","","",null,null],[17,"DB_VECTOR","","",null,null],[17,"BP_VECTOR","","",null,null],[17,"OF_VECTOR","","",null,null],[17,"BR_VECTOR","","",null,null],[17,"UD_VECTOR","","",null,null],[17,"NM_VECTOR","","",null,null],[17,"DF_VECTOR","","",null,null],[17,"TS_VECTOR","","",null,null],[17,"NP_VECTOR","","",null,null],[17,"SS_VECTOR","","",null,null],[17,"GP_VECTOR","","",null,null],[17,"PF_VECTOR","","",null,null],[17,"MF_VECTOR","","",null,null],[17,"AC_VECTOR","","",null,null],[17,"MC_VECTOR","","",null,null],[17,"XM_VECTOR","","",null,null],[17,"VE_VECTOR","","",null,null],[17,"KVM_NR_INTERRUPTS","","",null,null],[17,"KVM_IOAPIC_NUM_PINS","","",null,null],[17,"KVM_IRQCHIP_PIC_MASTER","","",null,null],[17,"KVM_IRQCHIP_PIC_SLAVE","","",null,null],[17,"KVM_IRQCHIP_IOAPIC","","",null,null],[17,"KVM_NR_IRQCHIPS","","",null,null],[17,"KVM_RUN_X86_SMM","","",null,null],[17,"KVM_APIC_REG_SIZE","","",null,null],[17,"KVM_CPUID_FLAG_SIGNIFCANT_INDEX","","",null,null],[17,"KVM_CPUID_FLAG_STATEFUL_FUNC","","",null,null],[17,"KVM_CPUID_FLAG_STATE_READ_NEXT","","",null,null],[17,"KVM_GUESTDBG_USE_SW_BP","","",null,null],[17,"KVM_GUESTDBG_USE_HW_BP","","",null,null],[17,"KVM_GUESTDBG_INJECT_DB","","",null,null],[17,"KVM_GUESTDBG_INJECT_BP","","",null,null],[17,"KVM_PIT_FLAGS_HPET_LEGACY","","",null,null],[17,"KVM_VCPUEVENT_VALID_NMI_PENDING","","",null,null],[17,"KVM_VCPUEVENT_VALID_SIPI_VECTOR","","",null,null],[17,"KVM_VCPUEVENT_VALID_SHADOW","","",null,null],[17,"KVM_VCPUEVENT_VALID_SMM","","",null,null],[17,"KVM_VCPUEVENT_VALID_PAYLOAD","","",null,null],[17,"KVM_X86_SHADOW_INT_MOV_SS","","",null,null],[17,"KVM_X86_SHADOW_INT_STI","","",null,null],[17,"KVM_MAX_XCRS","","",null,null],[17,"KVM_SYNC_X86_REGS","","",null,null],[17,"KVM_SYNC_X86_SREGS","","",null,null],[17,"KVM_SYNC_X86_EVENTS","","",null,null],[17,"KVM_SYNC_X86_VALID_FIELDS","","",null,null],[17,"KVM_X86_QUIRK_LINT0_REENABLED","","",null,null],[17,"KVM_X86_QUIRK_CD_NW_CLEARED","","",null,null],[17,"KVM_X86_QUIRK_LAPIC_MMIO_HOLE","","",null,null],[17,"KVM_X86_QUIRK_OUT_7E_INC_RIP","","",null,null],[17,"KVM_X86_QUIRK_MISC_ENABLE_NO_MWAIT","","",null,null],[17,"KVM_STATE_NESTED_FORMAT_VMX","","",null,null],[17,"KVM_STATE_NESTED_FORMAT_SVM","","",null,null],[17,"KVM_STATE_NESTED_GUEST_MODE","","",null,null],[17,"KVM_STATE_NESTED_RUN_PENDING","","",null,null],[17,"KVM_STATE_NESTED_EVMCS","","",null,null],[17,"KVM_STATE_NESTED_SMM_GUEST_MODE","","",null,null],[17,"KVM_STATE_NESTED_SMM_VMXON","","",null,null],[17,"KVM_STATE_NESTED_VMX_VMCS_SIZE","","",null,null],[17,"KVM_PMU_EVENT_ALLOW","","",null,null],[17,"KVM_PMU_EVENT_DENY","","",null,null],[17,"KVM_API_VERSION","","",null,null],[17,"KVM_TRC_SHIFT","","",null,null],[17,"KVM_TRC_ENTRYEXIT","","",null,null],[17,"KVM_TRC_HANDLER","","",null,null],[17,"KVM_TRC_VMENTRY","","",null,null],[17,"KVM_TRC_VMEXIT","","",null,null],[17,"KVM_TRC_PAGE_FAULT","","",null,null],[17,"KVM_TRC_HEAD_SIZE","","",null,null],[17,"KVM_TRC_CYCLE_SIZE","","",null,null],[17,"KVM_TRC_EXTRA_MAX","","",null,null],[17,"KVM_TRC_INJ_VIRQ","","",null,null],[17,"KVM_TRC_REDELIVER_EVT","","",null,null],[17,"KVM_TRC_PEND_INTR","","",null,null],[17,"KVM_TRC_IO_READ","","",null,null],[17,"KVM_TRC_IO_WRITE","","",null,null],[17,"KVM_TRC_CR_READ","","",null,null],[17,"KVM_TRC_CR_WRITE","","",null,null],[17,"KVM_TRC_DR_READ","","",null,null],[17,"KVM_TRC_DR_WRITE","","",null,null],[17,"KVM_TRC_MSR_READ","","",null,null],[17,"KVM_TRC_MSR_WRITE","","",null,null],[17,"KVM_TRC_CPUID","","",null,null],[17,"KVM_TRC_INTR","","",null,null],[17,"KVM_TRC_NMI","","",null,null],[17,"KVM_TRC_VMMCALL","","",null,null],[17,"KVM_TRC_HLT","","",null,null],[17,"KVM_TRC_CLTS","","",null,null],[17,"KVM_TRC_LMSW","","",null,null],[17,"KVM_TRC_APIC_ACCESS","","",null,null],[17,"KVM_TRC_TDP_FAULT","","",null,null],[17,"KVM_TRC_GTLB_WRITE","","",null,null],[17,"KVM_TRC_STLB_WRITE","","",null,null],[17,"KVM_TRC_STLB_INVAL","","",null,null],[17,"KVM_TRC_PPC_INSTR","","",null,null],[17,"KVM_MEM_LOG_DIRTY_PAGES","","",null,null],[17,"KVM_MEM_READONLY","","",null,null],[17,"KVM_PIT_SPEAKER_DUMMY","","",null,null],[17,"KVM_S390_CMMA_PEEK","","",null,null],[17,"KVM_EXIT_HYPERV_SYNIC","","",null,null],[17,"KVM_EXIT_HYPERV_HCALL","","",null,null],[17,"KVM_S390_GET_SKEYS_NONE","","",null,null],[17,"KVM_S390_SKEYS_MAX","","",null,null],[17,"KVM_EXIT_UNKNOWN","","",null,null],[17,"KVM_EXIT_EXCEPTION","","",null,null],[17,"KVM_EXIT_IO","","",null,null],[17,"KVM_EXIT_HYPERCALL","","",null,null],[17,"KVM_EXIT_DEBUG","","",null,null],[17,"KVM_EXIT_HLT","","",null,null],[17,"KVM_EXIT_MMIO","","",null,null],[17,"KVM_EXIT_IRQ_WINDOW_OPEN","","",null,null],[17,"KVM_EXIT_SHUTDOWN","","",null,null],[17,"KVM_EXIT_FAIL_ENTRY","","",null,null],[17,"KVM_EXIT_INTR","","",null,null],[17,"KVM_EXIT_SET_TPR","","",null,null],[17,"KVM_EXIT_TPR_ACCESS","","",null,null],[17,"KVM_EXIT_S390_SIEIC","","",null,null],[17,"KVM_EXIT_S390_RESET","","",null,null],[17,"KVM_EXIT_DCR","","",null,null],[17,"KVM_EXIT_NMI","","",null,null],[17,"KVM_EXIT_INTERNAL_ERROR","","",null,null],[17,"KVM_EXIT_OSI","","",null,null],[17,"KVM_EXIT_PAPR_HCALL","","",null,null],[17,"KVM_EXIT_S390_UCONTROL","","",null,null],[17,"KVM_EXIT_WATCHDOG","","",null,null],[17,"KVM_EXIT_S390_TSCH","","",null,null],[17,"KVM_EXIT_EPR","","",null,null],[17,"KVM_EXIT_SYSTEM_EVENT","","",null,null],[17,"KVM_EXIT_S390_STSI","","",null,null],[17,"KVM_EXIT_IOAPIC_EOI","","",null,null],[17,"KVM_EXIT_HYPERV","","",null,null],[17,"KVM_INTERNAL_ERROR_EMULATION","","",null,null],[17,"KVM_INTERNAL_ERROR_SIMUL_EX","","",null,null],[17,"KVM_INTERNAL_ERROR_DELIVERY_EV","","",null,null],[17,"KVM_INTERNAL_ERROR_UNEXPECTED_EXIT_REASON","","",null,null],[17,"KVM_EXIT_IO_IN","","",null,null],[17,"KVM_EXIT_IO_OUT","","",null,null],[17,"KVM_S390_RESET_POR","","",null,null],[17,"KVM_S390_RESET_CLEAR","","",null,null],[17,"KVM_S390_RESET_SUBSYSTEM","","",null,null],[17,"KVM_S390_RESET_CPU_INIT","","",null,null],[17,"KVM_S390_RESET_IPL","","",null,null],[17,"KVM_SYSTEM_EVENT_SHUTDOWN","","",null,null],[17,"KVM_SYSTEM_EVENT_RESET","","",null,null],[17,"KVM_SYSTEM_EVENT_CRASH","","",null,null],[17,"SYNC_REGS_SIZE_BYTES","","",null,null],[17,"KVM_S390_MEMOP_LOGICAL_READ","","",null,null],[17,"KVM_S390_MEMOP_LOGICAL_WRITE","","",null,null],[17,"KVM_S390_MEMOP_F_CHECK_ONLY","","",null,null],[17,"KVM_S390_MEMOP_F_INJECT_EXCEPTION","","",null,null],[17,"KVM_MP_STATE_RUNNABLE","","",null,null],[17,"KVM_MP_STATE_UNINITIALIZED","","",null,null],[17,"KVM_MP_STATE_INIT_RECEIVED","","",null,null],[17,"KVM_MP_STATE_HALTED","","",null,null],[17,"KVM_MP_STATE_SIPI_RECEIVED","","",null,null],[17,"KVM_MP_STATE_STOPPED","","",null,null],[17,"KVM_MP_STATE_CHECK_STOP","","",null,null],[17,"KVM_MP_STATE_OPERATING","","",null,null],[17,"KVM_MP_STATE_LOAD","","",null,null],[17,"KVM_S390_SIGP_STOP","","",null,null],[17,"KVM_S390_PROGRAM_INT","","",null,null],[17,"KVM_S390_SIGP_SET_PREFIX","","",null,null],[17,"KVM_S390_RESTART","","",null,null],[17,"KVM_S390_INT_PFAULT_INIT","","",null,null],[17,"KVM_S390_INT_PFAULT_DONE","","",null,null],[17,"KVM_S390_MCHK","","",null,null],[17,"KVM_S390_INT_CLOCK_COMP","","",null,null],[17,"KVM_S390_INT_CPU_TIMER","","",null,null],[17,"KVM_S390_INT_VIRTIO","","",null,null],[17,"KVM_S390_INT_SERVICE","","",null,null],[17,"KVM_S390_INT_EMERGENCY","","",null,null],[17,"KVM_S390_INT_EXTERNAL_CALL","","",null,null],[17,"KVM_S390_INT_IO_MIN","","",null,null],[17,"KVM_S390_INT_IO_MAX","","",null,null],[17,"KVM_S390_INT_IO_AI_MASK","","",null,null],[17,"KVM_S390_PGM_FLAGS_ILC_VALID","","",null,null],[17,"KVM_S390_PGM_FLAGS_ILC_0","","",null,null],[17,"KVM_S390_PGM_FLAGS_ILC_1","","",null,null],[17,"KVM_S390_PGM_FLAGS_ILC_MASK","","",null,null],[17,"KVM_S390_PGM_FLAGS_NO_REWIND","","",null,null],[17,"KVM_S390_STOP_FLAG_STORE_STATUS","","",null,null],[17,"KVM_GUESTDBG_ENABLE","","",null,null],[17,"KVM_GUESTDBG_SINGLESTEP","","",null,null],[17,"KVM_X86_DISABLE_EXITS_MWAIT","","",null,null],[17,"KVM_X86_DISABLE_EXITS_HLT","","",null,null],[17,"KVM_X86_DISABLE_EXITS_PAUSE","","",null,null],[17,"KVM_X86_DISABLE_EXITS_CSTATE","","",null,null],[17,"KVM_X86_DISABLE_VALID_EXITS","","",null,null],[17,"KVM_PPC_PVINFO_FLAGS_EV_IDLE","","",null,null],[17,"KVM_PPC_PAGE_SIZES_MAX_SZ","","",null,null],[17,"KVM_PPC_PAGE_SIZES_REAL","","",null,null],[17,"KVM_PPC_1T_SEGMENTS","","",null,null],[17,"KVM_PPC_NO_HASH","","",null,null],[17,"KVMIO","","",null,null],[17,"KVM_VM_S390_UCONTROL","","",null,null],[17,"KVM_VM_PPC_HV","","",null,null],[17,"KVM_VM_PPC_PR","","",null,null],[17,"KVM_VM_MIPS_AUTO","","",null,null],[17,"KVM_VM_MIPS_VZ","","",null,null],[17,"KVM_VM_MIPS_TE","","",null,null],[17,"KVM_S390_SIE_PAGE_OFFSET","","",null,null],[17,"KVM_VM_TYPE_ARM_IPA_SIZE_MASK","","",null,null],[17,"KVM_CAP_IRQCHIP","","",null,null],[17,"KVM_CAP_HLT","","",null,null],[17,"KVM_CAP_MMU_SHADOW_CACHE_CONTROL","","",null,null],[17,"KVM_CAP_USER_MEMORY","","",null,null],[17,"KVM_CAP_SET_TSS_ADDR","","",null,null],[17,"KVM_CAP_VAPIC","","",null,null],[17,"KVM_CAP_EXT_CPUID","","",null,null],[17,"KVM_CAP_CLOCKSOURCE","","",null,null],[17,"KVM_CAP_NR_VCPUS","","",null,null],[17,"KVM_CAP_NR_MEMSLOTS","","",null,null],[17,"KVM_CAP_PIT","","",null,null],[17,"KVM_CAP_NOP_IO_DELAY","","",null,null],[17,"KVM_CAP_PV_MMU","","",null,null],[17,"KVM_CAP_MP_STATE","","",null,null],[17,"KVM_CAP_COALESCED_MMIO","","",null,null],[17,"KVM_CAP_SYNC_MMU","","",null,null],[17,"KVM_CAP_IOMMU","","",null,null],[17,"KVM_CAP_DESTROY_MEMORY_REGION_WORKS","","",null,null],[17,"KVM_CAP_USER_NMI","","",null,null],[17,"KVM_CAP_SET_GUEST_DEBUG","","",null,null],[17,"KVM_CAP_REINJECT_CONTROL","","",null,null],[17,"KVM_CAP_IRQ_ROUTING","","",null,null],[17,"KVM_CAP_IRQ_INJECT_STATUS","","",null,null],[17,"KVM_CAP_ASSIGN_DEV_IRQ","","",null,null],[17,"KVM_CAP_JOIN_MEMORY_REGIONS_WORKS","","",null,null],[17,"KVM_CAP_MCE","","",null,null],[17,"KVM_CAP_IRQFD","","",null,null],[17,"KVM_CAP_PIT2","","",null,null],[17,"KVM_CAP_SET_BOOT_CPU_ID","","",null,null],[17,"KVM_CAP_PIT_STATE2","","",null,null],[17,"KVM_CAP_IOEVENTFD","","",null,null],[17,"KVM_CAP_SET_IDENTITY_MAP_ADDR","","",null,null],[17,"KVM_CAP_XEN_HVM","","",null,null],[17,"KVM_CAP_ADJUST_CLOCK","","",null,null],[17,"KVM_CAP_INTERNAL_ERROR_DATA","","",null,null],[17,"KVM_CAP_VCPU_EVENTS","","",null,null],[17,"KVM_CAP_S390_PSW","","",null,null],[17,"KVM_CAP_PPC_SEGSTATE","","",null,null],[17,"KVM_CAP_HYPERV","","",null,null],[17,"KVM_CAP_HYPERV_VAPIC","","",null,null],[17,"KVM_CAP_HYPERV_SPIN","","",null,null],[17,"KVM_CAP_PCI_SEGMENT","","",null,null],[17,"KVM_CAP_PPC_PAIRED_SINGLES","","",null,null],[17,"KVM_CAP_INTR_SHADOW","","",null,null],[17,"KVM_CAP_DEBUGREGS","","",null,null],[17,"KVM_CAP_X86_ROBUST_SINGLESTEP","","",null,null],[17,"KVM_CAP_PPC_OSI","","",null,null],[17,"KVM_CAP_PPC_UNSET_IRQ","","",null,null],[17,"KVM_CAP_ENABLE_CAP","","",null,null],[17,"KVM_CAP_XSAVE","","",null,null],[17,"KVM_CAP_XCRS","","",null,null],[17,"KVM_CAP_PPC_GET_PVINFO","","",null,null],[17,"KVM_CAP_PPC_IRQ_LEVEL","","",null,null],[17,"KVM_CAP_ASYNC_PF","","",null,null],[17,"KVM_CAP_TSC_CONTROL","","",null,null],[17,"KVM_CAP_GET_TSC_KHZ","","",null,null],[17,"KVM_CAP_PPC_BOOKE_SREGS","","",null,null],[17,"KVM_CAP_SPAPR_TCE","","",null,null],[17,"KVM_CAP_PPC_SMT","","",null,null],[17,"KVM_CAP_PPC_RMA","","",null,null],[17,"KVM_CAP_MAX_VCPUS","","",null,null],[17,"KVM_CAP_PPC_HIOR","","",null,null],[17,"KVM_CAP_PPC_PAPR","","",null,null],[17,"KVM_CAP_SW_TLB","","",null,null],[17,"KVM_CAP_ONE_REG","","",null,null],[17,"KVM_CAP_S390_GMAP","","",null,null],[17,"KVM_CAP_TSC_DEADLINE_TIMER","","",null,null],[17,"KVM_CAP_S390_UCONTROL","","",null,null],[17,"KVM_CAP_SYNC_REGS","","",null,null],[17,"KVM_CAP_PCI_2_3","","",null,null],[17,"KVM_CAP_KVMCLOCK_CTRL","","",null,null],[17,"KVM_CAP_SIGNAL_MSI","","",null,null],[17,"KVM_CAP_PPC_GET_SMMU_INFO","","",null,null],[17,"KVM_CAP_S390_COW","","",null,null],[17,"KVM_CAP_PPC_ALLOC_HTAB","","",null,null],[17,"KVM_CAP_READONLY_MEM","","",null,null],[17,"KVM_CAP_IRQFD_RESAMPLE","","",null,null],[17,"KVM_CAP_PPC_BOOKE_WATCHDOG","","",null,null],[17,"KVM_CAP_PPC_HTAB_FD","","",null,null],[17,"KVM_CAP_S390_CSS_SUPPORT","","",null,null],[17,"KVM_CAP_PPC_EPR","","",null,null],[17,"KVM_CAP_ARM_PSCI","","",null,null],[17,"KVM_CAP_ARM_SET_DEVICE_ADDR","","",null,null],[17,"KVM_CAP_DEVICE_CTRL","","",null,null],[17,"KVM_CAP_IRQ_MPIC","","",null,null],[17,"KVM_CAP_PPC_RTAS","","",null,null],[17,"KVM_CAP_IRQ_XICS","","",null,null],[17,"KVM_CAP_ARM_EL1_32BIT","","",null,null],[17,"KVM_CAP_SPAPR_MULTITCE","","",null,null],[17,"KVM_CAP_EXT_EMUL_CPUID","","",null,null],[17,"KVM_CAP_HYPERV_TIME","","",null,null],[17,"KVM_CAP_IOAPIC_POLARITY_IGNORED","","",null,null],[17,"KVM_CAP_ENABLE_CAP_VM","","",null,null],[17,"KVM_CAP_S390_IRQCHIP","","",null,null],[17,"KVM_CAP_IOEVENTFD_NO_LENGTH","","",null,null],[17,"KVM_CAP_VM_ATTRIBUTES","","",null,null],[17,"KVM_CAP_ARM_PSCI_0_2","","",null,null],[17,"KVM_CAP_PPC_FIXUP_HCALL","","",null,null],[17,"KVM_CAP_PPC_ENABLE_HCALL","","",null,null],[17,"KVM_CAP_CHECK_EXTENSION_VM","","",null,null],[17,"KVM_CAP_S390_USER_SIGP","","",null,null],[17,"KVM_CAP_S390_VECTOR_REGISTERS","","",null,null],[17,"KVM_CAP_S390_MEM_OP","","",null,null],[17,"KVM_CAP_S390_USER_STSI","","",null,null],[17,"KVM_CAP_S390_SKEYS","","",null,null],[17,"KVM_CAP_MIPS_FPU","","",null,null],[17,"KVM_CAP_MIPS_MSA","","",null,null],[17,"KVM_CAP_S390_INJECT_IRQ","","",null,null],[17,"KVM_CAP_S390_IRQ_STATE","","",null,null],[17,"KVM_CAP_PPC_HWRNG","","",null,null],[17,"KVM_CAP_DISABLE_QUIRKS","","",null,null],[17,"KVM_CAP_X86_SMM","","",null,null],[17,"KVM_CAP_MULTI_ADDRESS_SPACE","","",null,null],[17,"KVM_CAP_GUEST_DEBUG_HW_BPS","","",null,null],[17,"KVM_CAP_GUEST_DEBUG_HW_WPS","","",null,null],[17,"KVM_CAP_SPLIT_IRQCHIP","","",null,null],[17,"KVM_CAP_IOEVENTFD_ANY_LENGTH","","",null,null],[17,"KVM_CAP_HYPERV_SYNIC","","",null,null],[17,"KVM_CAP_S390_RI","","",null,null],[17,"KVM_CAP_SPAPR_TCE_64","","",null,null],[17,"KVM_CAP_ARM_PMU_V3","","",null,null],[17,"KVM_CAP_VCPU_ATTRIBUTES","","",null,null],[17,"KVM_CAP_MAX_VCPU_ID","","",null,null],[17,"KVM_CAP_X2APIC_API","","",null,null],[17,"KVM_CAP_S390_USER_INSTR0","","",null,null],[17,"KVM_CAP_MSI_DEVID","","",null,null],[17,"KVM_CAP_PPC_HTM","","",null,null],[17,"KVM_CAP_SPAPR_RESIZE_HPT","","",null,null],[17,"KVM_CAP_PPC_MMU_RADIX","","",null,null],[17,"KVM_CAP_PPC_MMU_HASH_V3","","",null,null],[17,"KVM_CAP_IMMEDIATE_EXIT","","",null,null],[17,"KVM_CAP_MIPS_VZ","","",null,null],[17,"KVM_CAP_MIPS_TE","","",null,null],[17,"KVM_CAP_MIPS_64BIT","","",null,null],[17,"KVM_CAP_S390_GS","","",null,null],[17,"KVM_CAP_S390_AIS","","",null,null],[17,"KVM_CAP_SPAPR_TCE_VFIO","","",null,null],[17,"KVM_CAP_X86_DISABLE_EXITS","","",null,null],[17,"KVM_CAP_ARM_USER_IRQ","","",null,null],[17,"KVM_CAP_S390_CMMA_MIGRATION","","",null,null],[17,"KVM_CAP_PPC_FWNMI","","",null,null],[17,"KVM_CAP_PPC_SMT_POSSIBLE","","",null,null],[17,"KVM_CAP_HYPERV_SYNIC2","","",null,null],[17,"KVM_CAP_HYPERV_VP_INDEX","","",null,null],[17,"KVM_CAP_S390_AIS_MIGRATION","","",null,null],[17,"KVM_CAP_PPC_GET_CPU_CHAR","","",null,null],[17,"KVM_CAP_S390_BPB","","",null,null],[17,"KVM_CAP_GET_MSR_FEATURES","","",null,null],[17,"KVM_CAP_HYPERV_EVENTFD","","",null,null],[17,"KVM_CAP_HYPERV_TLBFLUSH","","",null,null],[17,"KVM_CAP_S390_HPAGE_1M","","",null,null],[17,"KVM_CAP_NESTED_STATE","","",null,null],[17,"KVM_CAP_ARM_INJECT_SERROR_ESR","","",null,null],[17,"KVM_CAP_MSR_PLATFORM_INFO","","",null,null],[17,"KVM_CAP_PPC_NESTED_HV","","",null,null],[17,"KVM_CAP_HYPERV_SEND_IPI","","",null,null],[17,"KVM_CAP_COALESCED_PIO","","",null,null],[17,"KVM_CAP_HYPERV_ENLIGHTENED_VMCS","","",null,null],[17,"KVM_CAP_EXCEPTION_PAYLOAD","","",null,null],[17,"KVM_CAP_ARM_VM_IPA_SIZE","","",null,null],[17,"KVM_CAP_MANUAL_DIRTY_LOG_PROTECT","","",null,null],[17,"KVM_CAP_HYPERV_CPUID","","",null,null],[17,"KVM_CAP_MANUAL_DIRTY_LOG_PROTECT2","","",null,null],[17,"KVM_CAP_PPC_IRQ_XIVE","","",null,null],[17,"KVM_CAP_ARM_SVE","","",null,null],[17,"KVM_CAP_ARM_PTRAUTH_ADDRESS","","",null,null],[17,"KVM_CAP_ARM_PTRAUTH_GENERIC","","",null,null],[17,"KVM_CAP_PMU_EVENT_FILTER","","",null,null],[17,"KVM_CAP_ARM_IRQ_LINE_LAYOUT_2","","",null,null],[17,"KVM_CAP_HYPERV_DIRECT_TLBFLUSH","","",null,null],[17,"KVM_CAP_IOAPIC_NUM_PINS","","",null,null],[17,"KVM_CAP_ARM_PROTECTED_VM","","",null,null],[17,"KVM_CAP_ARM_PROTECTED_VM_FLAGS_ENABLE","","",null,null],[17,"KVM_CAP_ARM_PROTECTED_VM_FLAGS_INFO","","",null,null],[17,"KVM_IRQ_ROUTING_IRQCHIP","","",null,null],[17,"KVM_IRQ_ROUTING_MSI","","",null,null],[17,"KVM_IRQ_ROUTING_S390_ADAPTER","","",null,null],[17,"KVM_IRQ_ROUTING_HV_SINT","","",null,null],[17,"KVM_IRQFD_FLAG_DEASSIGN","","",null,null],[17,"KVM_IRQFD_FLAG_RESAMPLE","","",null,null],[17,"KVM_CLOCK_TSC_STABLE","","",null,null],[17,"KVM_MMU_FSL_BOOKE_NOHV","","",null,null],[17,"KVM_MMU_FSL_BOOKE_HV","","",null,null],[17,"KVM_REG_ARCH_MASK","","",null,null],[17,"KVM_REG_GENERIC","","",null,null],[17,"KVM_REG_PPC","","",null,null],[17,"KVM_REG_X86","","",null,null],[17,"KVM_REG_IA64","","",null,null],[17,"KVM_REG_ARM","","",null,null],[17,"KVM_REG_S390","","",null,null],[17,"KVM_REG_ARM64","","",null,null],[17,"KVM_REG_MIPS","","",null,null],[17,"KVM_REG_RISCV","","",null,null],[17,"KVM_REG_SIZE_SHIFT","","",null,null],[17,"KVM_REG_SIZE_MASK","","",null,null],[17,"KVM_REG_SIZE_U8","","",null,null],[17,"KVM_REG_SIZE_U16","","",null,null],[17,"KVM_REG_SIZE_U32","","",null,null],[17,"KVM_REG_SIZE_U64","","",null,null],[17,"KVM_REG_SIZE_U128","","",null,null],[17,"KVM_REG_SIZE_U256","","",null,null],[17,"KVM_REG_SIZE_U512","","",null,null],[17,"KVM_REG_SIZE_U1024","","",null,null],[17,"KVM_REG_SIZE_U2048","","",null,null],[17,"KVM_MSI_VALID_DEVID","","",null,null],[17,"KVM_CREATE_DEVICE_TEST","","",null,null],[17,"KVM_DEV_VFIO_GROUP","","",null,null],[17,"KVM_DEV_VFIO_GROUP_ADD","","",null,null],[17,"KVM_DEV_VFIO_GROUP_DEL","","",null,null],[17,"KVM_DEV_VFIO_GROUP_SET_SPAPR_TCE","","",null,null],[17,"KVM_S390_STORE_STATUS_NOADDR","","",null,null],[17,"KVM_S390_STORE_STATUS_PREFIXED","","",null,null],[17,"KVM_DEV_ASSIGN_ENABLE_IOMMU","","",null,null],[17,"KVM_DEV_ASSIGN_PCI_2_3","","",null,null],[17,"KVM_DEV_ASSIGN_MASK_INTX","","",null,null],[17,"KVM_DEV_IRQ_HOST_INTX","","",null,null],[17,"KVM_DEV_IRQ_HOST_MSI","","",null,null],[17,"KVM_DEV_IRQ_HOST_MSIX","","",null,null],[17,"KVM_DEV_IRQ_GUEST_INTX","","",null,null],[17,"KVM_DEV_IRQ_GUEST_MSI","","",null,null],[17,"KVM_DEV_IRQ_GUEST_MSIX","","",null,null],[17,"KVM_DEV_IRQ_HOST_MASK","","",null,null],[17,"KVM_DEV_IRQ_GUEST_MASK","","",null,null],[17,"KVM_MAX_MSIX_PER_DEV","","",null,null],[17,"KVM_X2APIC_API_USE_32BIT_IDS","","",null,null],[17,"KVM_X2APIC_API_DISABLE_BROADCAST_QUIRK","","",null,null],[17,"KVM_ARM_DEV_EL1_VTIMER","","",null,null],[17,"KVM_ARM_DEV_EL1_PTIMER","","",null,null],[17,"KVM_ARM_DEV_PMU","","",null,null],[17,"KVM_HYPERV_CONN_ID_MASK","","",null,null],[17,"KVM_HYPERV_EVENTFD_DEASSIGN","","",null,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[3,"__kernel_fd_set","","",null,null],[12,"fds_bits","","",3,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",4,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_time64_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[6,"__poll_t","","",null,null],[3,"kvm_memory_alias","","",null,null],[12,"slot","","",5,null],[12,"flags","","",5,null],[12,"guest_phys_addr","","",5,null],[12,"memory_size","","",5,null],[12,"target_phys_addr","","",5,null],[3,"kvm_pic_state","","",null,null],[12,"last_irr","","",6,null],[12,"irr","","",6,null],[12,"imr","","",6,null],[12,"isr","","",6,null],[12,"priority_add","","",6,null],[12,"irq_base","","",6,null],[12,"read_reg_select","","",6,null],[12,"poll","","",6,null],[12,"special_mask","","",6,null],[12,"init_state","","",6,null],[12,"auto_eoi","","",6,null],[12,"rotate_on_auto_eoi","","",6,null],[12,"special_fully_nested_mode","","",6,null],[12,"init4","","",6,null],[12,"elcr","","",6,null],[12,"elcr_mask","","",6,null],[3,"kvm_ioapic_state","","",null,null],[12,"base_address","","",7,null],[12,"ioregsel","","",7,null],[12,"id","","",7,null],[12,"irr","","",7,null],[12,"pad","","",7,null],[12,"redirtbl","","",7,null],[19,"kvm_ioapic_state__bindgen_ty_1","","",null,null],[12,"bits","","",8,null],[12,"fields","","",8,null],[3,"kvm_ioapic_state__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"vector","","",9,null],[12,"_bitfield_1","","",9,null],[12,"reserved","","",9,null],[12,"dest_id","","",9,null],[11,"delivery_mode","","",9,[[],["__u8",6]]],[11,"set_delivery_mode","","",9,[[["__u8",6]]]],[11,"dest_mode","","",9,[[],["__u8",6]]],[11,"set_dest_mode","","",9,[[["__u8",6]]]],[11,"delivery_status","","",9,[[],["__u8",6]]],[11,"set_delivery_status","","",9,[[["__u8",6]]]],[11,"polarity","","",9,[[],["__u8",6]]],[11,"set_polarity","","",9,[[["__u8",6]]]],[11,"remote_irr","","",9,[[],["__u8",6]]],[11,"set_remote_irr","","",9,[[["__u8",6]]]],[11,"trig_mode","","",9,[[],["__u8",6]]],[11,"set_trig_mode","","",9,[[["__u8",6]]]],[11,"mask","","",9,[[],["__u8",6]]],[11,"set_mask","","",9,[[["__u8",6]]]],[11,"reserve","","",9,[[],["__u8",6]]],[11,"set_reserve","","",9,[[["__u8",6]]]],[11,"new_bitfield_1","","",9,[[["__u8",6]],[["__bindgenbitfieldunit",3],["u8",15]]]],[3,"kvm_regs","","",null,null],[12,"rax","","",10,null],[12,"rbx","","",10,null],[12,"rcx","","",10,null],[12,"rdx","","",10,null],[12,"rsi","","",10,null],[12,"rdi","","",10,null],[12,"rsp","","",10,null],[12,"rbp","","",10,null],[12,"r8","","",10,null],[12,"r9","","",10,null],[12,"r10","","",10,null],[12,"r11","","",10,null],[12,"r12","","",10,null],[12,"r13","","",10,null],[12,"r14","","",10,null],[12,"r15","","",10,null],[12,"rip","","",10,null],[12,"rflags","","",10,null],[3,"kvm_lapic_state","","",null,null],[12,"regs","","",11,null],[3,"kvm_segment","","",null,null],[12,"base","","",12,null],[12,"limit","","",12,null],[12,"selector","","",12,null],[12,"type_","","",12,null],[12,"present","","",12,null],[12,"dpl","","",12,null],[12,"db","","",12,null],[12,"s","","",12,null],[12,"l","","",12,null],[12,"g","","",12,null],[12,"avl","","",12,null],[12,"unusable","","",12,null],[12,"padding","","",12,null],[3,"kvm_dtable","","",null,null],[12,"base","","",13,null],[12,"limit","","",13,null],[12,"padding","","",13,null],[3,"kvm_sregs","","",null,null],[12,"cs","","",14,null],[12,"ds","","",14,null],[12,"es","","",14,null],[12,"fs","","",14,null],[12,"gs","","",14,null],[12,"ss","","",14,null],[12,"tr","","",14,null],[12,"ldt","","",14,null],[12,"gdt","","",14,null],[12,"idt","","",14,null],[12,"cr0","","",14,null],[12,"cr2","","",14,null],[12,"cr3","","",14,null],[12,"cr4","","",14,null],[12,"cr8","","",14,null],[12,"efer","","",14,null],[12,"apic_base","","",14,null],[12,"interrupt_bitmap","","",14,null],[3,"kvm_fpu","","",null,null],[12,"fpr","","",15,null],[12,"fcw","","",15,null],[12,"fsw","","",15,null],[12,"ftwx","","",15,null],[12,"pad1","","",15,null],[12,"last_opcode","","",15,null],[12,"last_ip","","",15,null],[12,"last_dp","","",15,null],[12,"xmm","","",15,null],[12,"mxcsr","","",15,null],[12,"pad2","","",15,null],[3,"kvm_msr_entry","","",null,null],[12,"index","","",16,null],[12,"reserved","","",16,null],[12,"data","","",16,null],[3,"kvm_msrs","","",null,null],[12,"nmsrs","","",17,null],[12,"pad","","",17,null],[12,"entries","","",17,null],[3,"kvm_msr_list","","",null,null],[12,"nmsrs","","",18,null],[12,"indices","","",18,null],[3,"kvm_cpuid_entry","","",null,null],[12,"function","","",19,null],[12,"eax","","",19,null],[12,"ebx","","",19,null],[12,"ecx","","",19,null],[12,"edx","","",19,null],[12,"padding","","",19,null],[3,"kvm_cpuid","","",null,null],[12,"nent","","",20,null],[12,"padding","","",20,null],[12,"entries","","",20,null],[3,"kvm_cpuid_entry2","","",null,null],[12,"function","","",21,null],[12,"index","","",21,null],[12,"flags","","",21,null],[12,"eax","","",21,null],[12,"ebx","","",21,null],[12,"ecx","","",21,null],[12,"edx","","",21,null],[12,"padding","","",21,null],[3,"kvm_cpuid2","","",null,null],[12,"nent","","",22,null],[12,"padding","","",22,null],[12,"entries","","",22,null],[3,"kvm_pit_channel_state","","",null,null],[12,"count","","",23,null],[12,"latched_count","","",23,null],[12,"count_latched","","",23,null],[12,"status_latched","","",23,null],[12,"status","","",23,null],[12,"read_state","","",23,null],[12,"write_state","","",23,null],[12,"write_latch","","",23,null],[12,"rw_mode","","",23,null],[12,"mode","","",23,null],[12,"bcd","","",23,null],[12,"gate","","",23,null],[12,"count_load_time","","",23,null],[3,"kvm_debug_exit_arch","","",null,null],[12,"exception","","",24,null],[12,"pad","","",24,null],[12,"pc","","",24,null],[12,"dr6","","",24,null],[12,"dr7","","",24,null],[3,"kvm_guest_debug_arch","","",null,null],[12,"debugreg","","",25,null],[3,"kvm_pit_state","","",null,null],[12,"channels","","",26,null],[3,"kvm_pit_state2","","",null,null],[12,"channels","","",27,null],[12,"flags","","",27,null],[12,"reserved","","",27,null],[3,"kvm_reinject_control","","",null,null],[12,"pit_reinject","","",28,null],[12,"reserved","","",28,null],[3,"kvm_vcpu_events","","",null,null],[12,"exception","","",29,null],[12,"interrupt","","",29,null],[12,"nmi","","",29,null],[12,"sipi_vector","","",29,null],[12,"flags","","",29,null],[12,"smi","","",29,null],[12,"reserved","","",29,null],[12,"exception_has_payload","","",29,null],[12,"exception_payload","","",29,null],[3,"kvm_vcpu_events__bindgen_ty_1","","",null,null],[12,"injected","","",30,null],[12,"nr","","",30,null],[12,"has_error_code","","",30,null],[12,"pending","","",30,null],[12,"error_code","","",30,null],[3,"kvm_vcpu_events__bindgen_ty_2","","",null,null],[12,"injected","","",31,null],[12,"nr","","",31,null],[12,"soft","","",31,null],[12,"shadow","","",31,null],[3,"kvm_vcpu_events__bindgen_ty_3","","",null,null],[12,"injected","","",32,null],[12,"pending","","",32,null],[12,"masked","","",32,null],[12,"pad","","",32,null],[3,"kvm_vcpu_events__bindgen_ty_4","","",null,null],[12,"smm","","",33,null],[12,"pending","","",33,null],[12,"smm_inside_nmi","","",33,null],[12,"latched_init","","",33,null],[3,"kvm_debugregs","","",null,null],[12,"db","","",34,null],[12,"dr6","","",34,null],[12,"dr7","","",34,null],[12,"flags","","",34,null],[12,"reserved","","",34,null],[3,"kvm_xsave","","",null,null],[12,"region","","",35,null],[3,"kvm_xcr","","",null,null],[12,"xcr","","",36,null],[12,"reserved","","",36,null],[12,"value","","",36,null],[3,"kvm_xcrs","","",null,null],[12,"nr_xcrs","","",37,null],[12,"flags","","",37,null],[12,"xcrs","","",37,null],[12,"padding","","",37,null],[3,"kvm_sync_regs","","",null,null],[12,"regs","","",38,null],[12,"sregs","","",38,null],[12,"events","","",38,null],[3,"kvm_vmx_nested_state_data","","",null,null],[12,"vmcs12","","",39,null],[12,"shadow_vmcs12","","",39,null],[3,"kvm_vmx_nested_state_hdr","","",null,null],[12,"vmxon_pa","","",40,null],[12,"vmcs12_pa","","",40,null],[12,"smm","","",40,null],[3,"kvm_vmx_nested_state_hdr__bindgen_ty_1","","",null,null],[12,"flags","","",41,null],[3,"kvm_nested_state","","",null,null],[12,"flags","","",42,null],[12,"format","","",42,null],[12,"size","","",42,null],[12,"hdr","","",42,null],[12,"data","","",42,null],[19,"kvm_nested_state__bindgen_ty_1","","",null,null],[12,"vmx","","",43,null],[12,"pad","","",43,null],[3,"kvm_nested_state__bindgen_ty_2","","",null,null],[12,"vmx","","",44,null],[12,"bindgen_union_field","","",44,null],[3,"kvm_pmu_event_filter","","",null,null],[12,"action","","",45,null],[12,"nevents","","",45,null],[12,"fixed_counter_bitmap","","",45,null],[12,"flags","","",45,null],[12,"pad","","",45,null],[12,"events","","",45,null],[3,"kvm_user_trace_setup","","",null,null],[12,"buf_size","","",46,null],[12,"buf_nr","","",46,null],[3,"kvm_breakpoint","","",null,null],[12,"enabled","","",47,null],[12,"padding","","",47,null],[12,"address","","",47,null],[3,"kvm_debug_guest","","",null,null],[12,"enabled","","",48,null],[12,"pad","","",48,null],[12,"breakpoints","","",48,null],[12,"singlestep","","",48,null],[3,"kvm_memory_region","","",null,null],[12,"slot","","",49,null],[12,"flags","","",49,null],[12,"guest_phys_addr","","",49,null],[12,"memory_size","","",49,null],[3,"kvm_userspace_memory_region","","",null,null],[12,"slot","","",50,null],[12,"flags","","",50,null],[12,"guest_phys_addr","","",50,null],[12,"memory_size","","",50,null],[12,"userspace_addr","","",50,null],[3,"kvm_irq_level","","",null,null],[12,"__bindgen_anon_1","","",51,null],[12,"level","","",51,null],[19,"kvm_irq_level__bindgen_ty_1","","",null,null],[12,"irq","","",52,null],[12,"status","","",52,null],[3,"kvm_irqchip","","",null,null],[12,"chip_id","","",53,null],[12,"pad","","",53,null],[12,"chip","","",53,null],[19,"kvm_irqchip__bindgen_ty_1","","",null,null],[12,"dummy","","",54,null],[12,"pic","","",54,null],[12,"ioapic","","",54,null],[3,"kvm_pit_config","","",null,null],[12,"flags","","",55,null],[12,"pad","","",55,null],[3,"kvm_s390_skeys","","",null,null],[12,"start_gfn","","",56,null],[12,"count","","",56,null],[12,"skeydata_addr","","",56,null],[12,"flags","","",56,null],[12,"reserved","","",56,null],[3,"kvm_s390_cmma_log","","kvm_s390_cmma_log - Used for CMMA migration.",null,null],[12,"start_gfn","","",57,null],[12,"count","","",57,null],[12,"flags","","",57,null],[12,"__bindgen_anon_1","","",57,null],[12,"values","","",57,null],[19,"kvm_s390_cmma_log__bindgen_ty_1","","",null,null],[12,"remaining","","",58,null],[12,"mask","","",58,null],[3,"kvm_hyperv_exit","","",null,null],[12,"type_","","",59,null],[12,"pad1","","",59,null],[12,"u","","",59,null],[19,"kvm_hyperv_exit__bindgen_ty_1","","",null,null],[12,"synic","","",60,null],[12,"hcall","","",60,null],[3,"kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"msr","","",61,null],[12,"pad2","","",61,null],[12,"control","","",61,null],[12,"evt_page","","",61,null],[12,"msg_page","","",61,null],[3,"kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"input","","",62,null],[12,"result","","",62,null],[12,"params","","",62,null],[3,"kvm_run","","",null,null],[12,"request_interrupt_window","","",63,null],[12,"immediate_exit","","",63,null],[12,"padding1","","",63,null],[12,"exit_reason","","",63,null],[12,"ready_for_interrupt_injection","","",63,null],[12,"if_flag","","",63,null],[12,"flags","","",63,null],[12,"cr8","","",63,null],[12,"apic_base","","",63,null],[12,"__bindgen_anon_1","","",63,null],[12,"kvm_valid_regs","","",63,null],[12,"kvm_dirty_regs","","",63,null],[12,"s","","",63,null],[19,"kvm_run__bindgen_ty_1","","",null,null],[12,"hw","","",64,null],[12,"fail_entry","","",64,null],[12,"ex","","",64,null],[12,"io","","",64,null],[12,"debug","","",64,null],[12,"mmio","","",64,null],[12,"hypercall","","",64,null],[12,"tpr_access","","",64,null],[12,"s390_sieic","","",64,null],[12,"s390_reset_flags","","",64,null],[12,"s390_ucontrol","","",64,null],[12,"dcr","","",64,null],[12,"internal","","",64,null],[12,"osi","","",64,null],[12,"papr_hcall","","",64,null],[12,"s390_tsch","","",64,null],[12,"epr","","",64,null],[12,"system_event","","",64,null],[12,"s390_stsi","","",64,null],[12,"eoi","","",64,null],[12,"hyperv","","",64,null],[12,"padding","","",64,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"hardware_exit_reason","","",65,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"hardware_entry_failure_reason","","",66,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"exception","","",67,null],[12,"error_code","","",67,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"direction","","",68,null],[12,"size","","",68,null],[12,"port","","",68,null],[12,"count","","",68,null],[12,"data_offset","","",68,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_5","","",null,null],[12,"arch","","",69,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_6","","",null,null],[12,"phys_addr","","",70,null],[12,"data","","",70,null],[12,"len","","",70,null],[12,"is_write","","",70,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_7","","",null,null],[12,"nr","","",71,null],[12,"args","","",71,null],[12,"ret","","",71,null],[12,"longmode","","",71,null],[12,"pad","","",71,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_8","","",null,null],[12,"rip","","",72,null],[12,"is_write","","",72,null],[12,"pad","","",72,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_9","","",null,null],[12,"icptcode","","",73,null],[12,"ipa","","",73,null],[12,"ipb","","",73,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_10","","",null,null],[12,"trans_exc_code","","",74,null],[12,"pgm_code","","",74,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_11","","",null,null],[12,"dcrn","","",75,null],[12,"data","","",75,null],[12,"is_write","","",75,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_12","","",null,null],[12,"suberror","","",76,null],[12,"ndata","","",76,null],[12,"data","","",76,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_13","","",null,null],[12,"gprs","","",77,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_14","","",null,null],[12,"nr","","",78,null],[12,"ret","","",78,null],[12,"args","","",78,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_15","","",null,null],[12,"subchannel_id","","",79,null],[12,"subchannel_nr","","",79,null],[12,"io_int_parm","","",79,null],[12,"io_int_word","","",79,null],[12,"ipb","","",79,null],[12,"dequeued","","",79,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_16","","",null,null],[12,"epr","","",80,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_17","","",null,null],[12,"type_","","",81,null],[12,"flags","","",81,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_18","","",null,null],[12,"addr","","",82,null],[12,"ar","","",82,null],[12,"reserved","","",82,null],[12,"fc","","",82,null],[12,"sel1","","",82,null],[12,"sel2","","",82,null],[3,"kvm_run__bindgen_ty_1__bindgen_ty_19","","",null,null],[12,"vector","","",83,null],[19,"kvm_run__bindgen_ty_2","","",null,null],[12,"regs","","",84,null],[12,"padding","","",84,null],[3,"kvm_coalesced_mmio_zone","","",null,null],[12,"addr","","",85,null],[12,"size","","",85,null],[12,"__bindgen_anon_1","","",85,null],[19,"kvm_coalesced_mmio_zone__bindgen_ty_1","","",null,null],[12,"pad","","",86,null],[12,"pio","","",86,null],[3,"kvm_coalesced_mmio","","",null,null],[12,"phys_addr","","",87,null],[12,"len","","",87,null],[12,"__bindgen_anon_1","","",87,null],[12,"data","","",87,null],[19,"kvm_coalesced_mmio__bindgen_ty_1","","",null,null],[12,"pad","","",88,null],[12,"pio","","",88,null],[3,"kvm_coalesced_mmio_ring","","",null,null],[12,"first","","",89,null],[12,"last","","",89,null],[12,"coalesced_mmio","","",89,null],[3,"kvm_translation","","",null,null],[12,"linear_address","","",90,null],[12,"physical_address","","",90,null],[12,"valid","","",90,null],[12,"writeable","","",90,null],[12,"usermode","","",90,null],[12,"pad","","",90,null],[3,"kvm_s390_mem_op","","",null,null],[12,"gaddr","","",91,null],[12,"flags","","",91,null],[12,"size","","",91,null],[12,"op","","",91,null],[12,"buf","","",91,null],[12,"ar","","",91,null],[12,"reserved","","",91,null],[3,"kvm_interrupt","","",null,null],[12,"irq","","",92,null],[3,"kvm_dirty_log","","",null,null],[12,"slot","","",93,null],[12,"padding1","","",93,null],[12,"__bindgen_anon_1","","",93,null],[19,"kvm_dirty_log__bindgen_ty_1","","",null,null],[12,"dirty_bitmap","","",94,null],[12,"padding2","","",94,null],[3,"kvm_clear_dirty_log","","",null,null],[12,"slot","","",95,null],[12,"num_pages","","",95,null],[12,"first_page","","",95,null],[12,"__bindgen_anon_1","","",95,null],[19,"kvm_clear_dirty_log__bindgen_ty_1","","",null,null],[12,"dirty_bitmap","","",96,null],[12,"padding2","","",96,null],[3,"kvm_signal_mask","","",null,null],[12,"len","","",97,null],[12,"sigset","","",97,null],[3,"kvm_tpr_access_ctl","","",null,null],[12,"enabled","","",98,null],[12,"flags","","",98,null],[12,"reserved","","",98,null],[3,"kvm_vapic_addr","","",null,null],[12,"vapic_addr","","",99,null],[3,"kvm_mp_state","","",null,null],[12,"mp_state","","",100,null],[3,"kvm_s390_psw","","",null,null],[12,"mask","","",101,null],[12,"addr","","",101,null],[3,"kvm_s390_interrupt","","",null,null],[12,"type_","","",102,null],[12,"parm","","",102,null],[12,"parm64","","",102,null],[3,"kvm_s390_io_info","","",null,null],[12,"subchannel_id","","",103,null],[12,"subchannel_nr","","",103,null],[12,"io_int_parm","","",103,null],[12,"io_int_word","","",103,null],[3,"kvm_s390_ext_info","","",null,null],[12,"ext_params","","",104,null],[12,"pad","","",104,null],[12,"ext_params2","","",104,null],[3,"kvm_s390_pgm_info","","",null,null],[12,"trans_exc_code","","",105,null],[12,"mon_code","","",105,null],[12,"per_address","","",105,null],[12,"data_exc_code","","",105,null],[12,"code","","",105,null],[12,"mon_class_nr","","",105,null],[12,"per_code","","",105,null],[12,"per_atmid","","",105,null],[12,"exc_access_id","","",105,null],[12,"per_access_id","","",105,null],[12,"op_access_id","","",105,null],[12,"flags","","",105,null],[12,"pad","","",105,null],[3,"kvm_s390_prefix_info","","",null,null],[12,"address","","",106,null],[3,"kvm_s390_extcall_info","","",null,null],[12,"code","","",107,null],[3,"kvm_s390_emerg_info","","",null,null],[12,"code","","",108,null],[3,"kvm_s390_stop_info","","",null,null],[12,"flags","","",109,null],[3,"kvm_s390_mchk_info","","",null,null],[12,"cr14","","",110,null],[12,"mcic","","",110,null],[12,"failing_storage_address","","",110,null],[12,"ext_damage_code","","",110,null],[12,"pad","","",110,null],[12,"fixed_logout","","",110,null],[3,"kvm_s390_irq","","",null,null],[12,"type_","","",111,null],[12,"u","","",111,null],[19,"kvm_s390_irq__bindgen_ty_1","","",null,null],[12,"io","","",112,null],[12,"ext","","",112,null],[12,"pgm","","",112,null],[12,"emerg","","",112,null],[12,"extcall","","",112,null],[12,"prefix","","",112,null],[12,"stop","","",112,null],[12,"mchk","","",112,null],[12,"reserved","","",112,null],[3,"kvm_s390_irq_state","","",null,null],[12,"buf","","",113,null],[12,"flags","","",113,null],[12,"len","","",113,null],[12,"reserved","","",113,null],[3,"kvm_guest_debug","","",null,null],[12,"control","","",114,null],[12,"pad","","",114,null],[12,"arch","","",114,null],[17,"kvm_ioeventfd_flag_nr_datamatch","","",null,null],[17,"kvm_ioeventfd_flag_nr_pio","","",null,null],[17,"kvm_ioeventfd_flag_nr_deassign","","",null,null],[17,"kvm_ioeventfd_flag_nr_virtio_ccw_notify","","",null,null],[17,"kvm_ioeventfd_flag_nr_fast_mmio","","",null,null],[17,"kvm_ioeventfd_flag_nr_max","","",null,null],[6,"_bindgen_ty_1","","",null,null],[3,"kvm_ioeventfd","","",null,null],[12,"datamatch","","",115,null],[12,"addr","","",115,null],[12,"len","","",115,null],[12,"fd","","",115,null],[12,"flags","","",115,null],[12,"pad","","",115,null],[3,"kvm_enable_cap","","",null,null],[12,"cap","","",116,null],[12,"flags","","",116,null],[12,"args","","",116,null],[12,"pad","","",116,null],[3,"kvm_ppc_pvinfo","","",null,null],[12,"flags","","",117,null],[12,"hcall","","",117,null],[12,"pad","","",117,null],[3,"kvm_ppc_one_page_size","","",null,null],[12,"page_shift","","",118,null],[12,"pte_enc","","",118,null],[3,"kvm_ppc_one_seg_page_size","","",null,null],[12,"page_shift","","",119,null],[12,"slb_enc","","",119,null],[12,"enc","","",119,null],[3,"kvm_ppc_smmu_info","","",null,null],[12,"flags","","",120,null],[12,"slb_size","","",120,null],[12,"data_keys","","",120,null],[12,"instr_keys","","",120,null],[12,"sps","","",120,null],[3,"kvm_ppc_resize_hpt","","",null,null],[12,"flags","","",121,null],[12,"shift","","",121,null],[12,"pad","","",121,null],[3,"kvm_irq_routing_irqchip","","",null,null],[12,"irqchip","","",122,null],[12,"pin","","",122,null],[3,"kvm_irq_routing_msi","","",null,null],[12,"address_lo","","",123,null],[12,"address_hi","","",123,null],[12,"data","","",123,null],[12,"__bindgen_anon_1","","",123,null],[19,"kvm_irq_routing_msi__bindgen_ty_1","","",null,null],[12,"pad","","",124,null],[12,"devid","","",124,null],[3,"kvm_irq_routing_s390_adapter","","",null,null],[12,"ind_addr","","",125,null],[12,"summary_addr","","",125,null],[12,"ind_offset","","",125,null],[12,"summary_offset","","",125,null],[12,"adapter_id","","",125,null],[3,"kvm_irq_routing_hv_sint","","",null,null],[12,"vcpu","","",126,null],[12,"sint","","",126,null],[3,"kvm_irq_routing_entry","","",null,null],[12,"gsi","","",127,null],[12,"type_","","",127,null],[12,"flags","","",127,null],[12,"pad","","",127,null],[12,"u","","",127,null],[19,"kvm_irq_routing_entry__bindgen_ty_1","","",null,null],[12,"irqchip","","",128,null],[12,"msi","","",128,null],[12,"adapter","","",128,null],[12,"hv_sint","","",128,null],[12,"pad","","",128,null],[3,"kvm_irq_routing","","",null,null],[12,"nr","","",129,null],[12,"flags","","",129,null],[12,"entries","","",129,null],[3,"kvm_x86_mce","","",null,null],[12,"status","","",130,null],[12,"addr","","",130,null],[12,"misc","","",130,null],[12,"mcg_status","","",130,null],[12,"bank","","",130,null],[12,"pad1","","",130,null],[12,"pad2","","",130,null],[3,"kvm_xen_hvm_config","","",null,null],[12,"flags","","",131,null],[12,"msr","","",131,null],[12,"blob_addr_32","","",131,null],[12,"blob_addr_64","","",131,null],[12,"blob_size_32","","",131,null],[12,"blob_size_64","","",131,null],[12,"pad2","","",131,null],[3,"kvm_irqfd","","",null,null],[12,"fd","","",132,null],[12,"gsi","","",132,null],[12,"flags","","",132,null],[12,"resamplefd","","",132,null],[12,"pad","","",132,null],[3,"kvm_clock_data","","",null,null],[12,"clock","","",133,null],[12,"flags","","",133,null],[12,"pad","","",133,null],[3,"kvm_config_tlb","","",null,null],[12,"params","","",134,null],[12,"array","","",134,null],[12,"mmu_type","","",134,null],[12,"array_len","","",134,null],[3,"kvm_dirty_tlb","","",null,null],[12,"bitmap","","",135,null],[12,"num_dirty","","",135,null],[3,"kvm_reg_list","","",null,null],[12,"n","","",136,null],[12,"reg","","",136,null],[3,"kvm_one_reg","","",null,null],[12,"id","","",137,null],[12,"addr","","",137,null],[3,"kvm_msi","","",null,null],[12,"address_lo","","",138,null],[12,"address_hi","","",138,null],[12,"data","","",138,null],[12,"flags","","",138,null],[12,"devid","","",138,null],[12,"pad","","",138,null],[3,"kvm_arm_device_addr","","",null,null],[12,"id","","",139,null],[12,"addr","","",139,null],[3,"kvm_create_device","","",null,null],[12,"type_","","",140,null],[12,"fd","","",140,null],[12,"flags","","",140,null],[3,"kvm_device_attr","","",null,null],[12,"flags","","",141,null],[12,"group","","",141,null],[12,"attr","","",141,null],[12,"addr","","",141,null],[17,"kvm_device_type_KVM_DEV_TYPE_FSL_MPIC_20","","",null,null],[17,"kvm_device_type_KVM_DEV_TYPE_FSL_MPIC_42","","",null,null],[17,"kvm_device_type_KVM_DEV_TYPE_XICS","","",null,null],[17,"kvm_device_type_KVM_DEV_TYPE_VFIO","","",null,null],[17,"kvm_device_type_KVM_DEV_TYPE_ARM_VGIC_V2","","",null,null],[17,"kvm_device_type_KVM_DEV_TYPE_FLIC","","",null,null],[17,"kvm_device_type_KVM_DEV_TYPE_ARM_VGIC_V3","","",null,null],[17,"kvm_device_type_KVM_DEV_TYPE_ARM_VGIC_ITS","","",null,null],[17,"kvm_device_type_KVM_DEV_TYPE_XIVE","","",null,null],[17,"kvm_device_type_KVM_DEV_TYPE_MAX","","",null,null],[6,"kvm_device_type","","",null,null],[3,"kvm_vfio_spapr_tce","","",null,null],[12,"groupfd","","",142,null],[12,"tablefd","","",142,null],[3,"kvm_s390_ucas_mapping","","",null,null],[12,"user_addr","","",143,null],[12,"vcpu_addr","","",143,null],[12,"length","","",143,null],[3,"kvm_enc_region","","",null,null],[12,"addr","","",144,null],[12,"size","","",144,null],[17,"sev_cmd_id_KVM_SEV_INIT","","",null,null],[17,"sev_cmd_id_KVM_SEV_ES_INIT","","",null,null],[17,"sev_cmd_id_KVM_SEV_LAUNCH_START","","",null,null],[17,"sev_cmd_id_KVM_SEV_LAUNCH_UPDATE_DATA","","",null,null],[17,"sev_cmd_id_KVM_SEV_LAUNCH_UPDATE_VMSA","","",null,null],[17,"sev_cmd_id_KVM_SEV_LAUNCH_SECRET","","",null,null],[17,"sev_cmd_id_KVM_SEV_LAUNCH_MEASURE","","",null,null],[17,"sev_cmd_id_KVM_SEV_LAUNCH_FINISH","","",null,null],[17,"sev_cmd_id_KVM_SEV_SEND_START","","",null,null],[17,"sev_cmd_id_KVM_SEV_SEND_UPDATE_DATA","","",null,null],[17,"sev_cmd_id_KVM_SEV_SEND_UPDATE_VMSA","","",null,null],[17,"sev_cmd_id_KVM_SEV_SEND_FINISH","","",null,null],[17,"sev_cmd_id_KVM_SEV_RECEIVE_START","","",null,null],[17,"sev_cmd_id_KVM_SEV_RECEIVE_UPDATE_DATA","","",null,null],[17,"sev_cmd_id_KVM_SEV_RECEIVE_UPDATE_VMSA","","",null,null],[17,"sev_cmd_id_KVM_SEV_RECEIVE_FINISH","","",null,null],[17,"sev_cmd_id_KVM_SEV_GUEST_STATUS","","",null,null],[17,"sev_cmd_id_KVM_SEV_DBG_DECRYPT","","",null,null],[17,"sev_cmd_id_KVM_SEV_DBG_ENCRYPT","","",null,null],[17,"sev_cmd_id_KVM_SEV_CERT_EXPORT","","",null,null],[17,"sev_cmd_id_KVM_SEV_NR_MAX","","",null,null],[6,"sev_cmd_id","","",null,null],[3,"kvm_sev_cmd","","",null,null],[12,"id","","",145,null],[12,"data","","",145,null],[12,"error","","",145,null],[12,"sev_fd","","",145,null],[3,"kvm_sev_launch_start","","",null,null],[12,"handle","","",146,null],[12,"policy","","",146,null],[12,"dh_uaddr","","",146,null],[12,"dh_len","","",146,null],[12,"session_uaddr","","",146,null],[12,"session_len","","",146,null],[3,"kvm_sev_launch_update_data","","",null,null],[12,"uaddr","","",147,null],[12,"len","","",147,null],[3,"kvm_sev_launch_secret","","",null,null],[12,"hdr_uaddr","","",148,null],[12,"hdr_len","","",148,null],[12,"guest_uaddr","","",148,null],[12,"guest_len","","",148,null],[12,"trans_uaddr","","",148,null],[12,"trans_len","","",148,null],[3,"kvm_sev_launch_measure","","",null,null],[12,"uaddr","","",149,null],[12,"len","","",149,null],[3,"kvm_sev_guest_status","","",null,null],[12,"handle","","",150,null],[12,"policy","","",150,null],[12,"state","","",150,null],[3,"kvm_sev_dbg","","",null,null],[12,"src_uaddr","","",151,null],[12,"dst_uaddr","","",151,null],[12,"len","","",151,null],[3,"kvm_assigned_pci_dev","","",null,null],[12,"assigned_dev_id","","",152,null],[12,"busnr","","",152,null],[12,"devfn","","",152,null],[12,"flags","","",152,null],[12,"segnr","","",152,null],[12,"__bindgen_anon_1","","",152,null],[19,"kvm_assigned_pci_dev__bindgen_ty_1","","",null,null],[12,"reserved","","",153,null],[3,"kvm_assigned_irq","","",null,null],[12,"assigned_dev_id","","",154,null],[12,"host_irq","","",154,null],[12,"guest_irq","","",154,null],[12,"flags","","",154,null],[12,"__bindgen_anon_1","","",154,null],[19,"kvm_assigned_irq__bindgen_ty_1","","",null,null],[12,"reserved","","",155,null],[3,"kvm_assigned_msix_nr","","",null,null],[12,"assigned_dev_id","","",156,null],[12,"entry_nr","","",156,null],[12,"padding","","",156,null],[3,"kvm_assigned_msix_entry","","",null,null],[12,"assigned_dev_id","","",157,null],[12,"gsi","","",157,null],[12,"entry","","",157,null],[12,"padding","","",157,null],[3,"kvm_hyperv_eventfd","","",null,null],[12,"conn_id","","",158,null],[12,"fd","","",158,null],[12,"flags","","",158,null],[12,"padding","","",158,null],[5,"KVM_GET_MSR_INDEX_LIST","kvm_sys::x86","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_SUPPORTED_CPUID","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_EMULATED_CPUID","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_MEMORY_ALIAS","","",null,[[],["ioctlnr",6]]],[5,"KVM_XEN_HVM_CONFIG","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_PIT2","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_PIT2","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_MSRS","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_MSRS","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_CPUID","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_LAPIC","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_LAPIC","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_CPUID2","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_CPUID2","","",null,[[],["ioctlnr",6]]],[5,"KVM_X86_SETUP_MCE","","",null,[[],["ioctlnr",6]]],[5,"KVM_X86_GET_MCE_CAP_SUPPORTED","","",null,[[],["ioctlnr",6]]],[5,"KVM_X86_SET_MCE","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_VCPU_EVENTS","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_VCPU_EVENTS","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_DEBUGREGS","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_DEBUGREGS","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_XSAVE","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_XSAVE","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_XCRS","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_XCRS","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_SUPPORTED_HV_CPUID","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_API_VERSION","kvm_sys","",null,[[],["ioctlnr",6]]],[5,"KVM_CREATE_VM","","",null,[[],["ioctlnr",6]]],[5,"KVM_CHECK_EXTENSION","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_VCPU_MMAP_SIZE","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_MEMORY_REGION","","",null,[[],["ioctlnr",6]]],[5,"KVM_CREATE_VCPU","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_DIRTY_LOG","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_NR_MMU_PAGES","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_NR_MMU_PAGES","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_USER_MEMORY_REGION","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_TSS_ADDR","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_IDENTITY_MAP_ADDR","","",null,[[],["ioctlnr",6]]],[5,"KVM_CREATE_IRQCHIP","","",null,[[],["ioctlnr",6]]],[5,"KVM_IRQ_LINE","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_IRQCHIP","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_IRQCHIP","","",null,[[],["ioctlnr",6]]],[5,"KVM_CREATE_PIT","","",null,[[],["ioctlnr",6]]],[5,"KVM_IRQ_LINE_STATUS","","",null,[[],["ioctlnr",6]]],[5,"KVM_REGISTER_COALESCED_MMIO","","",null,[[],["ioctlnr",6]]],[5,"KVM_UNREGISTER_COALESCED_MMIO","","",null,[[],["ioctlnr",6]]],[5,"KVM_ASSIGN_PCI_DEVICE","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_GSI_ROUTING","","",null,[[],["ioctlnr",6]]],[5,"KVM_ASSIGN_DEV_IRQ","","",null,[[],["ioctlnr",6]]],[5,"KVM_REINJECT_CONTROL","","",null,[[],["ioctlnr",6]]],[5,"KVM_DEASSIGN_PCI_DEVICE","","",null,[[],["ioctlnr",6]]],[5,"KVM_ASSIGN_SET_MSIX_NR","","",null,[[],["ioctlnr",6]]],[5,"KVM_ASSIGN_SET_MSIX_ENTRY","","",null,[[],["ioctlnr",6]]],[5,"KVM_DEASSIGN_DEV_IRQ","","",null,[[],["ioctlnr",6]]],[5,"KVM_IRQFD","","",null,[[],["ioctlnr",6]]],[5,"KVM_CREATE_PIT2","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_BOOT_CPU_ID","","",null,[[],["ioctlnr",6]]],[5,"KVM_IOEVENTFD","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_CLOCK","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_CLOCK","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_TSC_KHZ","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_TSC_KHZ","","",null,[[],["ioctlnr",6]]],[5,"KVM_ASSIGN_SET_INTX_MASK","","",null,[[],["ioctlnr",6]]],[5,"KVM_SIGNAL_MSI","","",null,[[],["ioctlnr",6]]],[5,"KVM_CREATE_DEVICE","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_DEVICE_ATTR","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_DEVICE_ATTR","","",null,[[],["ioctlnr",6]]],[5,"KVM_HAS_DEVICE_ATTR","","",null,[[],["ioctlnr",6]]],[5,"KVM_RUN","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_REGS","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_REGS","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_SREGS","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_SREGS","","",null,[[],["ioctlnr",6]]],[5,"KVM_TRANSLATE","","",null,[[],["ioctlnr",6]]],[5,"KVM_INTERRUPT","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_SIGNAL_MASK","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_FPU","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_FPU","","",null,[[],["ioctlnr",6]]],[5,"KVM_TPR_ACCESS_REPORTING","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_VAPIC_ADDR","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_MP_STATE","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_MP_STATE","","",null,[[],["ioctlnr",6]]],[5,"KVM_NMI","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_GUEST_DEBUG","","",null,[[],["ioctlnr",6]]],[5,"KVM_ENABLE_CAP","","",null,[[],["ioctlnr",6]]],[5,"KVM_DIRTY_TLB","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_ONE_REG","","",null,[[],["ioctlnr",6]]],[5,"KVM_SET_ONE_REG","","",null,[[],["ioctlnr",6]]],[5,"KVM_KVMCLOCK_CTRL","","",null,[[],["ioctlnr",6]]],[5,"KVM_GET_REG_LIST","","",null,[[],["ioctlnr",6]]],[5,"KVM_SMI","","",null,[[],["ioctlnr",6]]],[11,"from","kvm_sys::x86::bindings","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"clone","","",0,[[],["__bindgenbitfieldunit",3]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[],["__kernel_fd_set",3]]],[11,"clone","","",4,[[],["__kernel_fsid_t",3]]],[11,"clone","","",5,[[],["kvm_memory_alias",3]]],[11,"clone","","",6,[[],["kvm_pic_state",3]]],[11,"clone","","",7,[[],["kvm_ioapic_state",3]]],[11,"clone","","",8,[[],["kvm_ioapic_state__bindgen_ty_1",19]]],[11,"clone","","",9,[[],["kvm_ioapic_state__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",10,[[],["kvm_regs",3]]],[11,"clone","","",11,[[],["kvm_lapic_state",3]]],[11,"clone","","",12,[[],["kvm_segment",3]]],[11,"clone","","",13,[[],["kvm_dtable",3]]],[11,"clone","","",14,[[],["kvm_sregs",3]]],[11,"clone","","",15,[[],["kvm_fpu",3]]],[11,"clone","","",16,[[],["kvm_msr_entry",3]]],[11,"clone","","",19,[[],["kvm_cpuid_entry",3]]],[11,"clone","","",21,[[],["kvm_cpuid_entry2",3]]],[11,"clone","","",23,[[],["kvm_pit_channel_state",3]]],[11,"clone","","",24,[[],["kvm_debug_exit_arch",3]]],[11,"clone","","",25,[[],["kvm_guest_debug_arch",3]]],[11,"clone","","",26,[[],["kvm_pit_state",3]]],[11,"clone","","",27,[[],["kvm_pit_state2",3]]],[11,"clone","","",28,[[],["kvm_reinject_control",3]]],[11,"clone","","",29,[[],["kvm_vcpu_events",3]]],[11,"clone","","",30,[[],["kvm_vcpu_events__bindgen_ty_1",3]]],[11,"clone","","",31,[[],["kvm_vcpu_events__bindgen_ty_2",3]]],[11,"clone","","",32,[[],["kvm_vcpu_events__bindgen_ty_3",3]]],[11,"clone","","",33,[[],["kvm_vcpu_events__bindgen_ty_4",3]]],[11,"clone","","",34,[[],["kvm_debugregs",3]]],[11,"clone","","",35,[[],["kvm_xsave",3]]],[11,"clone","","",36,[[],["kvm_xcr",3]]],[11,"clone","","",37,[[],["kvm_xcrs",3]]],[11,"clone","","",38,[[],["kvm_sync_regs",3]]],[11,"clone","","",39,[[],["kvm_vmx_nested_state_data",3]]],[11,"clone","","",40,[[],["kvm_vmx_nested_state_hdr",3]]],[11,"clone","","",41,[[],["kvm_vmx_nested_state_hdr__bindgen_ty_1",3]]],[11,"clone","","",43,[[],["kvm_nested_state__bindgen_ty_1",19]]],[11,"clone","","",46,[[],["kvm_user_trace_setup",3]]],[11,"clone","","",47,[[],["kvm_breakpoint",3]]],[11,"clone","","",48,[[],["kvm_debug_guest",3]]],[11,"clone","","",49,[[],["kvm_memory_region",3]]],[11,"clone","","",50,[[],["kvm_userspace_memory_region",3]]],[11,"clone","","",51,[[],["kvm_irq_level",3]]],[11,"clone","","",52,[[],["kvm_irq_level__bindgen_ty_1",19]]],[11,"clone","","",53,[[],["kvm_irqchip",3]]],[11,"clone","","",54,[[],["kvm_irqchip__bindgen_ty_1",19]]],[11,"clone","","",55,[[],["kvm_pit_config",3]]],[11,"clone","","",56,[[],["kvm_s390_skeys",3]]],[11,"clone","","",57,[[],["kvm_s390_cmma_log",3]]],[11,"clone","","",58,[[],["kvm_s390_cmma_log__bindgen_ty_1",19]]],[11,"clone","","",59,[[],["kvm_hyperv_exit",3]]],[11,"clone","","",60,[[],["kvm_hyperv_exit__bindgen_ty_1",19]]],[11,"clone","","",61,[[],["kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",62,[[],["kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_2",3]]],[11,"clone","","",63,[[],["kvm_run",3]]],[11,"clone","","",64,[[],["kvm_run__bindgen_ty_1",19]]],[11,"clone","","",65,[[],["kvm_run__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",66,[[],["kvm_run__bindgen_ty_1__bindgen_ty_2",3]]],[11,"clone","","",67,[[],["kvm_run__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",68,[[],["kvm_run__bindgen_ty_1__bindgen_ty_4",3]]],[11,"clone","","",69,[[],["kvm_run__bindgen_ty_1__bindgen_ty_5",3]]],[11,"clone","","",70,[[],["kvm_run__bindgen_ty_1__bindgen_ty_6",3]]],[11,"clone","","",71,[[],["kvm_run__bindgen_ty_1__bindgen_ty_7",3]]],[11,"clone","","",72,[[],["kvm_run__bindgen_ty_1__bindgen_ty_8",3]]],[11,"clone","","",73,[[],["kvm_run__bindgen_ty_1__bindgen_ty_9",3]]],[11,"clone","","",74,[[],["kvm_run__bindgen_ty_1__bindgen_ty_10",3]]],[11,"clone","","",75,[[],["kvm_run__bindgen_ty_1__bindgen_ty_11",3]]],[11,"clone","","",76,[[],["kvm_run__bindgen_ty_1__bindgen_ty_12",3]]],[11,"clone","","",77,[[],["kvm_run__bindgen_ty_1__bindgen_ty_13",3]]],[11,"clone","","",78,[[],["kvm_run__bindgen_ty_1__bindgen_ty_14",3]]],[11,"clone","","",79,[[],["kvm_run__bindgen_ty_1__bindgen_ty_15",3]]],[11,"clone","","",80,[[],["kvm_run__bindgen_ty_1__bindgen_ty_16",3]]],[11,"clone","","",81,[[],["kvm_run__bindgen_ty_1__bindgen_ty_17",3]]],[11,"clone","","",82,[[],["kvm_run__bindgen_ty_1__bindgen_ty_18",3]]],[11,"clone","","",83,[[],["kvm_run__bindgen_ty_1__bindgen_ty_19",3]]],[11,"clone","","",84,[[],["kvm_run__bindgen_ty_2",19]]],[11,"clone","","",85,[[],["kvm_coalesced_mmio_zone",3]]],[11,"clone","","",86,[[],["kvm_coalesced_mmio_zone__bindgen_ty_1",19]]],[11,"clone","","",87,[[],["kvm_coalesced_mmio",3]]],[11,"clone","","",88,[[],["kvm_coalesced_mmio__bindgen_ty_1",19]]],[11,"clone","","",90,[[],["kvm_translation",3]]],[11,"clone","","",91,[[],["kvm_s390_mem_op",3]]],[11,"clone","","",92,[[],["kvm_interrupt",3]]],[11,"clone","","",93,[[],["kvm_dirty_log",3]]],[11,"clone","","",94,[[],["kvm_dirty_log__bindgen_ty_1",19]]],[11,"clone","","",95,[[],["kvm_clear_dirty_log",3]]],[11,"clone","","",96,[[],["kvm_clear_dirty_log__bindgen_ty_1",19]]],[11,"clone","","",98,[[],["kvm_tpr_access_ctl",3]]],[11,"clone","","",99,[[],["kvm_vapic_addr",3]]],[11,"clone","","",100,[[],["kvm_mp_state",3]]],[11,"clone","","",101,[[],["kvm_s390_psw",3]]],[11,"clone","","",102,[[],["kvm_s390_interrupt",3]]],[11,"clone","","",103,[[],["kvm_s390_io_info",3]]],[11,"clone","","",104,[[],["kvm_s390_ext_info",3]]],[11,"clone","","",105,[[],["kvm_s390_pgm_info",3]]],[11,"clone","","",106,[[],["kvm_s390_prefix_info",3]]],[11,"clone","","",107,[[],["kvm_s390_extcall_info",3]]],[11,"clone","","",108,[[],["kvm_s390_emerg_info",3]]],[11,"clone","","",109,[[],["kvm_s390_stop_info",3]]],[11,"clone","","",110,[[],["kvm_s390_mchk_info",3]]],[11,"clone","","",111,[[],["kvm_s390_irq",3]]],[11,"clone","","",112,[[],["kvm_s390_irq__bindgen_ty_1",19]]],[11,"clone","","",113,[[],["kvm_s390_irq_state",3]]],[11,"clone","","",114,[[],["kvm_guest_debug",3]]],[11,"clone","","",115,[[],["kvm_ioeventfd",3]]],[11,"clone","","",116,[[],["kvm_enable_cap",3]]],[11,"clone","","",117,[[],["kvm_ppc_pvinfo",3]]],[11,"clone","","",118,[[],["kvm_ppc_one_page_size",3]]],[11,"clone","","",119,[[],["kvm_ppc_one_seg_page_size",3]]],[11,"clone","","",120,[[],["kvm_ppc_smmu_info",3]]],[11,"clone","","",121,[[],["kvm_ppc_resize_hpt",3]]],[11,"clone","","",122,[[],["kvm_irq_routing_irqchip",3]]],[11,"clone","","",123,[[],["kvm_irq_routing_msi",3]]],[11,"clone","","",124,[[],["kvm_irq_routing_msi__bindgen_ty_1",19]]],[11,"clone","","",125,[[],["kvm_irq_routing_s390_adapter",3]]],[11,"clone","","",126,[[],["kvm_irq_routing_hv_sint",3]]],[11,"clone","","",127,[[],["kvm_irq_routing_entry",3]]],[11,"clone","","",128,[[],["kvm_irq_routing_entry__bindgen_ty_1",19]]],[11,"clone","","",130,[[],["kvm_x86_mce",3]]],[11,"clone","","",131,[[],["kvm_xen_hvm_config",3]]],[11,"clone","","",132,[[],["kvm_irqfd",3]]],[11,"clone","","",133,[[],["kvm_clock_data",3]]],[11,"clone","","",134,[[],["kvm_config_tlb",3]]],[11,"clone","","",135,[[],["kvm_dirty_tlb",3]]],[11,"clone","","",137,[[],["kvm_one_reg",3]]],[11,"clone","","",138,[[],["kvm_msi",3]]],[11,"clone","","",139,[[],["kvm_arm_device_addr",3]]],[11,"clone","","",140,[[],["kvm_create_device",3]]],[11,"clone","","",141,[[],["kvm_device_attr",3]]],[11,"clone","","",142,[[],["kvm_vfio_spapr_tce",3]]],[11,"clone","","",143,[[],["kvm_s390_ucas_mapping",3]]],[11,"clone","","",144,[[],["kvm_enc_region",3]]],[11,"clone","","",145,[[],["kvm_sev_cmd",3]]],[11,"clone","","",146,[[],["kvm_sev_launch_start",3]]],[11,"clone","","",147,[[],["kvm_sev_launch_update_data",3]]],[11,"clone","","",148,[[],["kvm_sev_launch_secret",3]]],[11,"clone","","",149,[[],["kvm_sev_launch_measure",3]]],[11,"clone","","",150,[[],["kvm_sev_guest_status",3]]],[11,"clone","","",151,[[],["kvm_sev_dbg",3]]],[11,"clone","","",152,[[],["kvm_assigned_pci_dev",3]]],[11,"clone","","",153,[[],["kvm_assigned_pci_dev__bindgen_ty_1",19]]],[11,"clone","","",154,[[],["kvm_assigned_irq",3]]],[11,"clone","","",155,[[],["kvm_assigned_irq__bindgen_ty_1",19]]],[11,"clone","","",156,[[],["kvm_assigned_msix_nr",3]]],[11,"clone","","",157,[[],["kvm_assigned_msix_entry",3]]],[11,"clone","","",158,[[],["kvm_hyperv_eventfd",3]]],[11,"default","","",0,[[],["__bindgenbitfieldunit",3]]],[11,"default","","",1,[[],["__incompletearrayfield",3]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[],["__kernel_fd_set",3]]],[11,"default","","",4,[[],["__kernel_fsid_t",3]]],[11,"default","","",5,[[],["kvm_memory_alias",3]]],[11,"default","","",6,[[],["kvm_pic_state",3]]],[11,"default","","",9,[[],["kvm_ioapic_state__bindgen_ty_1__bindgen_ty_1",3]]],[11,"default","","",8,[[]]],[11,"default","","",7,[[]]],[11,"default","","",10,[[],["kvm_regs",3]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[],["kvm_segment",3]]],[11,"default","","",13,[[],["kvm_dtable",3]]],[11,"default","","",14,[[],["kvm_sregs",3]]],[11,"default","","",15,[[],["kvm_fpu",3]]],[11,"default","","",16,[[],["kvm_msr_entry",3]]],[11,"default","","",17,[[],["kvm_msrs",3]]],[11,"default","","",18,[[],["kvm_msr_list",3]]],[11,"default","","",19,[[],["kvm_cpuid_entry",3]]],[11,"default","","",20,[[],["kvm_cpuid",3]]],[11,"default","","",21,[[],["kvm_cpuid_entry2",3]]],[11,"default","","",22,[[],["kvm_cpuid2",3]]],[11,"default","","",23,[[],["kvm_pit_channel_state",3]]],[11,"default","","",24,[[],["kvm_debug_exit_arch",3]]],[11,"default","","",25,[[],["kvm_guest_debug_arch",3]]],[11,"default","","",26,[[],["kvm_pit_state",3]]],[11,"default","","",27,[[],["kvm_pit_state2",3]]],[11,"default","","",28,[[],["kvm_reinject_control",3]]],[11,"default","","",29,[[],["kvm_vcpu_events",3]]],[11,"default","","",30,[[],["kvm_vcpu_events__bindgen_ty_1",3]]],[11,"default","","",31,[[],["kvm_vcpu_events__bindgen_ty_2",3]]],[11,"default","","",32,[[],["kvm_vcpu_events__bindgen_ty_3",3]]],[11,"default","","",33,[[],["kvm_vcpu_events__bindgen_ty_4",3]]],[11,"default","","",34,[[],["kvm_debugregs",3]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[],["kvm_xcr",3]]],[11,"default","","",37,[[],["kvm_xcrs",3]]],[11,"default","","",38,[[],["kvm_sync_regs",3]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[],["kvm_vmx_nested_state_hdr",3]]],[11,"default","","",41,[[],["kvm_vmx_nested_state_hdr__bindgen_ty_1",3]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",42,[[]]],[11,"default","","",45,[[],["kvm_pmu_event_filter",3]]],[11,"default","","",46,[[],["kvm_user_trace_setup",3]]],[11,"default","","",47,[[],["kvm_breakpoint",3]]],[11,"default","","",48,[[],["kvm_debug_guest",3]]],[11,"default","","",49,[[],["kvm_memory_region",3]]],[11,"default","","",50,[[],["kvm_userspace_memory_region",3]]],[11,"default","","",52,[[]]],[11,"default","","",51,[[]]],[11,"default","","",54,[[]]],[11,"default","","",53,[[]]],[11,"default","","",55,[[],["kvm_pit_config",3]]],[11,"default","","",56,[[],["kvm_s390_skeys",3]]],[11,"default","","",58,[[]]],[11,"default","","",57,[[]]],[11,"default","","",61,[[],["kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_1",3]]],[11,"default","","",62,[[],["kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_2",3]]],[11,"default","","",60,[[]]],[11,"default","","",59,[[]]],[11,"default","","",65,[[],["kvm_run__bindgen_ty_1__bindgen_ty_1",3]]],[11,"default","","",66,[[],["kvm_run__bindgen_ty_1__bindgen_ty_2",3]]],[11,"default","","",67,[[],["kvm_run__bindgen_ty_1__bindgen_ty_3",3]]],[11,"default","","",68,[[],["kvm_run__bindgen_ty_1__bindgen_ty_4",3]]],[11,"default","","",69,[[],["kvm_run__bindgen_ty_1__bindgen_ty_5",3]]],[11,"default","","",70,[[],["kvm_run__bindgen_ty_1__bindgen_ty_6",3]]],[11,"default","","",71,[[],["kvm_run__bindgen_ty_1__bindgen_ty_7",3]]],[11,"default","","",72,[[],["kvm_run__bindgen_ty_1__bindgen_ty_8",3]]],[11,"default","","",73,[[],["kvm_run__bindgen_ty_1__bindgen_ty_9",3]]],[11,"default","","",74,[[],["kvm_run__bindgen_ty_1__bindgen_ty_10",3]]],[11,"default","","",75,[[],["kvm_run__bindgen_ty_1__bindgen_ty_11",3]]],[11,"default","","",76,[[],["kvm_run__bindgen_ty_1__bindgen_ty_12",3]]],[11,"default","","",77,[[],["kvm_run__bindgen_ty_1__bindgen_ty_13",3]]],[11,"default","","",78,[[],["kvm_run__bindgen_ty_1__bindgen_ty_14",3]]],[11,"default","","",79,[[],["kvm_run__bindgen_ty_1__bindgen_ty_15",3]]],[11,"default","","",80,[[],["kvm_run__bindgen_ty_1__bindgen_ty_16",3]]],[11,"default","","",81,[[],["kvm_run__bindgen_ty_1__bindgen_ty_17",3]]],[11,"default","","",82,[[],["kvm_run__bindgen_ty_1__bindgen_ty_18",3]]],[11,"default","","",83,[[],["kvm_run__bindgen_ty_1__bindgen_ty_19",3]]],[11,"default","","",64,[[]]],[11,"default","","",84,[[]]],[11,"default","","",63,[[]]],[11,"default","","",86,[[]]],[11,"default","","",85,[[]]],[11,"default","","",88,[[]]],[11,"default","","",87,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[],["kvm_translation",3]]],[11,"default","","",91,[[],["kvm_s390_mem_op",3]]],[11,"default","","",92,[[],["kvm_interrupt",3]]],[11,"default","","",94,[[]]],[11,"default","","",93,[[]]],[11,"default","","",96,[[]]],[11,"default","","",95,[[]]],[11,"default","","",97,[[],["kvm_signal_mask",3]]],[11,"default","","",98,[[],["kvm_tpr_access_ctl",3]]],[11,"default","","",99,[[],["kvm_vapic_addr",3]]],[11,"default","","",100,[[],["kvm_mp_state",3]]],[11,"default","","",101,[[],["kvm_s390_psw",3]]],[11,"default","","",102,[[],["kvm_s390_interrupt",3]]],[11,"default","","",103,[[],["kvm_s390_io_info",3]]],[11,"default","","",104,[[],["kvm_s390_ext_info",3]]],[11,"default","","",105,[[],["kvm_s390_pgm_info",3]]],[11,"default","","",106,[[],["kvm_s390_prefix_info",3]]],[11,"default","","",107,[[],["kvm_s390_extcall_info",3]]],[11,"default","","",108,[[],["kvm_s390_emerg_info",3]]],[11,"default","","",109,[[],["kvm_s390_stop_info",3]]],[11,"default","","",110,[[],["kvm_s390_mchk_info",3]]],[11,"default","","",112,[[]]],[11,"default","","",111,[[]]],[11,"default","","",113,[[],["kvm_s390_irq_state",3]]],[11,"default","","",114,[[],["kvm_guest_debug",3]]],[11,"default","","",115,[[]]],[11,"default","","",116,[[]]],[11,"default","","",117,[[]]],[11,"default","","",118,[[],["kvm_ppc_one_page_size",3]]],[11,"default","","",119,[[],["kvm_ppc_one_seg_page_size",3]]],[11,"default","","",120,[[],["kvm_ppc_smmu_info",3]]],[11,"default","","",121,[[],["kvm_ppc_resize_hpt",3]]],[11,"default","","",122,[[],["kvm_irq_routing_irqchip",3]]],[11,"default","","",124,[[]]],[11,"default","","",123,[[]]],[11,"default","","",125,[[],["kvm_irq_routing_s390_adapter",3]]],[11,"default","","",126,[[],["kvm_irq_routing_hv_sint",3]]],[11,"default","","",128,[[]]],[11,"default","","",127,[[]]],[11,"default","","",129,[[]]],[11,"default","","",130,[[],["kvm_x86_mce",3]]],[11,"default","","",131,[[],["kvm_xen_hvm_config",3]]],[11,"default","","",132,[[],["kvm_irqfd",3]]],[11,"default","","",133,[[],["kvm_clock_data",3]]],[11,"default","","",134,[[],["kvm_config_tlb",3]]],[11,"default","","",135,[[],["kvm_dirty_tlb",3]]],[11,"default","","",136,[[],["kvm_reg_list",3]]],[11,"default","","",137,[[],["kvm_one_reg",3]]],[11,"default","","",138,[[],["kvm_msi",3]]],[11,"default","","",139,[[],["kvm_arm_device_addr",3]]],[11,"default","","",140,[[],["kvm_create_device",3]]],[11,"default","","",141,[[],["kvm_device_attr",3]]],[11,"default","","",142,[[],["kvm_vfio_spapr_tce",3]]],[11,"default","","",143,[[],["kvm_s390_ucas_mapping",3]]],[11,"default","","",144,[[],["kvm_enc_region",3]]],[11,"default","","",145,[[],["kvm_sev_cmd",3]]],[11,"default","","",146,[[],["kvm_sev_launch_start",3]]],[11,"default","","",147,[[],["kvm_sev_launch_update_data",3]]],[11,"default","","",148,[[],["kvm_sev_launch_secret",3]]],[11,"default","","",149,[[],["kvm_sev_launch_measure",3]]],[11,"default","","",150,[[],["kvm_sev_guest_status",3]]],[11,"default","","",151,[[],["kvm_sev_dbg",3]]],[11,"default","","",153,[[]]],[11,"default","","",152,[[]]],[11,"default","","",155,[[]]],[11,"default","","",154,[[]]],[11,"default","","",156,[[],["kvm_assigned_msix_nr",3]]],[11,"default","","",157,[[],["kvm_assigned_msix_entry",3]]],[11,"default","","",158,[[],["kvm_hyperv_eventfd",3]]],[11,"cmp","","",0,[[["__bindgenbitfieldunit",3]],["ordering",4]]],[11,"eq","","",0,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"ne","","",0,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"eq","","",2,[[["__bindgenunionfield",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["__bindgenbitfieldunit",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"le","","",0,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"gt","","",0,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"ge","","",0,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",2,[[]]],[11,"set_len","","",22,[[["usize",15]]]],[11,"get_len","","",22,[[],["usize",15]]],[11,"get_slice","","",22,[[["usize",15]]]],[11,"get_mut_slice","","",22,[[["usize",15]]]]],"p":[[3,"__BindgenBitfieldUnit"],[3,"__IncompleteArrayField"],[3,"__BindgenUnionField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"kvm_memory_alias"],[3,"kvm_pic_state"],[3,"kvm_ioapic_state"],[19,"kvm_ioapic_state__bindgen_ty_1"],[3,"kvm_ioapic_state__bindgen_ty_1__bindgen_ty_1"],[3,"kvm_regs"],[3,"kvm_lapic_state"],[3,"kvm_segment"],[3,"kvm_dtable"],[3,"kvm_sregs"],[3,"kvm_fpu"],[3,"kvm_msr_entry"],[3,"kvm_msrs"],[3,"kvm_msr_list"],[3,"kvm_cpuid_entry"],[3,"kvm_cpuid"],[3,"kvm_cpuid_entry2"],[3,"kvm_cpuid2"],[3,"kvm_pit_channel_state"],[3,"kvm_debug_exit_arch"],[3,"kvm_guest_debug_arch"],[3,"kvm_pit_state"],[3,"kvm_pit_state2"],[3,"kvm_reinject_control"],[3,"kvm_vcpu_events"],[3,"kvm_vcpu_events__bindgen_ty_1"],[3,"kvm_vcpu_events__bindgen_ty_2"],[3,"kvm_vcpu_events__bindgen_ty_3"],[3,"kvm_vcpu_events__bindgen_ty_4"],[3,"kvm_debugregs"],[3,"kvm_xsave"],[3,"kvm_xcr"],[3,"kvm_xcrs"],[3,"kvm_sync_regs"],[3,"kvm_vmx_nested_state_data"],[3,"kvm_vmx_nested_state_hdr"],[3,"kvm_vmx_nested_state_hdr__bindgen_ty_1"],[3,"kvm_nested_state"],[19,"kvm_nested_state__bindgen_ty_1"],[3,"kvm_nested_state__bindgen_ty_2"],[3,"kvm_pmu_event_filter"],[3,"kvm_user_trace_setup"],[3,"kvm_breakpoint"],[3,"kvm_debug_guest"],[3,"kvm_memory_region"],[3,"kvm_userspace_memory_region"],[3,"kvm_irq_level"],[19,"kvm_irq_level__bindgen_ty_1"],[3,"kvm_irqchip"],[19,"kvm_irqchip__bindgen_ty_1"],[3,"kvm_pit_config"],[3,"kvm_s390_skeys"],[3,"kvm_s390_cmma_log"],[19,"kvm_s390_cmma_log__bindgen_ty_1"],[3,"kvm_hyperv_exit"],[19,"kvm_hyperv_exit__bindgen_ty_1"],[3,"kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_1"],[3,"kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_2"],[3,"kvm_run"],[19,"kvm_run__bindgen_ty_1"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_1"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_2"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_3"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_4"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_5"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_6"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_7"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_8"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_9"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_10"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_11"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_12"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_13"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_14"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_15"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_16"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_17"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_18"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_19"],[19,"kvm_run__bindgen_ty_2"],[3,"kvm_coalesced_mmio_zone"],[19,"kvm_coalesced_mmio_zone__bindgen_ty_1"],[3,"kvm_coalesced_mmio"],[19,"kvm_coalesced_mmio__bindgen_ty_1"],[3,"kvm_coalesced_mmio_ring"],[3,"kvm_translation"],[3,"kvm_s390_mem_op"],[3,"kvm_interrupt"],[3,"kvm_dirty_log"],[19,"kvm_dirty_log__bindgen_ty_1"],[3,"kvm_clear_dirty_log"],[19,"kvm_clear_dirty_log__bindgen_ty_1"],[3,"kvm_signal_mask"],[3,"kvm_tpr_access_ctl"],[3,"kvm_vapic_addr"],[3,"kvm_mp_state"],[3,"kvm_s390_psw"],[3,"kvm_s390_interrupt"],[3,"kvm_s390_io_info"],[3,"kvm_s390_ext_info"],[3,"kvm_s390_pgm_info"],[3,"kvm_s390_prefix_info"],[3,"kvm_s390_extcall_info"],[3,"kvm_s390_emerg_info"],[3,"kvm_s390_stop_info"],[3,"kvm_s390_mchk_info"],[3,"kvm_s390_irq"],[19,"kvm_s390_irq__bindgen_ty_1"],[3,"kvm_s390_irq_state"],[3,"kvm_guest_debug"],[3,"kvm_ioeventfd"],[3,"kvm_enable_cap"],[3,"kvm_ppc_pvinfo"],[3,"kvm_ppc_one_page_size"],[3,"kvm_ppc_one_seg_page_size"],[3,"kvm_ppc_smmu_info"],[3,"kvm_ppc_resize_hpt"],[3,"kvm_irq_routing_irqchip"],[3,"kvm_irq_routing_msi"],[19,"kvm_irq_routing_msi__bindgen_ty_1"],[3,"kvm_irq_routing_s390_adapter"],[3,"kvm_irq_routing_hv_sint"],[3,"kvm_irq_routing_entry"],[19,"kvm_irq_routing_entry__bindgen_ty_1"],[3,"kvm_irq_routing"],[3,"kvm_x86_mce"],[3,"kvm_xen_hvm_config"],[3,"kvm_irqfd"],[3,"kvm_clock_data"],[3,"kvm_config_tlb"],[3,"kvm_dirty_tlb"],[3,"kvm_reg_list"],[3,"kvm_one_reg"],[3,"kvm_msi"],[3,"kvm_arm_device_addr"],[3,"kvm_create_device"],[3,"kvm_device_attr"],[3,"kvm_vfio_spapr_tce"],[3,"kvm_s390_ucas_mapping"],[3,"kvm_enc_region"],[3,"kvm_sev_cmd"],[3,"kvm_sev_launch_start"],[3,"kvm_sev_launch_update_data"],[3,"kvm_sev_launch_secret"],[3,"kvm_sev_launch_measure"],[3,"kvm_sev_guest_status"],[3,"kvm_sev_dbg"],[3,"kvm_assigned_pci_dev"],[19,"kvm_assigned_pci_dev__bindgen_ty_1"],[3,"kvm_assigned_irq"],[19,"kvm_assigned_irq__bindgen_ty_1"],[3,"kvm_assigned_msix_nr"],[3,"kvm_assigned_msix_entry"],[3,"kvm_hyperv_eventfd"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[5,"isalnum","libc","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtof","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"hstrerror","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"endservent","","",null,null],[5,"getservbyname","","",null,null],[5,"getservbyport","","",null,null],[5,"getservent","","",null,null],[5,"setservent","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"open_wmemstream","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has …",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"preadv64","","",null,null],[5,"pwritev64","","",null,null],[5,"forkpty","","",null,null],[5,"openpty","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"getnameinfo","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"futimes","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"accept4","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syncfs","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"pthread_spin_init","","",null,null],[5,"pthread_spin_destroy","","",null,null],[5,"pthread_spin_lock","","",null,null],[5,"pthread_spin_trylock","","",null,null],[5,"pthread_spin_unlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sendfile64","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"iconv_open","","",null,null],[5,"iconv","","",null,null],[5,"iconv_close","","",null,null],[5,"gettid","","",null,null],[5,"timer_create","","",null,null],[5,"timer_delete","","",null,null],[5,"timer_getoverrun","","",null,null],[5,"timer_gettime","","",null,null],[5,"timer_settime","","",null,null],[5,"gethostid","","",null,null],[5,"pthread_getcpuclockid","","",null,null],[5,"memmem","","",null,null],[5,"sched_getcpu","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"clock_adjtime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"preadv2","","",null,null],[5,"pwritev2","","",null,null],[5,"preadv64v2","","",null,null],[5,"pwritev64v2","","",null,null],[5,"renameat2","","",null,null],[5,"explicit_bzero","","",null,null],[5,"reallocarray","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"mallinfo","","",null,null],[5,"mallinfo2","","",null,null],[5,"malloc_info","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"sethostid","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"dladdr1","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[4,"DIR","","",null,null],[6,"locale_t","","",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"timer_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[4,"timezone","","",null,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_LAZYTIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_AUTHHDR","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_IPSEC_POLICY","","",null,null],[17,"IPV6_XFRM_POLICY","","",null,null],[17,"IPV6_HDRINCL","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVHOPLIMIT","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVHOPOPTS","","",null,null],[17,"IPV6_HOPOPTS","","",null,null],[17,"IPV6_RTHDRDSTOPTS","","",null,null],[17,"IPV6_RECVRTHDR","","",null,null],[17,"IPV6_RTHDR","","",null,null],[17,"IPV6_RECVDSTOPTS","","",null,null],[17,"IPV6_DSTOPTS","","",null,null],[17,"IPV6_RECVPATHMTU","","",null,null],[17,"IPV6_PATHMTU","","",null,null],[17,"IPV6_DONTFRAG","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_AUTOFLOWLABEL","","",null,null],[17,"IPV6_ADDR_PREFERENCES","","",null,null],[17,"IPV6_MINHOPCOUNT","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_IF","","",null,null],[17,"IPV6_PREFER_SRC_TMP","","",null,null],[17,"IPV6_PREFER_SRC_PUBLIC","","",null,null],[17,"IPV6_PREFER_SRC_PUBTMP_DEFAULT","","",null,null],[17,"IPV6_PREFER_SRC_COA","","",null,null],[17,"IPV6_PREFER_SRC_HOME","","",null,null],[17,"IPV6_PREFER_SRC_CGA","","",null,null],[17,"IPV6_PREFER_SRC_NONCGA","","",null,null],[17,"IPV6_PMTUDISC_DONT","","",null,null],[17,"IPV6_PMTUDISC_WANT","","",null,null],[17,"IPV6_PMTUDISC_DO","","",null,null],[17,"IPV6_PMTUDISC_PROBE","","",null,null],[17,"IPV6_PMTUDISC_INTERFACE","","",null,null],[17,"IPV6_PMTUDISC_OMIT","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_NOTSENT_LOWAT","","",null,null],[17,"TCP_CC_INFO","","",null,null],[17,"TCP_SAVE_SYN","","",null,null],[17,"TCP_SAVED_SYN","","",null,null],[17,"TCP_REPAIR_WINDOW","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"TCP_ULP","","",null,null],[17,"TCP_MD5SIG_EXT","","",null,null],[17,"TCP_FASTOPEN_KEY","","",null,null],[17,"TCP_FASTOPEN_NO_COOKIE","","",null,null],[17,"TCP_ZEROCOPY_RECEIVE","","",null,null],[17,"TCP_INQ","","",null,null],[17,"TCP_CM_INQ","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_CAN","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]],["bool",15]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"SIGRTMAX","","",null,[[],["c_int",6]]],[5,"SIGRTMIN","","",null,[[],["c_int",6]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]],["bool",15]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]],["bool",15]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]],["bool",15]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]],["bool",15]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]],["bool",15]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[["u8",15]],["u8",15]]],[5,"IPOPT_CLASS","","",null,[[["u8",15]],["u8",15]]],[5,"IPOPT_NUMBER","","",null,[[["u8",15]],["u8",15]]],[5,"IPTOS_ECN","","",null,[[["u8",15]],["u8",15]]],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"pthread_spinlock_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"canid_t","","",null,null],[6,"can_err_mask_t","","",null,null],[6,"iconv_t","","",null,null],[4,"fpos64_t","","",null,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"uinput_ff_upload","","",null,null],[12,"request_id","","",65,null],[12,"retval","","",65,null],[12,"effect","","",65,null],[12,"old","","",65,null],[3,"uinput_ff_erase","","",null,null],[12,"request_id","","",66,null],[12,"retval","","",66,null],[12,"effect_id","","",66,null],[3,"uinput_abs_setup","","",null,null],[12,"code","","",67,null],[12,"absinfo","","",67,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",68,null],[12,"dlpi_name","","",68,null],[12,"dlpi_phdr","","",68,null],[12,"dlpi_phnum","","",68,null],[12,"dlpi_adds","","",68,null],[12,"dlpi_subs","","",68,null],[12,"dlpi_tls_modid","","",68,null],[12,"dlpi_tls_data","","",68,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",69,null],[12,"e_type","","",69,null],[12,"e_machine","","",69,null],[12,"e_version","","",69,null],[12,"e_entry","","",69,null],[12,"e_phoff","","",69,null],[12,"e_shoff","","",69,null],[12,"e_flags","","",69,null],[12,"e_ehsize","","",69,null],[12,"e_phentsize","","",69,null],[12,"e_phnum","","",69,null],[12,"e_shentsize","","",69,null],[12,"e_shnum","","",69,null],[12,"e_shstrndx","","",69,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",70,null],[12,"e_type","","",70,null],[12,"e_machine","","",70,null],[12,"e_version","","",70,null],[12,"e_entry","","",70,null],[12,"e_phoff","","",70,null],[12,"e_shoff","","",70,null],[12,"e_flags","","",70,null],[12,"e_ehsize","","",70,null],[12,"e_phentsize","","",70,null],[12,"e_phnum","","",70,null],[12,"e_shentsize","","",70,null],[12,"e_shnum","","",70,null],[12,"e_shstrndx","","",70,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",71,null],[12,"st_value","","",71,null],[12,"st_size","","",71,null],[12,"st_info","","",71,null],[12,"st_other","","",71,null],[12,"st_shndx","","",71,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",72,null],[12,"st_info","","",72,null],[12,"st_other","","",72,null],[12,"st_shndx","","",72,null],[12,"st_value","","",72,null],[12,"st_size","","",72,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",73,null],[12,"p_offset","","",73,null],[12,"p_vaddr","","",73,null],[12,"p_paddr","","",73,null],[12,"p_filesz","","",73,null],[12,"p_memsz","","",73,null],[12,"p_flags","","",73,null],[12,"p_align","","",73,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",74,null],[12,"p_flags","","",74,null],[12,"p_offset","","",74,null],[12,"p_vaddr","","",74,null],[12,"p_paddr","","",74,null],[12,"p_filesz","","",74,null],[12,"p_memsz","","",74,null],[12,"p_align","","",74,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",75,null],[12,"sh_type","","",75,null],[12,"sh_flags","","",75,null],[12,"sh_addr","","",75,null],[12,"sh_offset","","",75,null],[12,"sh_size","","",75,null],[12,"sh_link","","",75,null],[12,"sh_info","","",75,null],[12,"sh_addralign","","",75,null],[12,"sh_entsize","","",75,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",76,null],[12,"sh_type","","",76,null],[12,"sh_flags","","",76,null],[12,"sh_addr","","",76,null],[12,"sh_offset","","",76,null],[12,"sh_size","","",76,null],[12,"sh_link","","",76,null],[12,"sh_info","","",76,null],[12,"sh_addralign","","",76,null],[12,"sh_entsize","","",76,null],[3,"ucred","","",null,null],[12,"pid","","",77,null],[12,"uid","","",77,null],[12,"gid","","",77,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",78,null],[12,"mnt_dir","","",78,null],[12,"mnt_type","","",78,null],[12,"mnt_opts","","",78,null],[12,"mnt_freq","","",78,null],[12,"mnt_passno","","",78,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",79,null],[12,"version","","",79,null],[12,"reserved","","",79,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",80,null],[12,"ipi6_ifindex","","",80,null],[3,"arpd_request","","",null,null],[12,"req","","",81,null],[12,"ip","","",81,null],[12,"dev","","",81,null],[12,"stamp","","",81,null],[12,"updated","","",81,null],[12,"ha","","",81,null],[3,"inotify_event","","",null,null],[12,"wd","","",82,null],[12,"mask","","",82,null],[12,"cookie","","",82,null],[12,"len","","",82,null],[3,"fanotify_response","","",null,null],[12,"fd","","",83,null],[12,"response","","",83,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",84,null],[12,"svm_reserved1","","",84,null],[12,"svm_port","","",84,null],[12,"svm_cid","","",84,null],[12,"svm_zero","","",84,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",85,null],[12,"rm_eo","","",85,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",86,null],[12,"ee_origin","","",86,null],[12,"ee_type","","",86,null],[12,"ee_code","","",86,null],[12,"ee_pad","","",86,null],[12,"ee_info","","",86,null],[12,"ee_data","","",86,null],[3,"__c_anonymous_sockaddr_can_tp","","",null,null],[12,"rx_id","","",87,null],[12,"tx_id","","",87,null],[3,"__c_anonymous_sockaddr_can_j1939","","",null,null],[12,"name","","",88,null],[12,"pgn","","",88,null],[12,"addr","","",88,null],[3,"can_filter","","",null,null],[12,"can_id","","",89,null],[12,"can_mask","","",89,null],[3,"sock_filter","","",null,null],[12,"code","","",90,null],[12,"jt","","",90,null],[12,"jf","","",90,null],[12,"k","","",90,null],[3,"sock_fprog","","",null,null],[12,"len","","",91,null],[12,"filter","","",91,null],[3,"seccomp_data","","",null,null],[12,"nr","","",92,null],[12,"arch","","",92,null],[12,"instruction_pointer","","",92,null],[12,"args","","",92,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",93,null],[12,"nlmsg_type","","",93,null],[12,"nlmsg_flags","","",93,null],[12,"nlmsg_seq","","",93,null],[12,"nlmsg_pid","","",93,null],[3,"nlmsgerr","","",null,null],[12,"error","","",94,null],[12,"msg","","",94,null],[3,"nlattr","","",null,null],[12,"nla_len","","",95,null],[12,"nla_type","","",95,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",96,null],[12,"nl_pid","","",96,null],[12,"nl_groups","","",96,null],[3,"dirent","","",null,null],[12,"d_ino","","",97,null],[12,"d_off","","",97,null],[12,"d_reclen","","",97,null],[12,"d_type","","",97,null],[12,"d_name","","",97,null],[3,"dirent64","","",null,null],[12,"d_ino","","",98,null],[12,"d_off","","",98,null],[12,"d_reclen","","",98,null],[12,"d_type","","",98,null],[12,"d_name","","",98,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",99,null],[12,"salg_type","","",99,null],[12,"salg_feat","","",99,null],[12,"salg_mask","","",99,null],[12,"salg_name","","",99,null],[3,"uinput_setup","","",null,null],[12,"id","","",100,null],[12,"name","","",100,null],[12,"ff_effects_max","","",100,null],[3,"uinput_user_dev","","",null,null],[12,"name","","",101,null],[12,"id","","",101,null],[12,"ff_effects_max","","",101,null],[12,"absmax","","",101,null],[12,"absmin","","",101,null],[12,"absfuzz","","",101,null],[12,"absflat","","",101,null],[3,"af_alg_iv","","WARNING: The <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of …",null,null],[12,"ivlen","","",102,null],[12,"iv","","",102,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",103,null],[12,"mq_maxmsg","","",103,null],[12,"mq_msgsize","","",103,null],[12,"mq_curmsgs","","",103,null],[19,"__c_anonymous_sockaddr_can_can_addr","","",null,null],[12,"tp","","",104,null],[12,"j1939","","",104,null],[3,"sockaddr_can","","",null,null],[12,"can_family","","",105,null],[12,"can_ifindex","","",105,null],[12,"can_addr","","",105,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_GSO_MAX_SEGS","","",null,null],[17,"IFLA_GSO_MAX_SIZE","","",null,null],[17,"IFLA_PAD","","",null,null],[17,"IFLA_XDP","","",null,null],[17,"IFLA_EVENT","","",null,null],[17,"IFLA_NEW_NETNSID","","",null,null],[17,"IFLA_IF_NETNSID","","",null,null],[17,"IFLA_TARGET_NETNSID","","",null,null],[17,"IFLA_CARRIER_UP_COUNT","","",null,null],[17,"IFLA_CARRIER_DOWN_COUNT","","",null,null],[17,"IFLA_NEW_IFINDEX","","",null,null],[17,"IFLA_MIN_MTU","","",null,null],[17,"IFLA_MAX_MTU","","",null,null],[17,"IFLA_PROP_LIST","","",null,null],[17,"IFLA_ALT_IFNAME","","",null,null],[17,"IFLA_PERM_ADDRESS","","",null,null],[17,"IFLA_PROTO_DOWN_REASON","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_MPTCP","","Multipath TCP",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"IPV6_MULTICAST_ALL","","",null,null],[17,"IPV6_ROUTER_ALERT_ISOLATE","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"MREMAP_DONTUNMAP","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"SECCOMP_FILTER_FLAG_TSYNC","","",null,null],[17,"SECCOMP_FILTER_FLAG_LOG","","",null,null],[17,"SECCOMP_FILTER_FLAG_SPEC_ALLOW","","",null,null],[17,"SECCOMP_RET_KILL_PROCESS","","",null,null],[17,"SECCOMP_RET_KILL_THREAD","","",null,null],[17,"SECCOMP_RET_KILL","","",null,null],[17,"SECCOMP_RET_TRAP","","",null,null],[17,"SECCOMP_RET_ERRNO","","",null,null],[17,"SECCOMP_RET_TRACE","","",null,null],[17,"SECCOMP_RET_LOG","","",null,null],[17,"SECCOMP_RET_ALLOW","","",null,null],[17,"SECCOMP_RET_ACTION_FULL","","",null,null],[17,"SECCOMP_RET_ACTION","","",null,null],[17,"SECCOMP_RET_DATA","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_RECVFRAGSIZE","","",null,null],[17,"IPV6_FREEBIND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IPV6_RTHDR_LOOSE","","",null,null],[17,"IPV6_RTHDR_STRICT","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"PT_HIOS","","",null,null],[17,"PT_LOPROC","","",null,null],[17,"PT_HIPROC","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"FF_MAX","","",null,null],[17,"FF_CNT","","",null,null],[17,"INPUT_PROP_MAX","","",null,null],[17,"INPUT_PROP_CNT","","",null,null],[17,"EV_MAX","","",null,null],[17,"EV_CNT","","",null,null],[17,"SYN_MAX","","",null,null],[17,"SYN_CNT","","",null,null],[17,"KEY_MAX","","",null,null],[17,"KEY_CNT","","",null,null],[17,"REL_MAX","","",null,null],[17,"REL_CNT","","",null,null],[17,"ABS_MAX","","",null,null],[17,"ABS_CNT","","",null,null],[17,"SW_MAX","","",null,null],[17,"SW_CNT","","",null,null],[17,"MSC_MAX","","",null,null],[17,"MSC_CNT","","",null,null],[17,"LED_MAX","","",null,null],[17,"LED_CNT","","",null,null],[17,"REP_MAX","","",null,null],[17,"REP_CNT","","",null,null],[17,"SND_MAX","","",null,null],[17,"SND_CNT","","",null,null],[17,"UINPUT_VERSION","","",null,null],[17,"UINPUT_MAX_NAME_SIZE","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"CAN_EFF_FLAG","","",null,null],[17,"CAN_RTR_FLAG","","",null,null],[17,"CAN_ERR_FLAG","","",null,null],[17,"CAN_SFF_MASK","","",null,null],[17,"CAN_EFF_MASK","","",null,null],[17,"CAN_ERR_MASK","","",null,null],[17,"CAN_SFF_ID_BITS","","",null,null],[17,"CAN_EFF_ID_BITS","","",null,null],[17,"CAN_MAX_DLC","","",null,null],[17,"CAN_MAX_DLEN","","",null,null],[17,"CANFD_MAX_DLC","","",null,null],[17,"CANFD_MAX_DLEN","","",null,null],[17,"CANFD_BRS","","",null,null],[17,"CANFD_ESI","","",null,null],[17,"CAN_MTU","","",null,null],[17,"CANFD_MTU","","",null,null],[17,"CAN_RAW","","",null,null],[17,"CAN_BCM","","",null,null],[17,"CAN_TP16","","",null,null],[17,"CAN_TP20","","",null,null],[17,"CAN_MCNET","","",null,null],[17,"CAN_ISOTP","","",null,null],[17,"CAN_J1939","","",null,null],[17,"CAN_NPROTO","","",null,null],[17,"SOL_CAN_BASE","","",null,null],[17,"CAN_INV_FILTER","","",null,null],[17,"CAN_RAW_FILTER_MAX","","",null,null],[17,"POLLRDHUP","","",null,null],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["usize",15],["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["usize",15],["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["usize",15],["cpu_set_t",3]],["bool",15]]],[5,"CPU_COUNT_S","","",null,[[["usize",15],["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]],["bool",15]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[["u8",15]],["u8",15]]],[5,"IPTOS_PREC","","",null,[[["u8",15]],["u8",15]]],[5,"RT_TOS","","",null,[[["u8",15]],["u8",15]]],[5,"RT_ADDRCLASS","","",null,[[["u32",15]],["u32",15]]],[5,"RT_LOCALADDR","","",null,[[["u32",15]],["bool",15]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[3,"statx","","",null,null],[12,"stx_mask","","",106,null],[12,"stx_blksize","","",106,null],[12,"stx_attributes","","",106,null],[12,"stx_nlink","","",106,null],[12,"stx_uid","","",106,null],[12,"stx_gid","","",106,null],[12,"stx_mode","","",106,null],[12,"stx_ino","","",106,null],[12,"stx_size","","",106,null],[12,"stx_blocks","","",106,null],[12,"stx_attributes_mask","","",106,null],[12,"stx_atime","","",106,null],[12,"stx_btime","","",106,null],[12,"stx_ctime","","",106,null],[12,"stx_mtime","","",106,null],[12,"stx_rdev_major","","",106,null],[12,"stx_rdev_minor","","",106,null],[12,"stx_dev_major","","",106,null],[12,"stx_dev_minor","","",106,null],[12,"stx_mnt_id","","",106,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",107,null],[12,"tv_nsec","","",107,null],[12,"__statx_timestamp_pad1","","",107,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",108,null],[12,"aio_lio_opcode","","",108,null],[12,"aio_reqprio","","",108,null],[12,"aio_buf","","",108,null],[12,"aio_nbytes","","",108,null],[12,"aio_sigevent","","",108,null],[12,"aio_offset","","",108,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",109,null],[12,"e_exit","","",109,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",110,null],[12,"tv_usec","","",110,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",111,null],[12,"gl_pathv","","",111,null],[12,"gl_offs","","",111,null],[12,"gl_flags","","",111,null],[3,"msghdr","","",null,null],[12,"msg_name","","",112,null],[12,"msg_namelen","","",112,null],[12,"msg_iov","","",112,null],[12,"msg_iovlen","","",112,null],[12,"msg_control","","",112,null],[12,"msg_controllen","","",112,null],[12,"msg_flags","","",112,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",113,null],[12,"cmsg_level","","",113,null],[12,"cmsg_type","","",113,null],[3,"termios","","",null,null],[12,"c_iflag","","",114,null],[12,"c_oflag","","",114,null],[12,"c_cflag","","",114,null],[12,"c_lflag","","",114,null],[12,"c_line","","",114,null],[12,"c_cc","","",114,null],[12,"c_ispeed","","",114,null],[12,"c_ospeed","","",114,null],[3,"mallinfo","","",null,null],[12,"arena","","",115,null],[12,"ordblks","","",115,null],[12,"smblks","","",115,null],[12,"hblks","","",115,null],[12,"hblkhd","","",115,null],[12,"usmblks","","",115,null],[12,"fsmblks","","",115,null],[12,"uordblks","","",115,null],[12,"fordblks","","",115,null],[12,"keepcost","","",115,null],[3,"mallinfo2","","",null,null],[12,"arena","","",116,null],[12,"ordblks","","",116,null],[12,"smblks","","",116,null],[12,"hblks","","",116,null],[12,"hblkhd","","",116,null],[12,"usmblks","","",116,null],[12,"fsmblks","","",116,null],[12,"uordblks","","",116,null],[12,"fordblks","","",116,null],[12,"keepcost","","",116,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",117,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",118,null],[12,"nm_block_nr","","",118,null],[12,"nm_frame_size","","",118,null],[12,"nm_frame_nr","","",118,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",119,null],[12,"nm_len","","",119,null],[12,"nm_group","","",119,null],[12,"nm_pid","","",119,null],[12,"nm_uid","","",119,null],[12,"nm_gid","","",119,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",120,null],[12,"rt_dst","","",120,null],[12,"rt_gateway","","",120,null],[12,"rt_genmask","","",120,null],[12,"rt_flags","","",120,null],[12,"rt_pad2","","",120,null],[12,"rt_pad3","","",120,null],[12,"rt_tos","","",120,null],[12,"rt_class","","",120,null],[12,"rt_pad4","","",120,null],[12,"rt_metric","","",120,null],[12,"rt_dev","","",120,null],[12,"rt_mtu","","",120,null],[12,"rt_window","","",120,null],[12,"rt_irtt","","",120,null],[3,"timex","","",null,null],[12,"modes","","",121,null],[12,"offset","","",121,null],[12,"freq","","",121,null],[12,"maxerror","","",121,null],[12,"esterror","","",121,null],[12,"status","","",121,null],[12,"constant","","",121,null],[12,"precision","","",121,null],[12,"tolerance","","",121,null],[12,"time","","",121,null],[12,"tick","","",121,null],[12,"ppsfreq","","",121,null],[12,"jitter","","",121,null],[12,"shift","","",121,null],[12,"stabil","","",121,null],[12,"jitcnt","","",121,null],[12,"calcnt","","",121,null],[12,"errcnt","","",121,null],[12,"stbcnt","","",121,null],[12,"tai","","",121,null],[12,"__unused1","","",121,null],[12,"__unused2","","",121,null],[12,"__unused3","","",121,null],[12,"__unused4","","",121,null],[12,"__unused5","","",121,null],[12,"__unused6","","",121,null],[12,"__unused7","","",121,null],[12,"__unused8","","",121,null],[12,"__unused9","","",121,null],[12,"__unused10","","",121,null],[12,"__unused11","","",121,null],[3,"ntptimeval","","",null,null],[12,"time","","",122,null],[12,"maxerror","","",122,null],[12,"esterror","","",122,null],[12,"tai","","",122,null],[12,"__glibc_reserved1","","",122,null],[12,"__glibc_reserved2","","",122,null],[12,"__glibc_reserved3","","",122,null],[12,"__glibc_reserved4","","",122,null],[3,"regex_t","","",null,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",123,null],[12,"ch_reserved","","",123,null],[12,"ch_size","","",123,null],[12,"ch_addralign","","",123,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",124,null],[12,"ch_size","","",124,null],[12,"ch_addralign","","",124,null],[3,"seminfo","","",null,null],[12,"semmap","","",125,null],[12,"semmni","","",125,null],[12,"semmns","","",125,null],[12,"semmnu","","",125,null],[12,"semmsl","","",125,null],[12,"semopm","","",125,null],[12,"semume","","",125,null],[12,"semusz","","",125,null],[12,"semvmx","","",125,null],[12,"semaem","","",125,null],[3,"utmpx","","",null,null],[12,"ut_type","","",126,null],[12,"ut_pid","","",126,null],[12,"ut_line","","",126,null],[12,"ut_id","","",126,null],[12,"ut_user","","",126,null],[12,"ut_host","","",126,null],[12,"ut_exit","","",126,null],[12,"ut_session","","",126,null],[12,"ut_tv","","",126,null],[12,"ut_addr_v6","","",126,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening …",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BPF_FS_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEBUGFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SECURITYFS_MAGIC","","",null,null],[17,"SELINUX_MAGIC","","",null,null],[17,"SMACK_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSFS_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"TRACEFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"RWF_HIPRI","","",null,null],[17,"RWF_DSYNC","","",null,null],[17,"RWF_SYNC","","",null,null],[17,"RWF_NOWAIT","","",null,null],[17,"RWF_APPEND","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_MNT_ID","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",127,null],[12,"loads","","",127,null],[12,"totalram","","",127,null],[12,"freeram","","",127,null],[12,"sharedram","","",127,null],[12,"bufferram","","",127,null],[12,"totalswap","","",127,null],[12,"freeswap","","",127,null],[12,"procs","","",127,null],[12,"pad","","",127,null],[12,"totalhigh","","",127,null],[12,"freehigh","","",127,null],[12,"mem_unit","","",127,null],[12,"_f","","",127,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",128,null],[12,"msg_stime","","",128,null],[12,"msg_rtime","","",128,null],[12,"msg_ctime","","",128,null],[12,"msg_qnum","","",128,null],[12,"msg_qbytes","","",128,null],[12,"msg_lspid","","",128,null],[12,"msg_lrpid","","",128,null],[3,"semid_ds","","",null,null],[12,"sem_perm","","",129,null],[12,"sem_otime","","",129,null],[12,"sem_ctime","","",129,null],[12,"sem_nsems","","",129,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",130,null],[12,"sa_mask","","",130,null],[12,"sa_flags","","",130,null],[12,"sa_restorer","","",130,null],[3,"statfs","","",null,null],[12,"f_type","","",131,null],[12,"f_bsize","","",131,null],[12,"f_blocks","","",131,null],[12,"f_bfree","","",131,null],[12,"f_bavail","","",131,null],[12,"f_files","","",131,null],[12,"f_ffree","","",131,null],[12,"f_fsid","","",131,null],[12,"f_namelen","","",131,null],[12,"f_frsize","","",131,null],[3,"flock","","",null,null],[12,"l_type","","",132,null],[12,"l_whence","","",132,null],[12,"l_start","","",132,null],[12,"l_len","","",132,null],[12,"l_pid","","",132,null],[3,"flock64","","",null,null],[12,"l_type","","",133,null],[12,"l_whence","","",133,null],[12,"l_start","","",133,null],[12,"l_len","","",133,null],[12,"l_pid","","",133,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",134,null],[12,"si_errno","","",134,null],[12,"si_code","","",134,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",135,null],[12,"ss_flags","","",135,null],[12,"ss_size","","",135,null],[3,"stat","","",null,null],[12,"st_dev","","",136,null],[12,"st_ino","","",136,null],[12,"st_nlink","","",136,null],[12,"st_mode","","",136,null],[12,"st_uid","","",136,null],[12,"st_gid","","",136,null],[12,"st_rdev","","",136,null],[12,"st_size","","",136,null],[12,"st_blksize","","",136,null],[12,"st_blocks","","",136,null],[12,"st_atime","","",136,null],[12,"st_atime_nsec","","",136,null],[12,"st_mtime","","",136,null],[12,"st_mtime_nsec","","",136,null],[12,"st_ctime","","",136,null],[12,"st_ctime_nsec","","",136,null],[3,"stat64","","",null,null],[12,"st_dev","","",137,null],[12,"st_ino","","",137,null],[12,"st_nlink","","",137,null],[12,"st_mode","","",137,null],[12,"st_uid","","",137,null],[12,"st_gid","","",137,null],[12,"st_rdev","","",137,null],[12,"st_size","","",137,null],[12,"st_blksize","","",137,null],[12,"st_blocks","","",137,null],[12,"st_atime","","",137,null],[12,"st_atime_nsec","","",137,null],[12,"st_mtime","","",137,null],[12,"st_mtime_nsec","","",137,null],[12,"st_ctime","","",137,null],[12,"st_ctime_nsec","","",137,null],[3,"statfs64","","",null,null],[12,"f_type","","",138,null],[12,"f_bsize","","",138,null],[12,"f_blocks","","",138,null],[12,"f_bfree","","",138,null],[12,"f_bavail","","",138,null],[12,"f_files","","",138,null],[12,"f_ffree","","",138,null],[12,"f_fsid","","",138,null],[12,"f_namelen","","",138,null],[12,"f_frsize","","",138,null],[12,"f_flags","","",138,null],[12,"f_spare","","",138,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",139,null],[12,"f_frsize","","",139,null],[12,"f_blocks","","",139,null],[12,"f_bfree","","",139,null],[12,"f_bavail","","",139,null],[12,"f_files","","",139,null],[12,"f_ffree","","",139,null],[12,"f_favail","","",139,null],[12,"f_fsid","","",139,null],[12,"f_flag","","",139,null],[12,"f_namemax","","",139,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",140,null],[12,"exponent","","",140,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",141,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",142,null],[12,"swd","","",142,null],[12,"ftw","","",142,null],[12,"fop","","",142,null],[12,"rip","","",142,null],[12,"rdp","","",142,null],[12,"mxcsr","","",142,null],[12,"mxcr_mask","","",142,null],[12,"_st","","",142,null],[12,"_xmm","","",142,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",143,null],[12,"r14","","",143,null],[12,"r13","","",143,null],[12,"r12","","",143,null],[12,"rbp","","",143,null],[12,"rbx","","",143,null],[12,"r11","","",143,null],[12,"r10","","",143,null],[12,"r9","","",143,null],[12,"r8","","",143,null],[12,"rax","","",143,null],[12,"rcx","","",143,null],[12,"rdx","","",143,null],[12,"rsi","","",143,null],[12,"rdi","","",143,null],[12,"orig_rax","","",143,null],[12,"rip","","",143,null],[12,"cs","","",143,null],[12,"eflags","","",143,null],[12,"rsp","","",143,null],[12,"ss","","",143,null],[12,"fs_base","","",143,null],[12,"gs_base","","",143,null],[12,"ds","","",143,null],[12,"es","","",143,null],[12,"fs","","",143,null],[12,"gs","","",143,null],[3,"user","","",null,null],[12,"regs","","",144,null],[12,"u_fpvalid","","",144,null],[12,"i387","","",144,null],[12,"u_tsize","","",144,null],[12,"u_dsize","","",144,null],[12,"u_ssize","","",144,null],[12,"start_code","","",144,null],[12,"start_stack","","",144,null],[12,"signal","","",144,null],[12,"u_ar0","","",144,null],[12,"u_fpstate","","",144,null],[12,"magic","","",144,null],[12,"u_comm","","",144,null],[12,"u_debugreg","","",144,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",145,null],[12,"fpregs","","",145,null],[3,"ipc_perm","","",null,null],[12,"__key","","",146,null],[12,"uid","","",146,null],[12,"gid","","",146,null],[12,"cuid","","",146,null],[12,"cgid","","",146,null],[12,"mode","","",146,null],[12,"__seq","","",146,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",147,null],[12,"shm_segsz","","",147,null],[12,"shm_atime","","",147,null],[12,"shm_dtime","","",147,null],[12,"shm_ctime","","",147,null],[12,"shm_cpid","","",147,null],[12,"shm_lpid","","",147,null],[12,"shm_nattch","","",147,null],[3,"termios2","","",null,null],[12,"c_iflag","","",148,null],[12,"c_oflag","","",148,null],[12,"c_cflag","","",148,null],[12,"c_lflag","","",148,null],[12,"c_line","","",148,null],[12,"c_cc","","",148,null],[12,"c_ispeed","","",148,null],[12,"c_ospeed","","",148,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",149,null],[12,"imr_address","","",149,null],[12,"imr_ifindex","","",149,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",150,null],[12,"swd","","",150,null],[12,"ftw","","",150,null],[12,"fop","","",150,null],[12,"rip","","",150,null],[12,"rdp","","",150,null],[12,"mxcsr","","",150,null],[12,"mxcr_mask","","",150,null],[12,"st_space","","",150,null],[12,"xmm_space","","",150,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",151,null],[12,"uc_link","","",151,null],[12,"uc_stack","","",151,null],[12,"uc_mcontext","","",151,null],[12,"uc_sigmask","","",151,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",152,null],[12,"f_frsize","","",152,null],[12,"f_blocks","","",152,null],[12,"f_bfree","","",152,null],[12,"f_bavail","","",152,null],[12,"f_files","","",152,null],[12,"f_ffree","","",152,null],[12,"f_favail","","",152,null],[12,"f_fsid","","",152,null],[12,"f_flag","","",152,null],[12,"f_namemax","","",152,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[17,"SYS_pidfd_send_signal","","",null,null],[17,"SYS_io_uring_setup","","",null,null],[17,"SYS_io_uring_enter","","",null,null],[17,"SYS_io_uring_register","","",null,null],[17,"SYS_open_tree","","",null,null],[17,"SYS_move_mount","","",null,null],[17,"SYS_fsopen","","",null,null],[17,"SYS_fsconfig","","",null,null],[17,"SYS_fsmount","","",null,null],[17,"SYS_fspick","","",null,null],[17,"SYS_pidfd_open","","",null,null],[17,"SYS_clone3","","",null,null],[17,"SYS_close_range","","",null,null],[17,"SYS_openat2","","",null,null],[17,"SYS_pidfd_getfd","","",null,null],[17,"SYS_faccessat2","","",null,null],[17,"SYS_process_madvise","","",null,null],[17,"SYS_epoll_pwait2","","",null,null],[17,"SYS_mount_setattr","","",null,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_CBPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_EBPF","","",null,null],[17,"SO_CNX_ADVICE","","",null,null],[17,"SCM_TIMESTAMPING_OPT_STATS","","",null,null],[17,"SO_MEMINFO","","",null,null],[17,"SO_INCOMING_NAPI_ID","","",null,null],[17,"SO_COOKIE","","",null,null],[17,"SCM_TIMESTAMPING_PKTINFO","","",null,null],[17,"SO_PEERGROUPS","","",null,null],[17,"SO_ZEROCOPY","","",null,null],[17,"SO_TXTIME","","",null,null],[17,"SCM_TXTIME","","",null,null],[17,"SO_BINDTOIFINDEX","","",null,null],[17,"SO_TIMESTAMP_NEW","","",null,null],[17,"SO_TIMESTAMPNS_NEW","","",null,null],[17,"SO_TIMESTAMPING_NEW","","",null,null],[17,"SO_RCVTIMEO_NEW","","",null,null],[17,"SO_SNDTIMEO_NEW","","",null,null],[17,"SO_DETACH_REUSEPORT_BPF","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",153,null],[12,"vers","","",153,null],[12,"reserved","","",153,null],[12,"metadata_len","","",153,null],[12,"mask","","",153,null],[12,"fd","","",153,null],[12,"pid","","",153,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"can_frame","","",null,null],[12,"can_id","","",154,null],[12,"can_dlc","","",154,null],[12,"data","","",154,null],[3,"canfd_frame","","",null,null],[12,"can_id","","",155,null],[12,"len","","",155,null],[12,"flags","","",155,null],[12,"data","","",155,null],[4,"c_void","","Equivalent to C\'s <code>void</code> type when used as a pointer.",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",156,null],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",176,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",177,[[],["file",4]]],[11,"clone","","",178,[[],["fpos_t",4]]],[11,"clone","","",173,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",174,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",175,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",162,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",163,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",164,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["uinput_ff_upload",3]]],[11,"clone","","",66,[[],["uinput_ff_erase",3]]],[11,"clone","","",67,[[],["uinput_abs_setup",3]]],[11,"clone","","",68,[[],["dl_phdr_info",3]]],[11,"clone","","",69,[[],["elf32_ehdr",3]]],[11,"clone","","",70,[[],["elf64_ehdr",3]]],[11,"clone","","",71,[[],["elf32_sym",3]]],[11,"clone","","",72,[[],["elf64_sym",3]]],[11,"clone","","",73,[[],["elf32_phdr",3]]],[11,"clone","","",74,[[],["elf64_phdr",3]]],[11,"clone","","",75,[[],["elf32_shdr",3]]],[11,"clone","","",76,[[],["elf64_shdr",3]]],[11,"clone","","",77,[[],["ucred",3]]],[11,"clone","","",78,[[],["mntent",3]]],[11,"clone","","",165,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",166,[[],["posix_spawnattr_t",3]]],[11,"clone","","",79,[[],["genlmsghdr",3]]],[11,"clone","","",80,[[],["in6_pktinfo",3]]],[11,"clone","","",81,[[],["arpd_request",3]]],[11,"clone","","",82,[[],["inotify_event",3]]],[11,"clone","","",83,[[],["fanotify_response",3]]],[11,"clone","","",84,[[],["sockaddr_vm",3]]],[11,"clone","","",85,[[],["regmatch_t",3]]],[11,"clone","","",86,[[],["sock_extended_err",3]]],[11,"clone","","",87,[[],["__c_anonymous_sockaddr_can_tp",3]]],[11,"clone","","",88,[[],["__c_anonymous_sockaddr_can_j1939",3]]],[11,"clone","","",89,[[],["can_filter",3]]],[11,"clone","","",90,[[],["sock_filter",3]]],[11,"clone","","",91,[[],["sock_fprog",3]]],[11,"clone","","",92,[[],["seccomp_data",3]]],[11,"clone","","",93,[[],["nlmsghdr",3]]],[11,"clone","","",94,[[],["nlmsgerr",3]]],[11,"clone","","",95,[[],["nlattr",3]]],[11,"clone","","",96,[[],["sockaddr_nl",3]]],[11,"clone","","",97,[[],["dirent",3]]],[11,"clone","","",98,[[],["dirent64",3]]],[11,"clone","","",99,[[],["sockaddr_alg",3]]],[11,"clone","","",100,[[],["uinput_setup",3]]],[11,"clone","","",101,[[],["uinput_user_dev",3]]],[11,"clone","","",102,[[],["af_alg_iv",3]]],[11,"clone","","",103,[[],["mq_attr",3]]],[11,"clone","","",104,[[],["__c_anonymous_sockaddr_can_can_addr",19]]],[11,"clone","","",105,[[],["sockaddr_can",3]]],[11,"clone","","",106,[[],["statx",3]]],[11,"clone","","",107,[[],["statx_timestamp",3]]],[11,"clone","","",108,[[],["aiocb",3]]],[11,"clone","","",109,[[],["__exit_status",3]]],[11,"clone","","",110,[[],["__timeval",3]]],[11,"clone","","",111,[[],["glob64_t",3]]],[11,"clone","","",112,[[],["msghdr",3]]],[11,"clone","","",113,[[],["cmsghdr",3]]],[11,"clone","","",114,[[],["termios",3]]],[11,"clone","","",115,[[],["mallinfo",3]]],[11,"clone","","",116,[[],["mallinfo2",3]]],[11,"clone","","",117,[[],["nl_pktinfo",3]]],[11,"clone","","",118,[[],["nl_mmap_req",3]]],[11,"clone","","",119,[[],["nl_mmap_hdr",3]]],[11,"clone","","",120,[[],["rtentry",3]]],[11,"clone","","",121,[[],["timex",3]]],[11,"clone","","",122,[[],["ntptimeval",3]]],[11,"clone","","",161,[[],["regex_t",3]]],[11,"clone","","",123,[[],["elf64_chdr",3]]],[11,"clone","","",124,[[],["elf32_chdr",3]]],[11,"clone","","",125,[[],["seminfo",3]]],[11,"clone","","",126,[[],["utmpx",3]]],[11,"clone","","",159,[[],["sigset_t",3]]],[11,"clone","","",127,[[],["sysinfo",3]]],[11,"clone","","",128,[[],["msqid_ds",3]]],[11,"clone","","",129,[[],["semid_ds",3]]],[11,"clone","","",130,[[],["sigaction",3]]],[11,"clone","","",131,[[],["statfs",3]]],[11,"clone","","",132,[[],["flock",3]]],[11,"clone","","",133,[[],["flock64",3]]],[11,"clone","","",134,[[],["siginfo_t",3]]],[11,"clone","","",135,[[],["stack_t",3]]],[11,"clone","","",136,[[],["stat",3]]],[11,"clone","","",137,[[],["stat64",3]]],[11,"clone","","",138,[[],["statfs64",3]]],[11,"clone","","",139,[[],["statvfs64",3]]],[11,"clone","","",158,[[],["pthread_attr_t",3]]],[11,"clone","","",140,[[],["_libc_fpxreg",3]]],[11,"clone","","",141,[[],["_libc_xmmreg",3]]],[11,"clone","","",142,[[],["_libc_fpstate",3]]],[11,"clone","","",143,[[],["user_regs_struct",3]]],[11,"clone","","",144,[[],["user",3]]],[11,"clone","","",145,[[],["mcontext_t",3]]],[11,"clone","","",146,[[],["ipc_perm",3]]],[11,"clone","","",147,[[],["shmid_ds",3]]],[11,"clone","","",148,[[],["termios2",3]]],[11,"clone","","",149,[[],["ip_mreqn",3]]],[11,"clone","","",150,[[],["user_fpregs_struct",3]]],[11,"clone","","",151,[[],["ucontext_t",3]]],[11,"clone","","",152,[[],["statvfs",3]]],[11,"clone","","",157,[[],["max_align_t",3]]],[11,"clone","","",160,[[],["sem_t",3]]],[11,"clone","","",167,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",168,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",169,[[],["pthread_condattr_t",3]]],[11,"clone","","",153,[[],["fanotify_event_metadata",3]]],[11,"clone","","",170,[[],["pthread_cond_t",3]]],[11,"clone","","",171,[[],["pthread_mutex_t",3]]],[11,"clone","","",172,[[],["pthread_rwlock_t",3]]],[11,"clone","","",154,[[],["can_frame",3]]],[11,"clone","","",155,[[],["canfd_frame",3]]],[11,"clone","","",156,[[],["in6_addr",3]]],[11,"si_addr","","",134,[[]]],[11,"si_value","","",134,[[],["sigval",3]]],[11,"si_pid","","",134,[[],["pid_t",6]]],[11,"si_uid","","",134,[[],["uid_t",6]]],[11,"si_status","","",134,[[],["c_int",6]]],[11,"si_utime","","",134,[[],["c_long",6]]],[11,"si_stime","","",134,[[],["c_long",6]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"sock_filter"],[3,"sock_fprog"],[3,"seccomp_data"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nlattr"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"mallinfo2"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"seminfo"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"semid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"can_frame"],[3,"canfd_frame"],[3,"in6_addr"],[3,"max_align_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"regex_t"],[4,"fpos64_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"timezone"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"c_void"]]},\
"libcras":{"doc":"","i":[],"p":[]},\
"libvda":{"doc":"","i":[[0,"decode","libvda","",null,null],[4,"Response","libvda::decode","Represents a response from libvda.",null,null],[13,"Success","","",0,null],[13,"IllegalState","","",0,null],[13,"InvalidArgument","","",0,null],[13,"UnreadableInput","","",0,null],[13,"PlatformFailure","","",0,null],[13,"InsufficientResources","","",0,null],[13,"Cancelled","","",0,null],[4,"Event","","Represents a notified event from libvda.",null,null],[13,"ProvidePictureBuffers","","Requests the users to provide output buffers.",1,null],[12,"min_num_buffers","libvda::decode::Event","",2,null],[12,"width","","",2,null],[12,"height","","",2,null],[12,"visible_rect_left","","",2,null],[12,"visible_rect_top","","",2,null],[12,"visible_rect_right","","",2,null],[12,"visible_rect_bottom","","",2,null],[13,"PictureReady","libvda::decode","Notifies the user of a decoded frame ready for display. …",1,null],[12,"buffer_id","libvda::decode::Event","",3,null],[12,"bitstream_id","","",3,null],[12,"left","","",3,null],[12,"top","","",3,null],[12,"right","","",3,null],[12,"bottom","","",3,null],[13,"NotifyEndOfBitstreamBuffer","libvda::decode","Notifies the end of bitstream buffer.",1,null],[12,"bitstream_id","libvda::decode::Event","",4,null],[13,"NotifyError","libvda::decode","",1,null],[13,"ResetResponse","","Notifies the result of operation issued by <code>Session::reset</code>.",1,null],[13,"FlushResponse","","Notifies the result of operation issued by <code>Session::flush</code>.",1,null],[3,"InputFormat","","Represents an input video format for VDA.",null,null],[12,"profile","","",5,null],[12,"min_width","","",5,null],[12,"min_height","","",5,null],[12,"max_width","","",5,null],[12,"max_height","","",5,null],[3,"Session","","Represents a decode session.",null,null],[4,"VdaImplType","","Represents a backend implementation of libvda.",null,null],[13,"Fake","","",6,null],[13,"Gavda","","",6,null],[3,"Capabilities","","Represents decoding capabilities of libvda instances.",null,null],[12,"input_formats","","",7,null],[12,"output_formats","","",7,null],[3,"VdaConnection","","",null,null],[3,"VdaInstance","","Represents a libvda instance.",null,null],[0,"encode","libvda","",null,null],[4,"VeaError","libvda::encode","Represents an error from a libvda encode session.",null,null],[13,"IllegalState","","",8,null],[13,"InvalidArgument","","",8,null],[13,"PlatformFailure","","",8,null],[4,"Event","","Represents a notified event from libvda.",null,null],[13,"RequireInputBuffers","","Requests the user to provide input buffers.",9,null],[12,"input_count","libvda::encode::Event","",10,null],[12,"input_frame_width","","",10,null],[12,"input_frame_height","","",10,null],[12,"output_buffer_size","","",10,null],[13,"ProcessedInputBuffer","libvda::encode","Notifies the user that an input buffer has been processed.",9,null],[13,"ProcessedOutputBuffer","","Notifies the user that an output buffer has been …",9,null],[12,"output_buffer_id","libvda::encode::Event","",11,null],[12,"payload_size","","",11,null],[12,"key_frame","","",11,null],[12,"timestamp","","",11,null],[13,"FlushResponse","libvda::encode","Notifies the result of operation issued by <code>Session::flush</code>.",9,null],[12,"flush_done","libvda::encode::Event","",12,null],[13,"NotifyError","libvda::encode","Notifies the user of an error.",9,null],[3,"OutputProfile","","Represents an output profile for VEA.",null,null],[12,"profile","","",13,null],[12,"max_width","","",13,null],[12,"max_height","","",13,null],[12,"max_framerate_numerator","","",13,null],[12,"max_framerate_denominator","","",13,null],[4,"BitrateMode","","Represents a bitrate mode for the VEA.",null,null],[13,"VBR","","",14,null],[13,"CBR","","",14,null],[3,"Bitrate","","Represents a bitrate for the VEA.",null,null],[12,"mode","","",15,null],[12,"target","","",15,null],[12,"peak","","",15,null],[6,"VeaInputBufferId","","",null,null],[6,"VeaOutputBufferId","","",null,null],[3,"Session","","Represents an encode session.",null,null],[4,"VeaImplType","","Represents a backend implementation of libvda.",null,null],[13,"Fake","","",16,null],[13,"Gavea","","",16,null],[3,"EncodeCapabilities","","Represents encoding capabilities of libvda encode …",null,null],[12,"input_formats","","",17,null],[12,"output_formats","","",17,null],[3,"VeaConnection","","",null,null],[3,"VeaInstance","","Represents a libvda encode instance.",null,null],[3,"Config","","Represents an encoding configuration for a libvda encode …",null,null],[12,"input_format","","",18,null],[12,"input_visible_width","","",18,null],[12,"input_visible_height","","",18,null],[12,"output_profile","","",18,null],[12,"bitrate","","",18,null],[12,"initial_framerate","","",18,null],[12,"h264_output_level","","",18,null],[4,"Error","libvda","",null,null],[13,"EncodeSessionFailure","","",19,null],[13,"EncodeSessionInitFailure","","",19,null],[13,"GetCapabilitiesFailure","","",19,null],[13,"InstanceInitFailure","","",19,null],[13,"InvalidCapabilities","","",19,null],[13,"LibVdaFailure","","",19,null],[13,"ReadEventFailure","","",19,null],[13,"SessionIdAlreadyUsed","","",19,null],[13,"SessionInitFailure","","",19,null],[13,"SessionNotFound","","",19,null],[13,"UnknownPixelFormat","","",19,null],[13,"UnknownProfile","","",19,null],[6,"Result","","",null,null],[6,"BufferFd","","Represents a FD for bitstream/frame buffer. Files …",null,null],[3,"FramePlane","","Represents a video frame plane.",null,null],[12,"offset","","",20,null],[12,"stride","","",20,null],[4,"Profile","","Represents a video codec.",null,null],[13,"H264ProfileBaseline","","",21,null],[13,"H264ProfileMain","","",21,null],[13,"H264ProfileExtended","","",21,null],[13,"H264ProfileHigh","","",21,null],[13,"H264ProfileHigh10Profile","","",21,null],[13,"H264ProfileHigh422Profile","","",21,null],[13,"H264ProfileHigh444PredictiveProfile","","",21,null],[13,"H264ProfileScalableBaseline","","",21,null],[13,"H264ProfileScalableHigh","","",21,null],[13,"H264ProfileStereoHigh","","",21,null],[13,"H264ProfileMultiviewHigh","","",21,null],[13,"VP8","","",21,null],[13,"VP9Profile0","","",21,null],[13,"VP9Profile1","","",21,null],[13,"VP9Profile2","","",21,null],[13,"VP9Profile3","","",21,null],[13,"HevcProfileMain","","",21,null],[13,"HevcProfileMain10","","",21,null],[13,"HevcProfileMainStillPicture","","",21,null],[13,"DolbyVisionProfile0","","",21,null],[13,"DolbyVisionProfile4","","",21,null],[13,"DolbyVisionProfile5","","",21,null],[13,"DolbyVisionProfile7","","",21,null],[13,"Theora","","",21,null],[13,"Av1ProfileMain","","",21,null],[13,"Av1ProfileHigh","","",21,null],[13,"Av1ProfilePro","","",21,null],[4,"PixelFormat","","Represents a raw pixel format.",null,null],[13,"YV12","","",22,null],[13,"NV12","","",22,null],[11,"from","libvda::decode","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","libvda::encode","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","libvda","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"drop","libvda::decode","",23,[[]]],[11,"drop","","",24,[[]]],[11,"drop","libvda::encode","",26,[[]]],[11,"drop","","",27,[[]]],[11,"from","libvda","",29,[[["response",4]]]],[11,"clone","libvda::decode","",0,[[],["response",4]]],[11,"clone","libvda::encode","",8,[[],["veaerror",4]]],[11,"clone","","",13,[[],["outputprofile",3]]],[11,"clone","","",14,[[],["bitratemode",4]]],[11,"clone","","",15,[[],["bitrate",3]]],[11,"clone","","",18,[[],["config",3]]],[11,"clone","libvda","",21,[[],["profile",4]]],[11,"clone","","",22,[[],["pixelformat",4]]],[11,"fmt","libvda::decode","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","libvda::encode","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","libvda","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","libvda::decode","",0,[[["formatter",3]],["result",6]]],[11,"fmt","libvda::encode","",8,[[["formatter",3]],["result",6]]],[11,"fmt","libvda","",19,[[["formatter",3]],["result",6]]],[11,"n","libvda::decode","",0,[[["u32",15]],["option",4]]],[11,"pipe","","Gets a reference of pipe that notifies events from VDA …",23,[[],["file",3]]],[11,"read_event","","Reads an <code>Event</code> object from a pipe provided a decode …",23,[[],[["event",4],["result",6]]]],[11,"decode","","Sends a decode request for a bitstream buffer given as <code>fd</code>.",23,[[["u32",15],["bufferfd",6],["i32",15]],["result",6]]],[11,"set_output_buffer_count","","Sets the number of expected output buffers.",23,[[["usize",15]],["result",6]]],[11,"use_output_buffer","","Provides an output buffer that will be filled with …",23,[[["pixelformat",4],["bufferfd",6],["i32",15],["u64",15]],["result",6]]],[11,"reuse_output_buffer","","Returns an output buffer for reuse.",23,[[["i32",15]],["result",6]]],[11,"flush","","Flushes the decode session.",23,[[],["result",6]]],[11,"reset","","Resets the decode session.",23,[[],["result",6]]],[11,"new","","Creates VdaInstance. <code>typ</code> specifies which backend will be …",25,[[["vdaimpltype",4]],["result",6]]],[11,"get_capabilities","","Get media capabilities.",25,[[],["capabilities",3]]],[11,"open_session","","Opens a new <code>Session</code> for a given <code>Profile</code>.",25,[[["profile",4]],[["session",3],["result",6]]]],[11,"n","libvda::encode","",8,[[["u32",15]],["option",4]]],[11,"n","","",14,[[["u32",15]],["option",4]]],[11,"to_raw_bitrate","","",15,[[],["vea_bitrate",3]]],[11,"pipe","","Returns a reference for the pipe that notifies of encode …",26,[[],["file",3]]],[11,"read_event","","Reads an <code>Event</code> object from a pipe provided by an encode …",26,[[],[["event",4],["result",6]]]],[11,"encode","","Sends an encode request for an input buffer given as <code>fd</code> …",26,[[["veainputbufferid",6],["bufferfd",6],["i64",15],["bool",15]],["result",6]]],[11,"use_output_buffer","","Provides a buffer for storing encoded output.",26,[[["u32",15],["bufferfd",6],["veaoutputbufferid",6]],["result",6]]],[11,"request_encoding_params_change","","Requests encoding parameter changes.",26,[[["u32",15],["bitrate",3]],["result",6]]],[11,"flush","","Flushes the encode session.",26,[[],["result",6]]],[11,"new","","Creates VeaInstance. <code>impl_type</code> specifies which backend …",28,[[["veaimpltype",4]],["result",6]]],[11,"get_capabilities","","Gets encoder capabilities.",28,[[],["encodecapabilities",3]]],[11,"open_session","","Opens a new <code>Session</code> for a given <code>Config</code>.",28,[[["config",3]],[["session",3],["result",6]]]],[11,"to_raw_frame_plane","libvda","",20,[[],["video_frame_plane",3]]],[11,"n","","",21,[[["i32",15]],["option",4]]],[11,"n","","",22,[[["u32",15]],["option",4]]]],"p":[[4,"Response"],[4,"Event"],[13,"ProvidePictureBuffers"],[13,"PictureReady"],[13,"NotifyEndOfBitstreamBuffer"],[3,"InputFormat"],[4,"VdaImplType"],[3,"Capabilities"],[4,"VeaError"],[4,"Event"],[13,"RequireInputBuffers"],[13,"ProcessedOutputBuffer"],[13,"FlushResponse"],[3,"OutputProfile"],[4,"BitrateMode"],[3,"Bitrate"],[4,"VeaImplType"],[3,"EncodeCapabilities"],[3,"Config"],[4,"Error"],[3,"FramePlane"],[4,"Profile"],[4,"PixelFormat"],[3,"Session"],[3,"VdaConnection"],[3,"VdaInstance"],[3,"Session"],[3,"VeaConnection"],[3,"VeaInstance"],[6,"Result"]]},\
"linux_input_sys":{"doc":"","i":[[8,"InputEventDecoder","linux_input_sys","Allows a raw input event of the implementor\'s type to be …",null,null],[18,"SIZE","","",0,null],[10,"decode","","",0,[[],["virtio_input_event",3]]],[3,"input_event","","",null,null],[12,"timestamp_fields","","",1,null],[12,"type_","","",1,null],[12,"code","","",1,null],[12,"value","","",1,null],[11,"from_virtio_input_event","","",1,[[["virtio_input_event",3]],["input_event",3]]],[3,"virtio_input_event","","",null,null],[12,"type_","","",2,null],[12,"code","","",2,null],[12,"value","","",2,null],[11,"syn","","",2,[[],["virtio_input_event",3]]],[11,"absolute","","",2,[[["u16",15],["i32",15]],["virtio_input_event",3]]],[11,"relative","","",2,[[["u16",15],["i32",15]],["virtio_input_event",3]]],[11,"multitouch_tracking_id","","",2,[[["i32",15]],["virtio_input_event",3]]],[11,"multitouch_slot","","",2,[[["i32",15]],["virtio_input_event",3]]],[11,"multitouch_absolute_x","","",2,[[["i32",15]],["virtio_input_event",3]]],[11,"multitouch_absolute_y","","",2,[[["i32",15]],["virtio_input_event",3]]],[11,"absolute_x","","",2,[[["i32",15]],["virtio_input_event",3]]],[11,"absolute_y","","",2,[[["i32",15]],["virtio_input_event",3]]],[11,"relative_x","","",2,[[["i32",15]],["virtio_input_event",3]]],[11,"relative_y","","",2,[[["i32",15]],["virtio_input_event",3]]],[11,"touch","","",2,[[["bool",15]],["virtio_input_event",3]]],[11,"finger_tool","","",2,[[["bool",15]],["virtio_input_event",3]]],[11,"key","","",2,[[["bool",15],["u16",15]],["virtio_input_event",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"decode","","",1,[[],["virtio_input_event",3]]],[11,"decode","","",2,[[],["virtio_input_event",3]]],[11,"clone","","",1,[[],["input_event",3]]],[11,"clone","","",2,[[],["virtio_input_event",3]]],[11,"default","","",1,[[],["input_event",3]]],[11,"default","","",2,[[],["virtio_input_event",3]]],[11,"eq","","",1,[[["input_event",3]],["bool",15]]],[11,"ne","","",1,[[["input_event",3]],["bool",15]]],[11,"eq","","",2,[[["virtio_input_event",3]],["bool",15]]],[11,"ne","","",2,[[["virtio_input_event",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[8,"InputEventDecoder"],[3,"input_event"],[3,"virtio_input_event"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[4,"Level","log","An enum representing the available verbosity levels of …",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.",0,[[],["levelfilter",4]]],[11,"as_str","","Returns the string representation of the <code>Level</code>.",0,[[],["str",15]]],[4,"LevelFilter","","An enum representing the available verbosity level …",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the <code>Error</code> log level.",1,null],[13,"Warn","","Corresponds to the <code>Warn</code> log level.",1,null],[13,"Info","","Corresponds to the <code>Info</code> log level.",1,null],[13,"Debug","","Corresponds to the <code>Debug</code> log level.",1,null],[13,"Trace","","Corresponds to the <code>Trace</code> log level.",1,null],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts <code>self</code> to the equivalent <code>Level</code>.",1,[[],[["option",4],["level",4]]]],[11,"as_str","","Returns the string representation of the <code>LevelFilter</code>.",1,[[],["str",15]]],[3,"Record","","The \\\"payload\\\" of a log message.",null,null],[11,"builder","","Returns a new builder.",2,[[],["recordbuilder",3]]],[11,"args","","The message body.",2,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",2,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",2,[[],["level",4]]],[11,"target","","The name of the target of the directive.",2,[[],["str",15]]],[11,"module_path","","The module path of the message.",2,[[],[["str",15],["option",4]]]],[11,"module_path_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"file","","The source file containing the message.",2,[[],[["str",15],["option",4]]]],[11,"file_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"line","","The line containing the message.",2,[[],[["option",4],["u32",15]]]],[3,"RecordBuilder","","Builder for <code>Record</code>.",null,null],[11,"new","","Construct new <code>RecordBuilder</code>.",3,[[],["recordbuilder",3]]],[11,"args","","Set <code>args</code>.",3,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …",3,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set <code>Metadata::level</code>.",3,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set <code>Metadata::target</code>",3,[[["str",15]],["recordbuilder",3]]],[11,"module_path","","Set <code>module_path</code>",3,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"module_path_static","","Set <code>module_path</code> to a <code>\'static</code> string",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"file","","Set <code>file</code>",3,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"file_static","","Set <code>file</code> to a <code>\'static</code> string.",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"line","","Set <code>line</code>",3,[[["option",4],["u32",15]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a <code>Record</code>",3,[[],["record",3]]],[3,"Metadata","","Metadata about a log message.",null,null],[11,"builder","","Returns a new builder.",4,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",4,[[],["level",4]]],[11,"target","","The name of the target of the directive.",4,[[],["str",15]]],[3,"MetadataBuilder","","Builder for <code>Metadata</code>.",null,null],[11,"new","","Construct a new <code>MetadataBuilder</code>.",5,[[],["metadatabuilder",3]]],[11,"level","","Setter for <code>level</code>.",5,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for <code>target</code>.",5,[[["str",15]],["metadatabuilder",3]]],[11,"build","","Returns a <code>Metadata</code> object.",5,[[],["metadata",3]]],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata …",6,[[["metadata",3]],["bool",15]]],[10,"log","","Logs the <code>Record</code>.",6,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",6,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_logger","","Sets the global logger to a <code>&\'static Log</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of <code>set_logger</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[3,"SetLoggerError","","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …",null,null],[3,"ParseLevelError","","The type returned by <code>from_str</code> when the string doesn\'t …",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["level",4]],["bool",15]]],[11,"eq","","",0,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["level",4]],["bool",15]]],[11,"eq","","",4,[[["metadata",3]],["bool",15]]],[11,"ne","","",4,[[["metadata",3]],["bool",15]]],[11,"eq","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ne","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"eq","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"ne","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",4,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",5,[[["metadatabuilder",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["level",4]],["bool",15]]],[11,"le","","",0,[[["level",4]],["bool",15]]],[11,"gt","","",0,[[["level",4]],["bool",15]]],[11,"ge","","",0,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"le","","",0,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",0,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"le","","",1,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",1,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["level",4]],["bool",15]]],[11,"le","","",1,[[["level",4]],["bool",15]]],[11,"gt","","",1,[[["level",4]],["bool",15]]],[11,"ge","","",1,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",4,[[["metadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["metadata",3]],["bool",15]]],[11,"le","","",4,[[["metadata",3]],["bool",15]]],[11,"gt","","",4,[[["metadata",3]],["bool",15]]],[11,"ge","","",4,[[["metadata",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["metadatabuilder",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"le","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"gt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ge","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"from_str","","",0,[[["str",15]],[["result",4],["level",4]]]],[11,"from_str","","",1,[[["str",15]],[["result",4],["levelfilter",4]]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",2,[[],["record",3]]],[11,"clone","","",4,[[],["metadata",3]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"managed":{"doc":"A library that provides a way to logically own objects, …","i":[[4,"Managed","managed","A managed object.",null,null],[13,"Borrowed","","Borrowed variant.",0,null],[13,"Owned","","Owned variant, only available with the <code>std</code> or <code>alloc</code> …",0,null],[4,"ManagedSlice","","A managed slice.",null,null],[13,"Borrowed","","Borrowed variant.",1,null],[13,"Owned","","Owned variant, only available with the <code>std</code> or <code>alloc</code> …",1,null],[3,"SlotKey","","An index into a slotmap.",null,null],[3,"SlotIndex","","Provides links between slots and elements.",null,null],[3,"SlotMap","","Provides a slotmap based on external memory.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"deref","","",0,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",0,[[]]],[11,"deref_mut","","",1,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["box",3]]]],[11,"from","","",0,[[["vec",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["vec",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[["slot",3]],["bool",15]]],[11,"ne","","",2,[[["slot",3]],["bool",15]]],[11,"eq","","",4,[[["key",3]],["bool",15]]],[11,"ne","","",4,[[["key",3]],["bool",15]]],[11,"hash","","",2,[[]]],[11,"hash","","",4,[[]]],[11,"clone","","",2,[[],["slot",3]]],[11,"clone","","",4,[[],["key",3]]],[11,"default","","",2,[[],["slot",3]]],[11,"default","","",4,[[],["key",3]]],[11,"get","","Retrieve a value by index.",3,[[["key",3]],["option",4]]],[11,"get_mut","","Retrieve a mutable value by index.",3,[[["key",3]],["option",4]]],[11,"reserve","","Reserve a new entry.",3,[[],["option",4]]],[11,"insert","","Try to insert a value into the map.",3,[[],[["key",3],["option",4]]]],[11,"remove","","Remove an element.",3,[[["key",3]],["option",4]]],[11,"new","","Create a slot map.",3,[[["slice",4],["slot",3],["slice",4]]]]],"p":[[4,"Managed"],[4,"ManagedSlice"],[3,"SlotIndex"],[3,"SlotMap"],[3,"SlotKey"]]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","i":[[0,"memmem","memchr","This module provides forward and reverse substring search …",null,null],[4,"Prefilter","memchr::memmem","Prefilter controls whether heuristics are used to …",null,null],[13,"None","","Never used a prefilter in substring search.",0,null],[13,"Auto","","Automatically detect whether a heuristic prefilter should …",0,null],[5,"find_iter","","Returns an iterator over all occurrences of a substring …",null,[[],["finditer",3]]],[5,"rfind_iter","","Returns a reverse iterator over all occurrences of a …",null,[[],["findreviter",3]]],[5,"find","","Returns the index of the first occurrence of the given …",null,[[],[["usize",15],["option",4]]]],[5,"rfind","","Returns the index of the last occurrence of the given …",null,[[],[["usize",15],["option",4]]]],[3,"FindIter","","An iterator over non-overlapping substring matches.",null,null],[3,"FindRevIter","","An iterator over non-overlapping substring matches in …",null,null],[3,"Finder","","A single substring searcher fixed to a particular needle.",null,null],[11,"new","","Create a new finder for the given needle.",1,[[],["finder",3]]],[11,"find","","Returns the index of the first occurrence of this needle …",1,[[],[["usize",15],["option",4]]]],[11,"find_iter","","Returns an iterator over all occurrences of a substring …",1,[[],["finditer",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it …",1,[[],["finder",3]]],[11,"as_ref","","Convert this finder into its borrowed variant.",1,[[],["finder",3]]],[11,"needle","","Returns the needle that this finder searches for.",1,[[]]],[3,"FinderRev","","A single substring reverse searcher fixed to a particular …",null,null],[11,"new","","Create a new reverse finder for the given needle.",2,[[],["finderrev",3]]],[11,"rfind","","Returns the index of the last occurrence of this needle …",2,[[["asref",8]],[["usize",15],["option",4]]]],[11,"rfind_iter","","Returns a reverse iterator over all occurrences of a …",2,[[],["findreviter",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it …",2,[[],["finderrev",3]]],[11,"as_ref","","Convert this finder into its borrowed variant.",2,[[],["finderrev",3]]],[11,"needle","","Returns the needle that this finder searches for.",2,[[]]],[3,"FinderBuilder","","A builder for constructing non-default forward or reverse …",null,null],[11,"new","","Create a new finder builder with default settings.",3,[[],["finderbuilder",3]]],[11,"build_forward","","Build a forward finder using the given needle from the …",3,[[],["finder",3]]],[11,"build_reverse","","Build a reverse finder using the given needle from the …",3,[[],["finderrev",3]]],[11,"prefilter","","Configure the prefilter setting for the finder.",3,[[["prefilter",4]],["finderbuilder",3]]],[5,"memchr","memchr","Search for the first occurrence of a byte in a slice.",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memchr2","","Like <code>memchr</code>, but searches for either of two bytes instead …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],["memchr2",3]]],[5,"memchr3","","Like <code>memchr</code>, but searches for any of three bytes instead …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],["memchr3",3]]],[5,"memchr_iter","","An iterator over all occurrences of the needle in a …",null,[[["u8",15]],["memchr",3]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memrchr2","","Like <code>memrchr</code>, but searches for either of two bytes …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],[["memchr2",3],["rev",3]]]],[5,"memrchr3","","Like <code>memrchr</code>, but searches for any of three bytes instead …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],[["memchr3",3],["rev",3]]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a …",null,[[["u8",15]],[["rev",3],["memchr",3]]]],[3,"Memchr","","An iterator for <code>memchr</code>.",null,null],[3,"Memchr2","","An iterator for <code>memchr2</code>.",null,null],[3,"Memchr3","","An iterator for <code>memchr3</code>.",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","memchr::memmem","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"next_back","memchr","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next","","",4,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",6,[[]]],[11,"next","memchr::memmem","",7,[[],[["usize",15],["option",4]]]],[11,"next","","",8,[[],[["usize",15],["option",4]]]],[11,"clone","","",0,[[],["prefilter",4]]],[11,"clone","","",1,[[],["finder",3]]],[11,"clone","","",2,[[],["finderrev",3]]],[11,"clone","","",3,[[],["finderbuilder",3]]],[11,"default","","",0,[[],["prefilter",4]]],[11,"default","","",3,[[],["finderbuilder",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"new","memchr","Creates a new iterator that yields all positions of …",4,[[["u8",15]],["memchr",3]]],[11,"new","","Creates a new iterator that yields all positions of …",5,[[["u8",15]],["memchr2",3]]],[11,"new","","Create a new <code>Memchr3</code> that\'s initialized to zero with a …",6,[[["u8",15]],["memchr3",3]]]],"p":[[4,"Prefilter"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"],[3,"FindIter"],[3,"FindRevIter"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members …","i":[[14,"raw_field","memoffset","Computes a const raw pointer to the given field of the …",null,null],[14,"offset_of","","Calculates the offset of the specified field from the …",null,null],[14,"span_of","","Produces a range instance representing the sub-slice …",null,null]],"p":[]},\
"minijail":{"doc":"","i":[[4,"Error","minijail","",null,null],[13,"BindMount","","",0,null],[12,"errno","minijail::Error","",1,null],[12,"src","","",1,null],[12,"dst","","",1,null],[13,"Mount","minijail","",0,null],[12,"errno","minijail::Error","",2,null],[12,"src","","",2,null],[12,"dest","","",2,null],[12,"fstype","","",2,null],[12,"flags","","",2,null],[12,"data","","",2,null],[13,"CheckingMultiThreaded","minijail","Failure to count the number of threads in …",0,null],[13,"CreatingMinijail","","minjail_new failed, this is an allocation failure.",0,null],[13,"ForkingMinijail","","minijail_fork failed with the given error code.",0,null],[13,"ForkingWhileMultiThreaded","","Attempt to <code>fork</code> while already multithreaded.",0,null],[13,"SeccompPath","","The seccomp policy path doesn\'t exist.",0,null],[13,"StrToCString","","The string passed in didn\'t parse to a valid CString.",0,null],[13,"PathToCString","","The path passed in didn\'t parse to a valid CString.",0,null],[13,"DupDevNull","","Failed to call dup2 to set stdin, stdout, or stderr to …",0,null],[13,"OpenDevNull","","Failed to set up /dev/null for FDs 0, 1, or 2.",0,null],[13,"ReadProgram","","Failed to read policy bpf from file.",0,null],[13,"SetAltSyscallTable","","Setting the specified alt-syscall table failed with …",0,null],[12,"errno","minijail::Error","",3,null],[12,"name","","",3,null],[13,"SetRlimit","minijail","Setting the specified rlimit failed with errno.",0,null],[12,"errno","minijail::Error","",4,null],[12,"kind","","",4,null],[13,"SettingChrootDirectory","minijail","chroot failed with the provided errno.",0,null],[13,"SettingPivotRootDirectory","","pivot_root failed with the provided errno.",0,null],[13,"ReadFdDirEntry","","There is an entry in /proc/self/fd that isn\'t a valid PID.",0,null],[13,"ReadFdDir","","/proc/self/fd failed to open.",0,null],[13,"ProcFd","","An entry in /proc/self/fd is not an integer",0,null],[13,"PreservingFd","","Minijail refused to preserve an FD in the inherit list of …",0,null],[13,"ProgramTooLarge","","Program size is too large",0,null],[13,"WrongProgramAlignment","","Alignment of file should be divisible by the alignment of …",0,null],[13,"WrongProgramSize","","File size should be non-zero and a multiple of sock_filter",0,null],[13,"NoCommand","","The command was not found.",0,null],[13,"NoAccess","","The command could not be run.",0,null],[13,"SeccompViolation","","Process was killed by SIGSYS indicating a seccomp …",0,null],[13,"Killed","","Process was killed by a signal other than SIGSYS.",0,null],[13,"ReturnCode","","Process finished returning a non-zero code.",0,null],[6,"Result","","",null,null],[3,"Minijail","","Configuration to jail a process based on wrapping …",null,null],[11,"new","","Creates a new jail configuration.",5,[[],[["result",6],["minijail",3]]]],[11,"try_clone","","Clones self to a new <code>Minijail</code>. Useful because <code>fork</code> can …",5,[[],[["result",6],["minijail",3]]]],[11,"change_uid","","",5,[[["uid_t",6]]]],[11,"change_gid","","",5,[[["gid_t",6]]]],[11,"change_user","","",5,[[["str",15]],["result",6]]],[11,"change_group","","",5,[[["str",15]],["result",6]]],[11,"set_supplementary_gids","","",5,[[]]],[11,"keep_supplementary_gids","","",5,[[]]],[11,"set_rlimit","","",5,[[["rlim_t",6],["c_int",6]],["result",6]]],[11,"use_seccomp","","",5,[[]]],[11,"no_new_privs","","",5,[[]]],[11,"use_seccomp_filter","","",5,[[]]],[11,"set_seccomp_filter_tsync","","",5,[[]]],[11,"parse_seccomp_program","","",5,[[["asref",8],["path",3]],["result",6]]],[11,"parse_seccomp_filters","","",5,[[["asref",8],["path",3]],["result",6]]],[11,"log_seccomp_filter_failures","","",5,[[]]],[11,"use_caps","","",5,[[["u64",15]]]],[11,"capbset_drop","","",5,[[["u64",15]]]],[11,"set_ambient_caps","","",5,[[]]],[11,"reset_signal_mask","","",5,[[]]],[11,"run_as_init","","",5,[[]]],[11,"namespace_pids","","",5,[[]]],[11,"namespace_user","","",5,[[]]],[11,"namespace_user_disable_setgroups","","",5,[[]]],[11,"namespace_vfs","","",5,[[]]],[11,"new_session_keyring","","",5,[[]]],[11,"skip_remount_private","","",5,[[]]],[11,"namespace_ipc","","",5,[[]]],[11,"namespace_net","","",5,[[]]],[11,"namespace_cgroups","","",5,[[]]],[11,"remount_proc_readonly","","",5,[[]]],[11,"set_remount_mode","","",5,[[["c_ulong",6]]]],[11,"uidmap","","",5,[[["str",15]],["result",6]]],[11,"gidmap","","",5,[[["str",15]],["result",6]]],[11,"inherit_usergroups","","",5,[[]]],[11,"use_alt_syscall","","",5,[[["str",15]],["result",6]]],[11,"enter_chroot","","",5,[[["asref",8],["path",3]],["result",6]]],[11,"enter_pivot_root","","",5,[[["asref",8],["path",3]],["result",6]]],[11,"mount","","",5,[[["path",3],["asref",8],["usize",15],["str",15]],["result",6]]],[11,"mount_with_data","","",5,[[["path",3],["asref",8],["usize",15],["str",15]],["result",6]]],[11,"mount_dev","","",5,[[]]],[11,"mount_tmp","","",5,[[]]],[11,"mount_tmp_size","","",5,[[["usize",15]]]],[11,"mount_bind","","",5,[[["bool",15],["asref",8],["path",3]],["result",6]]],[11,"run","","Forks and execs a child and puts it in the previously …",5,[[["asref",8],["path",3]],[["pid_t",6],["result",6]]]],[11,"run_remap","","Behaves the same as <code>run()</code> except <code>inheritable_fds</code> is a …",5,[[["asref",8],["path",3]],[["pid_t",6],["result",6]]]],[11,"run_fd","","Behaves the same as <code>run()</code> except cmd is a file descriptor …",5,[[],[["pid_t",6],["result",6]]]],[11,"run_fd_remap","","Behaves the same as <code>run()</code> except cmd is a file descriptor …",5,[[],[["pid_t",6],["result",6]]]],[11,"fork","","Forks a child and puts it in the previously configured …",5,[[["option",4]],[["pid_t",6],["result",6]]]],[11,"fork_remap","","Behaves the same as <code>fork()</code> except <code>inheritable_fds</code> is a …",5,[[],[["pid_t",6],["result",6]]]],[11,"wait","","",5,[[],["result",6]]],[11,"kill","","Send a SIGTERM to the child process and wait for its …",5,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","Frees the Minijail created in Minijail::new.",5,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"],[13,"BindMount"],[13,"Mount"],[13,"SetAltSyscallTable"],[13,"SetRlimit"],[3,"Minijail"]]},\
"minijail_sys":{"doc":"","i":[[5,"minijail_new","minijail_sys","",null,null],[5,"minijail_change_uid","","",null,null],[5,"minijail_change_gid","","",null,null],[5,"minijail_set_supplementary_gids","","",null,null],[5,"minijail_keep_supplementary_gids","","",null,null],[5,"minijail_change_user","","",null,null],[5,"minijail_change_group","","",null,null],[5,"minijail_use_seccomp","","",null,null],[5,"minijail_no_new_privs","","",null,null],[5,"minijail_use_seccomp_filter","","",null,null],[5,"minijail_set_seccomp_filter_tsync","","",null,null],[5,"minijail_set_seccomp_filter_allow_speculation","","",null,null],[5,"minijail_set_seccomp_filters","","",null,null],[5,"minijail_parse_seccomp_filters","","",null,null],[5,"minijail_parse_seccomp_filters_from_fd","","",null,null],[5,"minijail_log_seccomp_filter_failures","","",null,null],[5,"minijail_use_caps","","",null,null],[5,"minijail_capbset_drop","","",null,null],[5,"minijail_set_ambient_caps","","",null,null],[5,"minijail_reset_signal_mask","","",null,null],[5,"minijail_reset_signal_handlers","","",null,null],[5,"minijail_namespace_vfs","","",null,null],[5,"minijail_namespace_enter_vfs","","",null,null],[5,"minijail_new_session_keyring","","",null,null],[5,"minijail_skip_setting_securebits","","",null,null],[5,"minijail_skip_remount_private","","",null,null],[5,"minijail_remount_mode","","",null,null],[5,"minijail_namespace_ipc","","",null,null],[5,"minijail_namespace_uts","","",null,null],[5,"minijail_namespace_set_hostname","","",null,null],[5,"minijail_namespace_net","","",null,null],[5,"minijail_namespace_enter_net","","",null,null],[5,"minijail_namespace_cgroups","","",null,null],[5,"minijail_close_open_fds","","",null,null],[5,"minijail_namespace_pids","","",null,null],[5,"minijail_namespace_pids_rw_proc","","",null,null],[5,"minijail_namespace_user","","",null,null],[5,"minijail_namespace_user_disable_setgroups","","",null,null],[5,"minijail_uidmap","","",null,null],[5,"minijail_gidmap","","",null,null],[5,"minijail_remount_proc_readonly","","",null,null],[5,"minijail_run_as_init","","",null,null],[5,"minijail_write_pid_file","","",null,null],[5,"minijail_inherit_usergroups","","",null,null],[5,"minijail_use_alt_syscall","","",null,null],[5,"minijail_rlimit","","",null,null],[5,"minijail_add_to_cgroup","","",null,null],[5,"minijail_forward_signals","","",null,null],[5,"minijail_create_session","","",null,null],[5,"minijail_enter_chroot","","",null,null],[5,"minijail_enter_pivot_root","","",null,null],[5,"minijail_get_original_path","","",null,null],[5,"minijail_mount_tmp","","",null,null],[5,"minijail_mount_tmp_size","","",null,null],[5,"minijail_mount_dev","","",null,null],[5,"minijail_mount_with_data","","",null,null],[5,"minijail_mount","","",null,null],[5,"minijail_bind","","",null,null],[5,"minijail_add_remount","","",null,null],[5,"minijail_add_hook","","",null,null],[5,"minijail_preserve_fd","","",null,null],[5,"minijail_set_preload_path","","",null,null],[5,"minijail_enter","","",null,null],[5,"minijail_run","","",null,null],[5,"minijail_run_no_preload","","",null,null],[5,"minijail_run_pid","","",null,null],[5,"minijail_run_pipe","","",null,null],[5,"minijail_run_pid_pipes","","",null,null],[5,"minijail_run_env_pid_pipes","","",null,null],[5,"minijail_run_fd_env_pid_pipes","","",null,null],[5,"minijail_run_pid_pipes_no_preload","","",null,null],[5,"minijail_run_env_pid_pipes_no_preload","","",null,null],[5,"minijail_fork","","",null,null],[5,"minijail_kill","","",null,null],[5,"minijail_wait","","",null,null],[5,"minijail_destroy","","",null,null],[5,"minijail_copy_jail","","",null,null],[5,"minijail_log_to_fd","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__u32","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__pid_t","","",null,null],[6,"rlim_t","","",null,null],[6,"gid_t","","",null,null],[6,"uid_t","","",null,null],[6,"pid_t","","",null,null],[6,"size_t","","",null,null],[3,"sock_filter","","",null,null],[12,"code","","",0,null],[12,"jt","","",0,null],[12,"jf","","",0,null],[12,"k","","",0,null],[3,"sock_fprog","","",null,null],[12,"len","","",1,null],[12,"filter","","",1,null],[17,"MINIJAIL_ERR_NO_ACCESS","","",null,null],[17,"MINIJAIL_ERR_NO_COMMAND","","",null,null],[17,"MINIJAIL_ERR_SIG_BASE","","",null,null],[17,"MINIJAIL_ERR_MOUNT","","",null,null],[17,"MINIJAIL_ERR_PRELOAD","","",null,null],[17,"MINIJAIL_ERR_JAIL","","",null,null],[17,"MINIJAIL_ERR_INIT","","",null,null],[4,"_bindgen_ty_1","","",null,null],[13,"MINIJAIL_ERR_NO_ACCESS","","",2,null],[13,"MINIJAIL_ERR_NO_COMMAND","","",2,null],[13,"MINIJAIL_ERR_SIG_BASE","","",2,null],[13,"MINIJAIL_ERR_MOUNT","","",2,null],[13,"MINIJAIL_ERR_PRELOAD","","",2,null],[13,"MINIJAIL_ERR_JAIL","","",2,null],[13,"MINIJAIL_ERR_INIT","","",2,null],[3,"minijail","","",null,null],[6,"minijail_hook_t","","",null,null],[4,"minijail_hook_event_t","","",null,null],[13,"MINIJAIL_HOOK_EVENT_PRE_DROP_CAPS","","",3,null],[13,"MINIJAIL_HOOK_EVENT_PRE_EXECVE","","",3,null],[13,"MINIJAIL_HOOK_EVENT_PRE_CHROOT","","",3,null],[13,"MINIJAIL_HOOK_EVENT_MAX","","",3,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",1,[[],["sock_fprog",3]]],[11,"clone","","",2,[[],["_bindgen_ty_1",4]]],[11,"clone","","",4,[[],["minijail",3]]],[11,"clone","","",3,[[],["minijail_hook_event_t",4]]],[11,"eq","","",2,[[["_bindgen_ty_1",4]],["bool",15]]],[11,"eq","","",3,[[["minijail_hook_event_t",4]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]]],"p":[[3,"sock_filter"],[3,"sock_fprog"],[4,"_bindgen_ty_1"],[4,"minijail_hook_event_t"],[3,"minijail"]]},\
"net_sys":{"doc":"","i":[[0,"iff","net_sys","",null,null],[5,"select","net_sys::iff","",null,null],[5,"pselect","","",null,null],[5,"__cmsg_nxthdr","","",null,null],[5,"socket","","",null,null],[5,"socketpair","","",null,null],[5,"bind","","",null,null],[5,"getsockname","","",null,null],[5,"connect","","",null,null],[5,"getpeername","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"sendto","","",null,null],[5,"recvfrom","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getsockopt","","",null,null],[5,"setsockopt","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"shutdown","","",null,null],[5,"sockatmark","","",null,null],[5,"isfdtype","","",null,null],[3,"__IncompleteArrayField","","",null,null],[11,"new","","",0,[[]]],[11,"as_ptr","","",0,[[]]],[11,"as_mut_ptr","","",0,[[]]],[11,"as_slice","","",0,[[["usize",15]]]],[11,"as_mut_slice","","",0,[[["usize",15]]]],[17,"__UAPI_DEF_IF_IFCONF","","",null,null],[17,"__UAPI_DEF_IF_IFMAP","","",null,null],[17,"__UAPI_DEF_IF_IFNAMSIZ","","",null,null],[17,"__UAPI_DEF_IF_IFREQ","","",null,null],[17,"__UAPI_DEF_IF_NET_DEVICE_FLAGS","","",null,null],[17,"__UAPI_DEF_IF_NET_DEVICE_FLAGS_LOWER_UP_DORMANT_ECHO","","",null,null],[17,"__UAPI_DEF_IN_ADDR","","",null,null],[17,"__UAPI_DEF_IN_IPPROTO","","",null,null],[17,"__UAPI_DEF_IN_PKTINFO","","",null,null],[17,"__UAPI_DEF_IP_MREQ","","",null,null],[17,"__UAPI_DEF_SOCKADDR_IN","","",null,null],[17,"__UAPI_DEF_IN_CLASS","","",null,null],[17,"__UAPI_DEF_IN6_ADDR","","",null,null],[17,"__UAPI_DEF_IN6_ADDR_ALT","","",null,null],[17,"__UAPI_DEF_SOCKADDR_IN6","","",null,null],[17,"__UAPI_DEF_IPV6_MREQ","","",null,null],[17,"__UAPI_DEF_IPPROTO_V6","","",null,null],[17,"__UAPI_DEF_IPV6_OPTIONS","","",null,null],[17,"__UAPI_DEF_IN6_PKTINFO","","",null,null],[17,"__UAPI_DEF_IP6_MTUINFO","","",null,null],[17,"__UAPI_DEF_SOCKADDR_IPX","","",null,null],[17,"__UAPI_DEF_IPX_ROUTE_DEFINITION","","",null,null],[17,"__UAPI_DEF_IPX_INTERFACE_DEFINITION","","",null,null],[17,"__UAPI_DEF_IPX_CONFIG_DATA","","",null,null],[17,"__UAPI_DEF_IPX_ROUTE_DEF","","",null,null],[17,"__UAPI_DEF_XATTR","","",null,null],[17,"__BITS_PER_LONG","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_K_SS_MAXSIZE","","",null,null],[17,"_SYS_SOCKET_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"__GLIBC_USE_DEPRECATED_GETS","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__glibc_c99_flexarr_available","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"__HAVE_GENERIC_SELECTION","","",null,null],[17,"__iovec_defined","","",null,null],[17,"_SYS_TYPES_H","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__RLIM_T_MATCHES_RLIM64_T","","",null,null],[17,"__clock_t_defined","","",null,null],[17,"__clockid_t_defined","","",null,null],[17,"__time_t_defined","","",null,null],[17,"__timer_t_defined","","",null,null],[17,"_BITS_STDINT_INTN_H","","",null,null],[17,"__BIT_TYPES_DEFINED__","","",null,null],[17,"_ENDIAN_H","","",null,null],[17,"__LITTLE_ENDIAN","","",null,null],[17,"__BIG_ENDIAN","","",null,null],[17,"__PDP_ENDIAN","","",null,null],[17,"__BYTE_ORDER","","",null,null],[17,"__FLOAT_WORD_ORDER","","",null,null],[17,"LITTLE_ENDIAN","","",null,null],[17,"BIG_ENDIAN","","",null,null],[17,"PDP_ENDIAN","","",null,null],[17,"BYTE_ORDER","","",null,null],[17,"_BITS_BYTESWAP_H","","",null,null],[17,"_BITS_UINTN_IDENTITY_H","","",null,null],[17,"_SYS_SELECT_H","","",null,null],[17,"__FD_ZERO_STOS","","",null,null],[17,"__sigset_t_defined","","",null,null],[17,"__timeval_defined","","",null,null],[17,"_STRUCT_TIMESPEC","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"_BITS_PTHREADTYPES_COMMON_H","","",null,null],[17,"_THREAD_SHARED_TYPES_H","","",null,null],[17,"_BITS_PTHREADTYPES_ARCH_H","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_ATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_BARRIER_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_BARRIERATTR_T","","",null,null],[17,"__PTHREAD_MUTEX_LOCK_ELISION","","",null,null],[17,"__PTHREAD_MUTEX_NUSERS_AFTER_KIND","","",null,null],[17,"__PTHREAD_MUTEX_USE_UNION","","",null,null],[17,"__PTHREAD_RWLOCK_INT_FLAGS_SHARED","","",null,null],[17,"__PTHREAD_MUTEX_HAVE_PREV","","",null,null],[17,"__have_pthread_attr_t","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_FILE","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_KCM","","",null,null],[17,"PF_QIPCRTR","","",null,null],[17,"PF_SMC","","",null,null],[17,"PF_MAX","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_FILE","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_KCM","","",null,null],[17,"AF_QIPCRTR","","",null,null],[17,"AF_SMC","","",null,null],[17,"AF_MAX","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_KCM","","",null,null],[17,"SOL_TLS","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"_BITS_SOCKADDR_H","","",null,null],[17,"_SS_SIZE","","",null,null],[17,"FIOSETOWN","","",null,null],[17,"SIOCSPGRP","","",null,null],[17,"FIOGETOWN","","",null,null],[17,"SIOCGPGRP","","",null,null],[17,"SIOCATMARK","","",null,null],[17,"SIOCGSTAMP","","",null,null],[17,"SIOCGSTAMPNS","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_CBPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_EBPF","","",null,null],[17,"SO_CNX_ADVICE","","",null,null],[17,"SCM_TIMESTAMPING_OPT_STATS","","",null,null],[17,"SO_MEMINFO","","",null,null],[17,"SO_INCOMING_NAPI_ID","","",null,null],[17,"SO_COOKIE","","",null,null],[17,"SCM_TIMESTAMPING_PKTINFO","","",null,null],[17,"SO_PEERGROUPS","","",null,null],[17,"SO_ZEROCOPY","","",null,null],[17,"__osockaddr_defined","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"IFALIASZ","","",null,null],[17,"GENERIC_HDLC_VERSION","","",null,null],[17,"CLOCK_DEFAULT","","",null,null],[17,"CLOCK_EXT","","",null,null],[17,"CLOCK_INT","","",null,null],[17,"CLOCK_TXINT","","",null,null],[17,"CLOCK_TXFROMRX","","",null,null],[17,"ENCODING_DEFAULT","","",null,null],[17,"ENCODING_NRZ","","",null,null],[17,"ENCODING_NRZI","","",null,null],[17,"ENCODING_FM_MARK","","",null,null],[17,"ENCODING_FM_SPACE","","",null,null],[17,"ENCODING_MANCHESTER","","",null,null],[17,"PARITY_DEFAULT","","",null,null],[17,"PARITY_NONE","","",null,null],[17,"PARITY_CRC16_PR0","","",null,null],[17,"PARITY_CRC16_PR1","","",null,null],[17,"PARITY_CRC16_PR0_CCITT","","",null,null],[17,"PARITY_CRC16_PR1_CCITT","","",null,null],[17,"PARITY_CRC32_PR0_CCITT","","",null,null],[17,"PARITY_CRC32_PR1_CCITT","","",null,null],[17,"LMI_DEFAULT","","",null,null],[17,"LMI_NONE","","",null,null],[17,"LMI_ANSI","","",null,null],[17,"LMI_CCITT","","",null,null],[17,"LMI_CISCO","","",null,null],[17,"IF_GET_IFACE","","",null,null],[17,"IF_GET_PROTO","","",null,null],[17,"IF_IFACE_V35","","",null,null],[17,"IF_IFACE_V24","","",null,null],[17,"IF_IFACE_X21","","",null,null],[17,"IF_IFACE_T1","","",null,null],[17,"IF_IFACE_E1","","",null,null],[17,"IF_IFACE_SYNC_SERIAL","","",null,null],[17,"IF_IFACE_X21D","","",null,null],[17,"IF_PROTO_HDLC","","",null,null],[17,"IF_PROTO_PPP","","",null,null],[17,"IF_PROTO_CISCO","","",null,null],[17,"IF_PROTO_FR","","",null,null],[17,"IF_PROTO_FR_ADD_PVC","","",null,null],[17,"IF_PROTO_FR_DEL_PVC","","",null,null],[17,"IF_PROTO_X25","","",null,null],[17,"IF_PROTO_HDLC_ETH","","",null,null],[17,"IF_PROTO_FR_ADD_ETH_PVC","","",null,null],[17,"IF_PROTO_FR_DEL_ETH_PVC","","",null,null],[17,"IF_PROTO_FR_PVC","","",null,null],[17,"IF_PROTO_FR_ETH_PVC","","",null,null],[17,"IF_PROTO_RAW","","",null,null],[17,"IFHWADDRLEN","","",null,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[3,"__kernel_fd_set","","",null,null],[12,"fds_bits","","",1,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",2,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[6,"__kernel_sa_family_t","","",null,null],[3,"__kernel_sockaddr_storage","","",null,null],[12,"ss_family","","",3,null],[12,"__data","","",3,null],[3,"iovec","","",null,null],[12,"iov_base","","",4,null],[12,"iov_len","","",4,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__intmax_t","","",null,null],[6,"__uintmax_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[3,"__fsid_t","","",null,null],[12,"__val","","",5,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"u_char","","",null,null],[6,"u_short","","",null,null],[6,"u_int","","",null,null],[6,"u_long","","",null,null],[6,"quad_t","","",null,null],[6,"u_quad_t","","",null,null],[6,"fsid_t","","",null,null],[6,"loff_t","","",null,null],[6,"ino_t","","",null,null],[6,"dev_t","","",null,null],[6,"gid_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"uid_t","","",null,null],[6,"off_t","","",null,null],[6,"pid_t","","",null,null],[6,"id_t","","",null,null],[6,"daddr_t","","",null,null],[6,"caddr_t","","",null,null],[6,"key_t","","",null,null],[6,"clock_t","","",null,null],[6,"clockid_t","","",null,null],[6,"time_t","","",null,null],[6,"timer_t","","",null,null],[6,"ulong","","",null,null],[6,"ushort","","",null,null],[6,"uint","","",null,null],[6,"u_int8_t","","",null,null],[6,"u_int16_t","","",null,null],[6,"u_int32_t","","",null,null],[6,"u_int64_t","","",null,null],[6,"register_t","","",null,null],[3,"__sigset_t","","",null,null],[12,"__val","","",6,null],[6,"sigset_t","","",null,null],[3,"timeval","","",null,null],[12,"tv_sec","","",7,null],[12,"tv_usec","","",7,null],[3,"timespec","","",null,null],[12,"tv_sec","","",8,null],[12,"tv_nsec","","",8,null],[6,"suseconds_t","","",null,null],[6,"__fd_mask","","",null,null],[3,"fd_set","","",null,null],[12,"__fds_bits","","",9,null],[6,"fd_mask","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[3,"__pthread_rwlock_arch_t","","",null,null],[12,"__readers","","",10,null],[12,"__writers","","",10,null],[12,"__wrphase_futex","","",10,null],[12,"__writers_futex","","",10,null],[12,"__pad3","","",10,null],[12,"__pad4","","",10,null],[12,"__cur_writer","","",10,null],[12,"__shared","","",10,null],[12,"__rwelision","","",10,null],[12,"__pad1","","",10,null],[12,"__pad2","","",10,null],[12,"__flags","","",10,null],[3,"__pthread_internal_list","","",null,null],[12,"__prev","","",11,null],[12,"__next","","",11,null],[6,"__pthread_list_t","","",null,null],[3,"__pthread_mutex_s","","",null,null],[12,"__lock","","",12,null],[12,"__count","","",12,null],[12,"__owner","","",12,null],[12,"__nusers","","",12,null],[12,"__kind","","",12,null],[12,"__spins","","",12,null],[12,"__elision","","",12,null],[12,"__list","","",12,null],[3,"__pthread_cond_s","","",null,null],[12,"__bindgen_anon_1","","",13,null],[12,"__bindgen_anon_2","","",13,null],[12,"__g_refs","","",13,null],[12,"__g_size","","",13,null],[12,"__g1_orig_size","","",13,null],[12,"__wrefs","","",13,null],[12,"__g_signals","","",13,null],[19,"__pthread_cond_s__bindgen_ty_1","","",null,null],[12,"__wseq","","",14,null],[12,"__wseq32","","",14,null],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"__low","","",15,null],[12,"__high","","",15,null],[19,"__pthread_cond_s__bindgen_ty_2","","",null,null],[12,"__g1_start","","",16,null],[12,"__g1_start32","","",16,null],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","","",null,null],[12,"__low","","",17,null],[12,"__high","","",17,null],[6,"pthread_t","","",null,null],[19,"pthread_mutexattr_t","","",null,null],[12,"__size","","",18,null],[12,"__align","","",18,null],[19,"pthread_condattr_t","","",null,null],[12,"__size","","",19,null],[12,"__align","","",19,null],[6,"pthread_key_t","","",null,null],[6,"pthread_once_t","","",null,null],[19,"pthread_attr_t","","",null,null],[12,"__size","","",20,null],[12,"__align","","",20,null],[19,"pthread_mutex_t","","",null,null],[12,"__data","","",21,null],[12,"__size","","",21,null],[12,"__align","","",21,null],[19,"pthread_cond_t","","",null,null],[12,"__data","","",22,null],[12,"__size","","",22,null],[12,"__align","","",22,null],[19,"pthread_rwlock_t","","",null,null],[12,"__data","","",23,null],[12,"__size","","",23,null],[12,"__align","","",23,null],[19,"pthread_rwlockattr_t","","",null,null],[12,"__size","","",24,null],[12,"__align","","",24,null],[6,"pthread_spinlock_t","","",null,null],[19,"pthread_barrier_t","","",null,null],[12,"__size","","",25,null],[12,"__align","","",25,null],[19,"pthread_barrierattr_t","","",null,null],[12,"__size","","",26,null],[12,"__align","","",26,null],[6,"socklen_t","","",null,null],[17,"__socket_type_SOCK_STREAM","","",null,null],[17,"__socket_type_SOCK_DGRAM","","",null,null],[17,"__socket_type_SOCK_RAW","","",null,null],[17,"__socket_type_SOCK_RDM","","",null,null],[17,"__socket_type_SOCK_SEQPACKET","","",null,null],[17,"__socket_type_SOCK_DCCP","","",null,null],[17,"__socket_type_SOCK_PACKET","","",null,null],[17,"__socket_type_SOCK_CLOEXEC","","",null,null],[17,"__socket_type_SOCK_NONBLOCK","","",null,null],[6,"__socket_type","","",null,null],[6,"sa_family_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",27,null],[12,"sa_data","","",27,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",28,null],[12,"__ss_padding","","",28,null],[12,"__ss_align","","",28,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_PROXY","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_BATCH","","",null,null],[17,"MSG_ZEROCOPY","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[6,"_bindgen_ty_1","","",null,null],[3,"msghdr","","",null,null],[12,"msg_name","","",29,null],[12,"msg_namelen","","",29,null],[12,"msg_iov","","",29,null],[12,"msg_iovlen","","",29,null],[12,"msg_control","","",29,null],[12,"msg_controllen","","",29,null],[12,"msg_flags","","",29,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",30,null],[12,"cmsg_level","","",30,null],[12,"cmsg_type","","",30,null],[12,"__cmsg_data","","",30,null],[17,"SCM_RIGHTS","","",null,null],[6,"_bindgen_ty_2","","",null,null],[3,"linger","","",null,null],[12,"l_onoff","","",31,null],[12,"l_linger","","",31,null],[3,"osockaddr","","",null,null],[12,"sa_family","","",32,null],[12,"sa_data","","",32,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[6,"_bindgen_ty_3","","",null,null],[3,"sync_serial_settings","","",null,null],[12,"clock_rate","","",33,null],[12,"clock_type","","",33,null],[12,"loopback","","",33,null],[3,"te1_settings","","",null,null],[12,"clock_rate","","",34,null],[12,"clock_type","","",34,null],[12,"loopback","","",34,null],[12,"slot_map","","",34,null],[3,"raw_hdlc_proto","","",null,null],[12,"encoding","","",35,null],[12,"parity","","",35,null],[3,"fr_proto","","",null,null],[12,"t391","","",36,null],[12,"t392","","",36,null],[12,"n391","","",36,null],[12,"n392","","",36,null],[12,"n393","","",36,null],[12,"lmi","","",36,null],[12,"dce","","",36,null],[3,"fr_proto_pvc","","",null,null],[12,"dlci","","",37,null],[3,"fr_proto_pvc_info","","",null,null],[12,"dlci","","",38,null],[12,"master","","",38,null],[3,"cisco_proto","","",null,null],[12,"interval","","",39,null],[12,"timeout","","",39,null],[17,"net_device_flags_IFF_UP","","",null,null],[17,"net_device_flags_IFF_BROADCAST","","",null,null],[17,"net_device_flags_IFF_DEBUG","","",null,null],[17,"net_device_flags_IFF_LOOPBACK","","",null,null],[17,"net_device_flags_IFF_POINTOPOINT","","",null,null],[17,"net_device_flags_IFF_NOTRAILERS","","",null,null],[17,"net_device_flags_IFF_RUNNING","","",null,null],[17,"net_device_flags_IFF_NOARP","","",null,null],[17,"net_device_flags_IFF_PROMISC","","",null,null],[17,"net_device_flags_IFF_ALLMULTI","","",null,null],[17,"net_device_flags_IFF_MASTER","","",null,null],[17,"net_device_flags_IFF_SLAVE","","",null,null],[17,"net_device_flags_IFF_MULTICAST","","",null,null],[17,"net_device_flags_IFF_PORTSEL","","",null,null],[17,"net_device_flags_IFF_AUTOMEDIA","","",null,null],[17,"net_device_flags_IFF_DYNAMIC","","",null,null],[17,"net_device_flags_IFF_LOWER_UP","","",null,null],[17,"net_device_flags_IFF_DORMANT","","",null,null],[17,"net_device_flags_IFF_ECHO","","",null,null],[6,"net_device_flags","","",null,null],[17,"IF_OPER_UNKNOWN","","",null,null],[17,"IF_OPER_NOTPRESENT","","",null,null],[17,"IF_OPER_DOWN","","",null,null],[17,"IF_OPER_LOWERLAYERDOWN","","",null,null],[17,"IF_OPER_TESTING","","",null,null],[17,"IF_OPER_DORMANT","","",null,null],[17,"IF_OPER_UP","","",null,null],[6,"_bindgen_ty_4","","",null,null],[17,"IF_LINK_MODE_DEFAULT","","",null,null],[17,"IF_LINK_MODE_DORMANT","","",null,null],[6,"_bindgen_ty_5","","",null,null],[3,"ifmap","","",null,null],[12,"mem_start","","",40,null],[12,"mem_end","","",40,null],[12,"base_addr","","",40,null],[12,"irq","","",40,null],[12,"dma","","",40,null],[12,"port","","",40,null],[3,"if_settings","","",null,null],[12,"type_","","",41,null],[12,"size","","",41,null],[12,"ifs_ifsu","","",41,null],[19,"if_settings__bindgen_ty_1","","",null,null],[12,"raw_hdlc","","",42,null],[12,"cisco","","",42,null],[12,"fr","","",42,null],[12,"fr_pvc","","",42,null],[12,"fr_pvc_info","","",42,null],[12,"sync","","",42,null],[12,"te1","","",42,null],[3,"ifreq","","",null,null],[12,"ifr_ifrn","","",43,null],[12,"ifr_ifru","","",43,null],[19,"ifreq__bindgen_ty_1","","",null,null],[12,"ifrn_name","","",44,null],[19,"ifreq__bindgen_ty_2","","",null,null],[12,"ifru_addr","","",45,null],[12,"ifru_dstaddr","","",45,null],[12,"ifru_broadaddr","","",45,null],[12,"ifru_netmask","","",45,null],[12,"ifru_hwaddr","","",45,null],[12,"ifru_flags","","",45,null],[12,"ifru_ivalue","","",45,null],[12,"ifru_mtu","","",45,null],[12,"ifru_map","","",45,null],[12,"ifru_slave","","",45,null],[12,"ifru_newname","","",45,null],[12,"ifru_data","","",45,null],[12,"ifru_settings","","",45,null],[3,"ifconf","","",null,null],[12,"ifc_len","","",46,null],[12,"ifc_ifcu","","",46,null],[19,"ifconf__bindgen_ty_1","","",null,null],[12,"ifcu_buf","","",47,null],[12,"ifcu_req","","",47,null],[0,"if_tun","net_sys","",null,null],[3,"__IncompleteArrayField","net_sys::if_tun","",null,null],[11,"new","","",48,[[]]],[11,"as_ptr","","",48,[[]]],[11,"as_mut_ptr","","",48,[[]]],[11,"as_slice","","",48,[[["usize",15]]]],[11,"as_mut_slice","","",48,[[["usize",15]]]],[17,"__BITS_PER_LONG","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_TSN","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CAN","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"ETH_P_XDSA","","",null,null],[17,"BPF_LD","","",null,null],[17,"BPF_LDX","","",null,null],[17,"BPF_ST","","",null,null],[17,"BPF_STX","","",null,null],[17,"BPF_ALU","","",null,null],[17,"BPF_JMP","","",null,null],[17,"BPF_RET","","",null,null],[17,"BPF_MISC","","",null,null],[17,"BPF_W","","",null,null],[17,"BPF_H","","",null,null],[17,"BPF_B","","",null,null],[17,"BPF_IMM","","",null,null],[17,"BPF_ABS","","",null,null],[17,"BPF_IND","","",null,null],[17,"BPF_MEM","","",null,null],[17,"BPF_LEN","","",null,null],[17,"BPF_MSH","","",null,null],[17,"BPF_ADD","","",null,null],[17,"BPF_SUB","","",null,null],[17,"BPF_MUL","","",null,null],[17,"BPF_DIV","","",null,null],[17,"BPF_OR","","",null,null],[17,"BPF_AND","","",null,null],[17,"BPF_LSH","","",null,null],[17,"BPF_RSH","","",null,null],[17,"BPF_NEG","","",null,null],[17,"BPF_MOD","","",null,null],[17,"BPF_XOR","","",null,null],[17,"BPF_JA","","",null,null],[17,"BPF_JEQ","","",null,null],[17,"BPF_JGT","","",null,null],[17,"BPF_JGE","","",null,null],[17,"BPF_JSET","","",null,null],[17,"BPF_K","","",null,null],[17,"BPF_X","","",null,null],[17,"BPF_MAXINSNS","","",null,null],[17,"BPF_MAJOR_VERSION","","",null,null],[17,"BPF_MINOR_VERSION","","",null,null],[17,"BPF_A","","",null,null],[17,"BPF_TAX","","",null,null],[17,"BPF_TXA","","",null,null],[17,"BPF_MEMWORDS","","",null,null],[17,"SKF_AD_OFF","","",null,null],[17,"SKF_AD_PROTOCOL","","",null,null],[17,"SKF_AD_PKTTYPE","","",null,null],[17,"SKF_AD_IFINDEX","","",null,null],[17,"SKF_AD_NLATTR","","",null,null],[17,"SKF_AD_NLATTR_NEST","","",null,null],[17,"SKF_AD_MARK","","",null,null],[17,"SKF_AD_QUEUE","","",null,null],[17,"SKF_AD_HATYPE","","",null,null],[17,"SKF_AD_RXHASH","","",null,null],[17,"SKF_AD_CPU","","",null,null],[17,"SKF_AD_ALU_XOR_X","","",null,null],[17,"SKF_AD_VLAN_TAG","","",null,null],[17,"SKF_AD_VLAN_TAG_PRESENT","","",null,null],[17,"SKF_AD_PAY_OFFSET","","",null,null],[17,"SKF_AD_RANDOM","","",null,null],[17,"SKF_AD_VLAN_TPID","","",null,null],[17,"SKF_AD_MAX","","",null,null],[17,"SKF_NET_OFF","","",null,null],[17,"SKF_LL_OFF","","",null,null],[17,"BPF_NET_OFF","","",null,null],[17,"BPF_LL_OFF","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"TUN_TX_TIMESTAMP","","",null,null],[17,"TUN_F_CSUM","","",null,null],[17,"TUN_F_TSO4","","",null,null],[17,"TUN_F_TSO6","","",null,null],[17,"TUN_F_TSO_ECN","","",null,null],[17,"TUN_F_UFO","","",null,null],[17,"TUN_PKT_STRIP","","",null,null],[17,"TUN_FLT_ALLMULTI","","",null,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[3,"__kernel_fd_set","","",null,null],[12,"fds_bits","","",49,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",50,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[3,"ethhdr","","",null,null],[12,"h_dest","","",51,null],[12,"h_source","","",51,null],[12,"h_proto","","",51,null],[3,"sock_filter","","",null,null],[12,"code","","",52,null],[12,"jt","","",52,null],[12,"jf","","",52,null],[12,"k","","",52,null],[3,"sock_fprog","","",null,null],[12,"len","","",53,null],[12,"filter","","",53,null],[3,"tun_pi","","",null,null],[12,"flags","","",54,null],[12,"proto","","",54,null],[3,"tun_filter","","",null,null],[12,"flags","","",55,null],[12,"count","","",55,null],[12,"addr","","",55,null],[0,"inn","net_sys","",null,null],[17,"__BITS_PER_LONG","net_sys::inn","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"__UAPI_DEF_IN_ADDR","","",null,null],[17,"__UAPI_DEF_IN_IPPROTO","","",null,null],[17,"__UAPI_DEF_IN_PKTINFO","","",null,null],[17,"__UAPI_DEF_IP_MREQ","","",null,null],[17,"__UAPI_DEF_SOCKADDR_IN","","",null,null],[17,"__UAPI_DEF_IN_CLASS","","",null,null],[17,"__UAPI_DEF_IN6_ADDR","","",null,null],[17,"__UAPI_DEF_IN6_ADDR_ALT","","",null,null],[17,"__UAPI_DEF_SOCKADDR_IN6","","",null,null],[17,"__UAPI_DEF_IPV6_MREQ","","",null,null],[17,"__UAPI_DEF_IPPROTO_V6","","",null,null],[17,"__UAPI_DEF_IPV6_OPTIONS","","",null,null],[17,"__UAPI_DEF_IN6_PKTINFO","","",null,null],[17,"__UAPI_DEF_IP6_MTUINFO","","",null,null],[17,"__UAPI_DEF_XATTR","","",null,null],[17,"_K_SS_MAXSIZE","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_RECVRETOPTS","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"__SOCK_SIZE__","","",null,null],[17,"IN_CLASSA_NET","","",null,null],[17,"IN_CLASSA_NSHIFT","","",null,null],[17,"IN_CLASSA_HOST","","",null,null],[17,"IN_CLASSA_MAX","","",null,null],[17,"IN_CLASSB_NET","","",null,null],[17,"IN_CLASSB_NSHIFT","","",null,null],[17,"IN_CLASSB_HOST","","",null,null],[17,"IN_CLASSB_MAX","","",null,null],[17,"IN_CLASSC_NET","","",null,null],[17,"IN_CLASSC_NSHIFT","","",null,null],[17,"IN_CLASSC_HOST","","",null,null],[17,"IN_MULTICAST_NET","","",null,null],[17,"IN_LOOPBACKNET","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_UNSPEC_GROUP","","",null,null],[17,"INADDR_ALLHOSTS_GROUP","","",null,null],[17,"INADDR_ALLRTRS_GROUP","","",null,null],[17,"INADDR_MAX_LOCAL_GROUP","","",null,null],[17,"__LITTLE_ENDIAN","","",null,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[3,"__kernel_fd_set","","",null,null],[12,"fds_bits","","",56,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",57,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[6,"__kernel_sa_family_t","","",null,null],[3,"__kernel_sockaddr_storage","","",null,null],[12,"ss_family","","",58,null],[12,"__data","","",58,null],[12,"__bindgen_align","","",58,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_IGMP","","",null,null],[17,"IPPROTO_IPIP","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_EGP","","",null,null],[17,"IPPROTO_PUP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IDP","","",null,null],[17,"IPPROTO_TP","","",null,null],[17,"IPPROTO_DCCP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IPPROTO_RSVP","","",null,null],[17,"IPPROTO_GRE","","",null,null],[17,"IPPROTO_ESP","","",null,null],[17,"IPPROTO_AH","","",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","",null,null],[17,"IPPROTO_PIM","","",null,null],[17,"IPPROTO_COMP","","",null,null],[17,"IPPROTO_SCTP","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"IPPROTO_MAX","","",null,null],[6,"_bindgen_ty_1","","",null,null],[3,"in_addr","","",null,null],[12,"s_addr","","",59,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",60,null],[12,"imr_interface","","",60,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",61,null],[12,"imr_address","","",61,null],[12,"imr_ifindex","","",61,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",62,null],[12,"imr_interface","","",62,null],[12,"imr_sourceaddr","","",62,null],[3,"ip_msfilter","","",null,null],[12,"imsf_multiaddr","","",63,null],[12,"imsf_interface","","",63,null],[12,"imsf_fmode","","",63,null],[12,"imsf_numsrc","","",63,null],[12,"imsf_slist","","",63,null],[3,"group_req","","",null,null],[12,"gr_interface","","",64,null],[12,"gr_group","","",64,null],[3,"group_source_req","","",null,null],[12,"gsr_interface","","",65,null],[12,"gsr_group","","",65,null],[12,"gsr_source","","",65,null],[3,"group_filter","","",null,null],[12,"gf_interface","","",66,null],[12,"gf_group","","",66,null],[12,"gf_fmode","","",66,null],[12,"gf_numsrc","","",66,null],[12,"gf_slist","","",66,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",67,null],[12,"ipi_spec_dst","","",67,null],[12,"ipi_addr","","",67,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",68,null],[12,"sin_port","","",68,null],[12,"sin_addr","","",68,null],[12,"__pad","","",68,null],[0,"sockios","net_sys","",null,null],[17,"FIOSETOWN","net_sys::sockios","",null,null],[17,"SIOCSPGRP","","",null,null],[17,"FIOGETOWN","","",null,null],[17,"SIOCGPGRP","","",null,null],[17,"SIOCATMARK","","",null,null],[17,"SIOCGSTAMP","","",null,null],[17,"SIOCGSTAMPNS","","",null,null],[17,"SOCK_IOC_TYPE","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCRTMSG","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFNAME","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCGIFINDEX","","",null,null],[17,"SIOGIFINDEX","","",null,null],[17,"SIOCSIFPFLAGS","","",null,null],[17,"SIOCGIFPFLAGS","","",null,null],[17,"SIOCDIFADDR","","",null,null],[17,"SIOCSIFHWBROADCAST","","",null,null],[17,"SIOCGIFCOUNT","","",null,null],[17,"SIOCGIFBR","","",null,null],[17,"SIOCSIFBR","","",null,null],[17,"SIOCGIFTXQLEN","","",null,null],[17,"SIOCSIFTXQLEN","","",null,null],[17,"SIOCETHTOOL","","",null,null],[17,"SIOCGMIIPHY","","",null,null],[17,"SIOCGMIIREG","","",null,null],[17,"SIOCSMIIREG","","",null,null],[17,"SIOCWANDEV","","",null,null],[17,"SIOCOUTQNSD","","",null,null],[17,"SIOCGSKNS","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"SIOCADDDLCI","","",null,null],[17,"SIOCDELDLCI","","",null,null],[17,"SIOCGIFVLAN","","",null,null],[17,"SIOCSIFVLAN","","",null,null],[17,"SIOCBONDENSLAVE","","",null,null],[17,"SIOCBONDRELEASE","","",null,null],[17,"SIOCBONDSETHWADDR","","",null,null],[17,"SIOCBONDSLAVEINFOQUERY","","",null,null],[17,"SIOCBONDINFOQUERY","","",null,null],[17,"SIOCBONDCHANGEACTIVE","","",null,null],[17,"SIOCBRADDBR","","",null,null],[17,"SIOCBRDELBR","","",null,null],[17,"SIOCBRADDIF","","",null,null],[17,"SIOCBRDELIF","","",null,null],[17,"SIOCSHWTSTAMP","","",null,null],[17,"SIOCGHWTSTAMP","","",null,null],[17,"SIOCDEVPRIVATE","","",null,null],[17,"SIOCPROTOPRIVATE","","",null,null],[17,"TUNTAP","net_sys","",null,null],[17,"ARPHRD_ETHER","","",null,null],[5,"TUNSETNOCSUM","","",null,[[],["ioctlnr",6]]],[5,"TUNSETDEBUG","","",null,[[],["ioctlnr",6]]],[5,"TUNSETIFF","","",null,[[],["ioctlnr",6]]],[5,"TUNSETPERSIST","","",null,[[],["ioctlnr",6]]],[5,"TUNSETOWNER","","",null,[[],["ioctlnr",6]]],[5,"TUNSETLINK","","",null,[[],["ioctlnr",6]]],[5,"TUNSETGROUP","","",null,[[],["ioctlnr",6]]],[5,"TUNGETFEATURES","","",null,[[],["ioctlnr",6]]],[5,"TUNSETOFFLOAD","","",null,[[],["ioctlnr",6]]],[5,"TUNSETTXFILTER","","",null,[[],["ioctlnr",6]]],[5,"TUNGETIFF","","",null,[[],["ioctlnr",6]]],[5,"TUNGETSNDBUF","","",null,[[],["ioctlnr",6]]],[5,"TUNSETSNDBUF","","",null,[[],["ioctlnr",6]]],[5,"TUNATTACHFILTER","","",null,[[],["ioctlnr",6]]],[5,"TUNDETACHFILTER","","",null,[[],["ioctlnr",6]]],[5,"TUNGETVNETHDRSZ","","",null,[[],["ioctlnr",6]]],[5,"TUNSETVNETHDRSZ","","",null,[[],["ioctlnr",6]]],[5,"TUNSETQUEUE","","",null,[[],["ioctlnr",6]]],[5,"TUNSETIFINDEX","","",null,[[],["ioctlnr",6]]],[5,"TUNGETFILTER","","",null,[[],["ioctlnr",6]]],[5,"TUNSETVNETLE","","",null,[[],["ioctlnr",6]]],[5,"TUNGETVNETLE","","",null,[[],["ioctlnr",6]]],[5,"TUNSETVNETBE","","",null,[[],["ioctlnr",6]]],[5,"TUNGETVNETBE","","",null,[[],["ioctlnr",6]]],[11,"from","net_sys::iff","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","net_sys::if_tun","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","net_sys::inn","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"clone","net_sys::iff","",0,[[]]],[11,"clone","","",1,[[],["__kernel_fd_set",3]]],[11,"clone","","",2,[[],["__kernel_fsid_t",3]]],[11,"clone","","",3,[[],["__kernel_sockaddr_storage",3]]],[11,"clone","","",4,[[],["iovec",3]]],[11,"clone","","",5,[[],["__fsid_t",3]]],[11,"clone","","",6,[[],["__sigset_t",3]]],[11,"clone","","",7,[[],["timeval",3]]],[11,"clone","","",8,[[],["timespec",3]]],[11,"clone","","",9,[[],["fd_set",3]]],[11,"clone","","",10,[[],["__pthread_rwlock_arch_t",3]]],[11,"clone","","",11,[[],["__pthread_internal_list",3]]],[11,"clone","","",12,[[],["__pthread_mutex_s",3]]],[11,"clone","","",13,[[],["__pthread_cond_s",3]]],[11,"clone","","",14,[[],["__pthread_cond_s__bindgen_ty_1",19]]],[11,"clone","","",15,[[],["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",16,[[],["__pthread_cond_s__bindgen_ty_2",19]]],[11,"clone","","",17,[[],["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3]]],[11,"clone","","",18,[[],["pthread_mutexattr_t",19]]],[11,"clone","","",19,[[],["pthread_condattr_t",19]]],[11,"clone","","",20,[[],["pthread_attr_t",19]]],[11,"clone","","",21,[[],["pthread_mutex_t",19]]],[11,"clone","","",22,[[],["pthread_cond_t",19]]],[11,"clone","","",23,[[],["pthread_rwlock_t",19]]],[11,"clone","","",24,[[],["pthread_rwlockattr_t",19]]],[11,"clone","","",25,[[],["pthread_barrier_t",19]]],[11,"clone","","",26,[[],["pthread_barrierattr_t",19]]],[11,"clone","","",27,[[],["sockaddr",3]]],[11,"clone","","",28,[[],["sockaddr_storage",3]]],[11,"clone","","",29,[[],["msghdr",3]]],[11,"clone","","",31,[[],["linger",3]]],[11,"clone","","",32,[[],["osockaddr",3]]],[11,"clone","","",33,[[],["sync_serial_settings",3]]],[11,"clone","","",34,[[],["te1_settings",3]]],[11,"clone","","",35,[[],["raw_hdlc_proto",3]]],[11,"clone","","",36,[[],["fr_proto",3]]],[11,"clone","","",37,[[],["fr_proto_pvc",3]]],[11,"clone","","",38,[[],["fr_proto_pvc_info",3]]],[11,"clone","","",39,[[],["cisco_proto",3]]],[11,"clone","","",40,[[],["ifmap",3]]],[11,"clone","","",41,[[],["if_settings",3]]],[11,"clone","","",42,[[],["if_settings__bindgen_ty_1",19]]],[11,"clone","","",43,[[],["ifreq",3]]],[11,"clone","","",44,[[],["ifreq__bindgen_ty_1",19]]],[11,"clone","","",45,[[],["ifreq__bindgen_ty_2",19]]],[11,"clone","","",46,[[],["ifconf",3]]],[11,"clone","","",47,[[],["ifconf__bindgen_ty_1",19]]],[11,"clone","net_sys::if_tun","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","net_sys::inn","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"default","net_sys::iff","",0,[[],["__incompletearrayfield",3]]],[11,"default","","",1,[[],["__kernel_fd_set",3]]],[11,"default","","",2,[[],["__kernel_fsid_t",3]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[],["__fsid_t",3]]],[11,"default","","",6,[[],["__sigset_t",3]]],[11,"default","","",7,[[],["timeval",3]]],[11,"default","","",8,[[],["timespec",3]]],[11,"default","","",9,[[],["fd_set",3]]],[11,"default","","",10,[[],["__pthread_rwlock_arch_t",3]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",15,[[],["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3]]],[11,"default","","",14,[[]]],[11,"default","","",17,[[],["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3]]],[11,"default","","",16,[[]]],[11,"default","","",13,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[],["sockaddr",3]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[],["cmsghdr",3]]],[11,"default","","",31,[[],["linger",3]]],[11,"default","","",32,[[],["osockaddr",3]]],[11,"default","","",33,[[],["sync_serial_settings",3]]],[11,"default","","",34,[[],["te1_settings",3]]],[11,"default","","",35,[[],["raw_hdlc_proto",3]]],[11,"default","","",36,[[],["fr_proto",3]]],[11,"default","","",37,[[],["fr_proto_pvc",3]]],[11,"default","","",38,[[],["fr_proto_pvc_info",3]]],[11,"default","","",39,[[],["cisco_proto",3]]],[11,"default","","",40,[[],["ifmap",3]]],[11,"default","","",42,[[]]],[11,"default","","",41,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",43,[[]]],[11,"default","","",47,[[]]],[11,"default","","",46,[[]]],[11,"default","net_sys::if_tun","",48,[[],["__incompletearrayfield",3]]],[11,"default","","",49,[[],["__kernel_fd_set",3]]],[11,"default","","",50,[[],["__kernel_fsid_t",3]]],[11,"default","","",51,[[],["ethhdr",3]]],[11,"default","","",52,[[],["sock_filter",3]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[],["tun_pi",3]]],[11,"default","","",55,[[],["tun_filter",3]]],[11,"default","net_sys::inn","",56,[[],["__kernel_fd_set",3]]],[11,"default","","",57,[[],["__kernel_fsid_t",3]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[],["in_addr",3]]],[11,"default","","",60,[[],["ip_mreq",3]]],[11,"default","","",61,[[],["ip_mreqn",3]]],[11,"default","","",62,[[],["ip_mreq_source",3]]],[11,"default","","",63,[[],["ip_msfilter",3]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[],["in_pktinfo",3]]],[11,"default","","",68,[[],["sockaddr_in",3]]],[11,"fmt","net_sys::iff","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","net_sys::if_tun","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","net_sys::inn","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]]],"p":[[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"__kernel_sockaddr_storage"],[3,"iovec"],[3,"__fsid_t"],[3,"__sigset_t"],[3,"timeval"],[3,"timespec"],[3,"fd_set"],[3,"__pthread_rwlock_arch_t"],[3,"__pthread_internal_list"],[3,"__pthread_mutex_s"],[3,"__pthread_cond_s"],[19,"__pthread_cond_s__bindgen_ty_1"],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_2"],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"msghdr"],[3,"cmsghdr"],[3,"linger"],[3,"osockaddr"],[3,"sync_serial_settings"],[3,"te1_settings"],[3,"raw_hdlc_proto"],[3,"fr_proto"],[3,"fr_proto_pvc"],[3,"fr_proto_pvc_info"],[3,"cisco_proto"],[3,"ifmap"],[3,"if_settings"],[19,"if_settings__bindgen_ty_1"],[3,"ifreq"],[19,"ifreq__bindgen_ty_1"],[19,"ifreq__bindgen_ty_2"],[3,"ifconf"],[19,"ifconf__bindgen_ty_1"],[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"ethhdr"],[3,"sock_filter"],[3,"sock_fprog"],[3,"tun_pi"],[3,"tun_filter"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"__kernel_sockaddr_storage"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"ip_msfilter"],[3,"group_req"],[3,"group_source_req"],[3,"group_filter"],[3,"in_pktinfo"],[3,"sockaddr_in"]]},\
"net_util":{"doc":"","i":[[0,"fakes","net_util","",null,null],[3,"FakeTap","net_util::fakes","",null,null],[4,"Error","net_util","",null,null],[13,"CloneTap","","Unable to clone tap interface.",0,null],[13,"CreateSocket","","Failed to create a socket.",0,null],[13,"CreateTap","","Unable to create tap interface.",0,null],[13,"IoctlError","","ioctl failed.",0,null],[13,"OpenTun","","Couldn\'t open /dev/net/tun.",0,null],[6,"Result","","",null,null],[11,"sys_error","","",0,[[],["syserror",3]]],[4,"MacAddressError","","",null,null],[13,"InvalidNumOctets","","Invalid number of octets.",1,null],[13,"ParseOctet","","Failed to parse octet.",1,null],[3,"MacAddress","","An Ethernet mac address. This struct is compatible with …",null,null],[11,"octets","","",2,[[]]],[3,"Tap","","Handle for a network tap interface.",null,null],[11,"from_raw_descriptor","","",3,[[["rawdescriptor",6]],[["tap",3],["result",6]]]],[11,"create_tap_with_ifreq","","",3,[[["ifreq",3]],[["tap",3],["result",6]]]],[11,"try_clone","","",3,[[],[["tap",3],["result",6]]]],[8,"TapT","","",null,null],[10,"new","","Create a new tap interface. Set the <code>vnet_hdr</code> flag to true …",4,[[["bool",15]],["result",6]]],[10,"into_mq_taps","","Change the origin tap into multiqueue taps, this means …",4,[[["u16",15]],[["vec",3],["result",6]]]],[10,"ip_addr","","Get the host-side IP address for the tap interface.",4,[[],[["result",6],["ipv4addr",3]]]],[10,"set_ip_addr","","Set the host-side IP address for the tap interface.",4,[[["ipv4addr",3]],["result",6]]],[10,"netmask","","Get the netmask for the tap interface\'s subnet.",4,[[],[["result",6],["ipv4addr",3]]]],[10,"set_netmask","","Set the netmask for the subnet that the tap interface …",4,[[["ipv4addr",3]],["result",6]]],[10,"mtu","","Get the MTU for the tap interface.",4,[[],[["result",6],["u16",15]]]],[10,"set_mtu","","Set the MTU for the tap interface.",4,[[["u16",15]],["result",6]]],[10,"mac_address","","Get the mac address for the tap interface.",4,[[],[["result",6],["macaddress",3]]]],[10,"set_mac_address","","Set the mac address for the tap interface.",4,[[["macaddress",3]],["result",6]]],[10,"set_offload","","Set the offload flags for the tap interface.",4,[[["c_uint",6]],["result",6]]],[10,"enable","","Enable the tap interface.",4,[[],["result",6]]],[10,"set_vnet_hdr_size","","Set the size of the vnet hdr.",4,[[["c_int",6]],["result",6]]],[10,"get_ifreq","","",4,[[],["ifreq",3]]],[10,"if_flags","","Get the interface flags",4,[[],["u32",15]]],[11,"from","net_util::fakes","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"as_raw_descriptors","","",5,[[],[["global",3],["vec",3],["i32",15]]]],[11,"as_raw_fds","","",5,[[],[["global",3],["vec",3],["i32",15]]]],[11,"from","net_util","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"as_raw_descriptors","","",3,[[],[["global",3],["vec",3],["i32",15]]]],[11,"as_raw_fds","","",3,[[],[["global",3],["vec",3],["i32",15]]]],[11,"new","","",3,[[["bool",15]],[["tap",3],["result",6]]]],[11,"into_mq_taps","","",3,[[["u16",15]],[["result",6],["vec",3]]]],[11,"ip_addr","","",3,[[],[["result",6],["ipv4addr",3]]]],[11,"set_ip_addr","","",3,[[["ipv4addr",3]],["result",6]]],[11,"netmask","","",3,[[],[["result",6],["ipv4addr",3]]]],[11,"set_netmask","","",3,[[["ipv4addr",3]],["result",6]]],[11,"mtu","","",3,[[],[["result",6],["u16",15]]]],[11,"set_mtu","","",3,[[["u16",15]],["result",6]]],[11,"mac_address","","",3,[[],[["result",6],["macaddress",3]]]],[11,"set_mac_address","","",3,[[["macaddress",3]],["result",6]]],[11,"set_offload","","",3,[[["c_uint",6]],["result",6]]],[11,"enable","","",3,[[],["result",6]]],[11,"set_vnet_hdr_size","","",3,[[["c_int",6]],["result",6]]],[11,"get_ifreq","","",3,[[],["ifreq",3]]],[11,"if_flags","","",3,[[],["u32",15]]],[11,"new","net_util::fakes","",5,[[["bool",15]],[["result",6],["faketap",3]]]],[11,"into_mq_taps","","",5,[[["u16",15]],[["result",6],["vec",3]]]],[11,"ip_addr","","",5,[[],[["result",6],["ipv4addr",3]]]],[11,"set_ip_addr","","",5,[[["ipv4addr",3]],["result",6]]],[11,"netmask","","",5,[[],[["result",6],["ipv4addr",3]]]],[11,"set_netmask","","",5,[[["ipv4addr",3]],["result",6]]],[11,"mtu","","",5,[[],[["result",6],["u16",15]]]],[11,"set_mtu","","",5,[[["u16",15]],["result",6]]],[11,"mac_address","","",5,[[],[["result",6],["macaddress",3]]]],[11,"set_mac_address","","",5,[[["macaddress",3]],["result",6]]],[11,"set_offload","","",5,[[["c_uint",6]],["result",6]]],[11,"enable","","",5,[[],["result",6]]],[11,"set_vnet_hdr_size","","",5,[[["c_int",6]],["result",6]]],[11,"get_ifreq","","",5,[[],["ifreq",3]]],[11,"if_flags","","",5,[[],["u32",15]]],[11,"drop","","",5,[[]]],[11,"clone","net_util","",2,[[],["macaddress",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"from_str","","",2,[[["str",15]],["result",4]]],[11,"read","","",3,[[],[["usize",15],["ioresult",6]]]],[11,"read","net_util::fakes","",5,[[],[["usize",15],["ioresult",6]]]],[11,"write","net_util","",3,[[],[["usize",15],["ioresult",6]]]],[11,"flush","","",3,[[],["ioresult",6]]],[11,"write","net_util::fakes","",5,[[],[["usize",15],["ioresult",6]]]],[11,"flush","","",5,[[],["ioresult",6]]],[11,"as_raw_fd","net_util","",3,[[],["rawfd",6]]],[11,"as_raw_fd","net_util::fakes","",5,[[],["rawfd",6]]],[11,"as_raw_descriptor","net_util","",3,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","net_util::fakes","",5,[[],["rawdescriptor",6]]],[11,"read_volatile","net_util","",3,[[["volatileslice",3]],[["usize",15],["result",6]]]],[11,"read_vectored_volatile","","",3,[[],[["usize",15],["result",6]]]],[11,"write_volatile","","",3,[[["volatileslice",3]],[["usize",15],["result",6]]]],[11,"write_vectored_volatile","","",3,[[],[["usize",15],["result",6]]]],[11,"read_volatile","net_util::fakes","",5,[[["volatileslice",3]],[["usize",15],["result",6]]]],[11,"read_vectored_volatile","","",5,[[],[["usize",15],["result",6]]]],[11,"write_volatile","","",5,[[["volatileslice",3]],[["usize",15],["result",6]]]],[11,"write_vectored_volatile","","",5,[[],[["usize",15],["result",6]]]]],"p":[[4,"Error"],[4,"MacAddressError"],[3,"MacAddress"],[3,"Tap"],[8,"TapT"],[3,"FakeTap"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,[[]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[]]],[0,"cast","num_traits","",null,null],[8,"ToPrimitive","num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",1,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",1,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",1,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",1,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",1,[[],[["i64",15],["option",4]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",1,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",1,[[],[["option",4],["usize",15]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",1,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",1,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",1,[[],[["option",4],["u32",15]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",1,[[],[["u64",15],["option",4]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",1,[[],[["u128",15],["option",4]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",1,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",1,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",2,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",2,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",2,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",2,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",2,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",2,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",2,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",2,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",2,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",2,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",2,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",2,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",2,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",2,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[["numcast",8]],[["option",4],["numcast",8]]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",3,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",4,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",5,[[]]],[10,"neg_infinity","","Returns negative infinity.",5,[[]]],[10,"nan","","Returns NaN.",5,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",5,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",5,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",5,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",5,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",5,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",5,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",5,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",5,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",5,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",5,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",5,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",5,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",5,[[]]],[11,"trunc","","Return the integer part of a number.",5,[[]]],[11,"fract","","Returns the fractional part of a number.",5,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",5,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",5,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",5,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",5,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",5,[[]]],[11,"max","","Returns the maximum of the two numbers.",5,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",5,[[]]],[11,"powi","","Raise a number to an integer power.",5,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",5,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",5,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",5,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",6,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",6,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",6,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",6,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",6,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",6,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",6,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",6,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",6,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",6,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",6,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",6,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",6,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",6,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",6,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",6,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",6,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",6,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",6,[[]]],[0,"identities","num_traits","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",7,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",7,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",7,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",8,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",8,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",8,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[],["one",8]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",9,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",9,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",9,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",9,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",9,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",9,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",9,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",9,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",9,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",9,[[["u32",15]]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",10,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",11,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",12,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",13,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",14,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",15,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",16,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",17,[[["u32",15]],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",18,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",18,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",19,null],[10,"mul_add","","Performs the fused multiply-add operation.",19,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",20,[[]]],[0,"overflowing","num_traits::ops","",null,null],[8,"OverflowingAdd","num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",21,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",22,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",23,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",24,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",24,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",25,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",26,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",27,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",28,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",29,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",30,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",31,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",32,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",33,[[["u32",15]]]],[0,"pow","num_traits","",null,null],[8,"Pow","num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",34,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",34,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15],["mul",8],["clone",8],["one",8]],[["mul",8],["clone",8],["one",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15],["checkedmul",8],["clone",8],["one",8]],[["option",4],["checkedmul",8],["clone",8],["one",8]]]],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",35,[[]]],[10,"abs_sub","","The positive difference of two numbers.",35,[[]]],[10,"signum","","Returns the sign of the number.",35,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",35,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",35,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",36,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",36,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",37,null],[13,"Invalid","","",37,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",38,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]]],"p":[[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"]]},\
"once_cell":{"doc":"Overview<code>once_cell</code> provides two new cell-like types, …","i":[[0,"unsync","once_cell","Single-threaded version of <code>OnceCell</code>.",null,null],[3,"OnceCell","once_cell::unsync","A cell which can be written to only once. It is not …",null,null],[11,"new","","Creates a new empty cell.",0,[[],["oncecell",3]]],[11,"get","","Gets a reference to the underlying value.",0,[[],["option",4]]],[11,"get_mut","","Gets a mutable reference to the underlying value.",0,[[],["option",4]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",0,[[],["result",4]]],[11,"try_insert","","Like <code>set</code>, but also returns a referce to the final cell …",0,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",0,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",0,[[],["result",4]]],[11,"take","","Takes the value out of this <code>OnceCell</code>, moving it back to …",0,[[],["option",4]]],[11,"into_inner","","Consumes the <code>OnceCell</code>, returning the wrapped value.",0,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing …",1,[[],["lazy",3]]],[11,"into_value","","Consumes this <code>Lazy</code> returning the stored value.",1,[[["lazy",3]],["result",4]]],[11,"force","","Forces the evaluation of this lazy value and returns a …",1,[[["lazy",3]]]],[0,"sync","once_cell","Thread-safe, blocking version of <code>OnceCell</code>.",null,null],[3,"OnceCell","once_cell::sync","A thread-safe cell which can be written to only once.",null,null],[11,"new","","Creates a new empty cell.",2,[[],["oncecell",3]]],[11,"get","","Gets the reference to the underlying value.",2,[[],["option",4]]],[11,"get_mut","","Gets the mutable reference to the underlying value.",2,[[],["option",4]]],[11,"get_unchecked","","Get the reference to the underlying value, without …",2,[[]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",2,[[],["result",4]]],[11,"try_insert","","Like <code>set</code>, but also returns a reference to the final cell …",2,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",2,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",2,[[],["result",4]]],[11,"take","","Takes the value out of this <code>OnceCell</code>, moving it back to …",2,[[],["option",4]]],[11,"into_inner","","Consumes the <code>OnceCell</code>, returning the wrapped value. …",2,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing …",3,[[],["lazy",3]]],[11,"into_value","","Consumes this <code>Lazy</code> returning the stored value.",3,[[["lazy",3]],["result",4]]],[11,"force","","Forces the evaluation of this lazy value and returns a …",3,[[["lazy",3]]]],[0,"race","once_cell","Thread-safe, non-blocking, \\\"first one wins\\\" flavor of …",null,null],[3,"OnceNonZeroUsize","once_cell::race","A thread-safe cell which can be written to only once.",null,null],[11,"new","","Creates a new empty cell.",4,[[],["oncenonzerousize",3]]],[11,"get","","Gets the underlying value.",4,[[],[["option",4],["nonzerousize",3]]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",4,[[["nonzerousize",3]],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",4,[[],["nonzerousize",3]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",4,[[],[["nonzerousize",3],["result",4]]]],[3,"OnceBool","","A thread-safe cell which can be written to only once.",null,null],[11,"new","","Creates a new empty cell.",5,[[],["oncebool",3]]],[11,"get","","Gets the underlying value.",5,[[],[["bool",15],["option",4]]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",5,[[["bool",15]],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",5,[[],["bool",15]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",5,[[],[["result",4],["bool",15]]]],[3,"OnceBox","","A thread-safe cell which can be written to only once.",null,null],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","once_cell::sync","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","once_cell::race","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","",6,[[]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","once_cell::sync","",2,[[]]],[11,"clone","once_cell::unsync","",0,[[],["oncecell",3]]],[11,"clone","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","once_cell::unsync","",0,[[]]],[11,"default","","Creates a new lazy value using <code>Default</code> as the …",1,[[],["lazy",3]]],[11,"default","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","","Creates a new lazy value using <code>Default</code> as the …",3,[[],["lazy",3]]],[11,"default","once_cell::race","",4,[[],["oncenonzerousize",3]]],[11,"default","","",5,[[],["oncebool",3]]],[11,"default","","",6,[[]]],[11,"eq","once_cell::unsync","",0,[[],["bool",15]]],[11,"eq","once_cell::sync","",2,[[["oncecell",3]],["bool",15]]],[11,"deref","once_cell::unsync","",1,[[]]],[11,"deref","once_cell::sync","",3,[[]]],[11,"deref_mut","once_cell::unsync","",1,[[]]],[11,"deref_mut","once_cell::sync","",3,[[]]],[11,"fmt","once_cell::unsync","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","once_cell::sync","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","once_cell::race","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new empty cell.",6,[[],["oncebox",3]]],[11,"get","","Gets a reference to the underlying value.",6,[[],["option",4]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",6,[[["box",3]],[["box",3],["result",4]]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",6,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",6,[[],["result",4]]]],"p":[[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"OnceBox"]]},\
"p9":{"doc":"","i":[[6,"ServerIdMap","p9","",null,null],[6,"ServerUidMap","","",null,null],[6,"ServerGidMap","","",null,null],[3,"Config","","",null,null],[12,"root","","",0,null],[12,"msize","","",0,null],[12,"uid_map","","",0,null],[12,"gid_map","","",0,null],[12,"ascii_casefold","","",0,null],[3,"Server","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",0,[[],["config",3]]],[11,"default","","",0,[[],["config",3]]],[11,"new","","",1,[[["box",3],["servergidmap",6],["into",8],["serveruidmap",6]],[["result",6],["server",3]]]],[11,"with_config","","",1,[[["config",3]],[["result",6],["server",3]]]],[11,"keep_fds","","",1,[[],[["rawfd",6],["vec",3]]]],[11,"handle_message","","",1,[[],["result",6]]]],"p":[[3,"Config"],[3,"Server"]]},\
"paste":{"doc":"github crates-io docs-rs","i":[[14,"paste","paste","",null,null]],"p":[]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","i":[[14,"pin_project","pin_project_lite","A macro that creates a projection type covering all the …",null,null]],"p":[]},\
"pin_utils":{"doc":"Utilities for pinning","i":[[14,"pin_mut","pin_utils","Pins a value on the stack.",null,null],[14,"unsafe_pinned","","A pinned projection of a struct field.",null,null],[14,"unsafe_unpinned","","An unpinned projection of a struct field.",null,null]],"p":[]},\
"poll_token_derive":{"doc":"","i":[[24,"PollToken","poll_token_derive","Implements the PollToken trait for a given <code>enum</code>.",null,null]],"p":[]},\
"power_monitor":{"doc":"","i":[[8,"PowerMonitor","power_monitor","",null,null],[10,"poll_fd","","",0,[[],["rawfd",6]]],[10,"read_message","","",0,[[],[["result",4],["option",4],["box",3]]]],[3,"PowerData","","",null,null],[12,"ac_online","","",1,null],[12,"battery","","",1,null],[3,"BatteryData","","",null,null],[12,"status","","",2,null],[12,"percent","","",2,null],[12,"voltage","","Battery voltage in microvolts.",2,null],[12,"current","","Battery current in microamps.",2,null],[12,"charge_counter","","Battery charge counter in microampere hours.",2,null],[12,"charge_full","","Battery full charge counter in microampere hours.",2,null],[4,"BatteryStatus","","",null,null],[13,"Unknown","","",3,null],[13,"Charging","","",3,null],[13,"Discharging","","",3,null],[13,"NotCharging","","",3,null],[8,"CreatePowerMonitorFn","","",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]]],"p":[[8,"PowerMonitor"],[3,"PowerData"],[3,"BatteryData"],[4,"BatteryStatus"]]},\
"ppv_lite86":{"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but …",null,null],[6,"AVX2","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the …",null,null],[19,"vec256_storage","","",null,null],[11,"new128","","",0,[[]]],[11,"split128","","",0,[[]]],[19,"vec512_storage","","",null,null],[11,"new128","","",1,[[]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[]]],[10,"rotate_each_word_right8","","",4,[[]]],[10,"rotate_each_word_right11","","",4,[[]]],[10,"rotate_each_word_right12","","",4,[[]]],[10,"rotate_each_word_right16","","",4,[[]]],[10,"rotate_each_word_right20","","",4,[[]]],[10,"rotate_each_word_right24","","",4,[[]]],[10,"rotate_each_word_right25","","",4,[[]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[]]],[8,"Vec2","","A vector composed of two elements, which may be words or …",null,null],[10,"extract","","",7,[[["u32",15]]]],[10,"insert","","",7,[[["u32",15]]]],[8,"Vec4","","A vector composed of four elements, which may be words or …",null,null],[10,"extract","","",8,[[["u32",15]]]],[10,"insert","","",8,[[["u32",15]]]],[8,"Vec4Ext","","Vec4 functions which may not be implemented yet for all …",null,null],[10,"transpose4","","",9,[[]]],[8,"Vector","","",null,null],[10,"to_scalars","","",10,[[]]],[8,"Words4","","A vector composed of four words; depending on their size, …",null,null],[10,"shuffle1230","","",11,[[]]],[10,"shuffle2301","","",11,[[]]],[10,"shuffle3012","","",11,[[]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four …",null,null],[10,"shuffle_lane_words1230","","",12,[[]]],[10,"shuffle_lane_words2301","","",12,[[]]],[10,"shuffle_lane_words3012","","",12,[[]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",13,[[]]],[10,"swap2","","",13,[[]]],[10,"swap4","","",13,[[]]],[10,"swap8","","",13,[[]]],[10,"swap16","","",13,[[]]],[10,"swap32","","",13,[[]]],[10,"swap64","","",13,[[]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",14,[[]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",14,[[]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",15,[[]]],[8,"Machine","","",null,null],[16,"u32x4","","",16,null],[16,"u64x2","","",16,null],[16,"u128x1","","",16,null],[16,"u32x4x2","","",16,null],[16,"u64x2x2","","",16,null],[16,"u64x4","","",16,null],[16,"u128x2","","",16,null],[16,"u32x4x4","","",16,null],[16,"u64x2x4","","",16,null],[16,"u128x4","","",16,null],[11,"unpack","","",16,[[],["store",8]]],[11,"vec","","",16,[[]]],[11,"read_le","","",16,[[]]],[11,"read_be","","",16,[[]]],[10,"instance","","SafetyCaller must ensure the type of Self is appropriate …",16,[[]]],[8,"Store","","",null,null],[10,"unpack","","SafetyCaller must ensure the type of Self is appropriate …",17,[[]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","SafetyCaller must ensure the type of Self is appropriate …",18,[[]]],[10,"unsafe_read_be","","SafetyCaller must ensure the type of Self is appropriate …",18,[[]]],[10,"write_le","","",18,[[]]],[10,"write_be","","",18,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to …",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be …",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be …",null,null],[11,"from","ppv_lite86::x86_64","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"instance","","",29,[[]]],[11,"instance","","",30,[[]]],[11,"unpack","","",31,[[["vec128_storage",19]]]],[11,"eq","","",31,[[],["bool",15]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"into","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",19,[[],["yess3",3]]],[11,"clone","","",20,[[],["nos3",3]]],[11,"clone","","",21,[[],["yess4",3]]],[11,"clone","","",22,[[],["nos4",3]]],[11,"clone","","",23,[[],["yesa1",3]]],[11,"clone","","",24,[[],["noa1",3]]],[11,"clone","","",25,[[],["yesa2",3]]],[11,"clone","","",26,[[],["noa2",3]]],[11,"clone","","",27,[[],["yesni",3]]],[11,"clone","","",28,[[],["noni",3]]],[11,"clone","","",29,[[],["ssemachine",3]]],[11,"clone","","",30,[[],["avx2machine",3]]],[11,"clone","","",31,[[],["vec128_storage",19]]],[11,"clone","","",0,[[],["vec256_storage",19]]],[11,"clone","","",1,[[],["vec512_storage",19]]],[11,"default","","",31,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"unpack","ppv_lite86","",16,[[],["store",8]]],[11,"vec","","",16,[[]]],[11,"read_le","","",16,[[]]],[11,"read_be","","",16,[[]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Vec4Ext"],[8,"Vector"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the …","i":[[0,"token_stream","proc_macro2","Public implementation details for the <code>TokenStream</code> type, …",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over <code>TokenStream</code>\'s <code>TokenTree</code>s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a …",null,null],[3,"LexError","","Error returned from <code>TokenStream::from_str</code>.",null,null],[11,"new","","Returns an empty <code>TokenStream</code> containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this <code>TokenStream</code> is empty.",0,[[],["bool",15]]],[11,"span","","",1,[[],["span",3]]],[3,"Span","","A region of source code, along with macro expansion …",null,null],[11,"call_site","","The span of the invocation of the current procedural …",2,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural …",2,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information …",2,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior …",2,[[["span",3]],["span",3]]],[11,"unwrap","","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.",2,[[],["span",3]]],[11,"join","","Create a new span encompassing <code>self</code> and <code>other</code>.",2,[[["span",3]],[["span",3],["option",4]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees …",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",3,null],[13,"Ident","","An identifier.",3,null],[13,"Punct","","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).",3,null],[13,"Literal","","A literal character (<code>\'a\'</code>), string (<code>\\\"hello\\\"</code>), number (<code>2.3</code>…",3,null],[11,"span","","Returns the span of this tree, delegating to the <code>span</code> …",3,[[],["span",3]]],[11,"set_span","","Configures the span for <em>only this token</em>.",3,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","<code>( ... )</code>",4,null],[13,"Brace","","<code>{ ... }</code>",4,null],[13,"Bracket","","<code>[ ... ]</code>",4,null],[13,"None","","<code>Ø ... Ø</code>",4,null],[11,"new","","Creates a new <code>Group</code> with the given delimiter and token …",5,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this <code>Group</code>",5,[[],["delimiter",4]]],[11,"stream","","Returns the <code>TokenStream</code> of tokens that are delimited in …",5,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream, …",5,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of …",5,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of …",5,[[],["span",3]]],[11,"set_span","","Configures the span for this <code>Group</code>\'s delimiters, but not …",5,[[["span",3]]]],[3,"Punct","","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.",null,null],[4,"Spacing","","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …",null,null],[13,"Alone","","E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.",6,null],[13,"Joint","","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>\'</code> is <code>Joint</code> in <code>\'#</code>.",6,null],[11,"new","","Creates a new <code>Punct</code> from the given character and spacing.",7,[[["char",15],["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as <code>char</code>.",7,[[],["char",15]]],[11,"spacing","","Returns the spacing of this punctuation character, …",7,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",7,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",7,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal …",null,null],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",8,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",8,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",8,[[["span",3]]]],[3,"Literal","","A literal string (<code>\\\"hello\\\"</code>), byte string (<code>b\\\"hello\\\"</code>), …",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u8",15]],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u16",15]],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u32",15]],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u64",15]],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u128",15]],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["usize",15]],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i8",15]],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i16",15]],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i32",15]],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i64",15]],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i128",15]],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["isize",15]],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u8",15]],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u16",15]],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u32",15]],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u64",15]],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u128",15]],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["usize",15]],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i8",15]],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i16",15]],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i32",15]],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i64",15]],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i128",15]],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["isize",15]],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",9,[[["f64",15]],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",9,[[["f64",15]],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",9,[[["f32",15]],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",9,[[["f32",15]],["literal",3]]],[11,"string","","String literal.",9,[[["str",15]],["literal",3]]],[11,"character","","Character literal.",9,[[["char",15]],["literal",3]]],[11,"byte_string","","Byte string literal.",9,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",9,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",9,[[["span",3]]]],[11,"subspan","","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …",9,[[["usize",15],["rangebounds",8]],[["span",3],["option",4]]]],[11,"from","proc_macro2::token_stream","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",2,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",3,[[["group",3]],["tokentree",4]]],[11,"from","","",3,[[["ident",3]],["tokentree",4]]],[11,"from","","",3,[[["punct",3]],["tokentree",4]]],[11,"from","","",3,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",10,[[],[["tokentree",4],["option",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",2,[[],["span",3]]],[11,"clone","","",3,[[],["tokentree",4]]],[11,"clone","","",5,[[],["group",3]]],[11,"clone","","",4,[[],["delimiter",4]]],[11,"clone","","",7,[[],["punct",3]]],[11,"clone","","",6,[[],["spacing",4]]],[11,"clone","","",8,[[],["ident",3]]],[11,"clone","","",9,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",10,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",8,[[["ident",3]],["ordering",4]]],[11,"eq","","",4,[[["delimiter",4]],["bool",15]]],[11,"eq","","",6,[[["spacing",4]],["bool",15]]],[11,"eq","","",8,[[["ident",3]],["bool",15]]],[11,"eq","","",8,[[],["bool",15]]],[11,"partial_cmp","","",8,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"hash","","",8,[[]]],[11,"from_str","","",0,[[["str",15]],[["result",4],["tokenstream",3],["lexerror",3]]]],[11,"from_str","","",9,[[["str",15]],[["lexerror",3],["result",4]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"LexError"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"]]},\
"protobuf":{"doc":"Library to read and write protocol buffers data.","i":[[0,"descriptor","protobuf","Generated file from <code>google/protobuf/descriptor.proto</code>",null,null],[3,"FileDescriptorSet","protobuf::descriptor","",null,null],[12,"file","","",0,null],[12,"unknown_fields","","",0,null],[12,"cached_size","","",0,null],[11,"new","","",0,[[],["filedescriptorset",3]]],[11,"get_file","","",0,[[]]],[11,"clear_file","","",0,[[]]],[11,"set_file","","",0,[[["repeatedfield",3],["filedescriptorproto",3]]]],[11,"mut_file","","",0,[[],["repeatedfield",3]]],[11,"take_file","","",0,[[],[["filedescriptorproto",3],["repeatedfield",3]]]],[3,"FileDescriptorProto","","",null,null],[12,"dependency","","",1,null],[12,"public_dependency","","",1,null],[12,"weak_dependency","","",1,null],[12,"message_type","","",1,null],[12,"enum_type","","",1,null],[12,"service","","",1,null],[12,"extension","","",1,null],[12,"options","","",1,null],[12,"source_code_info","","",1,null],[12,"unknown_fields","","",1,null],[12,"cached_size","","",1,null],[11,"new","","",1,[[],["filedescriptorproto",3]]],[11,"get_name","","",1,[[],["str",15]]],[11,"clear_name","","",1,[[]]],[11,"has_name","","",1,[[],["bool",15]]],[11,"set_name","","",1,[[["string",3]]]],[11,"mut_name","","",1,[[],["string",3]]],[11,"take_name","","",1,[[],["string",3]]],[11,"get_package","","",1,[[],["str",15]]],[11,"clear_package","","",1,[[]]],[11,"has_package","","",1,[[],["bool",15]]],[11,"set_package","","",1,[[["string",3]]]],[11,"mut_package","","",1,[[],["string",3]]],[11,"take_package","","",1,[[],["string",3]]],[11,"get_dependency","","",1,[[]]],[11,"clear_dependency","","",1,[[]]],[11,"set_dependency","","",1,[[["repeatedfield",3],["string",3]]]],[11,"mut_dependency","","",1,[[],["repeatedfield",3]]],[11,"take_dependency","","",1,[[],[["repeatedfield",3],["string",3]]]],[11,"get_public_dependency","","",1,[[]]],[11,"clear_public_dependency","","",1,[[]]],[11,"set_public_dependency","","",1,[[["vec",3],["i32",15]]]],[11,"mut_public_dependency","","",1,[[],["vec",3]]],[11,"take_public_dependency","","",1,[[],[["i32",15],["vec",3]]]],[11,"get_weak_dependency","","",1,[[]]],[11,"clear_weak_dependency","","",1,[[]]],[11,"set_weak_dependency","","",1,[[["vec",3],["i32",15]]]],[11,"mut_weak_dependency","","",1,[[],["vec",3]]],[11,"take_weak_dependency","","",1,[[],[["i32",15],["vec",3]]]],[11,"get_message_type","","",1,[[]]],[11,"clear_message_type","","",1,[[]]],[11,"set_message_type","","",1,[[["descriptorproto",3],["repeatedfield",3]]]],[11,"mut_message_type","","",1,[[],["repeatedfield",3]]],[11,"take_message_type","","",1,[[],[["descriptorproto",3],["repeatedfield",3]]]],[11,"get_enum_type","","",1,[[]]],[11,"clear_enum_type","","",1,[[]]],[11,"set_enum_type","","",1,[[["enumdescriptorproto",3],["repeatedfield",3]]]],[11,"mut_enum_type","","",1,[[],["repeatedfield",3]]],[11,"take_enum_type","","",1,[[],[["enumdescriptorproto",3],["repeatedfield",3]]]],[11,"get_service","","",1,[[]]],[11,"clear_service","","",1,[[]]],[11,"set_service","","",1,[[["servicedescriptorproto",3],["repeatedfield",3]]]],[11,"mut_service","","",1,[[],["repeatedfield",3]]],[11,"take_service","","",1,[[],[["servicedescriptorproto",3],["repeatedfield",3]]]],[11,"get_extension","","",1,[[]]],[11,"clear_extension","","",1,[[]]],[11,"set_extension","","",1,[[["repeatedfield",3],["fielddescriptorproto",3]]]],[11,"mut_extension","","",1,[[],["repeatedfield",3]]],[11,"take_extension","","",1,[[],[["repeatedfield",3],["fielddescriptorproto",3]]]],[11,"get_options","","",1,[[],["fileoptions",3]]],[11,"clear_options","","",1,[[]]],[11,"has_options","","",1,[[],["bool",15]]],[11,"set_options","","",1,[[["fileoptions",3]]]],[11,"mut_options","","",1,[[],["fileoptions",3]]],[11,"take_options","","",1,[[],["fileoptions",3]]],[11,"get_source_code_info","","",1,[[],["sourcecodeinfo",3]]],[11,"clear_source_code_info","","",1,[[]]],[11,"has_source_code_info","","",1,[[],["bool",15]]],[11,"set_source_code_info","","",1,[[["sourcecodeinfo",3]]]],[11,"mut_source_code_info","","",1,[[],["sourcecodeinfo",3]]],[11,"take_source_code_info","","",1,[[],["sourcecodeinfo",3]]],[11,"get_syntax","","",1,[[],["str",15]]],[11,"clear_syntax","","",1,[[]]],[11,"has_syntax","","",1,[[],["bool",15]]],[11,"set_syntax","","",1,[[["string",3]]]],[11,"mut_syntax","","",1,[[],["string",3]]],[11,"take_syntax","","",1,[[],["string",3]]],[3,"DescriptorProto","","",null,null],[12,"field","","",2,null],[12,"extension","","",2,null],[12,"nested_type","","",2,null],[12,"enum_type","","",2,null],[12,"extension_range","","",2,null],[12,"oneof_decl","","",2,null],[12,"options","","",2,null],[12,"reserved_range","","",2,null],[12,"reserved_name","","",2,null],[12,"unknown_fields","","",2,null],[12,"cached_size","","",2,null],[11,"new","","",2,[[],["descriptorproto",3]]],[11,"get_name","","",2,[[],["str",15]]],[11,"clear_name","","",2,[[]]],[11,"has_name","","",2,[[],["bool",15]]],[11,"set_name","","",2,[[["string",3]]]],[11,"mut_name","","",2,[[],["string",3]]],[11,"take_name","","",2,[[],["string",3]]],[11,"get_field","","",2,[[]]],[11,"clear_field","","",2,[[]]],[11,"set_field","","",2,[[["repeatedfield",3],["fielddescriptorproto",3]]]],[11,"mut_field","","",2,[[],["repeatedfield",3]]],[11,"take_field","","",2,[[],[["repeatedfield",3],["fielddescriptorproto",3]]]],[11,"get_extension","","",2,[[]]],[11,"clear_extension","","",2,[[]]],[11,"set_extension","","",2,[[["repeatedfield",3],["fielddescriptorproto",3]]]],[11,"mut_extension","","",2,[[],["repeatedfield",3]]],[11,"take_extension","","",2,[[],[["repeatedfield",3],["fielddescriptorproto",3]]]],[11,"get_nested_type","","",2,[[]]],[11,"clear_nested_type","","",2,[[]]],[11,"set_nested_type","","",2,[[["descriptorproto",3],["repeatedfield",3]]]],[11,"mut_nested_type","","",2,[[],["repeatedfield",3]]],[11,"take_nested_type","","",2,[[],[["descriptorproto",3],["repeatedfield",3]]]],[11,"get_enum_type","","",2,[[]]],[11,"clear_enum_type","","",2,[[]]],[11,"set_enum_type","","",2,[[["enumdescriptorproto",3],["repeatedfield",3]]]],[11,"mut_enum_type","","",2,[[],["repeatedfield",3]]],[11,"take_enum_type","","",2,[[],[["enumdescriptorproto",3],["repeatedfield",3]]]],[11,"get_extension_range","","",2,[[]]],[11,"clear_extension_range","","",2,[[]]],[11,"set_extension_range","","",2,[[["repeatedfield",3],["descriptorproto_extensionrange",3]]]],[11,"mut_extension_range","","",2,[[],["repeatedfield",3]]],[11,"take_extension_range","","",2,[[],[["repeatedfield",3],["descriptorproto_extensionrange",3]]]],[11,"get_oneof_decl","","",2,[[]]],[11,"clear_oneof_decl","","",2,[[]]],[11,"set_oneof_decl","","",2,[[["repeatedfield",3],["oneofdescriptorproto",3]]]],[11,"mut_oneof_decl","","",2,[[],["repeatedfield",3]]],[11,"take_oneof_decl","","",2,[[],[["repeatedfield",3],["oneofdescriptorproto",3]]]],[11,"get_options","","",2,[[],["messageoptions",3]]],[11,"clear_options","","",2,[[]]],[11,"has_options","","",2,[[],["bool",15]]],[11,"set_options","","",2,[[["messageoptions",3]]]],[11,"mut_options","","",2,[[],["messageoptions",3]]],[11,"take_options","","",2,[[],["messageoptions",3]]],[11,"get_reserved_range","","",2,[[]]],[11,"clear_reserved_range","","",2,[[]]],[11,"set_reserved_range","","",2,[[["repeatedfield",3],["descriptorproto_reservedrange",3]]]],[11,"mut_reserved_range","","",2,[[],["repeatedfield",3]]],[11,"take_reserved_range","","",2,[[],[["repeatedfield",3],["descriptorproto_reservedrange",3]]]],[11,"get_reserved_name","","",2,[[]]],[11,"clear_reserved_name","","",2,[[]]],[11,"set_reserved_name","","",2,[[["repeatedfield",3],["string",3]]]],[11,"mut_reserved_name","","",2,[[],["repeatedfield",3]]],[11,"take_reserved_name","","",2,[[],[["repeatedfield",3],["string",3]]]],[3,"DescriptorProto_ExtensionRange","","",null,null],[12,"options","","",3,null],[12,"unknown_fields","","",3,null],[12,"cached_size","","",3,null],[11,"new","","",3,[[],["descriptorproto_extensionrange",3]]],[11,"get_start","","",3,[[],["i32",15]]],[11,"clear_start","","",3,[[]]],[11,"has_start","","",3,[[],["bool",15]]],[11,"set_start","","",3,[[["i32",15]]]],[11,"get_end","","",3,[[],["i32",15]]],[11,"clear_end","","",3,[[]]],[11,"has_end","","",3,[[],["bool",15]]],[11,"set_end","","",3,[[["i32",15]]]],[11,"get_options","","",3,[[],["extensionrangeoptions",3]]],[11,"clear_options","","",3,[[]]],[11,"has_options","","",3,[[],["bool",15]]],[11,"set_options","","",3,[[["extensionrangeoptions",3]]]],[11,"mut_options","","",3,[[],["extensionrangeoptions",3]]],[11,"take_options","","",3,[[],["extensionrangeoptions",3]]],[3,"DescriptorProto_ReservedRange","","",null,null],[12,"unknown_fields","","",4,null],[12,"cached_size","","",4,null],[11,"new","","",4,[[],["descriptorproto_reservedrange",3]]],[11,"get_start","","",4,[[],["i32",15]]],[11,"clear_start","","",4,[[]]],[11,"has_start","","",4,[[],["bool",15]]],[11,"set_start","","",4,[[["i32",15]]]],[11,"get_end","","",4,[[],["i32",15]]],[11,"clear_end","","",4,[[]]],[11,"has_end","","",4,[[],["bool",15]]],[11,"set_end","","",4,[[["i32",15]]]],[3,"ExtensionRangeOptions","","",null,null],[12,"uninterpreted_option","","",5,null],[12,"unknown_fields","","",5,null],[12,"cached_size","","",5,null],[11,"new","","",5,[[],["extensionrangeoptions",3]]],[11,"get_uninterpreted_option","","",5,[[]]],[11,"clear_uninterpreted_option","","",5,[[]]],[11,"set_uninterpreted_option","","",5,[[["repeatedfield",3],["uninterpretedoption",3]]]],[11,"mut_uninterpreted_option","","",5,[[],["repeatedfield",3]]],[11,"take_uninterpreted_option","","",5,[[],[["repeatedfield",3],["uninterpretedoption",3]]]],[3,"FieldDescriptorProto","","",null,null],[12,"options","","",6,null],[12,"unknown_fields","","",6,null],[12,"cached_size","","",6,null],[11,"new","","",6,[[],["fielddescriptorproto",3]]],[11,"get_name","","",6,[[],["str",15]]],[11,"clear_name","","",6,[[]]],[11,"has_name","","",6,[[],["bool",15]]],[11,"set_name","","",6,[[["string",3]]]],[11,"mut_name","","",6,[[],["string",3]]],[11,"take_name","","",6,[[],["string",3]]],[11,"get_number","","",6,[[],["i32",15]]],[11,"clear_number","","",6,[[]]],[11,"has_number","","",6,[[],["bool",15]]],[11,"set_number","","",6,[[["i32",15]]]],[11,"get_label","","",6,[[],["fielddescriptorproto_label",4]]],[11,"clear_label","","",6,[[]]],[11,"has_label","","",6,[[],["bool",15]]],[11,"set_label","","",6,[[["fielddescriptorproto_label",4]]]],[11,"get_field_type","","",6,[[],["fielddescriptorproto_type",4]]],[11,"clear_field_type","","",6,[[]]],[11,"has_field_type","","",6,[[],["bool",15]]],[11,"set_field_type","","",6,[[["fielddescriptorproto_type",4]]]],[11,"get_type_name","","",6,[[],["str",15]]],[11,"clear_type_name","","",6,[[]]],[11,"has_type_name","","",6,[[],["bool",15]]],[11,"set_type_name","","",6,[[["string",3]]]],[11,"mut_type_name","","",6,[[],["string",3]]],[11,"take_type_name","","",6,[[],["string",3]]],[11,"get_extendee","","",6,[[],["str",15]]],[11,"clear_extendee","","",6,[[]]],[11,"has_extendee","","",6,[[],["bool",15]]],[11,"set_extendee","","",6,[[["string",3]]]],[11,"mut_extendee","","",6,[[],["string",3]]],[11,"take_extendee","","",6,[[],["string",3]]],[11,"get_default_value","","",6,[[],["str",15]]],[11,"clear_default_value","","",6,[[]]],[11,"has_default_value","","",6,[[],["bool",15]]],[11,"set_default_value","","",6,[[["string",3]]]],[11,"mut_default_value","","",6,[[],["string",3]]],[11,"take_default_value","","",6,[[],["string",3]]],[11,"get_oneof_index","","",6,[[],["i32",15]]],[11,"clear_oneof_index","","",6,[[]]],[11,"has_oneof_index","","",6,[[],["bool",15]]],[11,"set_oneof_index","","",6,[[["i32",15]]]],[11,"get_json_name","","",6,[[],["str",15]]],[11,"clear_json_name","","",6,[[]]],[11,"has_json_name","","",6,[[],["bool",15]]],[11,"set_json_name","","",6,[[["string",3]]]],[11,"mut_json_name","","",6,[[],["string",3]]],[11,"take_json_name","","",6,[[],["string",3]]],[11,"get_options","","",6,[[],["fieldoptions",3]]],[11,"clear_options","","",6,[[]]],[11,"has_options","","",6,[[],["bool",15]]],[11,"set_options","","",6,[[["fieldoptions",3]]]],[11,"mut_options","","",6,[[],["fieldoptions",3]]],[11,"take_options","","",6,[[],["fieldoptions",3]]],[11,"get_proto3_optional","","",6,[[],["bool",15]]],[11,"clear_proto3_optional","","",6,[[]]],[11,"has_proto3_optional","","",6,[[],["bool",15]]],[11,"set_proto3_optional","","",6,[[["bool",15]]]],[4,"FieldDescriptorProto_Type","","",null,null],[13,"TYPE_DOUBLE","","",7,null],[13,"TYPE_FLOAT","","",7,null],[13,"TYPE_INT64","","",7,null],[13,"TYPE_UINT64","","",7,null],[13,"TYPE_INT32","","",7,null],[13,"TYPE_FIXED64","","",7,null],[13,"TYPE_FIXED32","","",7,null],[13,"TYPE_BOOL","","",7,null],[13,"TYPE_STRING","","",7,null],[13,"TYPE_GROUP","","",7,null],[13,"TYPE_MESSAGE","","",7,null],[13,"TYPE_BYTES","","",7,null],[13,"TYPE_UINT32","","",7,null],[13,"TYPE_ENUM","","",7,null],[13,"TYPE_SFIXED32","","",7,null],[13,"TYPE_SFIXED64","","",7,null],[13,"TYPE_SINT32","","",7,null],[13,"TYPE_SINT64","","",7,null],[4,"FieldDescriptorProto_Label","","",null,null],[13,"LABEL_OPTIONAL","","",8,null],[13,"LABEL_REQUIRED","","",8,null],[13,"LABEL_REPEATED","","",8,null],[3,"OneofDescriptorProto","","",null,null],[12,"options","","",9,null],[12,"unknown_fields","","",9,null],[12,"cached_size","","",9,null],[11,"new","","",9,[[],["oneofdescriptorproto",3]]],[11,"get_name","","",9,[[],["str",15]]],[11,"clear_name","","",9,[[]]],[11,"has_name","","",9,[[],["bool",15]]],[11,"set_name","","",9,[[["string",3]]]],[11,"mut_name","","",9,[[],["string",3]]],[11,"take_name","","",9,[[],["string",3]]],[11,"get_options","","",9,[[],["oneofoptions",3]]],[11,"clear_options","","",9,[[]]],[11,"has_options","","",9,[[],["bool",15]]],[11,"set_options","","",9,[[["oneofoptions",3]]]],[11,"mut_options","","",9,[[],["oneofoptions",3]]],[11,"take_options","","",9,[[],["oneofoptions",3]]],[3,"EnumDescriptorProto","","",null,null],[12,"value","","",10,null],[12,"options","","",10,null],[12,"reserved_range","","",10,null],[12,"reserved_name","","",10,null],[12,"unknown_fields","","",10,null],[12,"cached_size","","",10,null],[11,"new","","",10,[[],["enumdescriptorproto",3]]],[11,"get_name","","",10,[[],["str",15]]],[11,"clear_name","","",10,[[]]],[11,"has_name","","",10,[[],["bool",15]]],[11,"set_name","","",10,[[["string",3]]]],[11,"mut_name","","",10,[[],["string",3]]],[11,"take_name","","",10,[[],["string",3]]],[11,"get_value","","",10,[[]]],[11,"clear_value","","",10,[[]]],[11,"set_value","","",10,[[["enumvaluedescriptorproto",3],["repeatedfield",3]]]],[11,"mut_value","","",10,[[],["repeatedfield",3]]],[11,"take_value","","",10,[[],[["enumvaluedescriptorproto",3],["repeatedfield",3]]]],[11,"get_options","","",10,[[],["enumoptions",3]]],[11,"clear_options","","",10,[[]]],[11,"has_options","","",10,[[],["bool",15]]],[11,"set_options","","",10,[[["enumoptions",3]]]],[11,"mut_options","","",10,[[],["enumoptions",3]]],[11,"take_options","","",10,[[],["enumoptions",3]]],[11,"get_reserved_range","","",10,[[]]],[11,"clear_reserved_range","","",10,[[]]],[11,"set_reserved_range","","",10,[[["repeatedfield",3],["enumdescriptorproto_enumreservedrange",3]]]],[11,"mut_reserved_range","","",10,[[],["repeatedfield",3]]],[11,"take_reserved_range","","",10,[[],[["repeatedfield",3],["enumdescriptorproto_enumreservedrange",3]]]],[11,"get_reserved_name","","",10,[[]]],[11,"clear_reserved_name","","",10,[[]]],[11,"set_reserved_name","","",10,[[["repeatedfield",3],["string",3]]]],[11,"mut_reserved_name","","",10,[[],["repeatedfield",3]]],[11,"take_reserved_name","","",10,[[],[["repeatedfield",3],["string",3]]]],[3,"EnumDescriptorProto_EnumReservedRange","","",null,null],[12,"unknown_fields","","",11,null],[12,"cached_size","","",11,null],[11,"new","","",11,[[],["enumdescriptorproto_enumreservedrange",3]]],[11,"get_start","","",11,[[],["i32",15]]],[11,"clear_start","","",11,[[]]],[11,"has_start","","",11,[[],["bool",15]]],[11,"set_start","","",11,[[["i32",15]]]],[11,"get_end","","",11,[[],["i32",15]]],[11,"clear_end","","",11,[[]]],[11,"has_end","","",11,[[],["bool",15]]],[11,"set_end","","",11,[[["i32",15]]]],[3,"EnumValueDescriptorProto","","",null,null],[12,"options","","",12,null],[12,"unknown_fields","","",12,null],[12,"cached_size","","",12,null],[11,"new","","",12,[[],["enumvaluedescriptorproto",3]]],[11,"get_name","","",12,[[],["str",15]]],[11,"clear_name","","",12,[[]]],[11,"has_name","","",12,[[],["bool",15]]],[11,"set_name","","",12,[[["string",3]]]],[11,"mut_name","","",12,[[],["string",3]]],[11,"take_name","","",12,[[],["string",3]]],[11,"get_number","","",12,[[],["i32",15]]],[11,"clear_number","","",12,[[]]],[11,"has_number","","",12,[[],["bool",15]]],[11,"set_number","","",12,[[["i32",15]]]],[11,"get_options","","",12,[[],["enumvalueoptions",3]]],[11,"clear_options","","",12,[[]]],[11,"has_options","","",12,[[],["bool",15]]],[11,"set_options","","",12,[[["enumvalueoptions",3]]]],[11,"mut_options","","",12,[[],["enumvalueoptions",3]]],[11,"take_options","","",12,[[],["enumvalueoptions",3]]],[3,"ServiceDescriptorProto","","",null,null],[12,"method","","",13,null],[12,"options","","",13,null],[12,"unknown_fields","","",13,null],[12,"cached_size","","",13,null],[11,"new","","",13,[[],["servicedescriptorproto",3]]],[11,"get_name","","",13,[[],["str",15]]],[11,"clear_name","","",13,[[]]],[11,"has_name","","",13,[[],["bool",15]]],[11,"set_name","","",13,[[["string",3]]]],[11,"mut_name","","",13,[[],["string",3]]],[11,"take_name","","",13,[[],["string",3]]],[11,"get_method","","",13,[[]]],[11,"clear_method","","",13,[[]]],[11,"set_method","","",13,[[["repeatedfield",3],["methoddescriptorproto",3]]]],[11,"mut_method","","",13,[[],["repeatedfield",3]]],[11,"take_method","","",13,[[],[["repeatedfield",3],["methoddescriptorproto",3]]]],[11,"get_options","","",13,[[],["serviceoptions",3]]],[11,"clear_options","","",13,[[]]],[11,"has_options","","",13,[[],["bool",15]]],[11,"set_options","","",13,[[["serviceoptions",3]]]],[11,"mut_options","","",13,[[],["serviceoptions",3]]],[11,"take_options","","",13,[[],["serviceoptions",3]]],[3,"MethodDescriptorProto","","",null,null],[12,"options","","",14,null],[12,"unknown_fields","","",14,null],[12,"cached_size","","",14,null],[11,"new","","",14,[[],["methoddescriptorproto",3]]],[11,"get_name","","",14,[[],["str",15]]],[11,"clear_name","","",14,[[]]],[11,"has_name","","",14,[[],["bool",15]]],[11,"set_name","","",14,[[["string",3]]]],[11,"mut_name","","",14,[[],["string",3]]],[11,"take_name","","",14,[[],["string",3]]],[11,"get_input_type","","",14,[[],["str",15]]],[11,"clear_input_type","","",14,[[]]],[11,"has_input_type","","",14,[[],["bool",15]]],[11,"set_input_type","","",14,[[["string",3]]]],[11,"mut_input_type","","",14,[[],["string",3]]],[11,"take_input_type","","",14,[[],["string",3]]],[11,"get_output_type","","",14,[[],["str",15]]],[11,"clear_output_type","","",14,[[]]],[11,"has_output_type","","",14,[[],["bool",15]]],[11,"set_output_type","","",14,[[["string",3]]]],[11,"mut_output_type","","",14,[[],["string",3]]],[11,"take_output_type","","",14,[[],["string",3]]],[11,"get_options","","",14,[[],["methodoptions",3]]],[11,"clear_options","","",14,[[]]],[11,"has_options","","",14,[[],["bool",15]]],[11,"set_options","","",14,[[["methodoptions",3]]]],[11,"mut_options","","",14,[[],["methodoptions",3]]],[11,"take_options","","",14,[[],["methodoptions",3]]],[11,"get_client_streaming","","",14,[[],["bool",15]]],[11,"clear_client_streaming","","",14,[[]]],[11,"has_client_streaming","","",14,[[],["bool",15]]],[11,"set_client_streaming","","",14,[[["bool",15]]]],[11,"get_server_streaming","","",14,[[],["bool",15]]],[11,"clear_server_streaming","","",14,[[]]],[11,"has_server_streaming","","",14,[[],["bool",15]]],[11,"set_server_streaming","","",14,[[["bool",15]]]],[3,"FileOptions","","",null,null],[12,"uninterpreted_option","","",15,null],[12,"unknown_fields","","",15,null],[12,"cached_size","","",15,null],[11,"new","","",15,[[],["fileoptions",3]]],[11,"get_java_package","","",15,[[],["str",15]]],[11,"clear_java_package","","",15,[[]]],[11,"has_java_package","","",15,[[],["bool",15]]],[11,"set_java_package","","",15,[[["string",3]]]],[11,"mut_java_package","","",15,[[],["string",3]]],[11,"take_java_package","","",15,[[],["string",3]]],[11,"get_java_outer_classname","","",15,[[],["str",15]]],[11,"clear_java_outer_classname","","",15,[[]]],[11,"has_java_outer_classname","","",15,[[],["bool",15]]],[11,"set_java_outer_classname","","",15,[[["string",3]]]],[11,"mut_java_outer_classname","","",15,[[],["string",3]]],[11,"take_java_outer_classname","","",15,[[],["string",3]]],[11,"get_java_multiple_files","","",15,[[],["bool",15]]],[11,"clear_java_multiple_files","","",15,[[]]],[11,"has_java_multiple_files","","",15,[[],["bool",15]]],[11,"set_java_multiple_files","","",15,[[["bool",15]]]],[11,"get_java_generate_equals_and_hash","","",15,[[],["bool",15]]],[11,"clear_java_generate_equals_and_hash","","",15,[[]]],[11,"has_java_generate_equals_and_hash","","",15,[[],["bool",15]]],[11,"set_java_generate_equals_and_hash","","",15,[[["bool",15]]]],[11,"get_java_string_check_utf8","","",15,[[],["bool",15]]],[11,"clear_java_string_check_utf8","","",15,[[]]],[11,"has_java_string_check_utf8","","",15,[[],["bool",15]]],[11,"set_java_string_check_utf8","","",15,[[["bool",15]]]],[11,"get_optimize_for","","",15,[[],["fileoptions_optimizemode",4]]],[11,"clear_optimize_for","","",15,[[]]],[11,"has_optimize_for","","",15,[[],["bool",15]]],[11,"set_optimize_for","","",15,[[["fileoptions_optimizemode",4]]]],[11,"get_go_package","","",15,[[],["str",15]]],[11,"clear_go_package","","",15,[[]]],[11,"has_go_package","","",15,[[],["bool",15]]],[11,"set_go_package","","",15,[[["string",3]]]],[11,"mut_go_package","","",15,[[],["string",3]]],[11,"take_go_package","","",15,[[],["string",3]]],[11,"get_cc_generic_services","","",15,[[],["bool",15]]],[11,"clear_cc_generic_services","","",15,[[]]],[11,"has_cc_generic_services","","",15,[[],["bool",15]]],[11,"set_cc_generic_services","","",15,[[["bool",15]]]],[11,"get_java_generic_services","","",15,[[],["bool",15]]],[11,"clear_java_generic_services","","",15,[[]]],[11,"has_java_generic_services","","",15,[[],["bool",15]]],[11,"set_java_generic_services","","",15,[[["bool",15]]]],[11,"get_py_generic_services","","",15,[[],["bool",15]]],[11,"clear_py_generic_services","","",15,[[]]],[11,"has_py_generic_services","","",15,[[],["bool",15]]],[11,"set_py_generic_services","","",15,[[["bool",15]]]],[11,"get_php_generic_services","","",15,[[],["bool",15]]],[11,"clear_php_generic_services","","",15,[[]]],[11,"has_php_generic_services","","",15,[[],["bool",15]]],[11,"set_php_generic_services","","",15,[[["bool",15]]]],[11,"get_deprecated","","",15,[[],["bool",15]]],[11,"clear_deprecated","","",15,[[]]],[11,"has_deprecated","","",15,[[],["bool",15]]],[11,"set_deprecated","","",15,[[["bool",15]]]],[11,"get_cc_enable_arenas","","",15,[[],["bool",15]]],[11,"clear_cc_enable_arenas","","",15,[[]]],[11,"has_cc_enable_arenas","","",15,[[],["bool",15]]],[11,"set_cc_enable_arenas","","",15,[[["bool",15]]]],[11,"get_objc_class_prefix","","",15,[[],["str",15]]],[11,"clear_objc_class_prefix","","",15,[[]]],[11,"has_objc_class_prefix","","",15,[[],["bool",15]]],[11,"set_objc_class_prefix","","",15,[[["string",3]]]],[11,"mut_objc_class_prefix","","",15,[[],["string",3]]],[11,"take_objc_class_prefix","","",15,[[],["string",3]]],[11,"get_csharp_namespace","","",15,[[],["str",15]]],[11,"clear_csharp_namespace","","",15,[[]]],[11,"has_csharp_namespace","","",15,[[],["bool",15]]],[11,"set_csharp_namespace","","",15,[[["string",3]]]],[11,"mut_csharp_namespace","","",15,[[],["string",3]]],[11,"take_csharp_namespace","","",15,[[],["string",3]]],[11,"get_swift_prefix","","",15,[[],["str",15]]],[11,"clear_swift_prefix","","",15,[[]]],[11,"has_swift_prefix","","",15,[[],["bool",15]]],[11,"set_swift_prefix","","",15,[[["string",3]]]],[11,"mut_swift_prefix","","",15,[[],["string",3]]],[11,"take_swift_prefix","","",15,[[],["string",3]]],[11,"get_php_class_prefix","","",15,[[],["str",15]]],[11,"clear_php_class_prefix","","",15,[[]]],[11,"has_php_class_prefix","","",15,[[],["bool",15]]],[11,"set_php_class_prefix","","",15,[[["string",3]]]],[11,"mut_php_class_prefix","","",15,[[],["string",3]]],[11,"take_php_class_prefix","","",15,[[],["string",3]]],[11,"get_php_namespace","","",15,[[],["str",15]]],[11,"clear_php_namespace","","",15,[[]]],[11,"has_php_namespace","","",15,[[],["bool",15]]],[11,"set_php_namespace","","",15,[[["string",3]]]],[11,"mut_php_namespace","","",15,[[],["string",3]]],[11,"take_php_namespace","","",15,[[],["string",3]]],[11,"get_php_metadata_namespace","","",15,[[],["str",15]]],[11,"clear_php_metadata_namespace","","",15,[[]]],[11,"has_php_metadata_namespace","","",15,[[],["bool",15]]],[11,"set_php_metadata_namespace","","",15,[[["string",3]]]],[11,"mut_php_metadata_namespace","","",15,[[],["string",3]]],[11,"take_php_metadata_namespace","","",15,[[],["string",3]]],[11,"get_ruby_package","","",15,[[],["str",15]]],[11,"clear_ruby_package","","",15,[[]]],[11,"has_ruby_package","","",15,[[],["bool",15]]],[11,"set_ruby_package","","",15,[[["string",3]]]],[11,"mut_ruby_package","","",15,[[],["string",3]]],[11,"take_ruby_package","","",15,[[],["string",3]]],[11,"get_uninterpreted_option","","",15,[[]]],[11,"clear_uninterpreted_option","","",15,[[]]],[11,"set_uninterpreted_option","","",15,[[["repeatedfield",3],["uninterpretedoption",3]]]],[11,"mut_uninterpreted_option","","",15,[[],["repeatedfield",3]]],[11,"take_uninterpreted_option","","",15,[[],[["repeatedfield",3],["uninterpretedoption",3]]]],[4,"FileOptions_OptimizeMode","","",null,null],[13,"SPEED","","",16,null],[13,"CODE_SIZE","","",16,null],[13,"LITE_RUNTIME","","",16,null],[3,"MessageOptions","","",null,null],[12,"uninterpreted_option","","",17,null],[12,"unknown_fields","","",17,null],[12,"cached_size","","",17,null],[11,"new","","",17,[[],["messageoptions",3]]],[11,"get_message_set_wire_format","","",17,[[],["bool",15]]],[11,"clear_message_set_wire_format","","",17,[[]]],[11,"has_message_set_wire_format","","",17,[[],["bool",15]]],[11,"set_message_set_wire_format","","",17,[[["bool",15]]]],[11,"get_no_standard_descriptor_accessor","","",17,[[],["bool",15]]],[11,"clear_no_standard_descriptor_accessor","","",17,[[]]],[11,"has_no_standard_descriptor_accessor","","",17,[[],["bool",15]]],[11,"set_no_standard_descriptor_accessor","","",17,[[["bool",15]]]],[11,"get_deprecated","","",17,[[],["bool",15]]],[11,"clear_deprecated","","",17,[[]]],[11,"has_deprecated","","",17,[[],["bool",15]]],[11,"set_deprecated","","",17,[[["bool",15]]]],[11,"get_map_entry","","",17,[[],["bool",15]]],[11,"clear_map_entry","","",17,[[]]],[11,"has_map_entry","","",17,[[],["bool",15]]],[11,"set_map_entry","","",17,[[["bool",15]]]],[11,"get_uninterpreted_option","","",17,[[]]],[11,"clear_uninterpreted_option","","",17,[[]]],[11,"set_uninterpreted_option","","",17,[[["repeatedfield",3],["uninterpretedoption",3]]]],[11,"mut_uninterpreted_option","","",17,[[],["repeatedfield",3]]],[11,"take_uninterpreted_option","","",17,[[],[["repeatedfield",3],["uninterpretedoption",3]]]],[3,"FieldOptions","","",null,null],[12,"uninterpreted_option","","",18,null],[12,"unknown_fields","","",18,null],[12,"cached_size","","",18,null],[11,"new","","",18,[[],["fieldoptions",3]]],[11,"get_ctype","","",18,[[],["fieldoptions_ctype",4]]],[11,"clear_ctype","","",18,[[]]],[11,"has_ctype","","",18,[[],["bool",15]]],[11,"set_ctype","","",18,[[["fieldoptions_ctype",4]]]],[11,"get_packed","","",18,[[],["bool",15]]],[11,"clear_packed","","",18,[[]]],[11,"has_packed","","",18,[[],["bool",15]]],[11,"set_packed","","",18,[[["bool",15]]]],[11,"get_jstype","","",18,[[],["fieldoptions_jstype",4]]],[11,"clear_jstype","","",18,[[]]],[11,"has_jstype","","",18,[[],["bool",15]]],[11,"set_jstype","","",18,[[["fieldoptions_jstype",4]]]],[11,"get_lazy","","",18,[[],["bool",15]]],[11,"clear_lazy","","",18,[[]]],[11,"has_lazy","","",18,[[],["bool",15]]],[11,"set_lazy","","",18,[[["bool",15]]]],[11,"get_deprecated","","",18,[[],["bool",15]]],[11,"clear_deprecated","","",18,[[]]],[11,"has_deprecated","","",18,[[],["bool",15]]],[11,"set_deprecated","","",18,[[["bool",15]]]],[11,"get_weak","","",18,[[],["bool",15]]],[11,"clear_weak","","",18,[[]]],[11,"has_weak","","",18,[[],["bool",15]]],[11,"set_weak","","",18,[[["bool",15]]]],[11,"get_uninterpreted_option","","",18,[[]]],[11,"clear_uninterpreted_option","","",18,[[]]],[11,"set_uninterpreted_option","","",18,[[["repeatedfield",3],["uninterpretedoption",3]]]],[11,"mut_uninterpreted_option","","",18,[[],["repeatedfield",3]]],[11,"take_uninterpreted_option","","",18,[[],[["repeatedfield",3],["uninterpretedoption",3]]]],[4,"FieldOptions_CType","","",null,null],[13,"STRING","","",19,null],[13,"CORD","","",19,null],[13,"STRING_PIECE","","",19,null],[4,"FieldOptions_JSType","","",null,null],[13,"JS_NORMAL","","",20,null],[13,"JS_STRING","","",20,null],[13,"JS_NUMBER","","",20,null],[3,"OneofOptions","","",null,null],[12,"uninterpreted_option","","",21,null],[12,"unknown_fields","","",21,null],[12,"cached_size","","",21,null],[11,"new","","",21,[[],["oneofoptions",3]]],[11,"get_uninterpreted_option","","",21,[[]]],[11,"clear_uninterpreted_option","","",21,[[]]],[11,"set_uninterpreted_option","","",21,[[["repeatedfield",3],["uninterpretedoption",3]]]],[11,"mut_uninterpreted_option","","",21,[[],["repeatedfield",3]]],[11,"take_uninterpreted_option","","",21,[[],[["repeatedfield",3],["uninterpretedoption",3]]]],[3,"EnumOptions","","",null,null],[12,"uninterpreted_option","","",22,null],[12,"unknown_fields","","",22,null],[12,"cached_size","","",22,null],[11,"new","","",22,[[],["enumoptions",3]]],[11,"get_allow_alias","","",22,[[],["bool",15]]],[11,"clear_allow_alias","","",22,[[]]],[11,"has_allow_alias","","",22,[[],["bool",15]]],[11,"set_allow_alias","","",22,[[["bool",15]]]],[11,"get_deprecated","","",22,[[],["bool",15]]],[11,"clear_deprecated","","",22,[[]]],[11,"has_deprecated","","",22,[[],["bool",15]]],[11,"set_deprecated","","",22,[[["bool",15]]]],[11,"get_uninterpreted_option","","",22,[[]]],[11,"clear_uninterpreted_option","","",22,[[]]],[11,"set_uninterpreted_option","","",22,[[["repeatedfield",3],["uninterpretedoption",3]]]],[11,"mut_uninterpreted_option","","",22,[[],["repeatedfield",3]]],[11,"take_uninterpreted_option","","",22,[[],[["repeatedfield",3],["uninterpretedoption",3]]]],[3,"EnumValueOptions","","",null,null],[12,"uninterpreted_option","","",23,null],[12,"unknown_fields","","",23,null],[12,"cached_size","","",23,null],[11,"new","","",23,[[],["enumvalueoptions",3]]],[11,"get_deprecated","","",23,[[],["bool",15]]],[11,"clear_deprecated","","",23,[[]]],[11,"has_deprecated","","",23,[[],["bool",15]]],[11,"set_deprecated","","",23,[[["bool",15]]]],[11,"get_uninterpreted_option","","",23,[[]]],[11,"clear_uninterpreted_option","","",23,[[]]],[11,"set_uninterpreted_option","","",23,[[["repeatedfield",3],["uninterpretedoption",3]]]],[11,"mut_uninterpreted_option","","",23,[[],["repeatedfield",3]]],[11,"take_uninterpreted_option","","",23,[[],[["repeatedfield",3],["uninterpretedoption",3]]]],[3,"ServiceOptions","","",null,null],[12,"uninterpreted_option","","",24,null],[12,"unknown_fields","","",24,null],[12,"cached_size","","",24,null],[11,"new","","",24,[[],["serviceoptions",3]]],[11,"get_deprecated","","",24,[[],["bool",15]]],[11,"clear_deprecated","","",24,[[]]],[11,"has_deprecated","","",24,[[],["bool",15]]],[11,"set_deprecated","","",24,[[["bool",15]]]],[11,"get_uninterpreted_option","","",24,[[]]],[11,"clear_uninterpreted_option","","",24,[[]]],[11,"set_uninterpreted_option","","",24,[[["repeatedfield",3],["uninterpretedoption",3]]]],[11,"mut_uninterpreted_option","","",24,[[],["repeatedfield",3]]],[11,"take_uninterpreted_option","","",24,[[],[["repeatedfield",3],["uninterpretedoption",3]]]],[3,"MethodOptions","","",null,null],[12,"uninterpreted_option","","",25,null],[12,"unknown_fields","","",25,null],[12,"cached_size","","",25,null],[11,"new","","",25,[[],["methodoptions",3]]],[11,"get_deprecated","","",25,[[],["bool",15]]],[11,"clear_deprecated","","",25,[[]]],[11,"has_deprecated","","",25,[[],["bool",15]]],[11,"set_deprecated","","",25,[[["bool",15]]]],[11,"get_idempotency_level","","",25,[[],["methodoptions_idempotencylevel",4]]],[11,"clear_idempotency_level","","",25,[[]]],[11,"has_idempotency_level","","",25,[[],["bool",15]]],[11,"set_idempotency_level","","",25,[[["methodoptions_idempotencylevel",4]]]],[11,"get_uninterpreted_option","","",25,[[]]],[11,"clear_uninterpreted_option","","",25,[[]]],[11,"set_uninterpreted_option","","",25,[[["repeatedfield",3],["uninterpretedoption",3]]]],[11,"mut_uninterpreted_option","","",25,[[],["repeatedfield",3]]],[11,"take_uninterpreted_option","","",25,[[],[["repeatedfield",3],["uninterpretedoption",3]]]],[4,"MethodOptions_IdempotencyLevel","","",null,null],[13,"IDEMPOTENCY_UNKNOWN","","",26,null],[13,"NO_SIDE_EFFECTS","","",26,null],[13,"IDEMPOTENT","","",26,null],[3,"UninterpretedOption","","",null,null],[12,"name","","",27,null],[12,"unknown_fields","","",27,null],[12,"cached_size","","",27,null],[11,"new","","",27,[[],["uninterpretedoption",3]]],[11,"get_name","","",27,[[]]],[11,"clear_name","","",27,[[]]],[11,"set_name","","",27,[[["uninterpretedoption_namepart",3],["repeatedfield",3]]]],[11,"mut_name","","",27,[[],["repeatedfield",3]]],[11,"take_name","","",27,[[],[["uninterpretedoption_namepart",3],["repeatedfield",3]]]],[11,"get_identifier_value","","",27,[[],["str",15]]],[11,"clear_identifier_value","","",27,[[]]],[11,"has_identifier_value","","",27,[[],["bool",15]]],[11,"set_identifier_value","","",27,[[["string",3]]]],[11,"mut_identifier_value","","",27,[[],["string",3]]],[11,"take_identifier_value","","",27,[[],["string",3]]],[11,"get_positive_int_value","","",27,[[],["u64",15]]],[11,"clear_positive_int_value","","",27,[[]]],[11,"has_positive_int_value","","",27,[[],["bool",15]]],[11,"set_positive_int_value","","",27,[[["u64",15]]]],[11,"get_negative_int_value","","",27,[[],["i64",15]]],[11,"clear_negative_int_value","","",27,[[]]],[11,"has_negative_int_value","","",27,[[],["bool",15]]],[11,"set_negative_int_value","","",27,[[["i64",15]]]],[11,"get_double_value","","",27,[[],["f64",15]]],[11,"clear_double_value","","",27,[[]]],[11,"has_double_value","","",27,[[],["bool",15]]],[11,"set_double_value","","",27,[[["f64",15]]]],[11,"get_string_value","","",27,[[]]],[11,"clear_string_value","","",27,[[]]],[11,"has_string_value","","",27,[[],["bool",15]]],[11,"set_string_value","","",27,[[["vec",3],["u8",15]]]],[11,"mut_string_value","","",27,[[],["vec",3]]],[11,"take_string_value","","",27,[[],[["vec",3],["u8",15]]]],[11,"get_aggregate_value","","",27,[[],["str",15]]],[11,"clear_aggregate_value","","",27,[[]]],[11,"has_aggregate_value","","",27,[[],["bool",15]]],[11,"set_aggregate_value","","",27,[[["string",3]]]],[11,"mut_aggregate_value","","",27,[[],["string",3]]],[11,"take_aggregate_value","","",27,[[],["string",3]]],[3,"UninterpretedOption_NamePart","","",null,null],[12,"unknown_fields","","",28,null],[12,"cached_size","","",28,null],[11,"new","","",28,[[],["uninterpretedoption_namepart",3]]],[11,"get_name_part","","",28,[[],["str",15]]],[11,"clear_name_part","","",28,[[]]],[11,"has_name_part","","",28,[[],["bool",15]]],[11,"set_name_part","","",28,[[["string",3]]]],[11,"mut_name_part","","",28,[[],["string",3]]],[11,"take_name_part","","",28,[[],["string",3]]],[11,"get_is_extension","","",28,[[],["bool",15]]],[11,"clear_is_extension","","",28,[[]]],[11,"has_is_extension","","",28,[[],["bool",15]]],[11,"set_is_extension","","",28,[[["bool",15]]]],[3,"SourceCodeInfo","","",null,null],[12,"location","","",29,null],[12,"unknown_fields","","",29,null],[12,"cached_size","","",29,null],[11,"new","","",29,[[],["sourcecodeinfo",3]]],[11,"get_location","","",29,[[]]],[11,"clear_location","","",29,[[]]],[11,"set_location","","",29,[[["sourcecodeinfo_location",3],["repeatedfield",3]]]],[11,"mut_location","","",29,[[],["repeatedfield",3]]],[11,"take_location","","",29,[[],[["sourcecodeinfo_location",3],["repeatedfield",3]]]],[3,"SourceCodeInfo_Location","","",null,null],[12,"path","","",30,null],[12,"span","","",30,null],[12,"leading_detached_comments","","",30,null],[12,"unknown_fields","","",30,null],[12,"cached_size","","",30,null],[11,"new","","",30,[[],["sourcecodeinfo_location",3]]],[11,"get_path","","",30,[[]]],[11,"clear_path","","",30,[[]]],[11,"set_path","","",30,[[["vec",3],["i32",15]]]],[11,"mut_path","","",30,[[],["vec",3]]],[11,"take_path","","",30,[[],[["i32",15],["vec",3]]]],[11,"get_span","","",30,[[]]],[11,"clear_span","","",30,[[]]],[11,"set_span","","",30,[[["vec",3],["i32",15]]]],[11,"mut_span","","",30,[[],["vec",3]]],[11,"take_span","","",30,[[],[["i32",15],["vec",3]]]],[11,"get_leading_comments","","",30,[[],["str",15]]],[11,"clear_leading_comments","","",30,[[]]],[11,"has_leading_comments","","",30,[[],["bool",15]]],[11,"set_leading_comments","","",30,[[["string",3]]]],[11,"mut_leading_comments","","",30,[[],["string",3]]],[11,"take_leading_comments","","",30,[[],["string",3]]],[11,"get_trailing_comments","","",30,[[],["str",15]]],[11,"clear_trailing_comments","","",30,[[]]],[11,"has_trailing_comments","","",30,[[],["bool",15]]],[11,"set_trailing_comments","","",30,[[["string",3]]]],[11,"mut_trailing_comments","","",30,[[],["string",3]]],[11,"take_trailing_comments","","",30,[[],["string",3]]],[11,"get_leading_detached_comments","","",30,[[]]],[11,"clear_leading_detached_comments","","",30,[[]]],[11,"set_leading_detached_comments","","",30,[[["repeatedfield",3],["string",3]]]],[11,"mut_leading_detached_comments","","",30,[[],["repeatedfield",3]]],[11,"take_leading_detached_comments","","",30,[[],[["repeatedfield",3],["string",3]]]],[3,"GeneratedCodeInfo","","",null,null],[12,"annotation","","",31,null],[12,"unknown_fields","","",31,null],[12,"cached_size","","",31,null],[11,"new","","",31,[[],["generatedcodeinfo",3]]],[11,"get_annotation","","",31,[[]]],[11,"clear_annotation","","",31,[[]]],[11,"set_annotation","","",31,[[["generatedcodeinfo_annotation",3],["repeatedfield",3]]]],[11,"mut_annotation","","",31,[[],["repeatedfield",3]]],[11,"take_annotation","","",31,[[],[["generatedcodeinfo_annotation",3],["repeatedfield",3]]]],[3,"GeneratedCodeInfo_Annotation","","",null,null],[12,"path","","",32,null],[12,"unknown_fields","","",32,null],[12,"cached_size","","",32,null],[11,"new","","",32,[[],["generatedcodeinfo_annotation",3]]],[11,"get_path","","",32,[[]]],[11,"clear_path","","",32,[[]]],[11,"set_path","","",32,[[["vec",3],["i32",15]]]],[11,"mut_path","","",32,[[],["vec",3]]],[11,"take_path","","",32,[[],[["i32",15],["vec",3]]]],[11,"get_source_file","","",32,[[],["str",15]]],[11,"clear_source_file","","",32,[[]]],[11,"has_source_file","","",32,[[],["bool",15]]],[11,"set_source_file","","",32,[[["string",3]]]],[11,"mut_source_file","","",32,[[],["string",3]]],[11,"take_source_file","","",32,[[],["string",3]]],[11,"get_begin","","",32,[[],["i32",15]]],[11,"clear_begin","","",32,[[]]],[11,"has_begin","","",32,[[],["bool",15]]],[11,"set_begin","","",32,[[["i32",15]]]],[11,"get_end","","",32,[[],["i32",15]]],[11,"clear_end","","",32,[[]]],[11,"has_end","","",32,[[],["bool",15]]],[11,"set_end","","",32,[[["i32",15]]]],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto",3]]],[0,"plugin","protobuf","Generated file from <code>google/protobuf/compiler/plugin.proto</code>",null,null],[3,"Version","protobuf::plugin","",null,null],[12,"unknown_fields","","",33,null],[12,"cached_size","","",33,null],[11,"new","","",33,[[],["version",3]]],[11,"get_major","","",33,[[],["i32",15]]],[11,"clear_major","","",33,[[]]],[11,"has_major","","",33,[[],["bool",15]]],[11,"set_major","","",33,[[["i32",15]]]],[11,"get_minor","","",33,[[],["i32",15]]],[11,"clear_minor","","",33,[[]]],[11,"has_minor","","",33,[[],["bool",15]]],[11,"set_minor","","",33,[[["i32",15]]]],[11,"get_patch","","",33,[[],["i32",15]]],[11,"clear_patch","","",33,[[]]],[11,"has_patch","","",33,[[],["bool",15]]],[11,"set_patch","","",33,[[["i32",15]]]],[11,"get_suffix","","",33,[[],["str",15]]],[11,"clear_suffix","","",33,[[]]],[11,"has_suffix","","",33,[[],["bool",15]]],[11,"set_suffix","","",33,[[["string",3]]]],[11,"mut_suffix","","",33,[[],["string",3]]],[11,"take_suffix","","",33,[[],["string",3]]],[3,"CodeGeneratorRequest","","",null,null],[12,"file_to_generate","","",34,null],[12,"proto_file","","",34,null],[12,"compiler_version","","",34,null],[12,"unknown_fields","","",34,null],[12,"cached_size","","",34,null],[11,"new","","",34,[[],["codegeneratorrequest",3]]],[11,"get_file_to_generate","","",34,[[]]],[11,"clear_file_to_generate","","",34,[[]]],[11,"set_file_to_generate","","",34,[[["repeatedfield",3],["string",3]]]],[11,"mut_file_to_generate","","",34,[[],["repeatedfield",3]]],[11,"take_file_to_generate","","",34,[[],[["repeatedfield",3],["string",3]]]],[11,"get_parameter","","",34,[[],["str",15]]],[11,"clear_parameter","","",34,[[]]],[11,"has_parameter","","",34,[[],["bool",15]]],[11,"set_parameter","","",34,[[["string",3]]]],[11,"mut_parameter","","",34,[[],["string",3]]],[11,"take_parameter","","",34,[[],["string",3]]],[11,"get_proto_file","","",34,[[]]],[11,"clear_proto_file","","",34,[[]]],[11,"set_proto_file","","",34,[[["repeatedfield",3],["filedescriptorproto",3]]]],[11,"mut_proto_file","","",34,[[],["repeatedfield",3]]],[11,"take_proto_file","","",34,[[],[["repeatedfield",3],["filedescriptorproto",3]]]],[11,"get_compiler_version","","",34,[[],["version",3]]],[11,"clear_compiler_version","","",34,[[]]],[11,"has_compiler_version","","",34,[[],["bool",15]]],[11,"set_compiler_version","","",34,[[["version",3]]]],[11,"mut_compiler_version","","",34,[[],["version",3]]],[11,"take_compiler_version","","",34,[[],["version",3]]],[3,"CodeGeneratorResponse","","",null,null],[12,"file","","",35,null],[12,"unknown_fields","","",35,null],[12,"cached_size","","",35,null],[11,"new","","",35,[[],["codegeneratorresponse",3]]],[11,"get_error","","",35,[[],["str",15]]],[11,"clear_error","","",35,[[]]],[11,"has_error","","",35,[[],["bool",15]]],[11,"set_error","","",35,[[["string",3]]]],[11,"mut_error","","",35,[[],["string",3]]],[11,"take_error","","",35,[[],["string",3]]],[11,"get_supported_features","","",35,[[],["u64",15]]],[11,"clear_supported_features","","",35,[[]]],[11,"has_supported_features","","",35,[[],["bool",15]]],[11,"set_supported_features","","",35,[[["u64",15]]]],[11,"get_file","","",35,[[]]],[11,"clear_file","","",35,[[]]],[11,"set_file","","",35,[[["repeatedfield",3],["codegeneratorresponse_file",3]]]],[11,"mut_file","","",35,[[],["repeatedfield",3]]],[11,"take_file","","",35,[[],[["repeatedfield",3],["codegeneratorresponse_file",3]]]],[3,"CodeGeneratorResponse_File","","",null,null],[12,"generated_code_info","","",36,null],[12,"unknown_fields","","",36,null],[12,"cached_size","","",36,null],[11,"new","","",36,[[],["codegeneratorresponse_file",3]]],[11,"get_name","","",36,[[],["str",15]]],[11,"clear_name","","",36,[[]]],[11,"has_name","","",36,[[],["bool",15]]],[11,"set_name","","",36,[[["string",3]]]],[11,"mut_name","","",36,[[],["string",3]]],[11,"take_name","","",36,[[],["string",3]]],[11,"get_insertion_point","","",36,[[],["str",15]]],[11,"clear_insertion_point","","",36,[[]]],[11,"has_insertion_point","","",36,[[],["bool",15]]],[11,"set_insertion_point","","",36,[[["string",3]]]],[11,"mut_insertion_point","","",36,[[],["string",3]]],[11,"take_insertion_point","","",36,[[],["string",3]]],[11,"get_content","","",36,[[],["str",15]]],[11,"clear_content","","",36,[[]]],[11,"has_content","","",36,[[],["bool",15]]],[11,"set_content","","",36,[[["string",3]]]],[11,"mut_content","","",36,[[],["string",3]]],[11,"take_content","","",36,[[],["string",3]]],[11,"get_generated_code_info","","",36,[[],["generatedcodeinfo",3]]],[11,"clear_generated_code_info","","",36,[[]]],[11,"has_generated_code_info","","",36,[[],["bool",15]]],[11,"set_generated_code_info","","",36,[[["generatedcodeinfo",3]]]],[11,"mut_generated_code_info","","",36,[[],["generatedcodeinfo",3]]],[11,"take_generated_code_info","","",36,[[],["generatedcodeinfo",3]]],[4,"CodeGeneratorResponse_Feature","","",null,null],[13,"FEATURE_NONE","","",37,null],[13,"FEATURE_PROTO3_OPTIONAL","","",37,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto",3]]],[0,"rustproto","protobuf","Generated file from <code>rustproto.proto</code>",null,null],[0,"exts","protobuf::rustproto","Extension fields",null,null],[17,"expose_oneof_all","protobuf::rustproto::exts","",null,null],[17,"expose_fields_all","","",null,null],[17,"generate_accessors_all","","",null,null],[17,"carllerche_bytes_for_bytes_all","","",null,null],[17,"carllerche_bytes_for_string_all","","",null,null],[17,"serde_derive_all","","",null,null],[17,"serde_derive_cfg_all","","",null,null],[17,"lite_runtime_all","","",null,null],[17,"expose_oneof","","",null,null],[17,"expose_fields","","",null,null],[17,"generate_accessors","","",null,null],[17,"carllerche_bytes_for_bytes","","",null,null],[17,"carllerche_bytes_for_string","","",null,null],[17,"serde_derive","","",null,null],[17,"serde_derive_cfg","","",null,null],[17,"expose_fields_field","","",null,null],[17,"generate_accessors_field","","",null,null],[17,"carllerche_bytes_for_bytes_field","","",null,null],[17,"carllerche_bytes_for_string_field","","",null,null],[5,"file_descriptor_proto","protobuf::rustproto","",null,[[],["filedescriptorproto",3]]],[0,"wire_format","protobuf","Serialization constants.",null,null],[17,"TAG_TYPE_BITS","protobuf::wire_format","Tag occupies 3 bits",null,null],[17,"TAG_TYPE_MASK","","Tag mask",null,null],[17,"FIELD_NUMBER_MAX","","Max possible field number",null,null],[4,"WireType","","One of six defined protobuf wire types",null,null],[13,"WireTypeVarint","","Varint (e. g. <code>int32</code> or <code>sint64</code>)",38,null],[13,"WireTypeFixed64","","Fixed size 64 bit (e. g. <code>fixed64</code> or <code>double</code>)",38,null],[13,"WireTypeLengthDelimited","","Length-delimited (e. g. <code>message</code> or <code>string</code>)",38,null],[13,"WireTypeStartGroup","","Groups are not supported by rust-protobuf",38,null],[13,"WireTypeEndGroup","","Groups are not supported by rust-protobuf",38,null],[13,"WireTypeFixed32","","Fixed size 64 bit (e. g. <code>fixed32</code> or <code>float</code>)",38,null],[11,"new","","Parse wire type",38,[[["u32",15]],[["option",4],["wiretype",4]]]],[3,"Tag","","Parsed protobuf tag, which is a pair of field number and …",null,null],[11,"value","","Pack a tag to integer",39,[[],["u32",15]]],[11,"new","","Parse integer into <code>Tag</code> object",39,[[["u32",15]],[["option",4],["tag",3]]]],[11,"make","","Create a tag from a field number and wire type.",39,[[["u32",15],["wiretype",4]],["tag",3]]],[11,"unpack","","Tag as pair of (field number, wire type)",39,[[]]],[11,"field_number","","Protobuf field number",39,[[],["u32",15]]],[0,"error","protobuf","Protobuf error type",null,null],[6,"ProtobufResult","protobuf::error","<code>Result</code> alias for <code>ProtobufError</code>",null,null],[4,"WireError","","Enum values added here for diagnostic purposes. Users …",null,null],[13,"UnexpectedEof","","Could not read complete message because stream is EOF",40,null],[13,"UnexpectedWireType","","Wrong wire type for given field",40,null],[13,"IncorrectTag","","Incorrect tag value",40,null],[13,"IncompleteMap","","Malformed map field",40,null],[13,"IncorrectVarint","","Malformed varint",40,null],[13,"Utf8Error","","String is not valid UTD-8",40,null],[13,"InvalidEnumValue","","Enum value is unknown",40,null],[13,"OverRecursionLimit","","Message is too nested",40,null],[13,"TruncatedMessage","","Could not read complete message because stream is EOF",40,null],[13,"Other","","Other error",40,null],[4,"ProtobufError","","Generic protobuf error",null,null],[13,"IoError","","I/O error when reading or writing",41,null],[13,"WireError","","Malformed input",41,null],[13,"Utf8","","Protocol contains a string which is not valid UTF-8 string",41,null],[13,"MessageNotInitialized","","Not all required fields set",41,null],[12,"message","protobuf::error::ProtobufError","Message name",42,null],[0,"ext","protobuf","Utilities to support \\\"extension\\\" fields.",null,null],[3,"ExtFieldOptional","protobuf::ext","Optional ext field",null,null],[12,"field_number","","Extension field number",43,null],[12,"phantom","","Marker",43,null],[3,"ExtFieldRepeated","","Repeated ext field",null,null],[12,"field_number","","Extension field number",44,null],[12,"phantom","","Extension field number",44,null],[11,"get","","Get a copy of value from a message.",43,[[],["option",4]]],[11,"get","","Get a copy of value from a message (<strong>not implemented</strong>).",44,[[],["vec",3]]],[0,"json","protobuf","JSON serialization and deserialization.",null,null],[0,"lazy","","Lazily initialized data. Used in generated code.",null,null],[3,"Lazy","protobuf::lazy","Lasily initialized data.",null,null],[18,"INIT","","Uninitialized <code>Lazy</code> object.",45,null],[11,"get","","Get lazy field value, initialize it with given function …",45,[[]]],[17,"ONCE_INIT","","Used to initialize <code>lock</code> field in <code>Lazy</code> struct.",null,null],[0,"reflect","protobuf","Reflection implementation for protobuf types.",null,null],[8,"ProtobufValue","protobuf::reflect","Type implemented by all protobuf elementary types (ints, …",null,null],[10,"as_ref","","As ref",46,[[],["reflectvalueref",4]]],[11,"as_any","","Convert to <code>Any</code>",46,[[],["any",8]]],[11,"is_non_zero","","Is value non-zero?",46,[[],["bool",15]]],[11,"as_ref_copy","","Return <code>ProtobufValueRef</code> if self is <code>Copy</code>.",46,[[],["reflectvalueref",4]]],[4,"ReflectValueRef","","A reference to a value",null,null],[13,"U32","","<code>u32</code>",47,null],[13,"U64","","<code>u64</code>",47,null],[13,"I32","","<code>i32</code>",47,null],[13,"I64","","<code>i64</code>",47,null],[13,"F32","","<code>f32</code>",47,null],[13,"F64","","<code>f64</code>",47,null],[13,"Bool","","<code>bool</code>",47,null],[13,"String","","<code>string</code>",47,null],[13,"Bytes","","<code>bytes</code>",47,null],[13,"Enum","","<code>enum</code>",47,null],[13,"Message","","<code>message</code>",47,null],[3,"EnumDescriptor","","Dynamic representation of enum type.",null,null],[3,"EnumValueDescriptor","","Description for enum variant.",null,null],[3,"MessageDescriptor","","Dynamic message type",null,null],[3,"FieldDescriptor","","Field descriptor.",null,null],[4,"ReflectFieldRef","","Reference to a value stored in a field, optional, …",null,null],[13,"Optional","","Singular field, optional or required in proto3 and just …",48,null],[13,"Repeated","","Repeated field",48,null],[13,"Map","","Map field",48,null],[0,"rt","protobuf","Functions used by generated protobuf code. Should not be …",null,null],[3,"LazyV2","protobuf::rt","Lazily initialized data.",null,null],[5,"compute_raw_varint64_size","","Given <code>u64</code> value compute varint encoded length.",null,[[["u64",15]],["u32",15]]],[5,"compute_raw_varint32_size","","Given <code>u32</code> value compute varint encoded length.",null,[[["u32",15]],["u32",15]]],[8,"ProtobufVarint","","Helper trait implemented by integer types which could be …",null,null],[10,"len_varint","","Size of self when encoded as varint.",49,[[],["u32",15]]],[8,"ProtobufVarintZigzag","","Helper trait implemented by integer types which could be …",null,null],[10,"len_varint_zigzag","","Size of self when encoded as zigzag varint.",50,[[],["u32",15]]],[5,"vec_packed_varint_data_size","","Size of serialized repeated packed field, excluding …",null,[[],["u32",15]]],[5,"vec_packed_varint_zigzag_data_size","","Size of serialized repeated packed field, excluding …",null,[[],["u32",15]]],[5,"vec_packed_enum_data_size","","Size of serialized repeated packed enum field, excluding …",null,[[],["u32",15]]],[5,"vec_packed_varint_size","","Size of serialized data with length prefix and tag",null,[[["u32",15]],["u32",15]]],[5,"vec_packed_varint_zigzag_size","","Size of serialized data with length prefix and tag",null,[[["u32",15]],["u32",15]]],[5,"vec_packed_enum_size","","Size of serialized data with length prefix and tag",null,[[["u32",15]],["u32",15]]],[5,"tag_size","","Compute tag size. Size of tag does not depend on wire …",null,[[["u32",15]],["u32",15]]],[5,"value_size","","Integer value size when encoded as specified wire type.",null,[[["u32",15],["wiretype",4],["protobufvarint",8]],["u32",15]]],[5,"value_varint_zigzag_size_no_tag","","Integer value size when encoded as specified wire type.",null,[[["protobufvarintzigzag",8]],["u32",15]]],[5,"value_varint_zigzag_size","","Length of value when encoding with zigzag encoding with …",null,[[["u32",15],["protobufvarintzigzag",8]],["u32",15]]],[5,"enum_size","","Size of encoded enum field value.",null,[[["u32",15],["protobufenum",8]],["u32",15]]],[5,"bytes_size","","Size of encoded bytes field.",null,[[["u32",15]],["u32",15]]],[5,"string_size","","Size of encoded string field.",null,[[["u32",15],["str",15]],["u32",15]]],[5,"unknown_fields_size","","Size of encoded unknown fields size.",null,[[["unknownfields",3]],["u32",15]]],[5,"read_repeated_int32_into","","Read repeated <code>int32</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_int64_into","","Read repeated <code>int64</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_uint32_into","","Read repeated <code>uint32</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_uint64_into","","Read repeated <code>uint64</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_sint32_into","","Read repeated <code>sint32</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_sint64_into","","Read repeated <code>sint64</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_fixed32_into","","Read repeated <code>fixed32</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_fixed64_into","","Read repeated <code>fixed64</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_sfixed32_into","","Read repeated <code>sfixed32</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_sfixed64_into","","Read repeated <code>sfixed64</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_double_into","","Read repeated <code>double</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_float_into","","Read repeated <code>float</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_bool_into","","Read repeated <code>bool</code> field into given vec.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_enum_into","","Read repeated <code>enum</code> field into given vec. This function is …",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_enum_with_unknown_fields_into","","Read repeated <code>enum</code> field into given vec, and when value …",null,[[["codedinputstream",3],["u32",15],["vec",3],["unknownfields",3],["wiretype",4]],["protobufresult",6]]],[5,"read_proto3_enum_with_unknown_fields_into","","Read repeated <code>enum</code> field into given vec, and when value …",null,[[["codedinputstream",3],["u32",15],["unknownfields",3],["wiretype",4]],["protobufresult",6]]],[5,"read_proto2_enum_with_unknown_fields_into","","Read repeated <code>enum</code> field into given vec, and when value …",null,[[["codedinputstream",3],["wiretype",4],["u32",15],["unknownfields",3],["option",4]],["protobufresult",6]]],[5,"read_repeated_string_into","","Read repeated <code>string</code> field into given vec.",null,[[["codedinputstream",3],["repeatedfield",3],["wiretype",4]],["protobufresult",6]]],[5,"read_singular_string_into","","Read singular <code>string</code> field.",null,[[["codedinputstream",3],["singularfield",3],["wiretype",4]],["protobufresult",6]]],[5,"read_singular_proto3_string_into","","Read singular <code>string</code> field for proto3.",null,[[["codedinputstream",3],["string",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_bytes_into","","Read repeated <code>bytes</code> field into given vec.",null,[[["codedinputstream",3],["repeatedfield",3],["wiretype",4]],["protobufresult",6]]],[5,"read_singular_bytes_into","","Read singular <code>bytes</code> field.",null,[[["codedinputstream",3],["singularfield",3],["wiretype",4]],["protobufresult",6]]],[5,"read_singular_proto3_bytes_into","","Read singular <code>bytes</code> field for proto3.",null,[[["codedinputstream",3],["vec",3],["wiretype",4]],["protobufresult",6]]],[5,"read_repeated_message_into","","Read repeated <code>message</code> field.",null,[[["codedinputstream",3],["repeatedfield",3],["wiretype",4]],["protobufresult",6]]],[5,"read_singular_message_into","","Read singular <code>message</code> field.",null,[[["codedinputstream",3],["singularptrfield",3],["wiretype",4]],["protobufresult",6]]],[5,"read_unknown_or_skip_group","","Handle unknown field in generated code. Either store a …",null,[[["u32",15],["codedinputstream",3],["unknownfields",3],["wiretype",4]],["protobufresult",6]]],[5,"unexpected_wire_type","","Create an error for unexpected wire type.",null,[[["wiretype",4]],["protobuferror",4]]],[5,"compute_map_size","","Compute serialized size of <code>map</code> field and cache nested …",null,[[["u32",15],["hashmap",3]],["u32",15]]],[5,"write_map_with_cached_sizes","","Write map, message sizes must be already known.",null,[[["u32",15],["codedoutputstream",3],["hashmap",3]],["protobufresult",6]]],[5,"read_map_into","","Read <code>map</code> field.",null,[[["codedinputstream",3],["hashmap",3],["wiretype",4]],["protobufresult",6]]],[0,"text_format","protobuf","Protobuf \\\"text format\\\" implementation.",null,null],[5,"print_to","protobuf::text_format","Text-format",null,[[["message",8],["string",3]]]],[5,"print_to_string","","Text-format",null,[[["message",8]],["string",3]]],[5,"fmt","","Text-format to <code>fmt::Formatter</code>.",null,[[["formatter",3],["message",8]],["result",6]]],[0,"types","protobuf","Implementations of <code>ProtobufType</code> for all types.",null,null],[8,"ProtobufType","protobuf::types","Protobuf elementary type as generic trait",null,null],[16,"Value","","Rust type of value",51,null],[10,"wire_type","","Wire type when writing to stream",51,[[],["wiretype",4]]],[10,"read","","Read value from <code>CodedInputStream</code>",51,[[["codedinputstream",3]],["protobufresult",6]]],[10,"compute_size","","Compute wire size",51,[[],["u32",15]]],[10,"get_from_unknown","","Get value from <code>UnknownValues</code>",51,[[["unknownvalues",3]],["option",4]]],[11,"compute_size_with_length_delimiter","","Compute size adding length prefix if wire type is length …",51,[[],["u32",15]]],[11,"get_cached_size","","Get previously computed size",51,[[],["u32",15]]],[11,"get_cached_size_with_length_delimiter","","Get previously cached size with length prefix",51,[[],["u32",15]]],[10,"write_with_cached_size","","Write a value with previously cached size",51,[[["u32",15],["codedoutputstream",3]],["protobufresult",6]]],[3,"ProtobufTypeFloat","","<code>float</code>",null,null],[3,"ProtobufTypeDouble","","<code>double</code>",null,null],[3,"ProtobufTypeInt32","","<code>uint32</code>",null,null],[3,"ProtobufTypeInt64","","<code>int64</code>",null,null],[3,"ProtobufTypeUint32","","<code>uint32</code>",null,null],[3,"ProtobufTypeUint64","","<code>uint64</code>",null,null],[3,"ProtobufTypeSint32","","<code>sint32</code>",null,null],[3,"ProtobufTypeSint64","","<code>sint64</code>",null,null],[3,"ProtobufTypeFixed32","","<code>fixed32</code>",null,null],[3,"ProtobufTypeFixed64","","<code>fixed64</code>",null,null],[3,"ProtobufTypeSfixed32","","<code>sfixed32</code>",null,null],[3,"ProtobufTypeSfixed64","","<code>sfixed64</code>",null,null],[3,"ProtobufTypeBool","","<code>bool</code>",null,null],[3,"ProtobufTypeString","","<code>string</code>",null,null],[3,"ProtobufTypeBytes","","<code>bytes</code>",null,null],[3,"ProtobufTypeChars","","Something which should be deleted",null,null],[3,"ProtobufTypeEnum","","<code>enum</code>",null,null],[3,"ProtobufTypeMessage","","<code>message</code>",null,null],[0,"well_known_types","protobuf","Generated code for \\\"well known types\\\"",null,null],[3,"Any","protobuf::well_known_types","",null,null],[12,"type_url","","",52,null],[12,"value","","",52,null],[12,"unknown_fields","","",52,null],[12,"cached_size","","",52,null],[3,"Api","","",null,null],[12,"name","","",53,null],[12,"methods","","",53,null],[12,"options","","",53,null],[12,"version","","",53,null],[12,"source_context","","",53,null],[12,"mixins","","",53,null],[12,"syntax","","",53,null],[12,"unknown_fields","","",53,null],[12,"cached_size","","",53,null],[3,"Method","","",null,null],[12,"name","","",54,null],[12,"request_type_url","","",54,null],[12,"request_streaming","","",54,null],[12,"response_type_url","","",54,null],[12,"response_streaming","","",54,null],[12,"options","","",54,null],[12,"syntax","","",54,null],[12,"unknown_fields","","",54,null],[12,"cached_size","","",54,null],[3,"Mixin","","",null,null],[12,"name","","",55,null],[12,"root","","",55,null],[12,"unknown_fields","","",55,null],[12,"cached_size","","",55,null],[3,"Duration","","",null,null],[12,"seconds","","",56,null],[12,"nanos","","",56,null],[12,"unknown_fields","","",56,null],[12,"cached_size","","",56,null],[3,"Empty","","",null,null],[12,"unknown_fields","","",57,null],[12,"cached_size","","",57,null],[3,"FieldMask","","",null,null],[12,"paths","","",58,null],[12,"unknown_fields","","",58,null],[12,"cached_size","","",58,null],[3,"SourceContext","","",null,null],[12,"file_name","","",59,null],[12,"unknown_fields","","",59,null],[12,"cached_size","","",59,null],[3,"Struct","","",null,null],[12,"fields","","",60,null],[12,"unknown_fields","","",60,null],[12,"cached_size","","",60,null],[3,"Value","","",null,null],[12,"kind","","",61,null],[12,"unknown_fields","","",61,null],[12,"cached_size","","",61,null],[4,"Value_oneof_kind","","",null,null],[13,"null_value","","",62,null],[13,"number_value","","",62,null],[13,"string_value","","",62,null],[13,"bool_value","","",62,null],[13,"struct_value","","",62,null],[13,"list_value","","",62,null],[3,"ListValue","","",null,null],[12,"values","","",63,null],[12,"unknown_fields","","",63,null],[12,"cached_size","","",63,null],[4,"NullValue","","",null,null],[13,"NULL_VALUE","","",64,null],[3,"Timestamp","","",null,null],[12,"seconds","","",65,null],[12,"nanos","","",65,null],[12,"unknown_fields","","",65,null],[12,"cached_size","","",65,null],[3,"Type","","",null,null],[12,"name","","",66,null],[12,"fields","","",66,null],[12,"oneofs","","",66,null],[12,"options","","",66,null],[12,"source_context","","",66,null],[12,"syntax","","",66,null],[12,"unknown_fields","","",66,null],[12,"cached_size","","",66,null],[3,"Field","","",null,null],[12,"kind","","",67,null],[12,"cardinality","","",67,null],[12,"number","","",67,null],[12,"name","","",67,null],[12,"type_url","","",67,null],[12,"oneof_index","","",67,null],[12,"packed","","",67,null],[12,"options","","",67,null],[12,"json_name","","",67,null],[12,"default_value","","",67,null],[12,"unknown_fields","","",67,null],[12,"cached_size","","",67,null],[4,"Field_Kind","","",null,null],[13,"TYPE_UNKNOWN","","",68,null],[13,"TYPE_DOUBLE","","",68,null],[13,"TYPE_FLOAT","","",68,null],[13,"TYPE_INT64","","",68,null],[13,"TYPE_UINT64","","",68,null],[13,"TYPE_INT32","","",68,null],[13,"TYPE_FIXED64","","",68,null],[13,"TYPE_FIXED32","","",68,null],[13,"TYPE_BOOL","","",68,null],[13,"TYPE_STRING","","",68,null],[13,"TYPE_GROUP","","",68,null],[13,"TYPE_MESSAGE","","",68,null],[13,"TYPE_BYTES","","",68,null],[13,"TYPE_UINT32","","",68,null],[13,"TYPE_ENUM","","",68,null],[13,"TYPE_SFIXED32","","",68,null],[13,"TYPE_SFIXED64","","",68,null],[13,"TYPE_SINT32","","",68,null],[13,"TYPE_SINT64","","",68,null],[4,"Field_Cardinality","","",null,null],[13,"CARDINALITY_UNKNOWN","","",69,null],[13,"CARDINALITY_OPTIONAL","","",69,null],[13,"CARDINALITY_REQUIRED","","",69,null],[13,"CARDINALITY_REPEATED","","",69,null],[3,"Enum","","",null,null],[12,"name","","",70,null],[12,"enumvalue","","",70,null],[12,"options","","",70,null],[12,"source_context","","",70,null],[12,"syntax","","",70,null],[12,"unknown_fields","","",70,null],[12,"cached_size","","",70,null],[3,"EnumValue","","",null,null],[12,"name","","",71,null],[12,"number","","",71,null],[12,"options","","",71,null],[12,"unknown_fields","","",71,null],[12,"cached_size","","",71,null],[3,"Option","","",null,null],[12,"name","","",72,null],[12,"value","","",72,null],[12,"unknown_fields","","",72,null],[12,"cached_size","","",72,null],[4,"Syntax","","",null,null],[13,"SYNTAX_PROTO2","","",73,null],[13,"SYNTAX_PROTO3","","",73,null],[3,"DoubleValue","","",null,null],[12,"value","","",74,null],[12,"unknown_fields","","",74,null],[12,"cached_size","","",74,null],[3,"FloatValue","","",null,null],[12,"value","","",75,null],[12,"unknown_fields","","",75,null],[12,"cached_size","","",75,null],[3,"Int64Value","","",null,null],[12,"value","","",76,null],[12,"unknown_fields","","",76,null],[12,"cached_size","","",76,null],[3,"UInt64Value","","",null,null],[12,"value","","",77,null],[12,"unknown_fields","","",77,null],[12,"cached_size","","",77,null],[3,"Int32Value","","",null,null],[12,"value","","",78,null],[12,"unknown_fields","","",78,null],[12,"cached_size","","",78,null],[3,"UInt32Value","","",null,null],[12,"value","","",79,null],[12,"unknown_fields","","",79,null],[12,"cached_size","","",79,null],[3,"BoolValue","","",null,null],[12,"value","","",80,null],[12,"unknown_fields","","",80,null],[12,"cached_size","","",80,null],[3,"StringValue","","",null,null],[12,"value","","",81,null],[12,"unknown_fields","","",81,null],[12,"cached_size","","",81,null],[3,"BytesValue","","",null,null],[12,"value","","",82,null],[12,"unknown_fields","","",82,null],[12,"cached_size","","",82,null],[11,"pack","","Pack any message into <code>well_known_types::Any</code> value.",52,[[],[["any",3],["protobufresult",6]]]],[11,"pack_dyn","","Pack any message into <code>well_known_types::Any</code> value.",52,[[["message",8]],[["any",3],["protobufresult",6]]]],[11,"is","","Check if <code>Any</code> contains a message of given type.",52,[[],["bool",15]]],[11,"is_dyn","","Check if <code>Any</code> contains a message of given type.",52,[[["messagedescriptor",3]],["bool",15]]],[11,"unpack","","Extract a message from this <code>Any</code>.",52,[[],[["option",4],["protobufresult",6]]]],[11,"unpack_dyn","","Extract a message from this <code>Any</code>.",52,[[["messagedescriptor",3]],[["protobufresult",6],["option",4]]]],[3,"CachedSize","protobuf","Cached size field used in generated code. It is always …",null,null],[8,"Clear","","anything that can be cleared",null,null],[10,"clear","","Clear this make, make it equivalent to newly created …",83,[[]]],[3,"CodedInputStream","","Buffered read with handy utilities.",null,null],[3,"CodedOutputStream","","Buffered write with handy utilities",null,null],[8,"ProtobufEnum","","Trait implemented by all protobuf enum types.",null,null],[10,"value","","Get enum <code>i32</code> value.",84,[[],["i32",15]]],[10,"from_i32","","Try to create an enum from <code>i32</code> value. Return <code>None</code> if …",84,[[["i32",15]],["option",4]]],[11,"values","","Get all enum values for enum type.",84,[[]]],[11,"descriptor","","Get enum value descriptor.",84,[[],["enumvaluedescriptor",3]]],[11,"enum_descriptor","","Get enum descriptor.",84,[[],["enumdescriptor",3]]],[11,"enum_descriptor_static","","Get enum descriptor by type.",84,[[],["enumdescriptor",3]]],[5,"parse_from_bytes","","Parse message from byte array.",null,[[],[["protobufresult",6],["message",8]]]],[5,"parse_from_reader","","Parse message from reader. Parse stops on EOF or when …",null,[[["read",8]],[["protobufresult",6],["message",8]]]],[5,"parse_length_delimited_from","","Parse length-delimited message from stream.",null,[[["codedinputstream",3]],[["protobufresult",6],["message",8]]]],[5,"parse_length_delimited_from_bytes","","Parse length-delimited message from bytes.",null,[[],[["protobufresult",6],["message",8]]]],[5,"parse_length_delimited_from_reader","","Parse length-delimited message from <code>Read</code>.",null,[[["read",8]],[["protobufresult",6],["message",8]]]],[8,"Message","","Trait implemented for all generated structs for protobuf …",null,null],[10,"descriptor","","Message descriptor for this message, used for reflection.",85,[[],["messagedescriptor",3]]],[10,"is_initialized","","True iff all required fields are initialized. Always …",85,[[],["bool",15]]],[10,"merge_from","","Update this message object with fields read from given …",85,[[["codedinputstream",3]],["protobufresult",6]]],[11,"parse_from","","Parse message from stream.",85,[[["codedinputstream",3]],["protobufresult",6]]],[10,"write_to_with_cached_sizes","","Write message to the stream.",85,[[["codedoutputstream",3]],["protobufresult",6]]],[10,"compute_size","","Compute and cache size of this message and all nested …",85,[[],["u32",15]]],[10,"get_cached_size","","Get size previously computed by <code>compute_size</code>.",85,[[],["u32",15]]],[11,"write_to","","Write the message to the stream.",85,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"write_length_delimited_to","","Write the message to the stream prepending the message …",85,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"write_length_delimited_to_vec","","Write the message to the vec, prepend the message with …",85,[[["vec",3]],["protobufresult",6]]],[11,"merge_from_bytes","","Update this message object with fields read from given …",85,[[],["protobufresult",6]]],[11,"parse_from_reader","","Parse message from reader. Parse stops on EOF or when …",85,[[["read",8]],["protobufresult",6]]],[11,"parse_from_bytes","","Parse message from byte array.",85,[[],["protobufresult",6]]],[11,"check_initialized","","Check if all required fields of this object are …",85,[[],["protobufresult",6]]],[11,"write_to_writer","","Write the message to the writer.",85,[[["write",8]],["protobufresult",6]]],[11,"write_to_vec","","Write the message to bytes vec.",85,[[["vec",3]],["protobufresult",6]]],[11,"write_to_bytes","","Write the message to bytes vec.",85,[[],[["protobufresult",6],["vec",3]]]],[11,"write_length_delimited_to_writer","","Write the message to the writer, prepend the message with …",85,[[["write",8]],["protobufresult",6]]],[11,"write_length_delimited_to_bytes","","Write the message to the bytes vec, prepend the message …",85,[[],[["protobufresult",6],["vec",3]]]],[10,"get_unknown_fields","","Get a reference to unknown fields.",85,[[],["unknownfields",3]]],[10,"mut_unknown_fields","","Get a mutable reference to unknown fields.",85,[[],["unknownfields",3]]],[11,"type_id","","Get type id for downcasting.",85,[[],["typeid",3]]],[10,"as_any","","View self as <code>Any</code>.",85,[[],["any",8]]],[11,"as_any_mut","","View self as mutable <code>Any</code>.",85,[[],["any",8]]],[11,"into_any","","Convert boxed self to boxed <code>Any</code>.",85,[[["box",3]],[["any",8],["box",3]]]],[10,"new","","Create an empty message object.",85,[[]]],[11,"descriptor_static","","Get message descriptor for message type.",85,[[],["messagedescriptor",3]]],[10,"default_instance","","Return a pointer to default immutable message with static …",85,[[]]],[3,"RepeatedField","","Wrapper around vector to avoid deallocations on clear.",null,null],[3,"SingularField","","Like <code>Option<T></code>, but keeps the actual element on <code>clear</code>.",null,null],[3,"SingularPtrField","","Like <code>Option<Box<T>></code>, but keeps the actual element on <code>clear</code>…",null,null],[3,"UnknownFields","","Hold \\\"unknown\\\" fields in parsed message.",null,null],[12,"fields","","The map.",86,null],[3,"UnknownFieldsIter","","Iterator over <code>UnknownFields</code>",null,null],[4,"UnknownValue","","Unknown value.",null,null],[13,"Fixed32","","32-bit unknown (e. g. <code>fixed32</code> or <code>float</code>)",87,null],[13,"Fixed64","","64-bit unknown (e. g. <code>fixed64</code> or <code>double</code>)",87,null],[13,"Varint","","Varint unknown (e. g. <code>int32</code> or <code>bool</code>)",87,null],[13,"LengthDelimited","","Length-delimited unknown (e. g. <code>message</code> or <code>string</code>)",87,null],[4,"UnknownValueRef","","Reference to unknown value.",null,null],[13,"Fixed32","","32-bit unknown",88,null],[13,"Fixed64","","64-bit unknown",88,null],[13,"Varint","","Varint unknown",88,null],[13,"LengthDelimited","","Length-delimited unknown",88,null],[3,"UnknownValues","","Field unknown values.",null,null],[12,"fixed32","","32-bit unknowns",89,null],[12,"fixed64","","64-bit unknowns",89,null],[12,"varint","","Varint unknowns",89,null],[12,"length_delimited","","Length-delimited unknowns",89,null],[3,"UnknownValuesIter","","Iterator over unknown values",null,null],[17,"VERSION","","protobuf crate version",null,null],[17,"VERSION_2_25_1","","This symbol can be referenced to assert that proper …",null,null],[11,"from","protobuf::descriptor","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","protobuf::plugin","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","protobuf::wire_format","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","protobuf","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","protobuf::error","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","protobuf::ext","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","protobuf::lazy","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","protobuf::rt","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","protobuf::reflect","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","protobuf","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","protobuf::types","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","protobuf::well_known_types","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","protobuf","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"into_iter","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"into_iter","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"clear","protobuf::descriptor","",0,[[]]],[11,"clear","","",1,[[]]],[11,"clear","","",2,[[]]],[11,"clear","","",3,[[]]],[11,"clear","","",4,[[]]],[11,"clear","","",5,[[]]],[11,"clear","","",6,[[]]],[11,"clear","","",9,[[]]],[11,"clear","","",10,[[]]],[11,"clear","","",11,[[]]],[11,"clear","","",12,[[]]],[11,"clear","","",13,[[]]],[11,"clear","","",14,[[]]],[11,"clear","","",15,[[]]],[11,"clear","","",17,[[]]],[11,"clear","","",18,[[]]],[11,"clear","","",21,[[]]],[11,"clear","","",22,[[]]],[11,"clear","","",23,[[]]],[11,"clear","","",24,[[]]],[11,"clear","","",25,[[]]],[11,"clear","","",27,[[]]],[11,"clear","","",28,[[]]],[11,"clear","","",29,[[]]],[11,"clear","","",30,[[]]],[11,"clear","","",31,[[]]],[11,"clear","","",32,[[]]],[11,"clear","protobuf::plugin","",33,[[]]],[11,"clear","","",34,[[]]],[11,"clear","","",35,[[]]],[11,"clear","","",36,[[]]],[11,"clear","protobuf","",97,[[]]],[11,"clear","protobuf::well_known_types","",52,[[]]],[11,"clear","","",53,[[]]],[11,"clear","","",54,[[]]],[11,"clear","","",55,[[]]],[11,"clear","","",56,[[]]],[11,"clear","","",57,[[]]],[11,"clear","","",58,[[]]],[11,"clear","","",59,[[]]],[11,"clear","","",60,[[]]],[11,"clear","","",61,[[]]],[11,"clear","","",63,[[]]],[11,"clear","","",65,[[]]],[11,"clear","","",66,[[]]],[11,"clear","","",67,[[]]],[11,"clear","","",70,[[]]],[11,"clear","","",71,[[]]],[11,"clear","","",72,[[]]],[11,"clear","","",74,[[]]],[11,"clear","","",75,[[]]],[11,"clear","","",76,[[]]],[11,"clear","","",77,[[]]],[11,"clear","","",78,[[]]],[11,"clear","","",79,[[]]],[11,"clear","","",80,[[]]],[11,"clear","","",81,[[]]],[11,"clear","","",82,[[]]],[11,"clear","protobuf","",86,[[]]],[11,"value","protobuf::descriptor","",7,[[],["i32",15]]],[11,"from_i32","","",7,[[["i32",15]],[["option",4],["fielddescriptorproto_type",4]]]],[11,"values","","",7,[[]]],[11,"enum_descriptor_static","","",7,[[],["enumdescriptor",3]]],[11,"value","","",8,[[],["i32",15]]],[11,"from_i32","","",8,[[["i32",15]],[["option",4],["fielddescriptorproto_label",4]]]],[11,"values","","",8,[[]]],[11,"enum_descriptor_static","","",8,[[],["enumdescriptor",3]]],[11,"value","","",16,[[],["i32",15]]],[11,"from_i32","","",16,[[["i32",15]],[["option",4],["fileoptions_optimizemode",4]]]],[11,"values","","",16,[[]]],[11,"enum_descriptor_static","","",16,[[],["enumdescriptor",3]]],[11,"value","","",19,[[],["i32",15]]],[11,"from_i32","","",19,[[["i32",15]],[["option",4],["fieldoptions_ctype",4]]]],[11,"values","","",19,[[]]],[11,"enum_descriptor_static","","",19,[[],["enumdescriptor",3]]],[11,"value","","",20,[[],["i32",15]]],[11,"from_i32","","",20,[[["i32",15]],[["fieldoptions_jstype",4],["option",4]]]],[11,"values","","",20,[[]]],[11,"enum_descriptor_static","","",20,[[],["enumdescriptor",3]]],[11,"value","","",26,[[],["i32",15]]],[11,"from_i32","","",26,[[["i32",15]],[["methodoptions_idempotencylevel",4],["option",4]]]],[11,"values","","",26,[[]]],[11,"enum_descriptor_static","","",26,[[],["enumdescriptor",3]]],[11,"value","protobuf::plugin","",37,[[],["i32",15]]],[11,"from_i32","","",37,[[["i32",15]],[["option",4],["codegeneratorresponse_feature",4]]]],[11,"values","","",37,[[]]],[11,"enum_descriptor_static","","",37,[[],["enumdescriptor",3]]],[11,"value","protobuf::well_known_types","",64,[[],["i32",15]]],[11,"from_i32","","",64,[[["i32",15]],[["option",4],["nullvalue",4]]]],[11,"values","","",64,[[]]],[11,"enum_descriptor_static","","",64,[[],["enumdescriptor",3]]],[11,"value","","",68,[[],["i32",15]]],[11,"from_i32","","",68,[[["i32",15]],[["field_kind",4],["option",4]]]],[11,"values","","",68,[[]]],[11,"enum_descriptor_static","","",68,[[],["enumdescriptor",3]]],[11,"value","","",69,[[],["i32",15]]],[11,"from_i32","","",69,[[["i32",15]],[["option",4],["field_cardinality",4]]]],[11,"values","","",69,[[]]],[11,"enum_descriptor_static","","",69,[[],["enumdescriptor",3]]],[11,"value","","",73,[[],["i32",15]]],[11,"from_i32","","",73,[[["i32",15]],[["syntax",4],["option",4]]]],[11,"values","","",73,[[]]],[11,"enum_descriptor_static","","",73,[[],["enumdescriptor",3]]],[11,"is_initialized","protobuf::descriptor","",0,[[],["bool",15]]],[11,"merge_from","","",0,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",0,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",0,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",0,[[],["u32",15]]],[11,"get_unknown_fields","","",0,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",0,[[],["unknownfields",3]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any","","",0,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",0,[[],["messagedescriptor",3]]],[11,"new","","",0,[[],["filedescriptorset",3]]],[11,"descriptor_static","","",0,[[],["messagedescriptor",3]]],[11,"default_instance","","",0,[[],["filedescriptorset",3]]],[11,"is_initialized","","",1,[[],["bool",15]]],[11,"merge_from","","",1,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",1,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",1,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",1,[[],["u32",15]]],[11,"get_unknown_fields","","",1,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",1,[[],["unknownfields",3]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any","","",1,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",1,[[],["messagedescriptor",3]]],[11,"new","","",1,[[],["filedescriptorproto",3]]],[11,"descriptor_static","","",1,[[],["messagedescriptor",3]]],[11,"default_instance","","",1,[[],["filedescriptorproto",3]]],[11,"is_initialized","","",2,[[],["bool",15]]],[11,"merge_from","","",2,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",2,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",2,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",2,[[],["u32",15]]],[11,"get_unknown_fields","","",2,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",2,[[],["unknownfields",3]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any","","",2,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",2,[[],["messagedescriptor",3]]],[11,"new","","",2,[[],["descriptorproto",3]]],[11,"descriptor_static","","",2,[[],["messagedescriptor",3]]],[11,"default_instance","","",2,[[],["descriptorproto",3]]],[11,"is_initialized","","",3,[[],["bool",15]]],[11,"merge_from","","",3,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",3,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",3,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",3,[[],["u32",15]]],[11,"get_unknown_fields","","",3,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",3,[[],["unknownfields",3]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any","","",3,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",3,[[],["messagedescriptor",3]]],[11,"new","","",3,[[],["descriptorproto_extensionrange",3]]],[11,"descriptor_static","","",3,[[],["messagedescriptor",3]]],[11,"default_instance","","",3,[[],["descriptorproto_extensionrange",3]]],[11,"is_initialized","","",4,[[],["bool",15]]],[11,"merge_from","","",4,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",4,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",4,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",4,[[],["u32",15]]],[11,"get_unknown_fields","","",4,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",4,[[],["unknownfields",3]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any","","",4,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",4,[[],["messagedescriptor",3]]],[11,"new","","",4,[[],["descriptorproto_reservedrange",3]]],[11,"descriptor_static","","",4,[[],["messagedescriptor",3]]],[11,"default_instance","","",4,[[],["descriptorproto_reservedrange",3]]],[11,"is_initialized","","",5,[[],["bool",15]]],[11,"merge_from","","",5,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",5,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",5,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",5,[[],["u32",15]]],[11,"get_unknown_fields","","",5,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",5,[[],["unknownfields",3]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any","","",5,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",5,[[],["messagedescriptor",3]]],[11,"new","","",5,[[],["extensionrangeoptions",3]]],[11,"descriptor_static","","",5,[[],["messagedescriptor",3]]],[11,"default_instance","","",5,[[],["extensionrangeoptions",3]]],[11,"is_initialized","","",6,[[],["bool",15]]],[11,"merge_from","","",6,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",6,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",6,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",6,[[],["u32",15]]],[11,"get_unknown_fields","","",6,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",6,[[],["unknownfields",3]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any","","",6,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",6,[[],["messagedescriptor",3]]],[11,"new","","",6,[[],["fielddescriptorproto",3]]],[11,"descriptor_static","","",6,[[],["messagedescriptor",3]]],[11,"default_instance","","",6,[[],["fielddescriptorproto",3]]],[11,"is_initialized","","",9,[[],["bool",15]]],[11,"merge_from","","",9,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",9,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",9,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",9,[[],["u32",15]]],[11,"get_unknown_fields","","",9,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",9,[[],["unknownfields",3]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any","","",9,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",9,[[],["messagedescriptor",3]]],[11,"new","","",9,[[],["oneofdescriptorproto",3]]],[11,"descriptor_static","","",9,[[],["messagedescriptor",3]]],[11,"default_instance","","",9,[[],["oneofdescriptorproto",3]]],[11,"is_initialized","","",10,[[],["bool",15]]],[11,"merge_from","","",10,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",10,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",10,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",10,[[],["u32",15]]],[11,"get_unknown_fields","","",10,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",10,[[],["unknownfields",3]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any","","",10,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",10,[[],["messagedescriptor",3]]],[11,"new","","",10,[[],["enumdescriptorproto",3]]],[11,"descriptor_static","","",10,[[],["messagedescriptor",3]]],[11,"default_instance","","",10,[[],["enumdescriptorproto",3]]],[11,"is_initialized","","",11,[[],["bool",15]]],[11,"merge_from","","",11,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",11,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",11,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",11,[[],["u32",15]]],[11,"get_unknown_fields","","",11,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",11,[[],["unknownfields",3]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any","","",11,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",11,[[],["messagedescriptor",3]]],[11,"new","","",11,[[],["enumdescriptorproto_enumreservedrange",3]]],[11,"descriptor_static","","",11,[[],["messagedescriptor",3]]],[11,"default_instance","","",11,[[],["enumdescriptorproto_enumreservedrange",3]]],[11,"is_initialized","","",12,[[],["bool",15]]],[11,"merge_from","","",12,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",12,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",12,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",12,[[],["u32",15]]],[11,"get_unknown_fields","","",12,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",12,[[],["unknownfields",3]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any","","",12,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",12,[[],["messagedescriptor",3]]],[11,"new","","",12,[[],["enumvaluedescriptorproto",3]]],[11,"descriptor_static","","",12,[[],["messagedescriptor",3]]],[11,"default_instance","","",12,[[],["enumvaluedescriptorproto",3]]],[11,"is_initialized","","",13,[[],["bool",15]]],[11,"merge_from","","",13,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",13,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",13,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",13,[[],["u32",15]]],[11,"get_unknown_fields","","",13,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",13,[[],["unknownfields",3]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any","","",13,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",13,[[],["messagedescriptor",3]]],[11,"new","","",13,[[],["servicedescriptorproto",3]]],[11,"descriptor_static","","",13,[[],["messagedescriptor",3]]],[11,"default_instance","","",13,[[],["servicedescriptorproto",3]]],[11,"is_initialized","","",14,[[],["bool",15]]],[11,"merge_from","","",14,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",14,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",14,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",14,[[],["u32",15]]],[11,"get_unknown_fields","","",14,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",14,[[],["unknownfields",3]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any","","",14,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",14,[[],["messagedescriptor",3]]],[11,"new","","",14,[[],["methoddescriptorproto",3]]],[11,"descriptor_static","","",14,[[],["messagedescriptor",3]]],[11,"default_instance","","",14,[[],["methoddescriptorproto",3]]],[11,"is_initialized","","",15,[[],["bool",15]]],[11,"merge_from","","",15,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",15,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",15,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",15,[[],["u32",15]]],[11,"get_unknown_fields","","",15,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",15,[[],["unknownfields",3]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any","","",15,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",15,[[],["messagedescriptor",3]]],[11,"new","","",15,[[],["fileoptions",3]]],[11,"descriptor_static","","",15,[[],["messagedescriptor",3]]],[11,"default_instance","","",15,[[],["fileoptions",3]]],[11,"is_initialized","","",17,[[],["bool",15]]],[11,"merge_from","","",17,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",17,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",17,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",17,[[],["u32",15]]],[11,"get_unknown_fields","","",17,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",17,[[],["unknownfields",3]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any","","",17,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",17,[[],["messagedescriptor",3]]],[11,"new","","",17,[[],["messageoptions",3]]],[11,"descriptor_static","","",17,[[],["messagedescriptor",3]]],[11,"default_instance","","",17,[[],["messageoptions",3]]],[11,"is_initialized","","",18,[[],["bool",15]]],[11,"merge_from","","",18,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",18,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",18,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",18,[[],["u32",15]]],[11,"get_unknown_fields","","",18,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",18,[[],["unknownfields",3]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any","","",18,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",18,[[],["messagedescriptor",3]]],[11,"new","","",18,[[],["fieldoptions",3]]],[11,"descriptor_static","","",18,[[],["messagedescriptor",3]]],[11,"default_instance","","",18,[[],["fieldoptions",3]]],[11,"is_initialized","","",21,[[],["bool",15]]],[11,"merge_from","","",21,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",21,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",21,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",21,[[],["u32",15]]],[11,"get_unknown_fields","","",21,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",21,[[],["unknownfields",3]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any","","",21,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",21,[[],["messagedescriptor",3]]],[11,"new","","",21,[[],["oneofoptions",3]]],[11,"descriptor_static","","",21,[[],["messagedescriptor",3]]],[11,"default_instance","","",21,[[],["oneofoptions",3]]],[11,"is_initialized","","",22,[[],["bool",15]]],[11,"merge_from","","",22,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",22,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",22,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",22,[[],["u32",15]]],[11,"get_unknown_fields","","",22,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",22,[[],["unknownfields",3]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any","","",22,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",22,[[],["messagedescriptor",3]]],[11,"new","","",22,[[],["enumoptions",3]]],[11,"descriptor_static","","",22,[[],["messagedescriptor",3]]],[11,"default_instance","","",22,[[],["enumoptions",3]]],[11,"is_initialized","","",23,[[],["bool",15]]],[11,"merge_from","","",23,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",23,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",23,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",23,[[],["u32",15]]],[11,"get_unknown_fields","","",23,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",23,[[],["unknownfields",3]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any","","",23,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",23,[[],["messagedescriptor",3]]],[11,"new","","",23,[[],["enumvalueoptions",3]]],[11,"descriptor_static","","",23,[[],["messagedescriptor",3]]],[11,"default_instance","","",23,[[],["enumvalueoptions",3]]],[11,"is_initialized","","",24,[[],["bool",15]]],[11,"merge_from","","",24,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",24,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",24,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",24,[[],["u32",15]]],[11,"get_unknown_fields","","",24,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",24,[[],["unknownfields",3]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any","","",24,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",24,[[],["messagedescriptor",3]]],[11,"new","","",24,[[],["serviceoptions",3]]],[11,"descriptor_static","","",24,[[],["messagedescriptor",3]]],[11,"default_instance","","",24,[[],["serviceoptions",3]]],[11,"is_initialized","","",25,[[],["bool",15]]],[11,"merge_from","","",25,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",25,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",25,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",25,[[],["u32",15]]],[11,"get_unknown_fields","","",25,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",25,[[],["unknownfields",3]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any","","",25,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",25,[[],["messagedescriptor",3]]],[11,"new","","",25,[[],["methodoptions",3]]],[11,"descriptor_static","","",25,[[],["messagedescriptor",3]]],[11,"default_instance","","",25,[[],["methodoptions",3]]],[11,"is_initialized","","",27,[[],["bool",15]]],[11,"merge_from","","",27,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",27,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",27,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",27,[[],["u32",15]]],[11,"get_unknown_fields","","",27,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",27,[[],["unknownfields",3]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any","","",27,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",27,[[],["messagedescriptor",3]]],[11,"new","","",27,[[],["uninterpretedoption",3]]],[11,"descriptor_static","","",27,[[],["messagedescriptor",3]]],[11,"default_instance","","",27,[[],["uninterpretedoption",3]]],[11,"is_initialized","","",28,[[],["bool",15]]],[11,"merge_from","","",28,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",28,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",28,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",28,[[],["u32",15]]],[11,"get_unknown_fields","","",28,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",28,[[],["unknownfields",3]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any","","",28,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",28,[[],["messagedescriptor",3]]],[11,"new","","",28,[[],["uninterpretedoption_namepart",3]]],[11,"descriptor_static","","",28,[[],["messagedescriptor",3]]],[11,"default_instance","","",28,[[],["uninterpretedoption_namepart",3]]],[11,"is_initialized","","",29,[[],["bool",15]]],[11,"merge_from","","",29,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",29,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",29,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",29,[[],["u32",15]]],[11,"get_unknown_fields","","",29,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",29,[[],["unknownfields",3]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any","","",29,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",29,[[],["messagedescriptor",3]]],[11,"new","","",29,[[],["sourcecodeinfo",3]]],[11,"descriptor_static","","",29,[[],["messagedescriptor",3]]],[11,"default_instance","","",29,[[],["sourcecodeinfo",3]]],[11,"is_initialized","","",30,[[],["bool",15]]],[11,"merge_from","","",30,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",30,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",30,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",30,[[],["u32",15]]],[11,"get_unknown_fields","","",30,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",30,[[],["unknownfields",3]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any","","",30,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",30,[[],["messagedescriptor",3]]],[11,"new","","",30,[[],["sourcecodeinfo_location",3]]],[11,"descriptor_static","","",30,[[],["messagedescriptor",3]]],[11,"default_instance","","",30,[[],["sourcecodeinfo_location",3]]],[11,"is_initialized","","",31,[[],["bool",15]]],[11,"merge_from","","",31,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",31,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",31,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",31,[[],["u32",15]]],[11,"get_unknown_fields","","",31,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",31,[[],["unknownfields",3]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any","","",31,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",31,[[],["messagedescriptor",3]]],[11,"new","","",31,[[],["generatedcodeinfo",3]]],[11,"descriptor_static","","",31,[[],["messagedescriptor",3]]],[11,"default_instance","","",31,[[],["generatedcodeinfo",3]]],[11,"is_initialized","","",32,[[],["bool",15]]],[11,"merge_from","","",32,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",32,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",32,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",32,[[],["u32",15]]],[11,"get_unknown_fields","","",32,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",32,[[],["unknownfields",3]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any","","",32,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",32,[[],["messagedescriptor",3]]],[11,"new","","",32,[[],["generatedcodeinfo_annotation",3]]],[11,"descriptor_static","","",32,[[],["messagedescriptor",3]]],[11,"default_instance","","",32,[[],["generatedcodeinfo_annotation",3]]],[11,"is_initialized","protobuf::plugin","",33,[[],["bool",15]]],[11,"merge_from","","",33,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",33,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",33,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",33,[[],["u32",15]]],[11,"get_unknown_fields","","",33,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",33,[[],["unknownfields",3]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any","","",33,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",33,[[],["messagedescriptor",3]]],[11,"new","","",33,[[],["version",3]]],[11,"descriptor_static","","",33,[[],["messagedescriptor",3]]],[11,"default_instance","","",33,[[],["version",3]]],[11,"is_initialized","","",34,[[],["bool",15]]],[11,"merge_from","","",34,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",34,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",34,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",34,[[],["u32",15]]],[11,"get_unknown_fields","","",34,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",34,[[],["unknownfields",3]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any","","",34,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",34,[[],["messagedescriptor",3]]],[11,"new","","",34,[[],["codegeneratorrequest",3]]],[11,"descriptor_static","","",34,[[],["messagedescriptor",3]]],[11,"default_instance","","",34,[[],["codegeneratorrequest",3]]],[11,"is_initialized","","",35,[[],["bool",15]]],[11,"merge_from","","",35,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",35,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",35,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",35,[[],["u32",15]]],[11,"get_unknown_fields","","",35,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",35,[[],["unknownfields",3]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any","","",35,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",35,[[],["messagedescriptor",3]]],[11,"new","","",35,[[],["codegeneratorresponse",3]]],[11,"descriptor_static","","",35,[[],["messagedescriptor",3]]],[11,"default_instance","","",35,[[],["codegeneratorresponse",3]]],[11,"is_initialized","","",36,[[],["bool",15]]],[11,"merge_from","","",36,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",36,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",36,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",36,[[],["u32",15]]],[11,"get_unknown_fields","","",36,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",36,[[],["unknownfields",3]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any","","",36,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",36,[[],["messagedescriptor",3]]],[11,"new","","",36,[[],["codegeneratorresponse_file",3]]],[11,"descriptor_static","","",36,[[],["messagedescriptor",3]]],[11,"default_instance","","",36,[[],["codegeneratorresponse_file",3]]],[11,"is_initialized","protobuf::well_known_types","",52,[[],["bool",15]]],[11,"merge_from","","",52,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",52,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",52,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",52,[[],["u32",15]]],[11,"get_unknown_fields","","",52,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",52,[[],["unknownfields",3]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any","","",52,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",52,[[],["messagedescriptor",3]]],[11,"new","","",52,[[],["any",3]]],[11,"descriptor_static","","",52,[[],["messagedescriptor",3]]],[11,"default_instance","","",52,[[],["any",3]]],[11,"is_initialized","","",53,[[],["bool",15]]],[11,"merge_from","","",53,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",53,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",53,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",53,[[],["u32",15]]],[11,"get_unknown_fields","","",53,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",53,[[],["unknownfields",3]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any","","",53,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",53,[[],["messagedescriptor",3]]],[11,"new","","",53,[[],["api",3]]],[11,"descriptor_static","","",53,[[],["messagedescriptor",3]]],[11,"default_instance","","",53,[[],["api",3]]],[11,"is_initialized","","",54,[[],["bool",15]]],[11,"merge_from","","",54,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",54,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",54,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",54,[[],["u32",15]]],[11,"get_unknown_fields","","",54,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",54,[[],["unknownfields",3]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any","","",54,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",54,[[],["messagedescriptor",3]]],[11,"new","","",54,[[],["method",3]]],[11,"descriptor_static","","",54,[[],["messagedescriptor",3]]],[11,"default_instance","","",54,[[],["method",3]]],[11,"is_initialized","","",55,[[],["bool",15]]],[11,"merge_from","","",55,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",55,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",55,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",55,[[],["u32",15]]],[11,"get_unknown_fields","","",55,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",55,[[],["unknownfields",3]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any","","",55,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",55,[[],["messagedescriptor",3]]],[11,"new","","",55,[[],["mixin",3]]],[11,"descriptor_static","","",55,[[],["messagedescriptor",3]]],[11,"default_instance","","",55,[[],["mixin",3]]],[11,"is_initialized","","",56,[[],["bool",15]]],[11,"merge_from","","",56,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",56,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",56,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",56,[[],["u32",15]]],[11,"get_unknown_fields","","",56,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",56,[[],["unknownfields",3]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any","","",56,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",56,[[],["messagedescriptor",3]]],[11,"new","","",56,[[],["duration",3]]],[11,"descriptor_static","","",56,[[],["messagedescriptor",3]]],[11,"default_instance","","",56,[[],["duration",3]]],[11,"is_initialized","","",57,[[],["bool",15]]],[11,"merge_from","","",57,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",57,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",57,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",57,[[],["u32",15]]],[11,"get_unknown_fields","","",57,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",57,[[],["unknownfields",3]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any","","",57,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",57,[[],["messagedescriptor",3]]],[11,"new","","",57,[[],["empty",3]]],[11,"descriptor_static","","",57,[[],["messagedescriptor",3]]],[11,"default_instance","","",57,[[],["empty",3]]],[11,"is_initialized","","",58,[[],["bool",15]]],[11,"merge_from","","",58,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",58,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",58,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",58,[[],["u32",15]]],[11,"get_unknown_fields","","",58,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",58,[[],["unknownfields",3]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any","","",58,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",58,[[],["messagedescriptor",3]]],[11,"new","","",58,[[],["fieldmask",3]]],[11,"descriptor_static","","",58,[[],["messagedescriptor",3]]],[11,"default_instance","","",58,[[],["fieldmask",3]]],[11,"is_initialized","","",59,[[],["bool",15]]],[11,"merge_from","","",59,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",59,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",59,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",59,[[],["u32",15]]],[11,"get_unknown_fields","","",59,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",59,[[],["unknownfields",3]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any","","",59,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",59,[[],["messagedescriptor",3]]],[11,"new","","",59,[[],["sourcecontext",3]]],[11,"descriptor_static","","",59,[[],["messagedescriptor",3]]],[11,"default_instance","","",59,[[],["sourcecontext",3]]],[11,"is_initialized","","",60,[[],["bool",15]]],[11,"merge_from","","",60,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",60,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",60,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",60,[[],["u32",15]]],[11,"get_unknown_fields","","",60,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",60,[[],["unknownfields",3]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any","","",60,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",60,[[],["messagedescriptor",3]]],[11,"new","","",60,[[],["struct",3]]],[11,"descriptor_static","","",60,[[],["messagedescriptor",3]]],[11,"default_instance","","",60,[[],["struct",3]]],[11,"is_initialized","","",61,[[],["bool",15]]],[11,"merge_from","","",61,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",61,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",61,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",61,[[],["u32",15]]],[11,"get_unknown_fields","","",61,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",61,[[],["unknownfields",3]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any","","",61,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",61,[[],["messagedescriptor",3]]],[11,"new","","",61,[[],["value",3]]],[11,"descriptor_static","","",61,[[],["messagedescriptor",3]]],[11,"default_instance","","",61,[[],["value",3]]],[11,"is_initialized","","",63,[[],["bool",15]]],[11,"merge_from","","",63,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",63,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",63,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",63,[[],["u32",15]]],[11,"get_unknown_fields","","",63,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",63,[[],["unknownfields",3]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any","","",63,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",63,[[],["messagedescriptor",3]]],[11,"new","","",63,[[],["listvalue",3]]],[11,"descriptor_static","","",63,[[],["messagedescriptor",3]]],[11,"default_instance","","",63,[[],["listvalue",3]]],[11,"is_initialized","","",65,[[],["bool",15]]],[11,"merge_from","","",65,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",65,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",65,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",65,[[],["u32",15]]],[11,"get_unknown_fields","","",65,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",65,[[],["unknownfields",3]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any","","",65,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",65,[[],["messagedescriptor",3]]],[11,"new","","",65,[[],["timestamp",3]]],[11,"descriptor_static","","",65,[[],["messagedescriptor",3]]],[11,"default_instance","","",65,[[],["timestamp",3]]],[11,"is_initialized","","",66,[[],["bool",15]]],[11,"merge_from","","",66,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",66,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",66,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",66,[[],["u32",15]]],[11,"get_unknown_fields","","",66,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",66,[[],["unknownfields",3]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"into_any","","",66,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",66,[[],["messagedescriptor",3]]],[11,"new","","",66,[[],["type",3]]],[11,"descriptor_static","","",66,[[],["messagedescriptor",3]]],[11,"default_instance","","",66,[[],["type",3]]],[11,"is_initialized","","",67,[[],["bool",15]]],[11,"merge_from","","",67,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",67,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",67,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",67,[[],["u32",15]]],[11,"get_unknown_fields","","",67,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",67,[[],["unknownfields",3]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"into_any","","",67,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",67,[[],["messagedescriptor",3]]],[11,"new","","",67,[[],["field",3]]],[11,"descriptor_static","","",67,[[],["messagedescriptor",3]]],[11,"default_instance","","",67,[[],["field",3]]],[11,"is_initialized","","",70,[[],["bool",15]]],[11,"merge_from","","",70,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",70,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",70,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",70,[[],["u32",15]]],[11,"get_unknown_fields","","",70,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",70,[[],["unknownfields",3]]],[11,"as_any","","",70,[[],["any",8]]],[11,"as_any_mut","","",70,[[],["any",8]]],[11,"into_any","","",70,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",70,[[],["messagedescriptor",3]]],[11,"new","","",70,[[],["enum",3]]],[11,"descriptor_static","","",70,[[],["messagedescriptor",3]]],[11,"default_instance","","",70,[[],["enum",3]]],[11,"is_initialized","","",71,[[],["bool",15]]],[11,"merge_from","","",71,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",71,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",71,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",71,[[],["u32",15]]],[11,"get_unknown_fields","","",71,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",71,[[],["unknownfields",3]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"into_any","","",71,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",71,[[],["messagedescriptor",3]]],[11,"new","","",71,[[],["enumvalue",3]]],[11,"descriptor_static","","",71,[[],["messagedescriptor",3]]],[11,"default_instance","","",71,[[],["enumvalue",3]]],[11,"is_initialized","","",72,[[],["bool",15]]],[11,"merge_from","","",72,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",72,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",72,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",72,[[],["u32",15]]],[11,"get_unknown_fields","","",72,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",72,[[],["unknownfields",3]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any","","",72,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",72,[[],["messagedescriptor",3]]],[11,"new","","",72,[[],["option",3]]],[11,"descriptor_static","","",72,[[],["messagedescriptor",3]]],[11,"default_instance","","",72,[[],["option",3]]],[11,"is_initialized","","",74,[[],["bool",15]]],[11,"merge_from","","",74,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",74,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",74,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",74,[[],["u32",15]]],[11,"get_unknown_fields","","",74,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",74,[[],["unknownfields",3]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any","","",74,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",74,[[],["messagedescriptor",3]]],[11,"new","","",74,[[],["doublevalue",3]]],[11,"descriptor_static","","",74,[[],["messagedescriptor",3]]],[11,"default_instance","","",74,[[],["doublevalue",3]]],[11,"is_initialized","","",75,[[],["bool",15]]],[11,"merge_from","","",75,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",75,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",75,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",75,[[],["u32",15]]],[11,"get_unknown_fields","","",75,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",75,[[],["unknownfields",3]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any","","",75,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",75,[[],["messagedescriptor",3]]],[11,"new","","",75,[[],["floatvalue",3]]],[11,"descriptor_static","","",75,[[],["messagedescriptor",3]]],[11,"default_instance","","",75,[[],["floatvalue",3]]],[11,"is_initialized","","",76,[[],["bool",15]]],[11,"merge_from","","",76,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",76,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",76,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",76,[[],["u32",15]]],[11,"get_unknown_fields","","",76,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",76,[[],["unknownfields",3]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any","","",76,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",76,[[],["messagedescriptor",3]]],[11,"new","","",76,[[],["int64value",3]]],[11,"descriptor_static","","",76,[[],["messagedescriptor",3]]],[11,"default_instance","","",76,[[],["int64value",3]]],[11,"is_initialized","","",77,[[],["bool",15]]],[11,"merge_from","","",77,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",77,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",77,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",77,[[],["u32",15]]],[11,"get_unknown_fields","","",77,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",77,[[],["unknownfields",3]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any","","",77,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",77,[[],["messagedescriptor",3]]],[11,"new","","",77,[[],["uint64value",3]]],[11,"descriptor_static","","",77,[[],["messagedescriptor",3]]],[11,"default_instance","","",77,[[],["uint64value",3]]],[11,"is_initialized","","",78,[[],["bool",15]]],[11,"merge_from","","",78,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",78,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",78,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",78,[[],["u32",15]]],[11,"get_unknown_fields","","",78,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",78,[[],["unknownfields",3]]],[11,"as_any","","",78,[[],["any",8]]],[11,"as_any_mut","","",78,[[],["any",8]]],[11,"into_any","","",78,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",78,[[],["messagedescriptor",3]]],[11,"new","","",78,[[],["int32value",3]]],[11,"descriptor_static","","",78,[[],["messagedescriptor",3]]],[11,"default_instance","","",78,[[],["int32value",3]]],[11,"is_initialized","","",79,[[],["bool",15]]],[11,"merge_from","","",79,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",79,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",79,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",79,[[],["u32",15]]],[11,"get_unknown_fields","","",79,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",79,[[],["unknownfields",3]]],[11,"as_any","","",79,[[],["any",8]]],[11,"as_any_mut","","",79,[[],["any",8]]],[11,"into_any","","",79,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",79,[[],["messagedescriptor",3]]],[11,"new","","",79,[[],["uint32value",3]]],[11,"descriptor_static","","",79,[[],["messagedescriptor",3]]],[11,"default_instance","","",79,[[],["uint32value",3]]],[11,"is_initialized","","",80,[[],["bool",15]]],[11,"merge_from","","",80,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",80,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",80,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",80,[[],["u32",15]]],[11,"get_unknown_fields","","",80,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",80,[[],["unknownfields",3]]],[11,"as_any","","",80,[[],["any",8]]],[11,"as_any_mut","","",80,[[],["any",8]]],[11,"into_any","","",80,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",80,[[],["messagedescriptor",3]]],[11,"new","","",80,[[],["boolvalue",3]]],[11,"descriptor_static","","",80,[[],["messagedescriptor",3]]],[11,"default_instance","","",80,[[],["boolvalue",3]]],[11,"is_initialized","","",81,[[],["bool",15]]],[11,"merge_from","","",81,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",81,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",81,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",81,[[],["u32",15]]],[11,"get_unknown_fields","","",81,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",81,[[],["unknownfields",3]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"into_any","","",81,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",81,[[],["messagedescriptor",3]]],[11,"new","","",81,[[],["stringvalue",3]]],[11,"descriptor_static","","",81,[[],["messagedescriptor",3]]],[11,"default_instance","","",81,[[],["stringvalue",3]]],[11,"is_initialized","","",82,[[],["bool",15]]],[11,"merge_from","","",82,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",82,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",82,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",82,[[],["u32",15]]],[11,"get_unknown_fields","","",82,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",82,[[],["unknownfields",3]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any","","",82,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",82,[[],["messagedescriptor",3]]],[11,"new","","",82,[[],["bytesvalue",3]]],[11,"descriptor_static","","",82,[[],["messagedescriptor",3]]],[11,"default_instance","","",82,[[],["bytesvalue",3]]],[11,"as_ref","protobuf::descriptor","",0,[[],["reflectvalueref",4]]],[11,"as_ref","","",1,[[],["reflectvalueref",4]]],[11,"as_ref","","",2,[[],["reflectvalueref",4]]],[11,"as_ref","","",3,[[],["reflectvalueref",4]]],[11,"as_ref","","",4,[[],["reflectvalueref",4]]],[11,"as_ref","","",5,[[],["reflectvalueref",4]]],[11,"as_ref","","",6,[[],["reflectvalueref",4]]],[11,"as_ref","","",7,[[],["reflectvalueref",4]]],[11,"as_ref","","",8,[[],["reflectvalueref",4]]],[11,"as_ref","","",9,[[],["reflectvalueref",4]]],[11,"as_ref","","",10,[[],["reflectvalueref",4]]],[11,"as_ref","","",11,[[],["reflectvalueref",4]]],[11,"as_ref","","",12,[[],["reflectvalueref",4]]],[11,"as_ref","","",13,[[],["reflectvalueref",4]]],[11,"as_ref","","",14,[[],["reflectvalueref",4]]],[11,"as_ref","","",15,[[],["reflectvalueref",4]]],[11,"as_ref","","",16,[[],["reflectvalueref",4]]],[11,"as_ref","","",17,[[],["reflectvalueref",4]]],[11,"as_ref","","",18,[[],["reflectvalueref",4]]],[11,"as_ref","","",19,[[],["reflectvalueref",4]]],[11,"as_ref","","",20,[[],["reflectvalueref",4]]],[11,"as_ref","","",21,[[],["reflectvalueref",4]]],[11,"as_ref","","",22,[[],["reflectvalueref",4]]],[11,"as_ref","","",23,[[],["reflectvalueref",4]]],[11,"as_ref","","",24,[[],["reflectvalueref",4]]],[11,"as_ref","","",25,[[],["reflectvalueref",4]]],[11,"as_ref","","",26,[[],["reflectvalueref",4]]],[11,"as_ref","","",27,[[],["reflectvalueref",4]]],[11,"as_ref","","",28,[[],["reflectvalueref",4]]],[11,"as_ref","","",29,[[],["reflectvalueref",4]]],[11,"as_ref","","",30,[[],["reflectvalueref",4]]],[11,"as_ref","","",31,[[],["reflectvalueref",4]]],[11,"as_ref","","",32,[[],["reflectvalueref",4]]],[11,"as_ref","protobuf::plugin","",33,[[],["reflectvalueref",4]]],[11,"as_ref","","",34,[[],["reflectvalueref",4]]],[11,"as_ref","","",35,[[],["reflectvalueref",4]]],[11,"as_ref","","",36,[[],["reflectvalueref",4]]],[11,"as_ref","","",37,[[],["reflectvalueref",4]]],[11,"as_ref","protobuf::well_known_types","",52,[[],["reflectvalueref",4]]],[11,"as_ref","","",53,[[],["reflectvalueref",4]]],[11,"as_ref","","",54,[[],["reflectvalueref",4]]],[11,"as_ref","","",55,[[],["reflectvalueref",4]]],[11,"as_ref","","",56,[[],["reflectvalueref",4]]],[11,"as_ref","","",57,[[],["reflectvalueref",4]]],[11,"as_ref","","",58,[[],["reflectvalueref",4]]],[11,"as_ref","","",59,[[],["reflectvalueref",4]]],[11,"as_ref","","",60,[[],["reflectvalueref",4]]],[11,"as_ref","","",61,[[],["reflectvalueref",4]]],[11,"as_ref","","",63,[[],["reflectvalueref",4]]],[11,"as_ref","","",64,[[],["reflectvalueref",4]]],[11,"as_ref","","",65,[[],["reflectvalueref",4]]],[11,"as_ref","","",66,[[],["reflectvalueref",4]]],[11,"as_ref","","",67,[[],["reflectvalueref",4]]],[11,"as_ref","","",68,[[],["reflectvalueref",4]]],[11,"as_ref","","",69,[[],["reflectvalueref",4]]],[11,"as_ref","","",70,[[],["reflectvalueref",4]]],[11,"as_ref","","",71,[[],["reflectvalueref",4]]],[11,"as_ref","","",72,[[],["reflectvalueref",4]]],[11,"as_ref","","",73,[[],["reflectvalueref",4]]],[11,"as_ref","","",74,[[],["reflectvalueref",4]]],[11,"as_ref","","",75,[[],["reflectvalueref",4]]],[11,"as_ref","","",76,[[],["reflectvalueref",4]]],[11,"as_ref","","",77,[[],["reflectvalueref",4]]],[11,"as_ref","","",78,[[],["reflectvalueref",4]]],[11,"as_ref","","",79,[[],["reflectvalueref",4]]],[11,"as_ref","","",80,[[],["reflectvalueref",4]]],[11,"as_ref","","",81,[[],["reflectvalueref",4]]],[11,"as_ref","","",82,[[],["reflectvalueref",4]]],[11,"wire_type","protobuf::types","",100,[[],["wiretype",4]]],[11,"read","","",100,[[["codedinputstream",3]],[["f32",15],["protobufresult",6]]]],[11,"compute_size","","",100,[[["f32",15]],["u32",15]]],[11,"get_from_unknown","","",100,[[["unknownvalues",3]],[["option",4],["f32",15]]]],[11,"write_with_cached_size","","",100,[[["u32",15],["codedoutputstream",3],["f32",15]],["protobufresult",6]]],[11,"wire_type","","",101,[[],["wiretype",4]]],[11,"read","","",101,[[["codedinputstream",3]],[["f64",15],["protobufresult",6]]]],[11,"get_from_unknown","","",101,[[["unknownvalues",3]],[["f64",15],["option",4]]]],[11,"compute_size","","",101,[[["f64",15]],["u32",15]]],[11,"write_with_cached_size","","",101,[[["u32",15],["f64",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",102,[[],["wiretype",4]]],[11,"read","","",102,[[["codedinputstream",3]],[["protobufresult",6],["i32",15]]]],[11,"compute_size","","",102,[[["i32",15]],["u32",15]]],[11,"write_with_cached_size","","",102,[[["u32",15],["i32",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"get_from_unknown","","",102,[[["unknownvalues",3]],[["option",4],["i32",15]]]],[11,"wire_type","","",103,[[],["wiretype",4]]],[11,"read","","",103,[[["codedinputstream",3]],[["i64",15],["protobufresult",6]]]],[11,"get_from_unknown","","",103,[[["unknownvalues",3]],[["i64",15],["option",4]]]],[11,"compute_size","","",103,[[["i64",15]],["u32",15]]],[11,"write_with_cached_size","","",103,[[["u32",15],["i64",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",104,[[],["wiretype",4]]],[11,"read","","",104,[[["codedinputstream",3]],[["u32",15],["protobufresult",6]]]],[11,"get_from_unknown","","",104,[[["unknownvalues",3]],[["u32",15],["option",4]]]],[11,"compute_size","","",104,[[["u32",15]],["u32",15]]],[11,"write_with_cached_size","","",104,[[["u32",15],["u32",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",105,[[],["wiretype",4]]],[11,"read","","",105,[[["codedinputstream",3]],[["u64",15],["protobufresult",6]]]],[11,"get_from_unknown","","",105,[[["unknownvalues",3]],[["option",4],["u64",15]]]],[11,"compute_size","","",105,[[["u64",15]],["u32",15]]],[11,"write_with_cached_size","","",105,[[["u32",15],["u64",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",106,[[],["wiretype",4]]],[11,"read","","",106,[[["codedinputstream",3]],[["protobufresult",6],["i32",15]]]],[11,"get_from_unknown","","",106,[[["unknownvalues",3]],[["option",4],["i32",15]]]],[11,"compute_size","","",106,[[["i32",15]],["u32",15]]],[11,"write_with_cached_size","","",106,[[["u32",15],["i32",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",107,[[],["wiretype",4]]],[11,"read","","",107,[[["codedinputstream",3]],[["i64",15],["protobufresult",6]]]],[11,"get_from_unknown","","",107,[[["unknownvalues",3]],[["i64",15],["option",4]]]],[11,"compute_size","","",107,[[["i64",15]],["u32",15]]],[11,"write_with_cached_size","","",107,[[["u32",15],["i64",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",108,[[],["wiretype",4]]],[11,"read","","",108,[[["codedinputstream",3]],[["u32",15],["protobufresult",6]]]],[11,"get_from_unknown","","",108,[[["unknownvalues",3]],[["u32",15],["option",4]]]],[11,"compute_size","","",108,[[["u32",15]],["u32",15]]],[11,"write_with_cached_size","","",108,[[["u32",15],["u32",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",109,[[],["wiretype",4]]],[11,"read","","",109,[[["codedinputstream",3]],[["u64",15],["protobufresult",6]]]],[11,"get_from_unknown","","",109,[[["unknownvalues",3]],[["option",4],["u64",15]]]],[11,"compute_size","","",109,[[["u64",15]],["u32",15]]],[11,"write_with_cached_size","","",109,[[["u32",15],["u64",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",110,[[],["wiretype",4]]],[11,"read","","",110,[[["codedinputstream",3]],[["protobufresult",6],["i32",15]]]],[11,"get_from_unknown","","",110,[[["unknownvalues",3]],[["option",4],["i32",15]]]],[11,"compute_size","","",110,[[["i32",15]],["u32",15]]],[11,"write_with_cached_size","","",110,[[["u32",15],["i32",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",111,[[],["wiretype",4]]],[11,"read","","",111,[[["codedinputstream",3]],[["i64",15],["protobufresult",6]]]],[11,"get_from_unknown","","",111,[[["unknownvalues",3]],[["i64",15],["option",4]]]],[11,"compute_size","","",111,[[["i64",15]],["u32",15]]],[11,"write_with_cached_size","","",111,[[["u32",15],["i64",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",112,[[],["wiretype",4]]],[11,"read","","",112,[[["codedinputstream",3]],[["bool",15],["protobufresult",6]]]],[11,"get_from_unknown","","",112,[[["unknownvalues",3]],[["bool",15],["option",4]]]],[11,"compute_size","","",112,[[["bool",15]],["u32",15]]],[11,"write_with_cached_size","","",112,[[["u32",15],["bool",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",113,[[],["wiretype",4]]],[11,"read","","",113,[[["codedinputstream",3]],[["protobufresult",6],["string",3]]]],[11,"get_from_unknown","","",113,[[["unknownvalues",3]],[["option",4],["string",3]]]],[11,"compute_size","","",113,[[["string",3]],["u32",15]]],[11,"write_with_cached_size","","",113,[[["u32",15],["string",3],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",114,[[],["wiretype",4]]],[11,"read","","",114,[[["codedinputstream",3]],[["protobufresult",6],["vec",3]]]],[11,"get_from_unknown","","",114,[[["unknownvalues",3]],[["option",4],["vec",3]]]],[11,"compute_size","","",114,[[["vec",3]],["u32",15]]],[11,"write_with_cached_size","","",114,[[["u32",15],["vec",3],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",116,[[],["wiretype",4]]],[11,"read","","",116,[[["codedinputstream",3]],["protobufresult",6]]],[11,"get_from_unknown","","",116,[[["unknownvalues",3]],["option",4]]],[11,"compute_size","","",116,[[],["u32",15]]],[11,"write_with_cached_size","","",116,[[["u32",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"wire_type","","",117,[[],["wiretype",4]]],[11,"read","","",117,[[["codedinputstream",3]],["protobufresult",6]]],[11,"get_from_unknown","","",117,[[["unknownvalues",3]],["option",4]]],[11,"compute_size","","",117,[[],["u32",15]]],[11,"get_cached_size","","",117,[[],["u32",15]]],[11,"write_with_cached_size","","",117,[[["u32",15],["codedoutputstream",3]],["protobufresult",6]]],[11,"as_ref","protobuf","",97,[[]]],[11,"from","protobuf::error","",41,[[["error",3]]]],[11,"from","","",41,[[["utf8error",3]]]],[11,"from","protobuf","",97,[[["vec",3]],["repeatedfield",3]]],[11,"from","","",97,[[],["repeatedfield",3]]],[11,"from","","",98,[[["option",4]]]],[11,"from","","",99,[[["option",4]]]],[11,"into","","",97,[[],["vec",3]]],[11,"extend","","",97,[[["intoiterator",8]]]],[11,"extend","","",97,[[["intoiterator",8]]]],[11,"into_iter","","",97,[[],["intoiter",3]]],[11,"next","","",119,[[],[["option",4],["unknownvalueref",4]]]],[11,"next","","",120,[[],["option",4]]],[11,"clone","protobuf::descriptor","",0,[[],["filedescriptorset",3]]],[11,"clone","","",1,[[],["filedescriptorproto",3]]],[11,"clone","","",2,[[],["descriptorproto",3]]],[11,"clone","","",3,[[],["descriptorproto_extensionrange",3]]],[11,"clone","","",4,[[],["descriptorproto_reservedrange",3]]],[11,"clone","","",5,[[],["extensionrangeoptions",3]]],[11,"clone","","",6,[[],["fielddescriptorproto",3]]],[11,"clone","","",7,[[],["fielddescriptorproto_type",4]]],[11,"clone","","",8,[[],["fielddescriptorproto_label",4]]],[11,"clone","","",9,[[],["oneofdescriptorproto",3]]],[11,"clone","","",10,[[],["enumdescriptorproto",3]]],[11,"clone","","",11,[[],["enumdescriptorproto_enumreservedrange",3]]],[11,"clone","","",12,[[],["enumvaluedescriptorproto",3]]],[11,"clone","","",13,[[],["servicedescriptorproto",3]]],[11,"clone","","",14,[[],["methoddescriptorproto",3]]],[11,"clone","","",15,[[],["fileoptions",3]]],[11,"clone","","",16,[[],["fileoptions_optimizemode",4]]],[11,"clone","","",17,[[],["messageoptions",3]]],[11,"clone","","",18,[[],["fieldoptions",3]]],[11,"clone","","",19,[[],["fieldoptions_ctype",4]]],[11,"clone","","",20,[[],["fieldoptions_jstype",4]]],[11,"clone","","",21,[[],["oneofoptions",3]]],[11,"clone","","",22,[[],["enumoptions",3]]],[11,"clone","","",23,[[],["enumvalueoptions",3]]],[11,"clone","","",24,[[],["serviceoptions",3]]],[11,"clone","","",25,[[],["methodoptions",3]]],[11,"clone","","",26,[[],["methodoptions_idempotencylevel",4]]],[11,"clone","","",27,[[],["uninterpretedoption",3]]],[11,"clone","","",28,[[],["uninterpretedoption_namepart",3]]],[11,"clone","","",29,[[],["sourcecodeinfo",3]]],[11,"clone","","",30,[[],["sourcecodeinfo_location",3]]],[11,"clone","","",31,[[],["generatedcodeinfo",3]]],[11,"clone","","",32,[[],["generatedcodeinfo_annotation",3]]],[11,"clone","protobuf::plugin","",33,[[],["version",3]]],[11,"clone","","",34,[[],["codegeneratorrequest",3]]],[11,"clone","","",35,[[],["codegeneratorresponse",3]]],[11,"clone","","",36,[[],["codegeneratorresponse_file",3]]],[11,"clone","","",37,[[],["codegeneratorresponse_feature",4]]],[11,"clone","protobuf::wire_format","",38,[[],["wiretype",4]]],[11,"clone","","",39,[[],["tag",3]]],[11,"clone","protobuf::reflect","",93,[[],["enumvaluedescriptor",3]]],[11,"clone","protobuf","",97,[[],["repeatedfield",3]]],[11,"clone","","",98,[[],["singularfield",3]]],[11,"clone","","",99,[[],["singularptrfield",3]]],[11,"clone","protobuf::well_known_types","",52,[[],["any",3]]],[11,"clone","","",53,[[],["api",3]]],[11,"clone","","",54,[[],["method",3]]],[11,"clone","","",55,[[],["mixin",3]]],[11,"clone","","",56,[[],["duration",3]]],[11,"clone","","",57,[[],["empty",3]]],[11,"clone","","",58,[[],["fieldmask",3]]],[11,"clone","","",59,[[],["sourcecontext",3]]],[11,"clone","","",60,[[],["struct",3]]],[11,"clone","","",61,[[],["value",3]]],[11,"clone","","",62,[[],["value_oneof_kind",4]]],[11,"clone","","",63,[[],["listvalue",3]]],[11,"clone","","",64,[[],["nullvalue",4]]],[11,"clone","","",65,[[],["timestamp",3]]],[11,"clone","","",66,[[],["type",3]]],[11,"clone","","",67,[[],["field",3]]],[11,"clone","","",68,[[],["field_kind",4]]],[11,"clone","","",69,[[],["field_cardinality",4]]],[11,"clone","","",70,[[],["enum",3]]],[11,"clone","","",71,[[],["enumvalue",3]]],[11,"clone","","",72,[[],["option",3]]],[11,"clone","","",73,[[],["syntax",4]]],[11,"clone","","",74,[[],["doublevalue",3]]],[11,"clone","","",75,[[],["floatvalue",3]]],[11,"clone","","",76,[[],["int64value",3]]],[11,"clone","","",77,[[],["uint64value",3]]],[11,"clone","","",78,[[],["int32value",3]]],[11,"clone","","",79,[[],["uint32value",3]]],[11,"clone","","",80,[[],["boolvalue",3]]],[11,"clone","","",81,[[],["stringvalue",3]]],[11,"clone","","",82,[[],["bytesvalue",3]]],[11,"clone","protobuf","",118,[[],["cachedsize",3]]],[11,"clone","","",89,[[],["unknownvalues",3]]],[11,"clone","","",86,[[],["unknownfields",3]]],[11,"default","protobuf::descriptor","",0,[[],["filedescriptorset",3]]],[11,"default","","",1,[[],["filedescriptorproto",3]]],[11,"default","","",2,[[],["descriptorproto",3]]],[11,"default","","",3,[[],["descriptorproto_extensionrange",3]]],[11,"default","","",4,[[],["descriptorproto_reservedrange",3]]],[11,"default","","",5,[[],["extensionrangeoptions",3]]],[11,"default","","",6,[[],["fielddescriptorproto",3]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[],["oneofdescriptorproto",3]]],[11,"default","","",10,[[],["enumdescriptorproto",3]]],[11,"default","","",11,[[],["enumdescriptorproto_enumreservedrange",3]]],[11,"default","","",12,[[],["enumvaluedescriptorproto",3]]],[11,"default","","",13,[[],["servicedescriptorproto",3]]],[11,"default","","",14,[[],["methoddescriptorproto",3]]],[11,"default","","",15,[[],["fileoptions",3]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[],["messageoptions",3]]],[11,"default","","",18,[[],["fieldoptions",3]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[],["oneofoptions",3]]],[11,"default","","",22,[[],["enumoptions",3]]],[11,"default","","",23,[[],["enumvalueoptions",3]]],[11,"default","","",24,[[],["serviceoptions",3]]],[11,"default","","",25,[[],["methodoptions",3]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[],["uninterpretedoption",3]]],[11,"default","","",28,[[],["uninterpretedoption_namepart",3]]],[11,"default","","",29,[[],["sourcecodeinfo",3]]],[11,"default","","",30,[[],["sourcecodeinfo_location",3]]],[11,"default","","",31,[[],["generatedcodeinfo",3]]],[11,"default","","",32,[[],["generatedcodeinfo_annotation",3]]],[11,"default","protobuf::plugin","",33,[[],["version",3]]],[11,"default","","",34,[[],["codegeneratorrequest",3]]],[11,"default","","",35,[[],["codegeneratorresponse",3]]],[11,"default","","",36,[[],["codegeneratorresponse_file",3]]],[11,"default","","",37,[[]]],[11,"default","protobuf","",97,[[],["repeatedfield",3]]],[11,"default","","",98,[[],["singularfield",3]]],[11,"default","","",99,[[],["singularptrfield",3]]],[11,"default","protobuf::well_known_types","",52,[[],["any",3]]],[11,"default","","",53,[[],["api",3]]],[11,"default","","",54,[[],["method",3]]],[11,"default","","",55,[[],["mixin",3]]],[11,"default","","",56,[[],["duration",3]]],[11,"default","","",57,[[],["empty",3]]],[11,"default","","",58,[[],["fieldmask",3]]],[11,"default","","",59,[[],["sourcecontext",3]]],[11,"default","","",60,[[],["struct",3]]],[11,"default","","",61,[[],["value",3]]],[11,"default","","",63,[[],["listvalue",3]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[],["timestamp",3]]],[11,"default","","",66,[[],["type",3]]],[11,"default","","",67,[[],["field",3]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[],["enum",3]]],[11,"default","","",71,[[],["enumvalue",3]]],[11,"default","","",72,[[],["option",3]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[],["doublevalue",3]]],[11,"default","","",75,[[],["floatvalue",3]]],[11,"default","","",76,[[],["int64value",3]]],[11,"default","","",77,[[],["uint64value",3]]],[11,"default","","",78,[[],["int32value",3]]],[11,"default","","",79,[[],["uint32value",3]]],[11,"default","","",80,[[],["boolvalue",3]]],[11,"default","","",81,[[],["stringvalue",3]]],[11,"default","","",82,[[],["bytesvalue",3]]],[11,"default","protobuf","",118,[[],["cachedsize",3]]],[11,"default","","",89,[[],["unknownvalues",3]]],[11,"default","","",86,[[],["unknownfields",3]]],[11,"eq","protobuf::descriptor","",0,[[["filedescriptorset",3]],["bool",15]]],[11,"ne","","",0,[[["filedescriptorset",3]],["bool",15]]],[11,"eq","","",1,[[["filedescriptorproto",3]],["bool",15]]],[11,"ne","","",1,[[["filedescriptorproto",3]],["bool",15]]],[11,"eq","","",2,[[["descriptorproto",3]],["bool",15]]],[11,"ne","","",2,[[["descriptorproto",3]],["bool",15]]],[11,"eq","","",3,[[["descriptorproto_extensionrange",3]],["bool",15]]],[11,"ne","","",3,[[["descriptorproto_extensionrange",3]],["bool",15]]],[11,"eq","","",4,[[["descriptorproto_reservedrange",3]],["bool",15]]],[11,"ne","","",4,[[["descriptorproto_reservedrange",3]],["bool",15]]],[11,"eq","","",5,[[["extensionrangeoptions",3]],["bool",15]]],[11,"ne","","",5,[[["extensionrangeoptions",3]],["bool",15]]],[11,"eq","","",6,[[["fielddescriptorproto",3]],["bool",15]]],[11,"ne","","",6,[[["fielddescriptorproto",3]],["bool",15]]],[11,"eq","","",7,[[["fielddescriptorproto_type",4]],["bool",15]]],[11,"eq","","",8,[[["fielddescriptorproto_label",4]],["bool",15]]],[11,"eq","","",9,[[["oneofdescriptorproto",3]],["bool",15]]],[11,"ne","","",9,[[["oneofdescriptorproto",3]],["bool",15]]],[11,"eq","","",10,[[["enumdescriptorproto",3]],["bool",15]]],[11,"ne","","",10,[[["enumdescriptorproto",3]],["bool",15]]],[11,"eq","","",11,[[["enumdescriptorproto_enumreservedrange",3]],["bool",15]]],[11,"ne","","",11,[[["enumdescriptorproto_enumreservedrange",3]],["bool",15]]],[11,"eq","","",12,[[["enumvaluedescriptorproto",3]],["bool",15]]],[11,"ne","","",12,[[["enumvaluedescriptorproto",3]],["bool",15]]],[11,"eq","","",13,[[["servicedescriptorproto",3]],["bool",15]]],[11,"ne","","",13,[[["servicedescriptorproto",3]],["bool",15]]],[11,"eq","","",14,[[["methoddescriptorproto",3]],["bool",15]]],[11,"ne","","",14,[[["methoddescriptorproto",3]],["bool",15]]],[11,"eq","","",15,[[["fileoptions",3]],["bool",15]]],[11,"ne","","",15,[[["fileoptions",3]],["bool",15]]],[11,"eq","","",16,[[["fileoptions_optimizemode",4]],["bool",15]]],[11,"eq","","",17,[[["messageoptions",3]],["bool",15]]],[11,"ne","","",17,[[["messageoptions",3]],["bool",15]]],[11,"eq","","",18,[[["fieldoptions",3]],["bool",15]]],[11,"ne","","",18,[[["fieldoptions",3]],["bool",15]]],[11,"eq","","",19,[[["fieldoptions_ctype",4]],["bool",15]]],[11,"eq","","",20,[[["fieldoptions_jstype",4]],["bool",15]]],[11,"eq","","",21,[[["oneofoptions",3]],["bool",15]]],[11,"ne","","",21,[[["oneofoptions",3]],["bool",15]]],[11,"eq","","",22,[[["enumoptions",3]],["bool",15]]],[11,"ne","","",22,[[["enumoptions",3]],["bool",15]]],[11,"eq","","",23,[[["enumvalueoptions",3]],["bool",15]]],[11,"ne","","",23,[[["enumvalueoptions",3]],["bool",15]]],[11,"eq","","",24,[[["serviceoptions",3]],["bool",15]]],[11,"ne","","",24,[[["serviceoptions",3]],["bool",15]]],[11,"eq","","",25,[[["methodoptions",3]],["bool",15]]],[11,"ne","","",25,[[["methodoptions",3]],["bool",15]]],[11,"eq","","",26,[[["methodoptions_idempotencylevel",4]],["bool",15]]],[11,"eq","","",27,[[["uninterpretedoption",3]],["bool",15]]],[11,"ne","","",27,[[["uninterpretedoption",3]],["bool",15]]],[11,"eq","","",28,[[["uninterpretedoption_namepart",3]],["bool",15]]],[11,"ne","","",28,[[["uninterpretedoption_namepart",3]],["bool",15]]],[11,"eq","","",29,[[["sourcecodeinfo",3]],["bool",15]]],[11,"ne","","",29,[[["sourcecodeinfo",3]],["bool",15]]],[11,"eq","","",30,[[["sourcecodeinfo_location",3]],["bool",15]]],[11,"ne","","",30,[[["sourcecodeinfo_location",3]],["bool",15]]],[11,"eq","","",31,[[["generatedcodeinfo",3]],["bool",15]]],[11,"ne","","",31,[[["generatedcodeinfo",3]],["bool",15]]],[11,"eq","","",32,[[["generatedcodeinfo_annotation",3]],["bool",15]]],[11,"ne","","",32,[[["generatedcodeinfo_annotation",3]],["bool",15]]],[11,"eq","protobuf::plugin","",33,[[["version",3]],["bool",15]]],[11,"ne","","",33,[[["version",3]],["bool",15]]],[11,"eq","","",34,[[["codegeneratorrequest",3]],["bool",15]]],[11,"ne","","",34,[[["codegeneratorrequest",3]],["bool",15]]],[11,"eq","","",35,[[["codegeneratorresponse",3]],["bool",15]]],[11,"ne","","",35,[[["codegeneratorresponse",3]],["bool",15]]],[11,"eq","","",36,[[["codegeneratorresponse_file",3]],["bool",15]]],[11,"ne","","",36,[[["codegeneratorresponse_file",3]],["bool",15]]],[11,"eq","","",37,[[["codegeneratorresponse_feature",4]],["bool",15]]],[11,"eq","protobuf::wire_format","",38,[[["wiretype",4]],["bool",15]]],[11,"eq","protobuf","",97,[[["repeatedfield",3]],["bool",15]]],[11,"eq","","",97,[[],["bool",15]]],[11,"eq","","",98,[[["singularfield",3]],["bool",15]]],[11,"eq","","",99,[[["singularptrfield",3]],["bool",15]]],[11,"eq","protobuf::well_known_types","",52,[[["any",3]],["bool",15]]],[11,"ne","","",52,[[["any",3]],["bool",15]]],[11,"eq","","",53,[[["api",3]],["bool",15]]],[11,"ne","","",53,[[["api",3]],["bool",15]]],[11,"eq","","",54,[[["method",3]],["bool",15]]],[11,"ne","","",54,[[["method",3]],["bool",15]]],[11,"eq","","",55,[[["mixin",3]],["bool",15]]],[11,"ne","","",55,[[["mixin",3]],["bool",15]]],[11,"eq","","",56,[[["duration",3]],["bool",15]]],[11,"ne","","",56,[[["duration",3]],["bool",15]]],[11,"eq","","",57,[[["empty",3]],["bool",15]]],[11,"ne","","",57,[[["empty",3]],["bool",15]]],[11,"eq","","",58,[[["fieldmask",3]],["bool",15]]],[11,"ne","","",58,[[["fieldmask",3]],["bool",15]]],[11,"eq","","",59,[[["sourcecontext",3]],["bool",15]]],[11,"ne","","",59,[[["sourcecontext",3]],["bool",15]]],[11,"eq","","",60,[[["struct",3]],["bool",15]]],[11,"ne","","",60,[[["struct",3]],["bool",15]]],[11,"eq","","",61,[[["value",3]],["bool",15]]],[11,"ne","","",61,[[["value",3]],["bool",15]]],[11,"eq","","",62,[[["value_oneof_kind",4]],["bool",15]]],[11,"ne","","",62,[[["value_oneof_kind",4]],["bool",15]]],[11,"eq","","",63,[[["listvalue",3]],["bool",15]]],[11,"ne","","",63,[[["listvalue",3]],["bool",15]]],[11,"eq","","",64,[[["nullvalue",4]],["bool",15]]],[11,"eq","","",65,[[["timestamp",3]],["bool",15]]],[11,"ne","","",65,[[["timestamp",3]],["bool",15]]],[11,"eq","","",66,[[["type",3]],["bool",15]]],[11,"ne","","",66,[[["type",3]],["bool",15]]],[11,"eq","","",67,[[["field",3]],["bool",15]]],[11,"ne","","",67,[[["field",3]],["bool",15]]],[11,"eq","","",68,[[["field_kind",4]],["bool",15]]],[11,"eq","","",69,[[["field_cardinality",4]],["bool",15]]],[11,"eq","","",70,[[["enum",3]],["bool",15]]],[11,"ne","","",70,[[["enum",3]],["bool",15]]],[11,"eq","","",71,[[["enumvalue",3]],["bool",15]]],[11,"ne","","",71,[[["enumvalue",3]],["bool",15]]],[11,"eq","","",72,[[["option",3]],["bool",15]]],[11,"ne","","",72,[[["option",3]],["bool",15]]],[11,"eq","","",73,[[["syntax",4]],["bool",15]]],[11,"eq","","",74,[[["doublevalue",3]],["bool",15]]],[11,"ne","","",74,[[["doublevalue",3]],["bool",15]]],[11,"eq","","",75,[[["floatvalue",3]],["bool",15]]],[11,"ne","","",75,[[["floatvalue",3]],["bool",15]]],[11,"eq","","",76,[[["int64value",3]],["bool",15]]],[11,"ne","","",76,[[["int64value",3]],["bool",15]]],[11,"eq","","",77,[[["uint64value",3]],["bool",15]]],[11,"ne","","",77,[[["uint64value",3]],["bool",15]]],[11,"eq","","",78,[[["int32value",3]],["bool",15]]],[11,"ne","","",78,[[["int32value",3]],["bool",15]]],[11,"eq","","",79,[[["uint32value",3]],["bool",15]]],[11,"ne","","",79,[[["uint32value",3]],["bool",15]]],[11,"eq","","",80,[[["boolvalue",3]],["bool",15]]],[11,"ne","","",80,[[["boolvalue",3]],["bool",15]]],[11,"eq","","",81,[[["stringvalue",3]],["bool",15]]],[11,"ne","","",81,[[["stringvalue",3]],["bool",15]]],[11,"eq","","",82,[[["bytesvalue",3]],["bool",15]]],[11,"ne","","",82,[[["bytesvalue",3]],["bool",15]]],[11,"eq","protobuf","",118,[[["cachedsize",3]],["bool",15]]],[11,"eq","","",89,[[["unknownvalues",3]],["bool",15]]],[11,"ne","","",89,[[["unknownvalues",3]],["bool",15]]],[11,"eq","","",86,[[["unknownfields",3]],["bool",15]]],[11,"ne","","",86,[[["unknownfields",3]],["bool",15]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"fmt","protobuf::descriptor","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","protobuf::plugin","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","protobuf::wire_format","",38,[[["formatter",3]],["result",6]]],[11,"fmt","protobuf::error","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","protobuf::reflect","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","protobuf","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","protobuf::well_known_types","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","protobuf","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","protobuf::error","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"index","protobuf","",97,[[["usize",15]]]],[11,"index_mut","","",97,[[["usize",15]]]],[11,"hash","protobuf::descriptor","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",26,[[]]],[11,"hash","protobuf::plugin","",37,[[]]],[11,"hash","protobuf","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","protobuf::well_known_types","",64,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",73,[[]]],[11,"hash","protobuf","",89,[[]]],[11,"hash","","",86,[[]]],[11,"borrow","","",97,[[]]],[11,"from_iter","","",97,[[["intoiterator",8]],["repeatedfield",3]]],[11,"description","protobuf::error","",41,[[],["str",15]]],[11,"cause","","",41,[[],[["error",8],["option",4]]]],[11,"fill_buf","protobuf","",90,[[],["result",6]]],[11,"consume","","",90,[[["usize",15]]]],[11,"read","","",90,[[],[["usize",15],["result",6]]]],[11,"write","","",91,[[],[["usize",15],["result",6]]]],[11,"flush","","",91,[[],["result",6]]],[11,"new","","Wrap a <code>Read</code>.",90,[[["read",8]],["codedinputstream",3]]],[11,"from_buffered_reader","","Create from <code>BufRead</code>.",90,[[["bufread",8]],["codedinputstream",3]]],[11,"from_bytes","","Read from byte slice",90,[[],["codedinputstream",3]]],[11,"set_recursion_limit","","Set the recursion limit.",90,[[["u32",15]]]],[11,"pos","","How many bytes processed",90,[[],["u64",15]]],[11,"bytes_until_limit","","How many bytes until current limit",90,[[],["u64",15]]],[11,"read","","Read bytes into given <code>buf</code>.",90,[[],["protobufresult",6]]],[11,"read_raw_byte","","Read one byte",90,[[],[["protobufresult",6],["u8",15]]]],[11,"push_limit","","Push new limit, return previous limit.",90,[[["u64",15]],[["u64",15],["protobufresult",6]]]],[11,"pop_limit","","Restore previous limit.",90,[[["u64",15]]]],[11,"eof","","Are we at EOF?",90,[[],[["bool",15],["protobufresult",6]]]],[11,"check_eof","","Check we are at EOF.",90,[[],["protobufresult",6]]],[11,"read_raw_varint64","","Read varint",90,[[],[["u64",15],["protobufresult",6]]]],[11,"read_raw_varint32","","Read varint",90,[[],[["u32",15],["protobufresult",6]]]],[11,"read_raw_little_endian32","","Read little-endian 32-bit integer",90,[[],[["u32",15],["protobufresult",6]]]],[11,"read_raw_little_endian64","","Read little-endian 64-bit integer",90,[[],[["u64",15],["protobufresult",6]]]],[11,"read_tag","","Read tag",90,[[],[["tag",3],["protobufresult",6]]]],[11,"read_tag_unpack","","Read tag, return it is pair (field number, wire type)",90,[[],["protobufresult",6]]],[11,"read_double","","Read <code>double</code>",90,[[],[["f64",15],["protobufresult",6]]]],[11,"read_float","","Read <code>float</code>",90,[[],[["f32",15],["protobufresult",6]]]],[11,"read_int64","","Read <code>int64</code>",90,[[],[["i64",15],["protobufresult",6]]]],[11,"read_int32","","Read <code>int32</code>",90,[[],[["protobufresult",6],["i32",15]]]],[11,"read_uint64","","Read <code>uint64</code>",90,[[],[["u64",15],["protobufresult",6]]]],[11,"read_uint32","","Read <code>uint32</code>",90,[[],[["u32",15],["protobufresult",6]]]],[11,"read_sint64","","Read <code>sint64</code>",90,[[],[["i64",15],["protobufresult",6]]]],[11,"read_sint32","","Read <code>sint32</code>",90,[[],[["protobufresult",6],["i32",15]]]],[11,"read_fixed64","","Read <code>fixed64</code>",90,[[],[["u64",15],["protobufresult",6]]]],[11,"read_fixed32","","Read <code>fixed32</code>",90,[[],[["u32",15],["protobufresult",6]]]],[11,"read_sfixed64","","Read <code>sfixed64</code>",90,[[],[["i64",15],["protobufresult",6]]]],[11,"read_sfixed32","","Read <code>sfixed32</code>",90,[[],[["protobufresult",6],["i32",15]]]],[11,"read_bool","","Read <code>bool</code>",90,[[],[["bool",15],["protobufresult",6]]]],[11,"read_enum","","Read <code>enum</code> as <code>ProtobufEnum</code>",90,[[],[["protobufenum",8],["protobufresult",6]]]],[11,"read_repeated_packed_double_into","","Read <code>repeated</code> packed <code>double</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_float_into","","Read <code>repeated</code> packed <code>float</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_int64_into","","Read <code>repeated</code> packed <code>int64</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_int32_into","","Read repeated packed <code>int32</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_uint64_into","","Read repeated packed <code>uint64</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_uint32_into","","Read repeated packed <code>uint32</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_sint64_into","","Read repeated packed <code>sint64</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_sint32_into","","Read repeated packed <code>sint32</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_fixed64_into","","Read repeated packed <code>fixed64</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_fixed32_into","","Read repeated packed <code>fixed32</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_sfixed64_into","","Read repeated packed <code>sfixed64</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_sfixed32_into","","Read repeated packed <code>sfixed32</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_bool_into","","Read repeated packed <code>bool</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_repeated_packed_enum_into","","Read repeated packed <code>enum</code> into <code>ProtobufEnum</code>",90,[[["vec",3]],["protobufresult",6]]],[11,"read_unknown","","Read <code>UnknownValue</code>",90,[[["wiretype",4]],[["unknownvalue",4],["protobufresult",6]]]],[11,"skip_field","","Skip field",90,[[["wiretype",4]],["protobufresult",6]]],[11,"read_raw_bytes_into","","Read raw bytes into the supplied vector.  The vector will …",90,[[["u32",15],["vec",3]],["protobufresult",6]]],[11,"read_raw_bytes","","Read exact number of bytes",90,[[["u32",15]],[["protobufresult",6],["vec",3]]]],[11,"skip_raw_bytes","","Skip exact number of bytes",90,[[["u32",15]],["protobufresult",6]]],[11,"read_bytes","","Read <code>bytes</code> field, length delimited",90,[[],[["protobufresult",6],["vec",3]]]],[11,"read_bytes_into","","Read <code>bytes</code> field, length delimited",90,[[["vec",3]],["protobufresult",6]]],[11,"read_string","","Read <code>string</code> field, length delimited",90,[[],[["protobufresult",6],["string",3]]]],[11,"read_string_into","","Read <code>string</code> field, length delimited",90,[[["string",3]],["protobufresult",6]]],[11,"merge_message","","Read message, do not check if message is initialized",90,[[],["protobufresult",6]]],[11,"read_message","","Read message",90,[[],[["protobufresult",6],["message",8]]]],[11,"new","","Construct from given <code>Write</code>.",91,[[["write",8]],["codedoutputstream",3]]],[11,"bytes","","<code>CodedOutputStream</code> which writes directly to bytes.",91,[[],["codedoutputstream",3]]],[11,"vec","","<code>CodedOutputStream</code> which writes directly to <code>Vec<u8></code>.",91,[[["vec",3]],["codedoutputstream",3]]],[11,"check_eof","","Check if EOF is reached.",91,[[]]],[11,"flush","","Flush the buffer to underlying write",91,[[],["protobufresult",6]]],[11,"write_raw_byte","","Write a byte",91,[[["u8",15]],["protobufresult",6]]],[11,"write_raw_bytes","","Write bytes",91,[[],["protobufresult",6]]],[11,"write_tag","","Write a tag",91,[[["u32",15],["wiretype",4]],["protobufresult",6]]],[11,"write_raw_varint32","","Write varint",91,[[["u32",15]],["protobufresult",6]]],[11,"write_raw_varint64","","Write varint",91,[[["u64",15]],["protobufresult",6]]],[11,"write_raw_little_endian32","","Write 32-bit integer little endian",91,[[["u32",15]],["protobufresult",6]]],[11,"write_raw_little_endian64","","Write 64-bit integer little endian",91,[[["u64",15]],["protobufresult",6]]],[11,"write_float_no_tag","","Write <code>float</code>",91,[[["f32",15]],["protobufresult",6]]],[11,"write_double_no_tag","","Write <code>double</code>",91,[[["f64",15]],["protobufresult",6]]],[11,"write_float","","Write <code>float</code> field",91,[[["u32",15],["f32",15]],["protobufresult",6]]],[11,"write_double","","Write <code>double</code> field",91,[[["u32",15],["f64",15]],["protobufresult",6]]],[11,"write_uint64_no_tag","","Write varint",91,[[["u64",15]],["protobufresult",6]]],[11,"write_uint32_no_tag","","Write varint",91,[[["u32",15]],["protobufresult",6]]],[11,"write_int64_no_tag","","Write varint",91,[[["i64",15]],["protobufresult",6]]],[11,"write_int32_no_tag","","Write varint",91,[[["i32",15]],["protobufresult",6]]],[11,"write_sint64_no_tag","","Write zigzag varint",91,[[["i64",15]],["protobufresult",6]]],[11,"write_sint32_no_tag","","Write zigzag varint",91,[[["i32",15]],["protobufresult",6]]],[11,"write_fixed64_no_tag","","Write <code>fixed64</code>",91,[[["u64",15]],["protobufresult",6]]],[11,"write_fixed32_no_tag","","Write <code>fixed32</code>",91,[[["u32",15]],["protobufresult",6]]],[11,"write_sfixed64_no_tag","","Write <code>sfixed64</code>",91,[[["i64",15]],["protobufresult",6]]],[11,"write_sfixed32_no_tag","","Write <code>sfixed32</code>",91,[[["i32",15]],["protobufresult",6]]],[11,"write_bool_no_tag","","Write <code>bool</code>",91,[[["bool",15]],["protobufresult",6]]],[11,"write_enum_no_tag","","Write <code>enum</code>",91,[[["i32",15]],["protobufresult",6]]],[11,"write_enum_obj_no_tag","","Write <code>enum</code>",91,[[],["protobufresult",6]]],[11,"write_unknown_no_tag","","Write unknown value",91,[[["unknownvalueref",4]],["protobufresult",6]]],[11,"write_uint64","","Write <code>uint64</code> field",91,[[["u32",15],["u64",15]],["protobufresult",6]]],[11,"write_uint32","","Write <code>uint32</code> field",91,[[["u32",15]],["protobufresult",6]]],[11,"write_int64","","Write <code>int64</code> field",91,[[["u32",15],["i64",15]],["protobufresult",6]]],[11,"write_int32","","Write <code>int32</code> field",91,[[["u32",15],["i32",15]],["protobufresult",6]]],[11,"write_sint64","","Write <code>sint64</code> field",91,[[["u32",15],["i64",15]],["protobufresult",6]]],[11,"write_sint32","","Write <code>sint32</code> field",91,[[["u32",15],["i32",15]],["protobufresult",6]]],[11,"write_fixed64","","Write <code>fixed64</code> field",91,[[["u32",15],["u64",15]],["protobufresult",6]]],[11,"write_fixed32","","Write <code>fixed32</code> field",91,[[["u32",15]],["protobufresult",6]]],[11,"write_sfixed64","","Write <code>sfixed64</code> field",91,[[["u32",15],["i64",15]],["protobufresult",6]]],[11,"write_sfixed32","","Write <code>sfixed32</code> field",91,[[["u32",15],["i32",15]],["protobufresult",6]]],[11,"write_bool","","Write <code>bool</code> field",91,[[["u32",15],["bool",15]],["protobufresult",6]]],[11,"write_enum","","Write <code>enum</code> field",91,[[["u32",15],["i32",15]],["protobufresult",6]]],[11,"write_enum_obj","","Write <code>enum</code> field",91,[[["u32",15]],["protobufresult",6]]],[11,"write_unknown","","Write unknown field",91,[[["u32",15],["unknownvalueref",4]],["protobufresult",6]]],[11,"write_unknown_fields","","Write unknown fields",91,[[["unknownfields",3]],["protobufresult",6]]],[11,"write_bytes_no_tag","","Write bytes",91,[[],["protobufresult",6]]],[11,"write_string_no_tag","","Write string",91,[[["str",15]],["protobufresult",6]]],[11,"write_message_no_tag","","Write message",91,[[],["protobufresult",6]]],[11,"write_bytes","","Write <code>bytes</code> field",91,[[["u32",15]],["protobufresult",6]]],[11,"write_string","","Write <code>string</code> field",91,[[["u32",15],["str",15]],["protobufresult",6]]],[11,"write_message","","Write <code>message</code> field",91,[[["u32",15]],["protobufresult",6]]],[11,"values","","Get all enum values for enum type.",84,[[]]],[11,"descriptor","","Get enum value descriptor.",84,[[],["enumvaluedescriptor",3]]],[11,"enum_descriptor","","Get enum descriptor.",84,[[],["enumdescriptor",3]]],[11,"enum_descriptor_static","","Get enum descriptor by type.",84,[[],["enumdescriptor",3]]],[18,"INIT","protobuf::rt","Uninitialized <code>Lazy</code> object.",92,null],[11,"get","","Get lazy field value, initialize it with given function …",92,[[]]],[11,"parse_from","protobuf","Parse message from stream.",85,[[["codedinputstream",3]],["protobufresult",6]]],[11,"write_to","","Write the message to the stream.",85,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"write_length_delimited_to","","Write the message to the stream prepending the message …",85,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"write_length_delimited_to_vec","","Write the message to the vec, prepend the message with …",85,[[["vec",3]],["protobufresult",6]]],[11,"merge_from_bytes","","Update this message object with fields read from given …",85,[[],["protobufresult",6]]],[11,"parse_from_reader","","Parse message from reader. Parse stops on EOF or when …",85,[[["read",8]],["protobufresult",6]]],[11,"parse_from_bytes","","Parse message from byte array.",85,[[],["protobufresult",6]]],[11,"check_initialized","","Check if all required fields of this object are …",85,[[],["protobufresult",6]]],[11,"write_to_writer","","Write the message to the writer.",85,[[["write",8]],["protobufresult",6]]],[11,"write_to_vec","","Write the message to bytes vec.",85,[[["vec",3]],["protobufresult",6]]],[11,"write_to_bytes","","Write the message to bytes vec.",85,[[],[["protobufresult",6],["vec",3]]]],[11,"write_length_delimited_to_writer","","Write the message to the writer, prepend the message with …",85,[[["write",8]],["protobufresult",6]]],[11,"write_length_delimited_to_bytes","","Write the message to the bytes vec, prepend the message …",85,[[],[["protobufresult",6],["vec",3]]]],[11,"type_id","","Get type id for downcasting.",85,[[],["typeid",3]]],[11,"as_any_mut","","View self as mutable <code>Any</code>.",85,[[],["any",8]]],[11,"into_any","","Convert boxed self to boxed <code>Any</code>.",85,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor_static","","Get message descriptor for message type.",85,[[],["messagedescriptor",3]]],[11,"name","protobuf::reflect","Name of enum variant as specified in proto file",93,[[],["str",15]]],[11,"value","","<code>i32</code> value of the enum variant",93,[[],["i32",15]]],[11,"name","","Enum name as given in <code>.proto</code> file",94,[[],["str",15]]],[11,"for_type","","<code>EnumDescriptor</code> for enum type",94,[[],["enumdescriptor",3]]],[11,"new","","Create new enum descriptor.",94,[[["str",15],["filedescriptorproto",3]],["enumdescriptor",3]]],[11,"new_pb_name","","Create new enum descriptor.",94,[[["str",15],["filedescriptorproto",3]],["enumdescriptor",3]]],[11,"value_by_name","","Find enum value by name",94,[[["str",15]],["enumvaluedescriptor",3]]],[11,"value_by_number","","Find enum value by number",94,[[["i32",15]],["enumvaluedescriptor",3]]],[11,"proto","","Get <code>.proto</code> description of field",95,[[],["fielddescriptorproto",3]]],[11,"name","","Field name as specified in <code>.proto</code> file",95,[[],["str",15]]],[11,"json_name","","JSON field name.",95,[[],["str",15]]],[11,"is_repeated","","If this field repeated?",95,[[],["bool",15]]],[11,"has_field","","Check if field is set in given message.",95,[[["message",8]],["bool",15]]],[11,"len_field","","Return length of repeated field.",95,[[["message",8]],["usize",15]]],[11,"get_message","","Get message field or default instance if field is unset.",95,[[["message",8]],["message",8]]],[11,"get_enum","","Get <code>enum</code> field.",95,[[["message",8]],["enumvaluedescriptor",3]]],[11,"get_str","","Get <code>string</code> field.",95,[[["message",8]],["str",15]]],[11,"get_bytes","","Get <code>bytes</code> field.",95,[[["message",8]]]],[11,"get_u32","","Get <code>u32</code> field.",95,[[["message",8]],["u32",15]]],[11,"get_u64","","Get <code>u64</code> field.",95,[[["message",8]],["u64",15]]],[11,"get_i32","","Get <code>i32</code> field.",95,[[["message",8]],["i32",15]]],[11,"get_i64","","Get <code>i64</code> field.",95,[[["message",8]],["i64",15]]],[11,"get_bool","","Get <code>bool</code> field.",95,[[["message",8]],["bool",15]]],[11,"get_f32","","Get <code>float</code> field.",95,[[["message",8]],["f32",15]]],[11,"get_f64","","Get <code>double</code> field.",95,[[["message",8]],["f64",15]]],[11,"get_reflect","","Get field of any type.",95,[[["message",8]],["reflectfieldref",4]]],[11,"get_proto","","Get underlying <code>DescriptorProto</code> object.",96,[[],["descriptorproto",3]]],[11,"for_type","","Get a message descriptor for given message type",96,[[],["messagedescriptor",3]]],[11,"new_instance","","New empty message",96,[[],[["message",8],["box",3]]]],[11,"name","","Message name as given in <code>.proto</code> file",96,[[],["str",15]]],[11,"full_name","","Fully qualified protobuf message name",96,[[],["str",15]]],[11,"fields","","Message field descriptors.",96,[[]]],[11,"get_field_by_name","","Find message field by protobuf field name",96,[[["str",15]],[["fielddescriptor",3],["option",4]]]],[11,"get_field_by_name_or_json_name","","Find message field by field name or field JSON name",96,[[["str",15]],[["fielddescriptor",3],["option",4]]]],[11,"get_field_by_number","","Find message field by field name",96,[[["u32",15]],[["option",4],["fielddescriptor",3]]]],[11,"field_by_name","","Find field by name",96,[[["str",15]],["fielddescriptor",3]]],[11,"field_by_number","","Find field by number",96,[[["u32",15]],["fielddescriptor",3]]],[11,"as_any","","Convert to <code>Any</code>",46,[[],["any",8]]],[11,"is_non_zero","","Is value non-zero?",46,[[],["bool",15]]],[11,"as_ref_copy","","Return <code>ProtobufValueRef</code> if self is <code>Copy</code>.",46,[[],["reflectvalueref",4]]],[11,"len","protobuf","Return number of elements in this container.",97,[[],["usize",15]]],[11,"clear","","Clear.",97,[[]]],[11,"new","","Create new empty container.",97,[[],["repeatedfield",3]]],[11,"from_vec","","Create a contained with data from given vec.",97,[[["vec",3]],["repeatedfield",3]]],[11,"into_vec","","Convert data into vec.",97,[[],["vec",3]]],[11,"capacity","","Return current capacity.",97,[[],["usize",15]]],[11,"as_slice","","View data as slice.",97,[[]]],[11,"as_mut_slice","","View data as mutable slice.",97,[[]]],[11,"slice","","Get subslice of this container.",97,[[["usize",15]]]],[11,"slice_mut","","Get mutable subslice of this container.",97,[[["usize",15]]]],[11,"slice_from","","Get slice from given index.",97,[[["usize",15]]]],[11,"slice_from_mut","","Get mutable slice from given index.",97,[[["usize",15]]]],[11,"slice_to","","Get slice to given index.",97,[[["usize",15]]]],[11,"slice_to_mut","","Get mutable slice to given index.",97,[[["usize",15]]]],[11,"split_at","","View this container as two slices split at given index.",97,[[["usize",15]]]],[11,"split_at_mut","","View this container as two mutable slices split at given …",97,[[["usize",15]]]],[11,"tail","","View all but first elements of this container.",97,[[]]],[11,"last","","Last element of this container.",97,[[],["option",4]]],[11,"last_mut","","Mutable last element of this container.",97,[[],["option",4]]],[11,"init","","View all but last elements of this container.",97,[[]]],[11,"push","","Push an element to the end.",97,[[]]],[11,"pop","","Pop last element.",97,[[],["option",4]]],[11,"insert","","Insert an element at specified position.",97,[[["usize",15]]]],[11,"remove","","Remove an element from specified position.",97,[[["usize",15]]]],[11,"retain","","Retains only the elements specified by the predicate.",97,[[]]],[11,"truncate","","Truncate at specified length.",97,[[["usize",15]]]],[11,"reverse","","Reverse in place.",97,[[]]],[11,"into_iter","","Into owned iterator.",97,[[],["intoiter",3]]],[11,"iter","","Immutable data iterator.",97,[[],["iter",3]]],[11,"iter_mut","","Mutable data iterator.",97,[[],["itermut",3]]],[11,"sort_by","","Sort elements with given comparator.",97,[[]]],[11,"as_ptr","","Get data as raw pointer.",97,[[]]],[11,"as_mut_ptr","","Get data a mutable raw pointer.",97,[[]]],[11,"push_default","","Push default value. This operation could be faster than …",97,[[]]],[11,"from_slice","","Copy slice data to <code>RepeatedField</code>",97,[[],["repeatedfield",3]]],[11,"from_ref","","Copy slice data to <code>RepeatedField</code>",97,[[["asref",8]],["repeatedfield",3]]],[11,"to_vec","","Copy this data into new vec.",97,[[],["vec",3]]],[11,"contains","","True iff this container contains given element.",97,[[],["bool",15]]],[11,"some","","Construct this object from given value.",98,[[],["singularfield",3]]],[11,"is_some","","True iff this object contains data.",98,[[],["bool",15]]],[11,"is_none","","True iff this object contains no data.",98,[[],["bool",15]]],[11,"into_option","","Convert this object into <code>Option</code>.",98,[[],["option",4]]],[11,"as_ref","","View data as <code>Option</code>.",98,[[],["option",4]]],[11,"as_mut","","View data as mutable <code>Option</code>.",98,[[],["option",4]]],[11,"unwrap_ref","","Unwrap data as reference.",98,[[]]],[11,"unwrap_mut_ref","","Unwrap data as mutable reference.",98,[[]]],[11,"unwrap","","Unwrap data, panic if not set.",98,[[]]],[11,"unwrap_or","","Unwrap data or return given default value.",98,[[]]],[11,"unwrap_or_else","","Unwrap data or return given default value.",98,[[]]],[11,"map","","Apply a function to contained element and store result in …",98,[[],["singularptrfield",3]]],[11,"iter","","View as iterator over references.",98,[[],["intoiter",3]]],[11,"mut_iter","","View as iterator over mutable references.",98,[[],["intoiter",3]]],[11,"clear","","Clear this object. Note, contained object destructor is …",98,[[]]],[11,"none","","Construct a <code>SingularField</code> with no data.",98,[[],["singularfield",3]]],[11,"from_option","","Construct <code>SingularField</code> from <code>Option</code>.",98,[[["option",4]],["singularfield",3]]],[11,"take","","Return data as option, clear this object.",98,[[],["option",4]]],[11,"some","","Construct <code>SingularPtrField</code> from given object.",99,[[],["singularptrfield",3]]],[11,"none","","Construct an empty <code>SingularPtrField</code>.",99,[[],["singularptrfield",3]]],[11,"from_option","","Construct <code>SingularPtrField</code> from optional.",99,[[["option",4]],["singularptrfield",3]]],[11,"is_some","","True iff this object contains data.",99,[[],["bool",15]]],[11,"is_none","","True iff this object contains no data.",99,[[],["bool",15]]],[11,"into_option","","Convert into <code>Option<T></code>.",99,[[],["option",4]]],[11,"as_ref","","View data as reference option.",99,[[],["option",4]]],[11,"as_mut","","View data as mutable reference option.",99,[[],["option",4]]],[11,"get_ref","","Get data as reference. Panics if empty.",99,[[]]],[11,"get_mut_ref","","Get data as mutable reference. Panics if empty.",99,[[]]],[11,"unwrap","","Take the data. Panics if empty",99,[[]]],[11,"unwrap_or","","Take the data or return supplied default element if empty.",99,[[]]],[11,"unwrap_or_else","","Take the data or return supplied default element if empty.",99,[[]]],[11,"map","","Apply given function to contained data to construct …",99,[[],["singularptrfield",3]]],[11,"iter","","View data as iterator.",99,[[],["intoiter",3]]],[11,"mut_iter","","View data as mutable iterator.",99,[[],["intoiter",3]]],[11,"take","","Take data as option, leaving this object empty.",99,[[],["option",4]]],[11,"clear","","Clear this object, but do not call destructor of …",99,[[]]],[11,"unwrap_or_default","","Get contained data, consume self. Return default value …",98,[[]]],[11,"set_default","","Initialize this object with default value. This operation …",98,[[]]],[11,"unwrap_or_default","","Get contained data, consume self. Return default value …",99,[[]]],[11,"set_default","","Initialize this object with default value. This operation …",99,[[]]],[11,"new","protobuf::well_known_types","",52,[[],["any",3]]],[11,"get_type_url","","",52,[[],["str",15]]],[11,"clear_type_url","","",52,[[]]],[11,"set_type_url","","",52,[[["string",3]]]],[11,"mut_type_url","","",52,[[],["string",3]]],[11,"take_type_url","","",52,[[],["string",3]]],[11,"get_value","","",52,[[]]],[11,"clear_value","","",52,[[]]],[11,"set_value","","",52,[[["vec",3],["u8",15]]]],[11,"mut_value","","",52,[[],["vec",3]]],[11,"take_value","","",52,[[],[["vec",3],["u8",15]]]],[11,"new","","",53,[[],["api",3]]],[11,"get_name","","",53,[[],["str",15]]],[11,"clear_name","","",53,[[]]],[11,"set_name","","",53,[[["string",3]]]],[11,"mut_name","","",53,[[],["string",3]]],[11,"take_name","","",53,[[],["string",3]]],[11,"get_methods","","",53,[[]]],[11,"clear_methods","","",53,[[]]],[11,"set_methods","","",53,[[["method",3],["repeatedfield",3]]]],[11,"mut_methods","","",53,[[],["repeatedfield",3]]],[11,"take_methods","","",53,[[],[["method",3],["repeatedfield",3]]]],[11,"get_options","","",53,[[]]],[11,"clear_options","","",53,[[]]],[11,"set_options","","",53,[[["option",3],["repeatedfield",3]]]],[11,"mut_options","","",53,[[],["repeatedfield",3]]],[11,"take_options","","",53,[[],[["option",3],["repeatedfield",3]]]],[11,"get_version","","",53,[[],["str",15]]],[11,"clear_version","","",53,[[]]],[11,"set_version","","",53,[[["string",3]]]],[11,"mut_version","","",53,[[],["string",3]]],[11,"take_version","","",53,[[],["string",3]]],[11,"get_source_context","","",53,[[],["sourcecontext",3]]],[11,"clear_source_context","","",53,[[]]],[11,"has_source_context","","",53,[[],["bool",15]]],[11,"set_source_context","","",53,[[["sourcecontext",3]]]],[11,"mut_source_context","","",53,[[],["sourcecontext",3]]],[11,"take_source_context","","",53,[[],["sourcecontext",3]]],[11,"get_mixins","","",53,[[]]],[11,"clear_mixins","","",53,[[]]],[11,"set_mixins","","",53,[[["mixin",3],["repeatedfield",3]]]],[11,"mut_mixins","","",53,[[],["repeatedfield",3]]],[11,"take_mixins","","",53,[[],[["mixin",3],["repeatedfield",3]]]],[11,"get_syntax","","",53,[[],["syntax",4]]],[11,"clear_syntax","","",53,[[]]],[11,"set_syntax","","",53,[[["syntax",4]]]],[11,"new","","",54,[[],["method",3]]],[11,"get_name","","",54,[[],["str",15]]],[11,"clear_name","","",54,[[]]],[11,"set_name","","",54,[[["string",3]]]],[11,"mut_name","","",54,[[],["string",3]]],[11,"take_name","","",54,[[],["string",3]]],[11,"get_request_type_url","","",54,[[],["str",15]]],[11,"clear_request_type_url","","",54,[[]]],[11,"set_request_type_url","","",54,[[["string",3]]]],[11,"mut_request_type_url","","",54,[[],["string",3]]],[11,"take_request_type_url","","",54,[[],["string",3]]],[11,"get_request_streaming","","",54,[[],["bool",15]]],[11,"clear_request_streaming","","",54,[[]]],[11,"set_request_streaming","","",54,[[["bool",15]]]],[11,"get_response_type_url","","",54,[[],["str",15]]],[11,"clear_response_type_url","","",54,[[]]],[11,"set_response_type_url","","",54,[[["string",3]]]],[11,"mut_response_type_url","","",54,[[],["string",3]]],[11,"take_response_type_url","","",54,[[],["string",3]]],[11,"get_response_streaming","","",54,[[],["bool",15]]],[11,"clear_response_streaming","","",54,[[]]],[11,"set_response_streaming","","",54,[[["bool",15]]]],[11,"get_options","","",54,[[]]],[11,"clear_options","","",54,[[]]],[11,"set_options","","",54,[[["option",3],["repeatedfield",3]]]],[11,"mut_options","","",54,[[],["repeatedfield",3]]],[11,"take_options","","",54,[[],[["option",3],["repeatedfield",3]]]],[11,"get_syntax","","",54,[[],["syntax",4]]],[11,"clear_syntax","","",54,[[]]],[11,"set_syntax","","",54,[[["syntax",4]]]],[11,"new","","",55,[[],["mixin",3]]],[11,"get_name","","",55,[[],["str",15]]],[11,"clear_name","","",55,[[]]],[11,"set_name","","",55,[[["string",3]]]],[11,"mut_name","","",55,[[],["string",3]]],[11,"take_name","","",55,[[],["string",3]]],[11,"get_root","","",55,[[],["str",15]]],[11,"clear_root","","",55,[[]]],[11,"set_root","","",55,[[["string",3]]]],[11,"mut_root","","",55,[[],["string",3]]],[11,"take_root","","",55,[[],["string",3]]],[11,"new","","",56,[[],["duration",3]]],[11,"get_seconds","","",56,[[],["i64",15]]],[11,"clear_seconds","","",56,[[]]],[11,"set_seconds","","",56,[[["i64",15]]]],[11,"get_nanos","","",56,[[],["i32",15]]],[11,"clear_nanos","","",56,[[]]],[11,"set_nanos","","",56,[[["i32",15]]]],[11,"new","","",57,[[],["empty",3]]],[11,"new","","",58,[[],["fieldmask",3]]],[11,"get_paths","","",58,[[]]],[11,"clear_paths","","",58,[[]]],[11,"set_paths","","",58,[[["repeatedfield",3],["string",3]]]],[11,"mut_paths","","",58,[[],["repeatedfield",3]]],[11,"take_paths","","",58,[[],[["repeatedfield",3],["string",3]]]],[11,"new","","",59,[[],["sourcecontext",3]]],[11,"get_file_name","","",59,[[],["str",15]]],[11,"clear_file_name","","",59,[[]]],[11,"set_file_name","","",59,[[["string",3]]]],[11,"mut_file_name","","",59,[[],["string",3]]],[11,"take_file_name","","",59,[[],["string",3]]],[11,"new","","",60,[[],["struct",3]]],[11,"get_fields","","",60,[[],["hashmap",3]]],[11,"clear_fields","","",60,[[]]],[11,"set_fields","","",60,[[["hashmap",3],["string",3],["value",3]]]],[11,"mut_fields","","",60,[[],["hashmap",3]]],[11,"take_fields","","",60,[[],[["value",3],["string",3],["hashmap",3]]]],[11,"new","","",61,[[],["value",3]]],[11,"get_null_value","","",61,[[],["nullvalue",4]]],[11,"clear_null_value","","",61,[[]]],[11,"has_null_value","","",61,[[],["bool",15]]],[11,"set_null_value","","",61,[[["nullvalue",4]]]],[11,"get_number_value","","",61,[[],["f64",15]]],[11,"clear_number_value","","",61,[[]]],[11,"has_number_value","","",61,[[],["bool",15]]],[11,"set_number_value","","",61,[[["f64",15]]]],[11,"get_string_value","","",61,[[],["str",15]]],[11,"clear_string_value","","",61,[[]]],[11,"has_string_value","","",61,[[],["bool",15]]],[11,"set_string_value","","",61,[[["string",3]]]],[11,"mut_string_value","","",61,[[],["string",3]]],[11,"take_string_value","","",61,[[],["string",3]]],[11,"get_bool_value","","",61,[[],["bool",15]]],[11,"clear_bool_value","","",61,[[]]],[11,"has_bool_value","","",61,[[],["bool",15]]],[11,"set_bool_value","","",61,[[["bool",15]]]],[11,"get_struct_value","","",61,[[],["struct",3]]],[11,"clear_struct_value","","",61,[[]]],[11,"has_struct_value","","",61,[[],["bool",15]]],[11,"set_struct_value","","",61,[[["struct",3]]]],[11,"mut_struct_value","","",61,[[],["struct",3]]],[11,"take_struct_value","","",61,[[],["struct",3]]],[11,"get_list_value","","",61,[[],["listvalue",3]]],[11,"clear_list_value","","",61,[[]]],[11,"has_list_value","","",61,[[],["bool",15]]],[11,"set_list_value","","",61,[[["listvalue",3]]]],[11,"mut_list_value","","",61,[[],["listvalue",3]]],[11,"take_list_value","","",61,[[],["listvalue",3]]],[11,"new","","",63,[[],["listvalue",3]]],[11,"get_values","","",63,[[]]],[11,"clear_values","","",63,[[]]],[11,"set_values","","",63,[[["repeatedfield",3],["value",3]]]],[11,"mut_values","","",63,[[],["repeatedfield",3]]],[11,"take_values","","",63,[[],[["repeatedfield",3],["value",3]]]],[11,"new","","",65,[[],["timestamp",3]]],[11,"get_seconds","","",65,[[],["i64",15]]],[11,"clear_seconds","","",65,[[]]],[11,"set_seconds","","",65,[[["i64",15]]]],[11,"get_nanos","","",65,[[],["i32",15]]],[11,"clear_nanos","","",65,[[]]],[11,"set_nanos","","",65,[[["i32",15]]]],[11,"new","","",66,[[],["type",3]]],[11,"get_name","","",66,[[],["str",15]]],[11,"clear_name","","",66,[[]]],[11,"set_name","","",66,[[["string",3]]]],[11,"mut_name","","",66,[[],["string",3]]],[11,"take_name","","",66,[[],["string",3]]],[11,"get_fields","","",66,[[]]],[11,"clear_fields","","",66,[[]]],[11,"set_fields","","",66,[[["field",3],["repeatedfield",3]]]],[11,"mut_fields","","",66,[[],["repeatedfield",3]]],[11,"take_fields","","",66,[[],[["field",3],["repeatedfield",3]]]],[11,"get_oneofs","","",66,[[]]],[11,"clear_oneofs","","",66,[[]]],[11,"set_oneofs","","",66,[[["repeatedfield",3],["string",3]]]],[11,"mut_oneofs","","",66,[[],["repeatedfield",3]]],[11,"take_oneofs","","",66,[[],[["repeatedfield",3],["string",3]]]],[11,"get_options","","",66,[[]]],[11,"clear_options","","",66,[[]]],[11,"set_options","","",66,[[["option",3],["repeatedfield",3]]]],[11,"mut_options","","",66,[[],["repeatedfield",3]]],[11,"take_options","","",66,[[],[["option",3],["repeatedfield",3]]]],[11,"get_source_context","","",66,[[],["sourcecontext",3]]],[11,"clear_source_context","","",66,[[]]],[11,"has_source_context","","",66,[[],["bool",15]]],[11,"set_source_context","","",66,[[["sourcecontext",3]]]],[11,"mut_source_context","","",66,[[],["sourcecontext",3]]],[11,"take_source_context","","",66,[[],["sourcecontext",3]]],[11,"get_syntax","","",66,[[],["syntax",4]]],[11,"clear_syntax","","",66,[[]]],[11,"set_syntax","","",66,[[["syntax",4]]]],[11,"new","","",67,[[],["field",3]]],[11,"get_kind","","",67,[[],["field_kind",4]]],[11,"clear_kind","","",67,[[]]],[11,"set_kind","","",67,[[["field_kind",4]]]],[11,"get_cardinality","","",67,[[],["field_cardinality",4]]],[11,"clear_cardinality","","",67,[[]]],[11,"set_cardinality","","",67,[[["field_cardinality",4]]]],[11,"get_number","","",67,[[],["i32",15]]],[11,"clear_number","","",67,[[]]],[11,"set_number","","",67,[[["i32",15]]]],[11,"get_name","","",67,[[],["str",15]]],[11,"clear_name","","",67,[[]]],[11,"set_name","","",67,[[["string",3]]]],[11,"mut_name","","",67,[[],["string",3]]],[11,"take_name","","",67,[[],["string",3]]],[11,"get_type_url","","",67,[[],["str",15]]],[11,"clear_type_url","","",67,[[]]],[11,"set_type_url","","",67,[[["string",3]]]],[11,"mut_type_url","","",67,[[],["string",3]]],[11,"take_type_url","","",67,[[],["string",3]]],[11,"get_oneof_index","","",67,[[],["i32",15]]],[11,"clear_oneof_index","","",67,[[]]],[11,"set_oneof_index","","",67,[[["i32",15]]]],[11,"get_packed","","",67,[[],["bool",15]]],[11,"clear_packed","","",67,[[]]],[11,"set_packed","","",67,[[["bool",15]]]],[11,"get_options","","",67,[[]]],[11,"clear_options","","",67,[[]]],[11,"set_options","","",67,[[["option",3],["repeatedfield",3]]]],[11,"mut_options","","",67,[[],["repeatedfield",3]]],[11,"take_options","","",67,[[],[["option",3],["repeatedfield",3]]]],[11,"get_json_name","","",67,[[],["str",15]]],[11,"clear_json_name","","",67,[[]]],[11,"set_json_name","","",67,[[["string",3]]]],[11,"mut_json_name","","",67,[[],["string",3]]],[11,"take_json_name","","",67,[[],["string",3]]],[11,"get_default_value","","",67,[[],["str",15]]],[11,"clear_default_value","","",67,[[]]],[11,"set_default_value","","",67,[[["string",3]]]],[11,"mut_default_value","","",67,[[],["string",3]]],[11,"take_default_value","","",67,[[],["string",3]]],[11,"new","","",70,[[],["enum",3]]],[11,"get_name","","",70,[[],["str",15]]],[11,"clear_name","","",70,[[]]],[11,"set_name","","",70,[[["string",3]]]],[11,"mut_name","","",70,[[],["string",3]]],[11,"take_name","","",70,[[],["string",3]]],[11,"get_enumvalue","","",70,[[]]],[11,"clear_enumvalue","","",70,[[]]],[11,"set_enumvalue","","",70,[[["repeatedfield",3],["enumvalue",3]]]],[11,"mut_enumvalue","","",70,[[],["repeatedfield",3]]],[11,"take_enumvalue","","",70,[[],[["repeatedfield",3],["enumvalue",3]]]],[11,"get_options","","",70,[[]]],[11,"clear_options","","",70,[[]]],[11,"set_options","","",70,[[["option",3],["repeatedfield",3]]]],[11,"mut_options","","",70,[[],["repeatedfield",3]]],[11,"take_options","","",70,[[],[["option",3],["repeatedfield",3]]]],[11,"get_source_context","","",70,[[],["sourcecontext",3]]],[11,"clear_source_context","","",70,[[]]],[11,"has_source_context","","",70,[[],["bool",15]]],[11,"set_source_context","","",70,[[["sourcecontext",3]]]],[11,"mut_source_context","","",70,[[],["sourcecontext",3]]],[11,"take_source_context","","",70,[[],["sourcecontext",3]]],[11,"get_syntax","","",70,[[],["syntax",4]]],[11,"clear_syntax","","",70,[[]]],[11,"set_syntax","","",70,[[["syntax",4]]]],[11,"new","","",71,[[],["enumvalue",3]]],[11,"get_name","","",71,[[],["str",15]]],[11,"clear_name","","",71,[[]]],[11,"set_name","","",71,[[["string",3]]]],[11,"mut_name","","",71,[[],["string",3]]],[11,"take_name","","",71,[[],["string",3]]],[11,"get_number","","",71,[[],["i32",15]]],[11,"clear_number","","",71,[[]]],[11,"set_number","","",71,[[["i32",15]]]],[11,"get_options","","",71,[[]]],[11,"clear_options","","",71,[[]]],[11,"set_options","","",71,[[["option",3],["repeatedfield",3]]]],[11,"mut_options","","",71,[[],["repeatedfield",3]]],[11,"take_options","","",71,[[],[["option",3],["repeatedfield",3]]]],[11,"new","","",72,[[],["option",3]]],[11,"get_name","","",72,[[],["str",15]]],[11,"clear_name","","",72,[[]]],[11,"set_name","","",72,[[["string",3]]]],[11,"mut_name","","",72,[[],["string",3]]],[11,"take_name","","",72,[[],["string",3]]],[11,"get_value","","",72,[[],["any",3]]],[11,"clear_value","","",72,[[]]],[11,"has_value","","",72,[[],["bool",15]]],[11,"set_value","","",72,[[["any",3]]]],[11,"mut_value","","",72,[[],["any",3]]],[11,"take_value","","",72,[[],["any",3]]],[11,"new","","",74,[[],["doublevalue",3]]],[11,"get_value","","",74,[[],["f64",15]]],[11,"clear_value","","",74,[[]]],[11,"set_value","","",74,[[["f64",15]]]],[11,"new","","",75,[[],["floatvalue",3]]],[11,"get_value","","",75,[[],["f32",15]]],[11,"clear_value","","",75,[[]]],[11,"set_value","","",75,[[["f32",15]]]],[11,"new","","",76,[[],["int64value",3]]],[11,"get_value","","",76,[[],["i64",15]]],[11,"clear_value","","",76,[[]]],[11,"set_value","","",76,[[["i64",15]]]],[11,"new","","",77,[[],["uint64value",3]]],[11,"get_value","","",77,[[],["u64",15]]],[11,"clear_value","","",77,[[]]],[11,"set_value","","",77,[[["u64",15]]]],[11,"new","","",78,[[],["int32value",3]]],[11,"get_value","","",78,[[],["i32",15]]],[11,"clear_value","","",78,[[]]],[11,"set_value","","",78,[[["i32",15]]]],[11,"new","","",79,[[],["uint32value",3]]],[11,"get_value","","",79,[[],["u32",15]]],[11,"clear_value","","",79,[[]]],[11,"set_value","","",79,[[["u32",15]]]],[11,"new","","",80,[[],["boolvalue",3]]],[11,"get_value","","",80,[[],["bool",15]]],[11,"clear_value","","",80,[[]]],[11,"set_value","","",80,[[["bool",15]]]],[11,"new","","",81,[[],["stringvalue",3]]],[11,"get_value","","",81,[[],["str",15]]],[11,"clear_value","","",81,[[]]],[11,"set_value","","",81,[[["string",3]]]],[11,"mut_value","","",81,[[],["string",3]]],[11,"take_value","","",81,[[],["string",3]]],[11,"new","","",82,[[],["bytesvalue",3]]],[11,"get_value","","",82,[[]]],[11,"clear_value","","",82,[[]]],[11,"set_value","","",82,[[["vec",3],["u8",15]]]],[11,"mut_value","","",82,[[],["vec",3]]],[11,"take_value","","",82,[[],[["vec",3],["u8",15]]]],[11,"get","protobuf","Get cached size",118,[[],["u32",15]]],[11,"set","","Set cached size",118,[[["u32",15]]]],[11,"wire_type","","Wire type for this unknown",87,[[],["wiretype",4]]],[11,"get_ref","","As ref",87,[[],["unknownvalueref",4]]],[11,"sint32","","Construct unknown value from <code>sint32</code> value.",87,[[["i32",15]],["unknownvalue",4]]],[11,"sint64","","Construct unknown value from <code>sint64</code> value.",87,[[["i64",15]],["unknownvalue",4]]],[11,"wire_type","","Wire-type to serialize this unknown",88,[[],["wiretype",4]]],[11,"add_value","","Add unknown value",89,[[["unknownvalue",4]]]],[11,"iter","","Iterate over unknown values",89,[[],["unknownvaluesiter",3]]],[11,"new","","Empty unknown fields",86,[[],["unknownfields",3]]],[11,"add_fixed32","","Add unknown fixed 32-bit",86,[[["u32",15]]]],[11,"add_fixed64","","Add unknown fixed 64-bit",86,[[["u32",15],["u64",15]]]],[11,"add_varint","","Add unknown varint",86,[[["u32",15],["u64",15]]]],[11,"add_length_delimited","","Add unknown length delimited",86,[[["u32",15],["vec",3],["u8",15]]]],[11,"add_value","","Add unknown value",86,[[["u32",15],["unknownvalue",4]]]],[11,"remove","","Remove unknown field by number",86,[[["u32",15]]]],[11,"iter","","Iterate over all unknowns",86,[[],["unknownfieldsiter",3]]],[11,"get","","Find unknown field by number",86,[[["u32",15]],[["option",4],["unknownvalues",3]]]]],"p":[[3,"FileDescriptorSet"],[3,"FileDescriptorProto"],[3,"DescriptorProto"],[3,"DescriptorProto_ExtensionRange"],[3,"DescriptorProto_ReservedRange"],[3,"ExtensionRangeOptions"],[3,"FieldDescriptorProto"],[4,"FieldDescriptorProto_Type"],[4,"FieldDescriptorProto_Label"],[3,"OneofDescriptorProto"],[3,"EnumDescriptorProto"],[3,"EnumDescriptorProto_EnumReservedRange"],[3,"EnumValueDescriptorProto"],[3,"ServiceDescriptorProto"],[3,"MethodDescriptorProto"],[3,"FileOptions"],[4,"FileOptions_OptimizeMode"],[3,"MessageOptions"],[3,"FieldOptions"],[4,"FieldOptions_CType"],[4,"FieldOptions_JSType"],[3,"OneofOptions"],[3,"EnumOptions"],[3,"EnumValueOptions"],[3,"ServiceOptions"],[3,"MethodOptions"],[4,"MethodOptions_IdempotencyLevel"],[3,"UninterpretedOption"],[3,"UninterpretedOption_NamePart"],[3,"SourceCodeInfo"],[3,"SourceCodeInfo_Location"],[3,"GeneratedCodeInfo"],[3,"GeneratedCodeInfo_Annotation"],[3,"Version"],[3,"CodeGeneratorRequest"],[3,"CodeGeneratorResponse"],[3,"CodeGeneratorResponse_File"],[4,"CodeGeneratorResponse_Feature"],[4,"WireType"],[3,"Tag"],[4,"WireError"],[4,"ProtobufError"],[13,"MessageNotInitialized"],[3,"ExtFieldOptional"],[3,"ExtFieldRepeated"],[3,"Lazy"],[8,"ProtobufValue"],[4,"ReflectValueRef"],[4,"ReflectFieldRef"],[8,"ProtobufVarint"],[8,"ProtobufVarintZigzag"],[8,"ProtobufType"],[3,"Any"],[3,"Api"],[3,"Method"],[3,"Mixin"],[3,"Duration"],[3,"Empty"],[3,"FieldMask"],[3,"SourceContext"],[3,"Struct"],[3,"Value"],[4,"Value_oneof_kind"],[3,"ListValue"],[4,"NullValue"],[3,"Timestamp"],[3,"Type"],[3,"Field"],[4,"Field_Kind"],[4,"Field_Cardinality"],[3,"Enum"],[3,"EnumValue"],[3,"Option"],[4,"Syntax"],[3,"DoubleValue"],[3,"FloatValue"],[3,"Int64Value"],[3,"UInt64Value"],[3,"Int32Value"],[3,"UInt32Value"],[3,"BoolValue"],[3,"StringValue"],[3,"BytesValue"],[8,"Clear"],[8,"ProtobufEnum"],[8,"Message"],[3,"UnknownFields"],[4,"UnknownValue"],[4,"UnknownValueRef"],[3,"UnknownValues"],[3,"CodedInputStream"],[3,"CodedOutputStream"],[3,"LazyV2"],[3,"EnumValueDescriptor"],[3,"EnumDescriptor"],[3,"FieldDescriptor"],[3,"MessageDescriptor"],[3,"RepeatedField"],[3,"SingularField"],[3,"SingularPtrField"],[3,"ProtobufTypeFloat"],[3,"ProtobufTypeDouble"],[3,"ProtobufTypeInt32"],[3,"ProtobufTypeInt64"],[3,"ProtobufTypeUint32"],[3,"ProtobufTypeUint64"],[3,"ProtobufTypeSint32"],[3,"ProtobufTypeSint64"],[3,"ProtobufTypeFixed32"],[3,"ProtobufTypeFixed64"],[3,"ProtobufTypeSfixed32"],[3,"ProtobufTypeSfixed64"],[3,"ProtobufTypeBool"],[3,"ProtobufTypeString"],[3,"ProtobufTypeBytes"],[3,"ProtobufTypeChars"],[3,"ProtobufTypeEnum"],[3,"ProtobufTypeMessage"],[3,"CachedSize"],[3,"UnknownValuesIter"],[3,"UnknownFieldsIter"]]},\
"protos":{"doc":"","i":[[0,"plugin","protos","",null,null],[3,"CpuidEntry","protos::plugin","Generated files are compatible only with the same version …",null,null],[12,"function","","",0,null],[12,"has_index","","",0,null],[12,"index","","",0,null],[12,"eax","","",0,null],[12,"ebx","","",0,null],[12,"ecx","","",0,null],[12,"edx","","",0,null],[12,"unknown_fields","","",0,null],[12,"cached_size","","",0,null],[3,"MainRequest","","",null,null],[12,"message","","",1,null],[12,"unknown_fields","","",1,null],[12,"cached_size","","",1,null],[4,"MainRequest_oneof_message","","",null,null],[13,"create","","",2,null],[13,"destroy","","",2,null],[13,"new_connection","","",2,null],[13,"get_shutdown_eventfd","","",2,null],[13,"check_extension","","",2,null],[13,"get_supported_cpuid","","",2,null],[13,"get_emulated_cpuid","","",2,null],[13,"get_msr_index_list","","",2,null],[13,"get_net_config","","",2,null],[13,"reserve_range","","",2,null],[13,"set_irq","","",2,null],[13,"set_irq_routing","","",2,null],[13,"get_state","","",2,null],[13,"set_state","","",2,null],[13,"set_identity_map_addr","","",2,null],[13,"pause_vcpus","","",2,null],[13,"get_vcpus","","",2,null],[13,"start","","",2,null],[13,"set_call_hint","","",2,null],[13,"dirty_log","","",2,null],[3,"MainRequest_Create","","",null,null],[12,"id","","",3,null],[12,"constructor","","",3,null],[12,"unknown_fields","","",3,null],[12,"cached_size","","",3,null],[4,"MainRequest_Create_oneof_constructor","","",null,null],[13,"io_event","","",4,null],[13,"memory","","",4,null],[13,"irq_event","","",4,null],[3,"MainRequest_Create_IoEvent","","",null,null],[12,"space","","",5,null],[12,"address","","",5,null],[12,"length","","",5,null],[12,"datamatch","","",5,null],[12,"unknown_fields","","",5,null],[12,"cached_size","","",5,null],[3,"MainRequest_Create_Memory","","",null,null],[12,"offset","","",6,null],[12,"start","","",6,null],[12,"length","","",6,null],[12,"read_only","","",6,null],[12,"dirty_log","","",6,null],[12,"unknown_fields","","",6,null],[12,"cached_size","","",6,null],[3,"MainRequest_Create_IrqEvent","","",null,null],[12,"irq_id","","",7,null],[12,"resample","","",7,null],[12,"unknown_fields","","",7,null],[12,"cached_size","","",7,null],[3,"MainRequest_Destroy","","",null,null],[12,"id","","",8,null],[12,"unknown_fields","","",8,null],[12,"cached_size","","",8,null],[3,"MainRequest_NewConnection","","",null,null],[12,"unknown_fields","","",9,null],[12,"cached_size","","",9,null],[3,"MainRequest_GetShutdownEventfd","","",null,null],[12,"unknown_fields","","",10,null],[12,"cached_size","","",10,null],[3,"MainRequest_CheckExtension","","",null,null],[12,"extension","","",11,null],[12,"unknown_fields","","",11,null],[12,"cached_size","","",11,null],[3,"MainRequest_CpuidRequest","","",null,null],[12,"unknown_fields","","",12,null],[12,"cached_size","","",12,null],[3,"MainRequest_MsrListRequest","","",null,null],[12,"unknown_fields","","",13,null],[12,"cached_size","","",13,null],[3,"MainRequest_GetNetConfig","","",null,null],[12,"unknown_fields","","",14,null],[12,"cached_size","","",14,null],[3,"MainRequest_ReserveRange","","",null,null],[12,"space","","",15,null],[12,"start","","",15,null],[12,"length","","",15,null],[12,"async_write","","",15,null],[12,"unknown_fields","","",15,null],[12,"cached_size","","",15,null],[3,"MainRequest_SetIrq","","",null,null],[12,"irq_id","","",16,null],[12,"active","","",16,null],[12,"unknown_fields","","",16,null],[12,"cached_size","","",16,null],[3,"MainRequest_SetIrqRouting","","",null,null],[12,"routes","","",17,null],[12,"unknown_fields","","",17,null],[12,"cached_size","","",17,null],[3,"MainRequest_SetIrqRouting_Route","","",null,null],[12,"irq_id","","",18,null],[12,"route","","",18,null],[12,"unknown_fields","","",18,null],[12,"cached_size","","",18,null],[4,"MainRequest_SetIrqRouting_Route_oneof_route","","",null,null],[13,"irqchip","","",19,null],[13,"msi","","",19,null],[3,"MainRequest_SetIrqRouting_Route_Irqchip","","",null,null],[12,"irqchip","","",20,null],[12,"pin","","",20,null],[12,"unknown_fields","","",20,null],[12,"cached_size","","",20,null],[3,"MainRequest_SetIrqRouting_Route_Msi","","",null,null],[12,"address","","",21,null],[12,"data","","",21,null],[12,"unknown_fields","","",21,null],[12,"cached_size","","",21,null],[3,"MainRequest_GetState","","",null,null],[12,"set","","",22,null],[12,"unknown_fields","","",22,null],[12,"cached_size","","",22,null],[3,"MainRequest_SetState","","",null,null],[12,"set","","",23,null],[12,"state","","",23,null],[12,"unknown_fields","","",23,null],[12,"cached_size","","",23,null],[3,"MainRequest_SetIdentityMapAddr","","",null,null],[12,"address","","",24,null],[12,"unknown_fields","","",24,null],[12,"cached_size","","",24,null],[3,"MainRequest_PauseVcpus","","",null,null],[12,"cpu_mask","","",25,null],[12,"user","","",25,null],[12,"unknown_fields","","",25,null],[12,"cached_size","","",25,null],[3,"MainRequest_GetVcpus","","",null,null],[12,"unknown_fields","","",26,null],[12,"cached_size","","",26,null],[3,"MainRequest_Start","","",null,null],[12,"unknown_fields","","",27,null],[12,"cached_size","","",27,null],[3,"MainRequest_SetCallHint","","",null,null],[12,"space","","",28,null],[12,"address","","",28,null],[12,"on_write","","",28,null],[12,"hints","","",28,null],[12,"unknown_fields","","",28,null],[12,"cached_size","","",28,null],[3,"MainRequest_SetCallHint_RegHint","","",null,null],[12,"match_rax","","",29,null],[12,"match_rbx","","",29,null],[12,"match_rcx","","",29,null],[12,"match_rdx","","",29,null],[12,"rax","","",29,null],[12,"rbx","","",29,null],[12,"rcx","","",29,null],[12,"rdx","","",29,null],[12,"send_sregs","","",29,null],[12,"send_debugregs","","",29,null],[12,"unknown_fields","","",29,null],[12,"cached_size","","",29,null],[3,"MainRequest_MemoryDirtyLog","","",null,null],[12,"id","","",30,null],[12,"unknown_fields","","",30,null],[12,"cached_size","","",30,null],[4,"MainRequest_StateSet","","",null,null],[13,"PIC0","","",31,null],[13,"PIC1","","",31,null],[13,"IOAPIC","","",31,null],[13,"PIT","","",31,null],[13,"CLOCK","","",31,null],[3,"MainResponse","","",null,null],[12,"errno","","",32,null],[12,"message","","",32,null],[12,"unknown_fields","","",32,null],[12,"cached_size","","",32,null],[4,"MainResponse_oneof_message","","",null,null],[13,"create","","",33,null],[13,"destroy","","",33,null],[13,"new_connection","","",33,null],[13,"get_shutdown_eventfd","","",33,null],[13,"check_extension","","",33,null],[13,"get_supported_cpuid","","",33,null],[13,"get_emulated_cpuid","","",33,null],[13,"get_msr_index_list","","",33,null],[13,"get_net_config","","",33,null],[13,"reserve_range","","",33,null],[13,"set_irq","","",33,null],[13,"set_irq_routing","","",33,null],[13,"get_state","","",33,null],[13,"set_state","","",33,null],[13,"set_identity_map_addr","","",33,null],[13,"pause_vcpus","","",33,null],[13,"get_vcpus","","",33,null],[13,"start","","",33,null],[13,"set_call_hint","","",33,null],[13,"dirty_log","","",33,null],[3,"MainResponse_Create","","",null,null],[12,"unknown_fields","","",34,null],[12,"cached_size","","",34,null],[3,"MainResponse_Destroy","","",null,null],[12,"unknown_fields","","",35,null],[12,"cached_size","","",35,null],[3,"MainResponse_NewConnection","","",null,null],[12,"unknown_fields","","",36,null],[12,"cached_size","","",36,null],[3,"MainResponse_GetShutdownEventfd","","",null,null],[12,"unknown_fields","","",37,null],[12,"cached_size","","",37,null],[3,"MainResponse_CheckExtension","","",null,null],[12,"has_extension","","",38,null],[12,"unknown_fields","","",38,null],[12,"cached_size","","",38,null],[3,"MainResponse_CpuidResponse","","",null,null],[12,"entries","","",39,null],[12,"unknown_fields","","",39,null],[12,"cached_size","","",39,null],[3,"MainResponse_MsrListResponse","","",null,null],[12,"indices","","",40,null],[12,"unknown_fields","","",40,null],[12,"cached_size","","",40,null],[3,"MainResponse_GetNetConfig","","",null,null],[12,"host_mac_address","","",41,null],[12,"host_ipv4_address","","",41,null],[12,"netmask","","",41,null],[12,"unknown_fields","","",41,null],[12,"cached_size","","",41,null],[3,"MainResponse_ReserveRange","","",null,null],[12,"unknown_fields","","",42,null],[12,"cached_size","","",42,null],[3,"MainResponse_SetIrq","","",null,null],[12,"unknown_fields","","",43,null],[12,"cached_size","","",43,null],[3,"MainResponse_SetIrqRouting","","",null,null],[12,"unknown_fields","","",44,null],[12,"cached_size","","",44,null],[3,"MainResponse_GetState","","",null,null],[12,"state","","",45,null],[12,"unknown_fields","","",45,null],[12,"cached_size","","",45,null],[3,"MainResponse_SetState","","",null,null],[12,"unknown_fields","","",46,null],[12,"cached_size","","",46,null],[3,"MainResponse_SetIdentityMapAddr","","",null,null],[12,"unknown_fields","","",47,null],[12,"cached_size","","",47,null],[3,"MainResponse_PauseVcpus","","",null,null],[12,"unknown_fields","","",48,null],[12,"cached_size","","",48,null],[3,"MainResponse_GetVcpus","","",null,null],[12,"unknown_fields","","",49,null],[12,"cached_size","","",49,null],[3,"MainResponse_Start","","",null,null],[12,"unknown_fields","","",50,null],[12,"cached_size","","",50,null],[3,"MainResponse_SetCallHint","","",null,null],[12,"unknown_fields","","",51,null],[12,"cached_size","","",51,null],[3,"MainResponse_MemoryDirtyLog","","",null,null],[12,"bitmap","","",52,null],[12,"unknown_fields","","",52,null],[12,"cached_size","","",52,null],[3,"VcpuRequest","","",null,null],[12,"message","","",53,null],[12,"unknown_fields","","",53,null],[12,"cached_size","","",53,null],[4,"VcpuRequest_oneof_message","","",null,null],[13,"wait","","",54,null],[13,"resume","","",54,null],[13,"get_state","","",54,null],[13,"set_state","","",54,null],[13,"get_msrs","","",54,null],[13,"set_msrs","","",54,null],[13,"set_cpuid","","",54,null],[13,"shutdown","","",54,null],[13,"get_hyperv_cpuid","","",54,null],[13,"enable_capability","","",54,null],[3,"VcpuRequest_Wait","","",null,null],[12,"unknown_fields","","",55,null],[12,"cached_size","","",55,null],[3,"VcpuRequest_Resume","","",null,null],[12,"data","","",56,null],[12,"regs","","",56,null],[12,"sregs","","",56,null],[12,"debugregs","","",56,null],[12,"unknown_fields","","",56,null],[12,"cached_size","","",56,null],[3,"VcpuRequest_GetState","","",null,null],[12,"set","","",57,null],[12,"unknown_fields","","",57,null],[12,"cached_size","","",57,null],[3,"VcpuRequest_SetState","","",null,null],[12,"set","","",58,null],[12,"state","","",58,null],[12,"unknown_fields","","",58,null],[12,"cached_size","","",58,null],[3,"VcpuRequest_CpuidRequest","","",null,null],[12,"unknown_fields","","",59,null],[12,"cached_size","","",59,null],[3,"VcpuRequest_GetMsrs","","",null,null],[12,"entry_indices","","",60,null],[12,"unknown_fields","","",60,null],[12,"cached_size","","",60,null],[3,"VcpuRequest_MsrEntry","","",null,null],[12,"index","","",61,null],[12,"data","","",61,null],[12,"unknown_fields","","",61,null],[12,"cached_size","","",61,null],[3,"VcpuRequest_SetMsrs","","",null,null],[12,"entries","","",62,null],[12,"unknown_fields","","",62,null],[12,"cached_size","","",62,null],[3,"VcpuRequest_SetCpuid","","",null,null],[12,"entries","","",63,null],[12,"unknown_fields","","",63,null],[12,"cached_size","","",63,null],[3,"VcpuRequest_Shutdown","","",null,null],[12,"unknown_fields","","",64,null],[12,"cached_size","","",64,null],[3,"VcpuRequest_EnableCapability","","",null,null],[12,"capability","","",65,null],[12,"unknown_fields","","",65,null],[12,"cached_size","","",65,null],[4,"VcpuRequest_StateSet","","",null,null],[13,"REGS","","",66,null],[13,"SREGS","","",66,null],[13,"FPU","","",66,null],[13,"DEBUGREGS","","",66,null],[13,"LAPIC","","",66,null],[13,"MP","","",66,null],[13,"XCREGS","","",66,null],[13,"EVENTS","","",66,null],[3,"VcpuResponse","","",null,null],[12,"errno","","",67,null],[12,"message","","",67,null],[12,"unknown_fields","","",67,null],[12,"cached_size","","",67,null],[4,"VcpuResponse_oneof_message","","",null,null],[13,"wait","","",68,null],[13,"get_state","","",68,null],[13,"set_state","","",68,null],[13,"get_msrs","","",68,null],[13,"set_msrs","","",68,null],[13,"set_cpuid","","",68,null],[13,"get_hyperv_cpuid","","",68,null],[13,"enable_capability","","",68,null],[3,"VcpuResponse_Wait","","",null,null],[12,"exit","","",69,null],[12,"unknown_fields","","",69,null],[12,"cached_size","","",69,null],[4,"VcpuResponse_Wait_oneof_exit","","",null,null],[13,"init","","",70,null],[13,"io","","",70,null],[13,"user","","",70,null],[13,"hyperv_call","","",70,null],[13,"hyperv_synic","","",70,null],[3,"VcpuResponse_Wait_Init","","",null,null],[12,"unknown_fields","","",71,null],[12,"cached_size","","",71,null],[3,"VcpuResponse_Wait_Io","","",null,null],[12,"space","","",72,null],[12,"address","","",72,null],[12,"is_write","","",72,null],[12,"no_resume","","",72,null],[12,"data","","",72,null],[12,"regs","","",72,null],[12,"sregs","","",72,null],[12,"debugregs","","",72,null],[12,"unknown_fields","","",72,null],[12,"cached_size","","",72,null],[3,"VcpuResponse_Wait_User","","",null,null],[12,"user","","",73,null],[12,"unknown_fields","","",73,null],[12,"cached_size","","",73,null],[3,"VcpuResponse_Wait_HypervCall","","",null,null],[12,"input","","",74,null],[12,"params0","","",74,null],[12,"params1","","",74,null],[12,"unknown_fields","","",74,null],[12,"cached_size","","",74,null],[3,"VcpuResponse_Wait_HypervSynic","","",null,null],[12,"msr","","",75,null],[12,"control","","",75,null],[12,"evt_page","","",75,null],[12,"msg_page","","",75,null],[12,"unknown_fields","","",75,null],[12,"cached_size","","",75,null],[3,"VcpuResponse_GetState","","",null,null],[12,"state","","",76,null],[12,"unknown_fields","","",76,null],[12,"cached_size","","",76,null],[3,"VcpuResponse_SetState","","",null,null],[12,"unknown_fields","","",77,null],[12,"cached_size","","",77,null],[3,"VcpuResponse_CpuidResponse","","",null,null],[12,"entries","","",78,null],[12,"unknown_fields","","",78,null],[12,"cached_size","","",78,null],[3,"VcpuResponse_GetMsrs","","",null,null],[12,"entry_data","","",79,null],[12,"unknown_fields","","",79,null],[12,"cached_size","","",79,null],[3,"VcpuResponse_SetMsrs","","",null,null],[12,"unknown_fields","","",80,null],[12,"cached_size","","",80,null],[3,"VcpuResponse_SetCpuid","","",null,null],[12,"unknown_fields","","",81,null],[12,"cached_size","","",81,null],[3,"VcpuResponse_EnableCapability","","",null,null],[12,"unknown_fields","","",82,null],[12,"cached_size","","",82,null],[4,"AddressSpace","","",null,null],[13,"IOPORT","","",83,null],[13,"MMIO","","",83,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto",3]]],[5,"cpuid_proto_to_kvm","","Converts protobuf representation of CpuId data into KVM …",null,[[["cpuidentry",3]],["kvm_cpuid_entry2",3]]],[5,"cpuid_kvm_to_proto","","Converts KVM representation of CpuId data into protobuf …",null,[[["kvm_cpuid_entry2",3]],["cpuidentry",3]]],[0,"cdisk_spec","protos","Generated file from <code>cdisk_spec.proto</code>",null,null],[3,"ComponentDisk","protos::cdisk_spec","Generated files are compatible only with the same version …",null,null],[12,"file_path","","",84,null],[12,"offset","","",84,null],[12,"read_write_capability","","",84,null],[12,"unknown_fields","","",84,null],[12,"cached_size","","",84,null],[3,"CompositeDisk","","",null,null],[12,"version","","",85,null],[12,"component_disks","","",85,null],[12,"length","","",85,null],[12,"unknown_fields","","",85,null],[12,"cached_size","","",85,null],[4,"ReadWriteCapability","","",null,null],[13,"READ_ONLY","","",86,null],[13,"READ_WRITE","","",86,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto",3]]],[11,"from","protos::plugin","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","protos::cdisk_spec","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"clone","protos::plugin","",0,[[],["cpuidentry",3]]],[11,"clone","","",1,[[],["mainrequest",3]]],[11,"clone","","",2,[[],["mainrequest_oneof_message",4]]],[11,"clone","","",3,[[],["mainrequest_create",3]]],[11,"clone","","",4,[[],["mainrequest_create_oneof_constructor",4]]],[11,"clone","","",5,[[],["mainrequest_create_ioevent",3]]],[11,"clone","","",6,[[],["mainrequest_create_memory",3]]],[11,"clone","","",7,[[],["mainrequest_create_irqevent",3]]],[11,"clone","","",8,[[],["mainrequest_destroy",3]]],[11,"clone","","",9,[[],["mainrequest_newconnection",3]]],[11,"clone","","",10,[[],["mainrequest_getshutdowneventfd",3]]],[11,"clone","","",11,[[],["mainrequest_checkextension",3]]],[11,"clone","","",12,[[],["mainrequest_cpuidrequest",3]]],[11,"clone","","",13,[[],["mainrequest_msrlistrequest",3]]],[11,"clone","","",14,[[],["mainrequest_getnetconfig",3]]],[11,"clone","","",15,[[],["mainrequest_reserverange",3]]],[11,"clone","","",16,[[],["mainrequest_setirq",3]]],[11,"clone","","",17,[[],["mainrequest_setirqrouting",3]]],[11,"clone","","",18,[[],["mainrequest_setirqrouting_route",3]]],[11,"clone","","",19,[[],["mainrequest_setirqrouting_route_oneof_route",4]]],[11,"clone","","",20,[[],["mainrequest_setirqrouting_route_irqchip",3]]],[11,"clone","","",21,[[],["mainrequest_setirqrouting_route_msi",3]]],[11,"clone","","",22,[[],["mainrequest_getstate",3]]],[11,"clone","","",23,[[],["mainrequest_setstate",3]]],[11,"clone","","",24,[[],["mainrequest_setidentitymapaddr",3]]],[11,"clone","","",25,[[],["mainrequest_pausevcpus",3]]],[11,"clone","","",26,[[],["mainrequest_getvcpus",3]]],[11,"clone","","",27,[[],["mainrequest_start",3]]],[11,"clone","","",28,[[],["mainrequest_setcallhint",3]]],[11,"clone","","",29,[[],["mainrequest_setcallhint_reghint",3]]],[11,"clone","","",30,[[],["mainrequest_memorydirtylog",3]]],[11,"clone","","",31,[[],["mainrequest_stateset",4]]],[11,"clone","","",32,[[],["mainresponse",3]]],[11,"clone","","",33,[[],["mainresponse_oneof_message",4]]],[11,"clone","","",34,[[],["mainresponse_create",3]]],[11,"clone","","",35,[[],["mainresponse_destroy",3]]],[11,"clone","","",36,[[],["mainresponse_newconnection",3]]],[11,"clone","","",37,[[],["mainresponse_getshutdowneventfd",3]]],[11,"clone","","",38,[[],["mainresponse_checkextension",3]]],[11,"clone","","",39,[[],["mainresponse_cpuidresponse",3]]],[11,"clone","","",40,[[],["mainresponse_msrlistresponse",3]]],[11,"clone","","",41,[[],["mainresponse_getnetconfig",3]]],[11,"clone","","",42,[[],["mainresponse_reserverange",3]]],[11,"clone","","",43,[[],["mainresponse_setirq",3]]],[11,"clone","","",44,[[],["mainresponse_setirqrouting",3]]],[11,"clone","","",45,[[],["mainresponse_getstate",3]]],[11,"clone","","",46,[[],["mainresponse_setstate",3]]],[11,"clone","","",47,[[],["mainresponse_setidentitymapaddr",3]]],[11,"clone","","",48,[[],["mainresponse_pausevcpus",3]]],[11,"clone","","",49,[[],["mainresponse_getvcpus",3]]],[11,"clone","","",50,[[],["mainresponse_start",3]]],[11,"clone","","",51,[[],["mainresponse_setcallhint",3]]],[11,"clone","","",52,[[],["mainresponse_memorydirtylog",3]]],[11,"clone","","",53,[[],["vcpurequest",3]]],[11,"clone","","",54,[[],["vcpurequest_oneof_message",4]]],[11,"clone","","",55,[[],["vcpurequest_wait",3]]],[11,"clone","","",56,[[],["vcpurequest_resume",3]]],[11,"clone","","",57,[[],["vcpurequest_getstate",3]]],[11,"clone","","",58,[[],["vcpurequest_setstate",3]]],[11,"clone","","",59,[[],["vcpurequest_cpuidrequest",3]]],[11,"clone","","",60,[[],["vcpurequest_getmsrs",3]]],[11,"clone","","",61,[[],["vcpurequest_msrentry",3]]],[11,"clone","","",62,[[],["vcpurequest_setmsrs",3]]],[11,"clone","","",63,[[],["vcpurequest_setcpuid",3]]],[11,"clone","","",64,[[],["vcpurequest_shutdown",3]]],[11,"clone","","",65,[[],["vcpurequest_enablecapability",3]]],[11,"clone","","",66,[[],["vcpurequest_stateset",4]]],[11,"clone","","",67,[[],["vcpuresponse",3]]],[11,"clone","","",68,[[],["vcpuresponse_oneof_message",4]]],[11,"clone","","",69,[[],["vcpuresponse_wait",3]]],[11,"clone","","",70,[[],["vcpuresponse_wait_oneof_exit",4]]],[11,"clone","","",71,[[],["vcpuresponse_wait_init",3]]],[11,"clone","","",72,[[],["vcpuresponse_wait_io",3]]],[11,"clone","","",73,[[],["vcpuresponse_wait_user",3]]],[11,"clone","","",74,[[],["vcpuresponse_wait_hypervcall",3]]],[11,"clone","","",75,[[],["vcpuresponse_wait_hypervsynic",3]]],[11,"clone","","",76,[[],["vcpuresponse_getstate",3]]],[11,"clone","","",77,[[],["vcpuresponse_setstate",3]]],[11,"clone","","",78,[[],["vcpuresponse_cpuidresponse",3]]],[11,"clone","","",79,[[],["vcpuresponse_getmsrs",3]]],[11,"clone","","",80,[[],["vcpuresponse_setmsrs",3]]],[11,"clone","","",81,[[],["vcpuresponse_setcpuid",3]]],[11,"clone","","",82,[[],["vcpuresponse_enablecapability",3]]],[11,"clone","","",83,[[],["addressspace",4]]],[11,"clone","protos::cdisk_spec","",84,[[],["componentdisk",3]]],[11,"clone","","",85,[[],["compositedisk",3]]],[11,"clone","","",86,[[],["readwritecapability",4]]],[11,"default","protos::plugin","",0,[[],["cpuidentry",3]]],[11,"default","","",1,[[],["mainrequest",3]]],[11,"default","","",3,[[],["mainrequest_create",3]]],[11,"default","","",5,[[],["mainrequest_create_ioevent",3]]],[11,"default","","",6,[[],["mainrequest_create_memory",3]]],[11,"default","","",7,[[],["mainrequest_create_irqevent",3]]],[11,"default","","",8,[[],["mainrequest_destroy",3]]],[11,"default","","",9,[[],["mainrequest_newconnection",3]]],[11,"default","","",10,[[],["mainrequest_getshutdowneventfd",3]]],[11,"default","","",11,[[],["mainrequest_checkextension",3]]],[11,"default","","",12,[[],["mainrequest_cpuidrequest",3]]],[11,"default","","",13,[[],["mainrequest_msrlistrequest",3]]],[11,"default","","",14,[[],["mainrequest_getnetconfig",3]]],[11,"default","","",15,[[],["mainrequest_reserverange",3]]],[11,"default","","",16,[[],["mainrequest_setirq",3]]],[11,"default","","",17,[[],["mainrequest_setirqrouting",3]]],[11,"default","","",18,[[],["mainrequest_setirqrouting_route",3]]],[11,"default","","",20,[[],["mainrequest_setirqrouting_route_irqchip",3]]],[11,"default","","",21,[[],["mainrequest_setirqrouting_route_msi",3]]],[11,"default","","",22,[[],["mainrequest_getstate",3]]],[11,"default","","",23,[[],["mainrequest_setstate",3]]],[11,"default","","",24,[[],["mainrequest_setidentitymapaddr",3]]],[11,"default","","",25,[[],["mainrequest_pausevcpus",3]]],[11,"default","","",26,[[],["mainrequest_getvcpus",3]]],[11,"default","","",27,[[],["mainrequest_start",3]]],[11,"default","","",28,[[],["mainrequest_setcallhint",3]]],[11,"default","","",29,[[],["mainrequest_setcallhint_reghint",3]]],[11,"default","","",30,[[],["mainrequest_memorydirtylog",3]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[],["mainresponse",3]]],[11,"default","","",34,[[],["mainresponse_create",3]]],[11,"default","","",35,[[],["mainresponse_destroy",3]]],[11,"default","","",36,[[],["mainresponse_newconnection",3]]],[11,"default","","",37,[[],["mainresponse_getshutdowneventfd",3]]],[11,"default","","",38,[[],["mainresponse_checkextension",3]]],[11,"default","","",39,[[],["mainresponse_cpuidresponse",3]]],[11,"default","","",40,[[],["mainresponse_msrlistresponse",3]]],[11,"default","","",41,[[],["mainresponse_getnetconfig",3]]],[11,"default","","",42,[[],["mainresponse_reserverange",3]]],[11,"default","","",43,[[],["mainresponse_setirq",3]]],[11,"default","","",44,[[],["mainresponse_setirqrouting",3]]],[11,"default","","",45,[[],["mainresponse_getstate",3]]],[11,"default","","",46,[[],["mainresponse_setstate",3]]],[11,"default","","",47,[[],["mainresponse_setidentitymapaddr",3]]],[11,"default","","",48,[[],["mainresponse_pausevcpus",3]]],[11,"default","","",49,[[],["mainresponse_getvcpus",3]]],[11,"default","","",50,[[],["mainresponse_start",3]]],[11,"default","","",51,[[],["mainresponse_setcallhint",3]]],[11,"default","","",52,[[],["mainresponse_memorydirtylog",3]]],[11,"default","","",53,[[],["vcpurequest",3]]],[11,"default","","",55,[[],["vcpurequest_wait",3]]],[11,"default","","",56,[[],["vcpurequest_resume",3]]],[11,"default","","",57,[[],["vcpurequest_getstate",3]]],[11,"default","","",58,[[],["vcpurequest_setstate",3]]],[11,"default","","",59,[[],["vcpurequest_cpuidrequest",3]]],[11,"default","","",60,[[],["vcpurequest_getmsrs",3]]],[11,"default","","",61,[[],["vcpurequest_msrentry",3]]],[11,"default","","",62,[[],["vcpurequest_setmsrs",3]]],[11,"default","","",63,[[],["vcpurequest_setcpuid",3]]],[11,"default","","",64,[[],["vcpurequest_shutdown",3]]],[11,"default","","",65,[[],["vcpurequest_enablecapability",3]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[],["vcpuresponse",3]]],[11,"default","","",69,[[],["vcpuresponse_wait",3]]],[11,"default","","",71,[[],["vcpuresponse_wait_init",3]]],[11,"default","","",72,[[],["vcpuresponse_wait_io",3]]],[11,"default","","",73,[[],["vcpuresponse_wait_user",3]]],[11,"default","","",74,[[],["vcpuresponse_wait_hypervcall",3]]],[11,"default","","",75,[[],["vcpuresponse_wait_hypervsynic",3]]],[11,"default","","",76,[[],["vcpuresponse_getstate",3]]],[11,"default","","",77,[[],["vcpuresponse_setstate",3]]],[11,"default","","",78,[[],["vcpuresponse_cpuidresponse",3]]],[11,"default","","",79,[[],["vcpuresponse_getmsrs",3]]],[11,"default","","",80,[[],["vcpuresponse_setmsrs",3]]],[11,"default","","",81,[[],["vcpuresponse_setcpuid",3]]],[11,"default","","",82,[[],["vcpuresponse_enablecapability",3]]],[11,"default","","",83,[[]]],[11,"default","protos::cdisk_spec","",84,[[],["componentdisk",3]]],[11,"default","","",85,[[],["compositedisk",3]]],[11,"default","","",86,[[]]],[11,"eq","protos::plugin","",0,[[["cpuidentry",3]],["bool",15]]],[11,"ne","","",0,[[["cpuidentry",3]],["bool",15]]],[11,"eq","","",1,[[["mainrequest",3]],["bool",15]]],[11,"ne","","",1,[[["mainrequest",3]],["bool",15]]],[11,"eq","","",2,[[["mainrequest_oneof_message",4]],["bool",15]]],[11,"ne","","",2,[[["mainrequest_oneof_message",4]],["bool",15]]],[11,"eq","","",3,[[["mainrequest_create",3]],["bool",15]]],[11,"ne","","",3,[[["mainrequest_create",3]],["bool",15]]],[11,"eq","","",4,[[["mainrequest_create_oneof_constructor",4]],["bool",15]]],[11,"ne","","",4,[[["mainrequest_create_oneof_constructor",4]],["bool",15]]],[11,"eq","","",5,[[["mainrequest_create_ioevent",3]],["bool",15]]],[11,"ne","","",5,[[["mainrequest_create_ioevent",3]],["bool",15]]],[11,"eq","","",6,[[["mainrequest_create_memory",3]],["bool",15]]],[11,"ne","","",6,[[["mainrequest_create_memory",3]],["bool",15]]],[11,"eq","","",7,[[["mainrequest_create_irqevent",3]],["bool",15]]],[11,"ne","","",7,[[["mainrequest_create_irqevent",3]],["bool",15]]],[11,"eq","","",8,[[["mainrequest_destroy",3]],["bool",15]]],[11,"ne","","",8,[[["mainrequest_destroy",3]],["bool",15]]],[11,"eq","","",9,[[["mainrequest_newconnection",3]],["bool",15]]],[11,"ne","","",9,[[["mainrequest_newconnection",3]],["bool",15]]],[11,"eq","","",10,[[["mainrequest_getshutdowneventfd",3]],["bool",15]]],[11,"ne","","",10,[[["mainrequest_getshutdowneventfd",3]],["bool",15]]],[11,"eq","","",11,[[["mainrequest_checkextension",3]],["bool",15]]],[11,"ne","","",11,[[["mainrequest_checkextension",3]],["bool",15]]],[11,"eq","","",12,[[["mainrequest_cpuidrequest",3]],["bool",15]]],[11,"ne","","",12,[[["mainrequest_cpuidrequest",3]],["bool",15]]],[11,"eq","","",13,[[["mainrequest_msrlistrequest",3]],["bool",15]]],[11,"ne","","",13,[[["mainrequest_msrlistrequest",3]],["bool",15]]],[11,"eq","","",14,[[["mainrequest_getnetconfig",3]],["bool",15]]],[11,"ne","","",14,[[["mainrequest_getnetconfig",3]],["bool",15]]],[11,"eq","","",15,[[["mainrequest_reserverange",3]],["bool",15]]],[11,"ne","","",15,[[["mainrequest_reserverange",3]],["bool",15]]],[11,"eq","","",16,[[["mainrequest_setirq",3]],["bool",15]]],[11,"ne","","",16,[[["mainrequest_setirq",3]],["bool",15]]],[11,"eq","","",17,[[["mainrequest_setirqrouting",3]],["bool",15]]],[11,"ne","","",17,[[["mainrequest_setirqrouting",3]],["bool",15]]],[11,"eq","","",18,[[["mainrequest_setirqrouting_route",3]],["bool",15]]],[11,"ne","","",18,[[["mainrequest_setirqrouting_route",3]],["bool",15]]],[11,"eq","","",19,[[["mainrequest_setirqrouting_route_oneof_route",4]],["bool",15]]],[11,"ne","","",19,[[["mainrequest_setirqrouting_route_oneof_route",4]],["bool",15]]],[11,"eq","","",20,[[["mainrequest_setirqrouting_route_irqchip",3]],["bool",15]]],[11,"ne","","",20,[[["mainrequest_setirqrouting_route_irqchip",3]],["bool",15]]],[11,"eq","","",21,[[["mainrequest_setirqrouting_route_msi",3]],["bool",15]]],[11,"ne","","",21,[[["mainrequest_setirqrouting_route_msi",3]],["bool",15]]],[11,"eq","","",22,[[["mainrequest_getstate",3]],["bool",15]]],[11,"ne","","",22,[[["mainrequest_getstate",3]],["bool",15]]],[11,"eq","","",23,[[["mainrequest_setstate",3]],["bool",15]]],[11,"ne","","",23,[[["mainrequest_setstate",3]],["bool",15]]],[11,"eq","","",24,[[["mainrequest_setidentitymapaddr",3]],["bool",15]]],[11,"ne","","",24,[[["mainrequest_setidentitymapaddr",3]],["bool",15]]],[11,"eq","","",25,[[["mainrequest_pausevcpus",3]],["bool",15]]],[11,"ne","","",25,[[["mainrequest_pausevcpus",3]],["bool",15]]],[11,"eq","","",26,[[["mainrequest_getvcpus",3]],["bool",15]]],[11,"ne","","",26,[[["mainrequest_getvcpus",3]],["bool",15]]],[11,"eq","","",27,[[["mainrequest_start",3]],["bool",15]]],[11,"ne","","",27,[[["mainrequest_start",3]],["bool",15]]],[11,"eq","","",28,[[["mainrequest_setcallhint",3]],["bool",15]]],[11,"ne","","",28,[[["mainrequest_setcallhint",3]],["bool",15]]],[11,"eq","","",29,[[["mainrequest_setcallhint_reghint",3]],["bool",15]]],[11,"ne","","",29,[[["mainrequest_setcallhint_reghint",3]],["bool",15]]],[11,"eq","","",30,[[["mainrequest_memorydirtylog",3]],["bool",15]]],[11,"ne","","",30,[[["mainrequest_memorydirtylog",3]],["bool",15]]],[11,"eq","","",31,[[["mainrequest_stateset",4]],["bool",15]]],[11,"eq","","",32,[[["mainresponse",3]],["bool",15]]],[11,"ne","","",32,[[["mainresponse",3]],["bool",15]]],[11,"eq","","",33,[[["mainresponse_oneof_message",4]],["bool",15]]],[11,"ne","","",33,[[["mainresponse_oneof_message",4]],["bool",15]]],[11,"eq","","",34,[[["mainresponse_create",3]],["bool",15]]],[11,"ne","","",34,[[["mainresponse_create",3]],["bool",15]]],[11,"eq","","",35,[[["mainresponse_destroy",3]],["bool",15]]],[11,"ne","","",35,[[["mainresponse_destroy",3]],["bool",15]]],[11,"eq","","",36,[[["mainresponse_newconnection",3]],["bool",15]]],[11,"ne","","",36,[[["mainresponse_newconnection",3]],["bool",15]]],[11,"eq","","",37,[[["mainresponse_getshutdowneventfd",3]],["bool",15]]],[11,"ne","","",37,[[["mainresponse_getshutdowneventfd",3]],["bool",15]]],[11,"eq","","",38,[[["mainresponse_checkextension",3]],["bool",15]]],[11,"ne","","",38,[[["mainresponse_checkextension",3]],["bool",15]]],[11,"eq","","",39,[[["mainresponse_cpuidresponse",3]],["bool",15]]],[11,"ne","","",39,[[["mainresponse_cpuidresponse",3]],["bool",15]]],[11,"eq","","",40,[[["mainresponse_msrlistresponse",3]],["bool",15]]],[11,"ne","","",40,[[["mainresponse_msrlistresponse",3]],["bool",15]]],[11,"eq","","",41,[[["mainresponse_getnetconfig",3]],["bool",15]]],[11,"ne","","",41,[[["mainresponse_getnetconfig",3]],["bool",15]]],[11,"eq","","",42,[[["mainresponse_reserverange",3]],["bool",15]]],[11,"ne","","",42,[[["mainresponse_reserverange",3]],["bool",15]]],[11,"eq","","",43,[[["mainresponse_setirq",3]],["bool",15]]],[11,"ne","","",43,[[["mainresponse_setirq",3]],["bool",15]]],[11,"eq","","",44,[[["mainresponse_setirqrouting",3]],["bool",15]]],[11,"ne","","",44,[[["mainresponse_setirqrouting",3]],["bool",15]]],[11,"eq","","",45,[[["mainresponse_getstate",3]],["bool",15]]],[11,"ne","","",45,[[["mainresponse_getstate",3]],["bool",15]]],[11,"eq","","",46,[[["mainresponse_setstate",3]],["bool",15]]],[11,"ne","","",46,[[["mainresponse_setstate",3]],["bool",15]]],[11,"eq","","",47,[[["mainresponse_setidentitymapaddr",3]],["bool",15]]],[11,"ne","","",47,[[["mainresponse_setidentitymapaddr",3]],["bool",15]]],[11,"eq","","",48,[[["mainresponse_pausevcpus",3]],["bool",15]]],[11,"ne","","",48,[[["mainresponse_pausevcpus",3]],["bool",15]]],[11,"eq","","",49,[[["mainresponse_getvcpus",3]],["bool",15]]],[11,"ne","","",49,[[["mainresponse_getvcpus",3]],["bool",15]]],[11,"eq","","",50,[[["mainresponse_start",3]],["bool",15]]],[11,"ne","","",50,[[["mainresponse_start",3]],["bool",15]]],[11,"eq","","",51,[[["mainresponse_setcallhint",3]],["bool",15]]],[11,"ne","","",51,[[["mainresponse_setcallhint",3]],["bool",15]]],[11,"eq","","",52,[[["mainresponse_memorydirtylog",3]],["bool",15]]],[11,"ne","","",52,[[["mainresponse_memorydirtylog",3]],["bool",15]]],[11,"eq","","",53,[[["vcpurequest",3]],["bool",15]]],[11,"ne","","",53,[[["vcpurequest",3]],["bool",15]]],[11,"eq","","",54,[[["vcpurequest_oneof_message",4]],["bool",15]]],[11,"ne","","",54,[[["vcpurequest_oneof_message",4]],["bool",15]]],[11,"eq","","",55,[[["vcpurequest_wait",3]],["bool",15]]],[11,"ne","","",55,[[["vcpurequest_wait",3]],["bool",15]]],[11,"eq","","",56,[[["vcpurequest_resume",3]],["bool",15]]],[11,"ne","","",56,[[["vcpurequest_resume",3]],["bool",15]]],[11,"eq","","",57,[[["vcpurequest_getstate",3]],["bool",15]]],[11,"ne","","",57,[[["vcpurequest_getstate",3]],["bool",15]]],[11,"eq","","",58,[[["vcpurequest_setstate",3]],["bool",15]]],[11,"ne","","",58,[[["vcpurequest_setstate",3]],["bool",15]]],[11,"eq","","",59,[[["vcpurequest_cpuidrequest",3]],["bool",15]]],[11,"ne","","",59,[[["vcpurequest_cpuidrequest",3]],["bool",15]]],[11,"eq","","",60,[[["vcpurequest_getmsrs",3]],["bool",15]]],[11,"ne","","",60,[[["vcpurequest_getmsrs",3]],["bool",15]]],[11,"eq","","",61,[[["vcpurequest_msrentry",3]],["bool",15]]],[11,"ne","","",61,[[["vcpurequest_msrentry",3]],["bool",15]]],[11,"eq","","",62,[[["vcpurequest_setmsrs",3]],["bool",15]]],[11,"ne","","",62,[[["vcpurequest_setmsrs",3]],["bool",15]]],[11,"eq","","",63,[[["vcpurequest_setcpuid",3]],["bool",15]]],[11,"ne","","",63,[[["vcpurequest_setcpuid",3]],["bool",15]]],[11,"eq","","",64,[[["vcpurequest_shutdown",3]],["bool",15]]],[11,"ne","","",64,[[["vcpurequest_shutdown",3]],["bool",15]]],[11,"eq","","",65,[[["vcpurequest_enablecapability",3]],["bool",15]]],[11,"ne","","",65,[[["vcpurequest_enablecapability",3]],["bool",15]]],[11,"eq","","",66,[[["vcpurequest_stateset",4]],["bool",15]]],[11,"eq","","",67,[[["vcpuresponse",3]],["bool",15]]],[11,"ne","","",67,[[["vcpuresponse",3]],["bool",15]]],[11,"eq","","",68,[[["vcpuresponse_oneof_message",4]],["bool",15]]],[11,"ne","","",68,[[["vcpuresponse_oneof_message",4]],["bool",15]]],[11,"eq","","",69,[[["vcpuresponse_wait",3]],["bool",15]]],[11,"ne","","",69,[[["vcpuresponse_wait",3]],["bool",15]]],[11,"eq","","",70,[[["vcpuresponse_wait_oneof_exit",4]],["bool",15]]],[11,"ne","","",70,[[["vcpuresponse_wait_oneof_exit",4]],["bool",15]]],[11,"eq","","",71,[[["vcpuresponse_wait_init",3]],["bool",15]]],[11,"ne","","",71,[[["vcpuresponse_wait_init",3]],["bool",15]]],[11,"eq","","",72,[[["vcpuresponse_wait_io",3]],["bool",15]]],[11,"ne","","",72,[[["vcpuresponse_wait_io",3]],["bool",15]]],[11,"eq","","",73,[[["vcpuresponse_wait_user",3]],["bool",15]]],[11,"ne","","",73,[[["vcpuresponse_wait_user",3]],["bool",15]]],[11,"eq","","",74,[[["vcpuresponse_wait_hypervcall",3]],["bool",15]]],[11,"ne","","",74,[[["vcpuresponse_wait_hypervcall",3]],["bool",15]]],[11,"eq","","",75,[[["vcpuresponse_wait_hypervsynic",3]],["bool",15]]],[11,"ne","","",75,[[["vcpuresponse_wait_hypervsynic",3]],["bool",15]]],[11,"eq","","",76,[[["vcpuresponse_getstate",3]],["bool",15]]],[11,"ne","","",76,[[["vcpuresponse_getstate",3]],["bool",15]]],[11,"eq","","",77,[[["vcpuresponse_setstate",3]],["bool",15]]],[11,"ne","","",77,[[["vcpuresponse_setstate",3]],["bool",15]]],[11,"eq","","",78,[[["vcpuresponse_cpuidresponse",3]],["bool",15]]],[11,"ne","","",78,[[["vcpuresponse_cpuidresponse",3]],["bool",15]]],[11,"eq","","",79,[[["vcpuresponse_getmsrs",3]],["bool",15]]],[11,"ne","","",79,[[["vcpuresponse_getmsrs",3]],["bool",15]]],[11,"eq","","",80,[[["vcpuresponse_setmsrs",3]],["bool",15]]],[11,"ne","","",80,[[["vcpuresponse_setmsrs",3]],["bool",15]]],[11,"eq","","",81,[[["vcpuresponse_setcpuid",3]],["bool",15]]],[11,"ne","","",81,[[["vcpuresponse_setcpuid",3]],["bool",15]]],[11,"eq","","",82,[[["vcpuresponse_enablecapability",3]],["bool",15]]],[11,"ne","","",82,[[["vcpuresponse_enablecapability",3]],["bool",15]]],[11,"eq","","",83,[[["addressspace",4]],["bool",15]]],[11,"eq","protos::cdisk_spec","",84,[[["componentdisk",3]],["bool",15]]],[11,"ne","","",84,[[["componentdisk",3]],["bool",15]]],[11,"eq","","",85,[[["compositedisk",3]],["bool",15]]],[11,"ne","","",85,[[["compositedisk",3]],["bool",15]]],[11,"eq","","",86,[[["readwritecapability",4]],["bool",15]]],[11,"fmt","protos::plugin","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","protos::cdisk_spec","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"hash","protos::plugin","",31,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",83,[[]]],[11,"hash","protos::cdisk_spec","",86,[[]]],[11,"clear","protos::plugin","",0,[[]]],[11,"clear","","",1,[[]]],[11,"clear","","",3,[[]]],[11,"clear","","",5,[[]]],[11,"clear","","",6,[[]]],[11,"clear","","",7,[[]]],[11,"clear","","",8,[[]]],[11,"clear","","",9,[[]]],[11,"clear","","",10,[[]]],[11,"clear","","",11,[[]]],[11,"clear","","",12,[[]]],[11,"clear","","",13,[[]]],[11,"clear","","",14,[[]]],[11,"clear","","",15,[[]]],[11,"clear","","",16,[[]]],[11,"clear","","",17,[[]]],[11,"clear","","",18,[[]]],[11,"clear","","",20,[[]]],[11,"clear","","",21,[[]]],[11,"clear","","",22,[[]]],[11,"clear","","",23,[[]]],[11,"clear","","",24,[[]]],[11,"clear","","",25,[[]]],[11,"clear","","",26,[[]]],[11,"clear","","",27,[[]]],[11,"clear","","",28,[[]]],[11,"clear","","",29,[[]]],[11,"clear","","",30,[[]]],[11,"clear","","",32,[[]]],[11,"clear","","",34,[[]]],[11,"clear","","",35,[[]]],[11,"clear","","",36,[[]]],[11,"clear","","",37,[[]]],[11,"clear","","",38,[[]]],[11,"clear","","",39,[[]]],[11,"clear","","",40,[[]]],[11,"clear","","",41,[[]]],[11,"clear","","",42,[[]]],[11,"clear","","",43,[[]]],[11,"clear","","",44,[[]]],[11,"clear","","",45,[[]]],[11,"clear","","",46,[[]]],[11,"clear","","",47,[[]]],[11,"clear","","",48,[[]]],[11,"clear","","",49,[[]]],[11,"clear","","",50,[[]]],[11,"clear","","",51,[[]]],[11,"clear","","",52,[[]]],[11,"clear","","",53,[[]]],[11,"clear","","",55,[[]]],[11,"clear","","",56,[[]]],[11,"clear","","",57,[[]]],[11,"clear","","",58,[[]]],[11,"clear","","",59,[[]]],[11,"clear","","",60,[[]]],[11,"clear","","",61,[[]]],[11,"clear","","",62,[[]]],[11,"clear","","",63,[[]]],[11,"clear","","",64,[[]]],[11,"clear","","",65,[[]]],[11,"clear","","",67,[[]]],[11,"clear","","",69,[[]]],[11,"clear","","",71,[[]]],[11,"clear","","",72,[[]]],[11,"clear","","",73,[[]]],[11,"clear","","",74,[[]]],[11,"clear","","",75,[[]]],[11,"clear","","",76,[[]]],[11,"clear","","",77,[[]]],[11,"clear","","",78,[[]]],[11,"clear","","",79,[[]]],[11,"clear","","",80,[[]]],[11,"clear","","",81,[[]]],[11,"clear","","",82,[[]]],[11,"clear","protos::cdisk_spec","",84,[[]]],[11,"clear","","",85,[[]]],[11,"value","protos::plugin","",31,[[],["i32",15]]],[11,"from_i32","","",31,[[["i32",15]],[["option",4],["mainrequest_stateset",4]]]],[11,"values","","",31,[[]]],[11,"enum_descriptor_static","","",31,[[],["enumdescriptor",3]]],[11,"value","","",66,[[],["i32",15]]],[11,"from_i32","","",66,[[["i32",15]],[["option",4],["vcpurequest_stateset",4]]]],[11,"values","","",66,[[]]],[11,"enum_descriptor_static","","",66,[[],["enumdescriptor",3]]],[11,"value","","",83,[[],["i32",15]]],[11,"from_i32","","",83,[[["i32",15]],[["option",4],["addressspace",4]]]],[11,"values","","",83,[[]]],[11,"enum_descriptor_static","","",83,[[],["enumdescriptor",3]]],[11,"value","protos::cdisk_spec","",86,[[],["i32",15]]],[11,"from_i32","","",86,[[["i32",15]],[["option",4],["readwritecapability",4]]]],[11,"values","","",86,[[]]],[11,"enum_descriptor_static","","",86,[[],["enumdescriptor",3]]],[11,"is_initialized","protos::plugin","",0,[[],["bool",15]]],[11,"merge_from","","",0,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",0,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",0,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",0,[[],["u32",15]]],[11,"get_unknown_fields","","",0,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",0,[[],["unknownfields",3]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any","","",0,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",0,[[],["messagedescriptor",3]]],[11,"new","","",0,[[],["cpuidentry",3]]],[11,"descriptor_static","","",0,[[],["messagedescriptor",3]]],[11,"default_instance","","",0,[[],["cpuidentry",3]]],[11,"is_initialized","","",1,[[],["bool",15]]],[11,"merge_from","","",1,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",1,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",1,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",1,[[],["u32",15]]],[11,"get_unknown_fields","","",1,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",1,[[],["unknownfields",3]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any","","",1,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",1,[[],["messagedescriptor",3]]],[11,"new","","",1,[[],["mainrequest",3]]],[11,"descriptor_static","","",1,[[],["messagedescriptor",3]]],[11,"default_instance","","",1,[[],["mainrequest",3]]],[11,"is_initialized","","",3,[[],["bool",15]]],[11,"merge_from","","",3,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",3,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",3,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",3,[[],["u32",15]]],[11,"get_unknown_fields","","",3,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",3,[[],["unknownfields",3]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any","","",3,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",3,[[],["messagedescriptor",3]]],[11,"new","","",3,[[],["mainrequest_create",3]]],[11,"descriptor_static","","",3,[[],["messagedescriptor",3]]],[11,"default_instance","","",3,[[],["mainrequest_create",3]]],[11,"is_initialized","","",5,[[],["bool",15]]],[11,"merge_from","","",5,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",5,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",5,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",5,[[],["u32",15]]],[11,"get_unknown_fields","","",5,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",5,[[],["unknownfields",3]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any","","",5,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",5,[[],["messagedescriptor",3]]],[11,"new","","",5,[[],["mainrequest_create_ioevent",3]]],[11,"descriptor_static","","",5,[[],["messagedescriptor",3]]],[11,"default_instance","","",5,[[],["mainrequest_create_ioevent",3]]],[11,"is_initialized","","",6,[[],["bool",15]]],[11,"merge_from","","",6,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",6,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",6,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",6,[[],["u32",15]]],[11,"get_unknown_fields","","",6,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",6,[[],["unknownfields",3]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any","","",6,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",6,[[],["messagedescriptor",3]]],[11,"new","","",6,[[],["mainrequest_create_memory",3]]],[11,"descriptor_static","","",6,[[],["messagedescriptor",3]]],[11,"default_instance","","",6,[[],["mainrequest_create_memory",3]]],[11,"is_initialized","","",7,[[],["bool",15]]],[11,"merge_from","","",7,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",7,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",7,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",7,[[],["u32",15]]],[11,"get_unknown_fields","","",7,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",7,[[],["unknownfields",3]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any","","",7,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",7,[[],["messagedescriptor",3]]],[11,"new","","",7,[[],["mainrequest_create_irqevent",3]]],[11,"descriptor_static","","",7,[[],["messagedescriptor",3]]],[11,"default_instance","","",7,[[],["mainrequest_create_irqevent",3]]],[11,"is_initialized","","",8,[[],["bool",15]]],[11,"merge_from","","",8,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",8,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",8,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",8,[[],["u32",15]]],[11,"get_unknown_fields","","",8,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",8,[[],["unknownfields",3]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any","","",8,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",8,[[],["messagedescriptor",3]]],[11,"new","","",8,[[],["mainrequest_destroy",3]]],[11,"descriptor_static","","",8,[[],["messagedescriptor",3]]],[11,"default_instance","","",8,[[],["mainrequest_destroy",3]]],[11,"is_initialized","","",9,[[],["bool",15]]],[11,"merge_from","","",9,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",9,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",9,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",9,[[],["u32",15]]],[11,"get_unknown_fields","","",9,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",9,[[],["unknownfields",3]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any","","",9,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",9,[[],["messagedescriptor",3]]],[11,"new","","",9,[[],["mainrequest_newconnection",3]]],[11,"descriptor_static","","",9,[[],["messagedescriptor",3]]],[11,"default_instance","","",9,[[],["mainrequest_newconnection",3]]],[11,"is_initialized","","",10,[[],["bool",15]]],[11,"merge_from","","",10,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",10,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",10,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",10,[[],["u32",15]]],[11,"get_unknown_fields","","",10,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",10,[[],["unknownfields",3]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any","","",10,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",10,[[],["messagedescriptor",3]]],[11,"new","","",10,[[],["mainrequest_getshutdowneventfd",3]]],[11,"descriptor_static","","",10,[[],["messagedescriptor",3]]],[11,"default_instance","","",10,[[],["mainrequest_getshutdowneventfd",3]]],[11,"is_initialized","","",11,[[],["bool",15]]],[11,"merge_from","","",11,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",11,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",11,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",11,[[],["u32",15]]],[11,"get_unknown_fields","","",11,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",11,[[],["unknownfields",3]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any","","",11,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",11,[[],["messagedescriptor",3]]],[11,"new","","",11,[[],["mainrequest_checkextension",3]]],[11,"descriptor_static","","",11,[[],["messagedescriptor",3]]],[11,"default_instance","","",11,[[],["mainrequest_checkextension",3]]],[11,"is_initialized","","",12,[[],["bool",15]]],[11,"merge_from","","",12,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",12,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",12,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",12,[[],["u32",15]]],[11,"get_unknown_fields","","",12,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",12,[[],["unknownfields",3]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any","","",12,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",12,[[],["messagedescriptor",3]]],[11,"new","","",12,[[],["mainrequest_cpuidrequest",3]]],[11,"descriptor_static","","",12,[[],["messagedescriptor",3]]],[11,"default_instance","","",12,[[],["mainrequest_cpuidrequest",3]]],[11,"is_initialized","","",13,[[],["bool",15]]],[11,"merge_from","","",13,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",13,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",13,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",13,[[],["u32",15]]],[11,"get_unknown_fields","","",13,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",13,[[],["unknownfields",3]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any","","",13,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",13,[[],["messagedescriptor",3]]],[11,"new","","",13,[[],["mainrequest_msrlistrequest",3]]],[11,"descriptor_static","","",13,[[],["messagedescriptor",3]]],[11,"default_instance","","",13,[[],["mainrequest_msrlistrequest",3]]],[11,"is_initialized","","",14,[[],["bool",15]]],[11,"merge_from","","",14,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",14,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",14,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",14,[[],["u32",15]]],[11,"get_unknown_fields","","",14,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",14,[[],["unknownfields",3]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any","","",14,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",14,[[],["messagedescriptor",3]]],[11,"new","","",14,[[],["mainrequest_getnetconfig",3]]],[11,"descriptor_static","","",14,[[],["messagedescriptor",3]]],[11,"default_instance","","",14,[[],["mainrequest_getnetconfig",3]]],[11,"is_initialized","","",15,[[],["bool",15]]],[11,"merge_from","","",15,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",15,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",15,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",15,[[],["u32",15]]],[11,"get_unknown_fields","","",15,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",15,[[],["unknownfields",3]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any","","",15,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",15,[[],["messagedescriptor",3]]],[11,"new","","",15,[[],["mainrequest_reserverange",3]]],[11,"descriptor_static","","",15,[[],["messagedescriptor",3]]],[11,"default_instance","","",15,[[],["mainrequest_reserverange",3]]],[11,"is_initialized","","",16,[[],["bool",15]]],[11,"merge_from","","",16,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",16,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",16,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",16,[[],["u32",15]]],[11,"get_unknown_fields","","",16,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",16,[[],["unknownfields",3]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any","","",16,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",16,[[],["messagedescriptor",3]]],[11,"new","","",16,[[],["mainrequest_setirq",3]]],[11,"descriptor_static","","",16,[[],["messagedescriptor",3]]],[11,"default_instance","","",16,[[],["mainrequest_setirq",3]]],[11,"is_initialized","","",17,[[],["bool",15]]],[11,"merge_from","","",17,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",17,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",17,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",17,[[],["u32",15]]],[11,"get_unknown_fields","","",17,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",17,[[],["unknownfields",3]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any","","",17,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",17,[[],["messagedescriptor",3]]],[11,"new","","",17,[[],["mainrequest_setirqrouting",3]]],[11,"descriptor_static","","",17,[[],["messagedescriptor",3]]],[11,"default_instance","","",17,[[],["mainrequest_setirqrouting",3]]],[11,"is_initialized","","",18,[[],["bool",15]]],[11,"merge_from","","",18,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",18,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",18,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",18,[[],["u32",15]]],[11,"get_unknown_fields","","",18,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",18,[[],["unknownfields",3]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any","","",18,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",18,[[],["messagedescriptor",3]]],[11,"new","","",18,[[],["mainrequest_setirqrouting_route",3]]],[11,"descriptor_static","","",18,[[],["messagedescriptor",3]]],[11,"default_instance","","",18,[[],["mainrequest_setirqrouting_route",3]]],[11,"is_initialized","","",20,[[],["bool",15]]],[11,"merge_from","","",20,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",20,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",20,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",20,[[],["u32",15]]],[11,"get_unknown_fields","","",20,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",20,[[],["unknownfields",3]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any","","",20,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",20,[[],["messagedescriptor",3]]],[11,"new","","",20,[[],["mainrequest_setirqrouting_route_irqchip",3]]],[11,"descriptor_static","","",20,[[],["messagedescriptor",3]]],[11,"default_instance","","",20,[[],["mainrequest_setirqrouting_route_irqchip",3]]],[11,"is_initialized","","",21,[[],["bool",15]]],[11,"merge_from","","",21,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",21,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",21,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",21,[[],["u32",15]]],[11,"get_unknown_fields","","",21,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",21,[[],["unknownfields",3]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any","","",21,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",21,[[],["messagedescriptor",3]]],[11,"new","","",21,[[],["mainrequest_setirqrouting_route_msi",3]]],[11,"descriptor_static","","",21,[[],["messagedescriptor",3]]],[11,"default_instance","","",21,[[],["mainrequest_setirqrouting_route_msi",3]]],[11,"is_initialized","","",22,[[],["bool",15]]],[11,"merge_from","","",22,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",22,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",22,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",22,[[],["u32",15]]],[11,"get_unknown_fields","","",22,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",22,[[],["unknownfields",3]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any","","",22,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",22,[[],["messagedescriptor",3]]],[11,"new","","",22,[[],["mainrequest_getstate",3]]],[11,"descriptor_static","","",22,[[],["messagedescriptor",3]]],[11,"default_instance","","",22,[[],["mainrequest_getstate",3]]],[11,"is_initialized","","",23,[[],["bool",15]]],[11,"merge_from","","",23,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",23,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",23,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",23,[[],["u32",15]]],[11,"get_unknown_fields","","",23,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",23,[[],["unknownfields",3]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any","","",23,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",23,[[],["messagedescriptor",3]]],[11,"new","","",23,[[],["mainrequest_setstate",3]]],[11,"descriptor_static","","",23,[[],["messagedescriptor",3]]],[11,"default_instance","","",23,[[],["mainrequest_setstate",3]]],[11,"is_initialized","","",24,[[],["bool",15]]],[11,"merge_from","","",24,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",24,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",24,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",24,[[],["u32",15]]],[11,"get_unknown_fields","","",24,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",24,[[],["unknownfields",3]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any","","",24,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",24,[[],["messagedescriptor",3]]],[11,"new","","",24,[[],["mainrequest_setidentitymapaddr",3]]],[11,"descriptor_static","","",24,[[],["messagedescriptor",3]]],[11,"default_instance","","",24,[[],["mainrequest_setidentitymapaddr",3]]],[11,"is_initialized","","",25,[[],["bool",15]]],[11,"merge_from","","",25,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",25,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",25,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",25,[[],["u32",15]]],[11,"get_unknown_fields","","",25,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",25,[[],["unknownfields",3]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any","","",25,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",25,[[],["messagedescriptor",3]]],[11,"new","","",25,[[],["mainrequest_pausevcpus",3]]],[11,"descriptor_static","","",25,[[],["messagedescriptor",3]]],[11,"default_instance","","",25,[[],["mainrequest_pausevcpus",3]]],[11,"is_initialized","","",26,[[],["bool",15]]],[11,"merge_from","","",26,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",26,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",26,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",26,[[],["u32",15]]],[11,"get_unknown_fields","","",26,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",26,[[],["unknownfields",3]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any","","",26,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",26,[[],["messagedescriptor",3]]],[11,"new","","",26,[[],["mainrequest_getvcpus",3]]],[11,"descriptor_static","","",26,[[],["messagedescriptor",3]]],[11,"default_instance","","",26,[[],["mainrequest_getvcpus",3]]],[11,"is_initialized","","",27,[[],["bool",15]]],[11,"merge_from","","",27,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",27,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",27,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",27,[[],["u32",15]]],[11,"get_unknown_fields","","",27,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",27,[[],["unknownfields",3]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any","","",27,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",27,[[],["messagedescriptor",3]]],[11,"new","","",27,[[],["mainrequest_start",3]]],[11,"descriptor_static","","",27,[[],["messagedescriptor",3]]],[11,"default_instance","","",27,[[],["mainrequest_start",3]]],[11,"is_initialized","","",28,[[],["bool",15]]],[11,"merge_from","","",28,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",28,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",28,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",28,[[],["u32",15]]],[11,"get_unknown_fields","","",28,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",28,[[],["unknownfields",3]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any","","",28,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",28,[[],["messagedescriptor",3]]],[11,"new","","",28,[[],["mainrequest_setcallhint",3]]],[11,"descriptor_static","","",28,[[],["messagedescriptor",3]]],[11,"default_instance","","",28,[[],["mainrequest_setcallhint",3]]],[11,"is_initialized","","",29,[[],["bool",15]]],[11,"merge_from","","",29,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",29,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",29,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",29,[[],["u32",15]]],[11,"get_unknown_fields","","",29,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",29,[[],["unknownfields",3]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any","","",29,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",29,[[],["messagedescriptor",3]]],[11,"new","","",29,[[],["mainrequest_setcallhint_reghint",3]]],[11,"descriptor_static","","",29,[[],["messagedescriptor",3]]],[11,"default_instance","","",29,[[],["mainrequest_setcallhint_reghint",3]]],[11,"is_initialized","","",30,[[],["bool",15]]],[11,"merge_from","","",30,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",30,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",30,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",30,[[],["u32",15]]],[11,"get_unknown_fields","","",30,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",30,[[],["unknownfields",3]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any","","",30,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",30,[[],["messagedescriptor",3]]],[11,"new","","",30,[[],["mainrequest_memorydirtylog",3]]],[11,"descriptor_static","","",30,[[],["messagedescriptor",3]]],[11,"default_instance","","",30,[[],["mainrequest_memorydirtylog",3]]],[11,"is_initialized","","",32,[[],["bool",15]]],[11,"merge_from","","",32,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",32,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",32,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",32,[[],["u32",15]]],[11,"get_unknown_fields","","",32,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",32,[[],["unknownfields",3]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any","","",32,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",32,[[],["messagedescriptor",3]]],[11,"new","","",32,[[],["mainresponse",3]]],[11,"descriptor_static","","",32,[[],["messagedescriptor",3]]],[11,"default_instance","","",32,[[],["mainresponse",3]]],[11,"is_initialized","","",34,[[],["bool",15]]],[11,"merge_from","","",34,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",34,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",34,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",34,[[],["u32",15]]],[11,"get_unknown_fields","","",34,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",34,[[],["unknownfields",3]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any","","",34,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",34,[[],["messagedescriptor",3]]],[11,"new","","",34,[[],["mainresponse_create",3]]],[11,"descriptor_static","","",34,[[],["messagedescriptor",3]]],[11,"default_instance","","",34,[[],["mainresponse_create",3]]],[11,"is_initialized","","",35,[[],["bool",15]]],[11,"merge_from","","",35,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",35,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",35,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",35,[[],["u32",15]]],[11,"get_unknown_fields","","",35,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",35,[[],["unknownfields",3]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any","","",35,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",35,[[],["messagedescriptor",3]]],[11,"new","","",35,[[],["mainresponse_destroy",3]]],[11,"descriptor_static","","",35,[[],["messagedescriptor",3]]],[11,"default_instance","","",35,[[],["mainresponse_destroy",3]]],[11,"is_initialized","","",36,[[],["bool",15]]],[11,"merge_from","","",36,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",36,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",36,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",36,[[],["u32",15]]],[11,"get_unknown_fields","","",36,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",36,[[],["unknownfields",3]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any","","",36,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",36,[[],["messagedescriptor",3]]],[11,"new","","",36,[[],["mainresponse_newconnection",3]]],[11,"descriptor_static","","",36,[[],["messagedescriptor",3]]],[11,"default_instance","","",36,[[],["mainresponse_newconnection",3]]],[11,"is_initialized","","",37,[[],["bool",15]]],[11,"merge_from","","",37,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",37,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",37,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",37,[[],["u32",15]]],[11,"get_unknown_fields","","",37,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",37,[[],["unknownfields",3]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any","","",37,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",37,[[],["messagedescriptor",3]]],[11,"new","","",37,[[],["mainresponse_getshutdowneventfd",3]]],[11,"descriptor_static","","",37,[[],["messagedescriptor",3]]],[11,"default_instance","","",37,[[],["mainresponse_getshutdowneventfd",3]]],[11,"is_initialized","","",38,[[],["bool",15]]],[11,"merge_from","","",38,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",38,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",38,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",38,[[],["u32",15]]],[11,"get_unknown_fields","","",38,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",38,[[],["unknownfields",3]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"into_any","","",38,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",38,[[],["messagedescriptor",3]]],[11,"new","","",38,[[],["mainresponse_checkextension",3]]],[11,"descriptor_static","","",38,[[],["messagedescriptor",3]]],[11,"default_instance","","",38,[[],["mainresponse_checkextension",3]]],[11,"is_initialized","","",39,[[],["bool",15]]],[11,"merge_from","","",39,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",39,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",39,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",39,[[],["u32",15]]],[11,"get_unknown_fields","","",39,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",39,[[],["unknownfields",3]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"into_any","","",39,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",39,[[],["messagedescriptor",3]]],[11,"new","","",39,[[],["mainresponse_cpuidresponse",3]]],[11,"descriptor_static","","",39,[[],["messagedescriptor",3]]],[11,"default_instance","","",39,[[],["mainresponse_cpuidresponse",3]]],[11,"is_initialized","","",40,[[],["bool",15]]],[11,"merge_from","","",40,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",40,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",40,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",40,[[],["u32",15]]],[11,"get_unknown_fields","","",40,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",40,[[],["unknownfields",3]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any","","",40,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",40,[[],["messagedescriptor",3]]],[11,"new","","",40,[[],["mainresponse_msrlistresponse",3]]],[11,"descriptor_static","","",40,[[],["messagedescriptor",3]]],[11,"default_instance","","",40,[[],["mainresponse_msrlistresponse",3]]],[11,"is_initialized","","",41,[[],["bool",15]]],[11,"merge_from","","",41,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",41,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",41,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",41,[[],["u32",15]]],[11,"get_unknown_fields","","",41,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",41,[[],["unknownfields",3]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any","","",41,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",41,[[],["messagedescriptor",3]]],[11,"new","","",41,[[],["mainresponse_getnetconfig",3]]],[11,"descriptor_static","","",41,[[],["messagedescriptor",3]]],[11,"default_instance","","",41,[[],["mainresponse_getnetconfig",3]]],[11,"is_initialized","","",42,[[],["bool",15]]],[11,"merge_from","","",42,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",42,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",42,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",42,[[],["u32",15]]],[11,"get_unknown_fields","","",42,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",42,[[],["unknownfields",3]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any","","",42,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",42,[[],["messagedescriptor",3]]],[11,"new","","",42,[[],["mainresponse_reserverange",3]]],[11,"descriptor_static","","",42,[[],["messagedescriptor",3]]],[11,"default_instance","","",42,[[],["mainresponse_reserverange",3]]],[11,"is_initialized","","",43,[[],["bool",15]]],[11,"merge_from","","",43,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",43,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",43,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",43,[[],["u32",15]]],[11,"get_unknown_fields","","",43,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",43,[[],["unknownfields",3]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any","","",43,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",43,[[],["messagedescriptor",3]]],[11,"new","","",43,[[],["mainresponse_setirq",3]]],[11,"descriptor_static","","",43,[[],["messagedescriptor",3]]],[11,"default_instance","","",43,[[],["mainresponse_setirq",3]]],[11,"is_initialized","","",44,[[],["bool",15]]],[11,"merge_from","","",44,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",44,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",44,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",44,[[],["u32",15]]],[11,"get_unknown_fields","","",44,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",44,[[],["unknownfields",3]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any","","",44,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",44,[[],["messagedescriptor",3]]],[11,"new","","",44,[[],["mainresponse_setirqrouting",3]]],[11,"descriptor_static","","",44,[[],["messagedescriptor",3]]],[11,"default_instance","","",44,[[],["mainresponse_setirqrouting",3]]],[11,"is_initialized","","",45,[[],["bool",15]]],[11,"merge_from","","",45,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",45,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",45,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",45,[[],["u32",15]]],[11,"get_unknown_fields","","",45,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",45,[[],["unknownfields",3]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"into_any","","",45,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",45,[[],["messagedescriptor",3]]],[11,"new","","",45,[[],["mainresponse_getstate",3]]],[11,"descriptor_static","","",45,[[],["messagedescriptor",3]]],[11,"default_instance","","",45,[[],["mainresponse_getstate",3]]],[11,"is_initialized","","",46,[[],["bool",15]]],[11,"merge_from","","",46,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",46,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",46,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",46,[[],["u32",15]]],[11,"get_unknown_fields","","",46,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",46,[[],["unknownfields",3]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any","","",46,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",46,[[],["messagedescriptor",3]]],[11,"new","","",46,[[],["mainresponse_setstate",3]]],[11,"descriptor_static","","",46,[[],["messagedescriptor",3]]],[11,"default_instance","","",46,[[],["mainresponse_setstate",3]]],[11,"is_initialized","","",47,[[],["bool",15]]],[11,"merge_from","","",47,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",47,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",47,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",47,[[],["u32",15]]],[11,"get_unknown_fields","","",47,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",47,[[],["unknownfields",3]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any","","",47,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",47,[[],["messagedescriptor",3]]],[11,"new","","",47,[[],["mainresponse_setidentitymapaddr",3]]],[11,"descriptor_static","","",47,[[],["messagedescriptor",3]]],[11,"default_instance","","",47,[[],["mainresponse_setidentitymapaddr",3]]],[11,"is_initialized","","",48,[[],["bool",15]]],[11,"merge_from","","",48,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",48,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",48,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",48,[[],["u32",15]]],[11,"get_unknown_fields","","",48,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",48,[[],["unknownfields",3]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any","","",48,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",48,[[],["messagedescriptor",3]]],[11,"new","","",48,[[],["mainresponse_pausevcpus",3]]],[11,"descriptor_static","","",48,[[],["messagedescriptor",3]]],[11,"default_instance","","",48,[[],["mainresponse_pausevcpus",3]]],[11,"is_initialized","","",49,[[],["bool",15]]],[11,"merge_from","","",49,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",49,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",49,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",49,[[],["u32",15]]],[11,"get_unknown_fields","","",49,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",49,[[],["unknownfields",3]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any","","",49,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",49,[[],["messagedescriptor",3]]],[11,"new","","",49,[[],["mainresponse_getvcpus",3]]],[11,"descriptor_static","","",49,[[],["messagedescriptor",3]]],[11,"default_instance","","",49,[[],["mainresponse_getvcpus",3]]],[11,"is_initialized","","",50,[[],["bool",15]]],[11,"merge_from","","",50,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",50,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",50,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",50,[[],["u32",15]]],[11,"get_unknown_fields","","",50,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",50,[[],["unknownfields",3]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any","","",50,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",50,[[],["messagedescriptor",3]]],[11,"new","","",50,[[],["mainresponse_start",3]]],[11,"descriptor_static","","",50,[[],["messagedescriptor",3]]],[11,"default_instance","","",50,[[],["mainresponse_start",3]]],[11,"is_initialized","","",51,[[],["bool",15]]],[11,"merge_from","","",51,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",51,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",51,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",51,[[],["u32",15]]],[11,"get_unknown_fields","","",51,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",51,[[],["unknownfields",3]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any","","",51,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",51,[[],["messagedescriptor",3]]],[11,"new","","",51,[[],["mainresponse_setcallhint",3]]],[11,"descriptor_static","","",51,[[],["messagedescriptor",3]]],[11,"default_instance","","",51,[[],["mainresponse_setcallhint",3]]],[11,"is_initialized","","",52,[[],["bool",15]]],[11,"merge_from","","",52,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",52,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",52,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",52,[[],["u32",15]]],[11,"get_unknown_fields","","",52,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",52,[[],["unknownfields",3]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any","","",52,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",52,[[],["messagedescriptor",3]]],[11,"new","","",52,[[],["mainresponse_memorydirtylog",3]]],[11,"descriptor_static","","",52,[[],["messagedescriptor",3]]],[11,"default_instance","","",52,[[],["mainresponse_memorydirtylog",3]]],[11,"is_initialized","","",53,[[],["bool",15]]],[11,"merge_from","","",53,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",53,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",53,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",53,[[],["u32",15]]],[11,"get_unknown_fields","","",53,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",53,[[],["unknownfields",3]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any","","",53,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",53,[[],["messagedescriptor",3]]],[11,"new","","",53,[[],["vcpurequest",3]]],[11,"descriptor_static","","",53,[[],["messagedescriptor",3]]],[11,"default_instance","","",53,[[],["vcpurequest",3]]],[11,"is_initialized","","",55,[[],["bool",15]]],[11,"merge_from","","",55,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",55,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",55,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",55,[[],["u32",15]]],[11,"get_unknown_fields","","",55,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",55,[[],["unknownfields",3]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any","","",55,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",55,[[],["messagedescriptor",3]]],[11,"new","","",55,[[],["vcpurequest_wait",3]]],[11,"descriptor_static","","",55,[[],["messagedescriptor",3]]],[11,"default_instance","","",55,[[],["vcpurequest_wait",3]]],[11,"is_initialized","","",56,[[],["bool",15]]],[11,"merge_from","","",56,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",56,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",56,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",56,[[],["u32",15]]],[11,"get_unknown_fields","","",56,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",56,[[],["unknownfields",3]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any","","",56,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",56,[[],["messagedescriptor",3]]],[11,"new","","",56,[[],["vcpurequest_resume",3]]],[11,"descriptor_static","","",56,[[],["messagedescriptor",3]]],[11,"default_instance","","",56,[[],["vcpurequest_resume",3]]],[11,"is_initialized","","",57,[[],["bool",15]]],[11,"merge_from","","",57,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",57,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",57,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",57,[[],["u32",15]]],[11,"get_unknown_fields","","",57,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",57,[[],["unknownfields",3]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any","","",57,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",57,[[],["messagedescriptor",3]]],[11,"new","","",57,[[],["vcpurequest_getstate",3]]],[11,"descriptor_static","","",57,[[],["messagedescriptor",3]]],[11,"default_instance","","",57,[[],["vcpurequest_getstate",3]]],[11,"is_initialized","","",58,[[],["bool",15]]],[11,"merge_from","","",58,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",58,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",58,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",58,[[],["u32",15]]],[11,"get_unknown_fields","","",58,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",58,[[],["unknownfields",3]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any","","",58,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",58,[[],["messagedescriptor",3]]],[11,"new","","",58,[[],["vcpurequest_setstate",3]]],[11,"descriptor_static","","",58,[[],["messagedescriptor",3]]],[11,"default_instance","","",58,[[],["vcpurequest_setstate",3]]],[11,"is_initialized","","",59,[[],["bool",15]]],[11,"merge_from","","",59,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",59,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",59,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",59,[[],["u32",15]]],[11,"get_unknown_fields","","",59,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",59,[[],["unknownfields",3]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any","","",59,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",59,[[],["messagedescriptor",3]]],[11,"new","","",59,[[],["vcpurequest_cpuidrequest",3]]],[11,"descriptor_static","","",59,[[],["messagedescriptor",3]]],[11,"default_instance","","",59,[[],["vcpurequest_cpuidrequest",3]]],[11,"is_initialized","","",60,[[],["bool",15]]],[11,"merge_from","","",60,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",60,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",60,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",60,[[],["u32",15]]],[11,"get_unknown_fields","","",60,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",60,[[],["unknownfields",3]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any","","",60,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",60,[[],["messagedescriptor",3]]],[11,"new","","",60,[[],["vcpurequest_getmsrs",3]]],[11,"descriptor_static","","",60,[[],["messagedescriptor",3]]],[11,"default_instance","","",60,[[],["vcpurequest_getmsrs",3]]],[11,"is_initialized","","",61,[[],["bool",15]]],[11,"merge_from","","",61,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",61,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",61,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",61,[[],["u32",15]]],[11,"get_unknown_fields","","",61,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",61,[[],["unknownfields",3]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any","","",61,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",61,[[],["messagedescriptor",3]]],[11,"new","","",61,[[],["vcpurequest_msrentry",3]]],[11,"descriptor_static","","",61,[[],["messagedescriptor",3]]],[11,"default_instance","","",61,[[],["vcpurequest_msrentry",3]]],[11,"is_initialized","","",62,[[],["bool",15]]],[11,"merge_from","","",62,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",62,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",62,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",62,[[],["u32",15]]],[11,"get_unknown_fields","","",62,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",62,[[],["unknownfields",3]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"into_any","","",62,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",62,[[],["messagedescriptor",3]]],[11,"new","","",62,[[],["vcpurequest_setmsrs",3]]],[11,"descriptor_static","","",62,[[],["messagedescriptor",3]]],[11,"default_instance","","",62,[[],["vcpurequest_setmsrs",3]]],[11,"is_initialized","","",63,[[],["bool",15]]],[11,"merge_from","","",63,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",63,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",63,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",63,[[],["u32",15]]],[11,"get_unknown_fields","","",63,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",63,[[],["unknownfields",3]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any","","",63,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",63,[[],["messagedescriptor",3]]],[11,"new","","",63,[[],["vcpurequest_setcpuid",3]]],[11,"descriptor_static","","",63,[[],["messagedescriptor",3]]],[11,"default_instance","","",63,[[],["vcpurequest_setcpuid",3]]],[11,"is_initialized","","",64,[[],["bool",15]]],[11,"merge_from","","",64,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",64,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",64,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",64,[[],["u32",15]]],[11,"get_unknown_fields","","",64,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",64,[[],["unknownfields",3]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any","","",64,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",64,[[],["messagedescriptor",3]]],[11,"new","","",64,[[],["vcpurequest_shutdown",3]]],[11,"descriptor_static","","",64,[[],["messagedescriptor",3]]],[11,"default_instance","","",64,[[],["vcpurequest_shutdown",3]]],[11,"is_initialized","","",65,[[],["bool",15]]],[11,"merge_from","","",65,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",65,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",65,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",65,[[],["u32",15]]],[11,"get_unknown_fields","","",65,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",65,[[],["unknownfields",3]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any","","",65,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",65,[[],["messagedescriptor",3]]],[11,"new","","",65,[[],["vcpurequest_enablecapability",3]]],[11,"descriptor_static","","",65,[[],["messagedescriptor",3]]],[11,"default_instance","","",65,[[],["vcpurequest_enablecapability",3]]],[11,"is_initialized","","",67,[[],["bool",15]]],[11,"merge_from","","",67,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",67,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",67,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",67,[[],["u32",15]]],[11,"get_unknown_fields","","",67,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",67,[[],["unknownfields",3]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"into_any","","",67,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",67,[[],["messagedescriptor",3]]],[11,"new","","",67,[[],["vcpuresponse",3]]],[11,"descriptor_static","","",67,[[],["messagedescriptor",3]]],[11,"default_instance","","",67,[[],["vcpuresponse",3]]],[11,"is_initialized","","",69,[[],["bool",15]]],[11,"merge_from","","",69,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",69,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",69,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",69,[[],["u32",15]]],[11,"get_unknown_fields","","",69,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",69,[[],["unknownfields",3]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"into_any","","",69,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",69,[[],["messagedescriptor",3]]],[11,"new","","",69,[[],["vcpuresponse_wait",3]]],[11,"descriptor_static","","",69,[[],["messagedescriptor",3]]],[11,"default_instance","","",69,[[],["vcpuresponse_wait",3]]],[11,"is_initialized","","",71,[[],["bool",15]]],[11,"merge_from","","",71,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",71,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",71,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",71,[[],["u32",15]]],[11,"get_unknown_fields","","",71,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",71,[[],["unknownfields",3]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"into_any","","",71,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",71,[[],["messagedescriptor",3]]],[11,"new","","",71,[[],["vcpuresponse_wait_init",3]]],[11,"descriptor_static","","",71,[[],["messagedescriptor",3]]],[11,"default_instance","","",71,[[],["vcpuresponse_wait_init",3]]],[11,"is_initialized","","",72,[[],["bool",15]]],[11,"merge_from","","",72,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",72,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",72,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",72,[[],["u32",15]]],[11,"get_unknown_fields","","",72,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",72,[[],["unknownfields",3]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any","","",72,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",72,[[],["messagedescriptor",3]]],[11,"new","","",72,[[],["vcpuresponse_wait_io",3]]],[11,"descriptor_static","","",72,[[],["messagedescriptor",3]]],[11,"default_instance","","",72,[[],["vcpuresponse_wait_io",3]]],[11,"is_initialized","","",73,[[],["bool",15]]],[11,"merge_from","","",73,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",73,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",73,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",73,[[],["u32",15]]],[11,"get_unknown_fields","","",73,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",73,[[],["unknownfields",3]]],[11,"as_any","","",73,[[],["any",8]]],[11,"as_any_mut","","",73,[[],["any",8]]],[11,"into_any","","",73,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",73,[[],["messagedescriptor",3]]],[11,"new","","",73,[[],["vcpuresponse_wait_user",3]]],[11,"descriptor_static","","",73,[[],["messagedescriptor",3]]],[11,"default_instance","","",73,[[],["vcpuresponse_wait_user",3]]],[11,"is_initialized","","",74,[[],["bool",15]]],[11,"merge_from","","",74,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",74,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",74,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",74,[[],["u32",15]]],[11,"get_unknown_fields","","",74,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",74,[[],["unknownfields",3]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any","","",74,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",74,[[],["messagedescriptor",3]]],[11,"new","","",74,[[],["vcpuresponse_wait_hypervcall",3]]],[11,"descriptor_static","","",74,[[],["messagedescriptor",3]]],[11,"default_instance","","",74,[[],["vcpuresponse_wait_hypervcall",3]]],[11,"is_initialized","","",75,[[],["bool",15]]],[11,"merge_from","","",75,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",75,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",75,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",75,[[],["u32",15]]],[11,"get_unknown_fields","","",75,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",75,[[],["unknownfields",3]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any","","",75,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",75,[[],["messagedescriptor",3]]],[11,"new","","",75,[[],["vcpuresponse_wait_hypervsynic",3]]],[11,"descriptor_static","","",75,[[],["messagedescriptor",3]]],[11,"default_instance","","",75,[[],["vcpuresponse_wait_hypervsynic",3]]],[11,"is_initialized","","",76,[[],["bool",15]]],[11,"merge_from","","",76,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",76,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",76,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",76,[[],["u32",15]]],[11,"get_unknown_fields","","",76,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",76,[[],["unknownfields",3]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any","","",76,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",76,[[],["messagedescriptor",3]]],[11,"new","","",76,[[],["vcpuresponse_getstate",3]]],[11,"descriptor_static","","",76,[[],["messagedescriptor",3]]],[11,"default_instance","","",76,[[],["vcpuresponse_getstate",3]]],[11,"is_initialized","","",77,[[],["bool",15]]],[11,"merge_from","","",77,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",77,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",77,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",77,[[],["u32",15]]],[11,"get_unknown_fields","","",77,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",77,[[],["unknownfields",3]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any","","",77,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",77,[[],["messagedescriptor",3]]],[11,"new","","",77,[[],["vcpuresponse_setstate",3]]],[11,"descriptor_static","","",77,[[],["messagedescriptor",3]]],[11,"default_instance","","",77,[[],["vcpuresponse_setstate",3]]],[11,"is_initialized","","",78,[[],["bool",15]]],[11,"merge_from","","",78,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",78,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",78,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",78,[[],["u32",15]]],[11,"get_unknown_fields","","",78,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",78,[[],["unknownfields",3]]],[11,"as_any","","",78,[[],["any",8]]],[11,"as_any_mut","","",78,[[],["any",8]]],[11,"into_any","","",78,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",78,[[],["messagedescriptor",3]]],[11,"new","","",78,[[],["vcpuresponse_cpuidresponse",3]]],[11,"descriptor_static","","",78,[[],["messagedescriptor",3]]],[11,"default_instance","","",78,[[],["vcpuresponse_cpuidresponse",3]]],[11,"is_initialized","","",79,[[],["bool",15]]],[11,"merge_from","","",79,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",79,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",79,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",79,[[],["u32",15]]],[11,"get_unknown_fields","","",79,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",79,[[],["unknownfields",3]]],[11,"as_any","","",79,[[],["any",8]]],[11,"as_any_mut","","",79,[[],["any",8]]],[11,"into_any","","",79,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",79,[[],["messagedescriptor",3]]],[11,"new","","",79,[[],["vcpuresponse_getmsrs",3]]],[11,"descriptor_static","","",79,[[],["messagedescriptor",3]]],[11,"default_instance","","",79,[[],["vcpuresponse_getmsrs",3]]],[11,"is_initialized","","",80,[[],["bool",15]]],[11,"merge_from","","",80,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",80,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",80,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",80,[[],["u32",15]]],[11,"get_unknown_fields","","",80,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",80,[[],["unknownfields",3]]],[11,"as_any","","",80,[[],["any",8]]],[11,"as_any_mut","","",80,[[],["any",8]]],[11,"into_any","","",80,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",80,[[],["messagedescriptor",3]]],[11,"new","","",80,[[],["vcpuresponse_setmsrs",3]]],[11,"descriptor_static","","",80,[[],["messagedescriptor",3]]],[11,"default_instance","","",80,[[],["vcpuresponse_setmsrs",3]]],[11,"is_initialized","","",81,[[],["bool",15]]],[11,"merge_from","","",81,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",81,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",81,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",81,[[],["u32",15]]],[11,"get_unknown_fields","","",81,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",81,[[],["unknownfields",3]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"into_any","","",81,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",81,[[],["messagedescriptor",3]]],[11,"new","","",81,[[],["vcpuresponse_setcpuid",3]]],[11,"descriptor_static","","",81,[[],["messagedescriptor",3]]],[11,"default_instance","","",81,[[],["vcpuresponse_setcpuid",3]]],[11,"is_initialized","","",82,[[],["bool",15]]],[11,"merge_from","","",82,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",82,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",82,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",82,[[],["u32",15]]],[11,"get_unknown_fields","","",82,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",82,[[],["unknownfields",3]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any","","",82,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",82,[[],["messagedescriptor",3]]],[11,"new","","",82,[[],["vcpuresponse_enablecapability",3]]],[11,"descriptor_static","","",82,[[],["messagedescriptor",3]]],[11,"default_instance","","",82,[[],["vcpuresponse_enablecapability",3]]],[11,"is_initialized","protos::cdisk_spec","",84,[[],["bool",15]]],[11,"merge_from","","",84,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",84,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",84,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",84,[[],["u32",15]]],[11,"get_unknown_fields","","",84,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",84,[[],["unknownfields",3]]],[11,"as_any","","",84,[[],["any",8]]],[11,"as_any_mut","","",84,[[],["any",8]]],[11,"into_any","","",84,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",84,[[],["messagedescriptor",3]]],[11,"new","","",84,[[],["componentdisk",3]]],[11,"descriptor_static","","",84,[[],["messagedescriptor",3]]],[11,"default_instance","","",84,[[],["componentdisk",3]]],[11,"is_initialized","","",85,[[],["bool",15]]],[11,"merge_from","","",85,[[["codedinputstream",3]],["protobufresult",6]]],[11,"compute_size","","",85,[[],["u32",15]]],[11,"write_to_with_cached_sizes","","",85,[[["codedoutputstream",3]],["protobufresult",6]]],[11,"get_cached_size","","",85,[[],["u32",15]]],[11,"get_unknown_fields","","",85,[[],["unknownfields",3]]],[11,"mut_unknown_fields","","",85,[[],["unknownfields",3]]],[11,"as_any","","",85,[[],["any",8]]],[11,"as_any_mut","","",85,[[],["any",8]]],[11,"into_any","","",85,[[["box",3]],[["any",8],["box",3]]]],[11,"descriptor","","",85,[[],["messagedescriptor",3]]],[11,"new","","",85,[[],["compositedisk",3]]],[11,"descriptor_static","","",85,[[],["messagedescriptor",3]]],[11,"default_instance","","",85,[[],["compositedisk",3]]],[11,"as_ref","protos::plugin","",0,[[],["reflectvalueref",4]]],[11,"as_ref","","",1,[[],["reflectvalueref",4]]],[11,"as_ref","","",3,[[],["reflectvalueref",4]]],[11,"as_ref","","",5,[[],["reflectvalueref",4]]],[11,"as_ref","","",6,[[],["reflectvalueref",4]]],[11,"as_ref","","",7,[[],["reflectvalueref",4]]],[11,"as_ref","","",8,[[],["reflectvalueref",4]]],[11,"as_ref","","",9,[[],["reflectvalueref",4]]],[11,"as_ref","","",10,[[],["reflectvalueref",4]]],[11,"as_ref","","",11,[[],["reflectvalueref",4]]],[11,"as_ref","","",12,[[],["reflectvalueref",4]]],[11,"as_ref","","",13,[[],["reflectvalueref",4]]],[11,"as_ref","","",14,[[],["reflectvalueref",4]]],[11,"as_ref","","",15,[[],["reflectvalueref",4]]],[11,"as_ref","","",16,[[],["reflectvalueref",4]]],[11,"as_ref","","",17,[[],["reflectvalueref",4]]],[11,"as_ref","","",18,[[],["reflectvalueref",4]]],[11,"as_ref","","",20,[[],["reflectvalueref",4]]],[11,"as_ref","","",21,[[],["reflectvalueref",4]]],[11,"as_ref","","",22,[[],["reflectvalueref",4]]],[11,"as_ref","","",23,[[],["reflectvalueref",4]]],[11,"as_ref","","",24,[[],["reflectvalueref",4]]],[11,"as_ref","","",25,[[],["reflectvalueref",4]]],[11,"as_ref","","",26,[[],["reflectvalueref",4]]],[11,"as_ref","","",27,[[],["reflectvalueref",4]]],[11,"as_ref","","",28,[[],["reflectvalueref",4]]],[11,"as_ref","","",29,[[],["reflectvalueref",4]]],[11,"as_ref","","",30,[[],["reflectvalueref",4]]],[11,"as_ref","","",31,[[],["reflectvalueref",4]]],[11,"as_ref","","",32,[[],["reflectvalueref",4]]],[11,"as_ref","","",34,[[],["reflectvalueref",4]]],[11,"as_ref","","",35,[[],["reflectvalueref",4]]],[11,"as_ref","","",36,[[],["reflectvalueref",4]]],[11,"as_ref","","",37,[[],["reflectvalueref",4]]],[11,"as_ref","","",38,[[],["reflectvalueref",4]]],[11,"as_ref","","",39,[[],["reflectvalueref",4]]],[11,"as_ref","","",40,[[],["reflectvalueref",4]]],[11,"as_ref","","",41,[[],["reflectvalueref",4]]],[11,"as_ref","","",42,[[],["reflectvalueref",4]]],[11,"as_ref","","",43,[[],["reflectvalueref",4]]],[11,"as_ref","","",44,[[],["reflectvalueref",4]]],[11,"as_ref","","",45,[[],["reflectvalueref",4]]],[11,"as_ref","","",46,[[],["reflectvalueref",4]]],[11,"as_ref","","",47,[[],["reflectvalueref",4]]],[11,"as_ref","","",48,[[],["reflectvalueref",4]]],[11,"as_ref","","",49,[[],["reflectvalueref",4]]],[11,"as_ref","","",50,[[],["reflectvalueref",4]]],[11,"as_ref","","",51,[[],["reflectvalueref",4]]],[11,"as_ref","","",52,[[],["reflectvalueref",4]]],[11,"as_ref","","",53,[[],["reflectvalueref",4]]],[11,"as_ref","","",55,[[],["reflectvalueref",4]]],[11,"as_ref","","",56,[[],["reflectvalueref",4]]],[11,"as_ref","","",57,[[],["reflectvalueref",4]]],[11,"as_ref","","",58,[[],["reflectvalueref",4]]],[11,"as_ref","","",59,[[],["reflectvalueref",4]]],[11,"as_ref","","",60,[[],["reflectvalueref",4]]],[11,"as_ref","","",61,[[],["reflectvalueref",4]]],[11,"as_ref","","",62,[[],["reflectvalueref",4]]],[11,"as_ref","","",63,[[],["reflectvalueref",4]]],[11,"as_ref","","",64,[[],["reflectvalueref",4]]],[11,"as_ref","","",65,[[],["reflectvalueref",4]]],[11,"as_ref","","",66,[[],["reflectvalueref",4]]],[11,"as_ref","","",67,[[],["reflectvalueref",4]]],[11,"as_ref","","",69,[[],["reflectvalueref",4]]],[11,"as_ref","","",71,[[],["reflectvalueref",4]]],[11,"as_ref","","",72,[[],["reflectvalueref",4]]],[11,"as_ref","","",73,[[],["reflectvalueref",4]]],[11,"as_ref","","",74,[[],["reflectvalueref",4]]],[11,"as_ref","","",75,[[],["reflectvalueref",4]]],[11,"as_ref","","",76,[[],["reflectvalueref",4]]],[11,"as_ref","","",77,[[],["reflectvalueref",4]]],[11,"as_ref","","",78,[[],["reflectvalueref",4]]],[11,"as_ref","","",79,[[],["reflectvalueref",4]]],[11,"as_ref","","",80,[[],["reflectvalueref",4]]],[11,"as_ref","","",81,[[],["reflectvalueref",4]]],[11,"as_ref","","",82,[[],["reflectvalueref",4]]],[11,"as_ref","","",83,[[],["reflectvalueref",4]]],[11,"as_ref","protos::cdisk_spec","",84,[[],["reflectvalueref",4]]],[11,"as_ref","","",85,[[],["reflectvalueref",4]]],[11,"as_ref","","",86,[[],["reflectvalueref",4]]],[11,"new","protos::plugin","",0,[[],["cpuidentry",3]]],[11,"get_function","","",0,[[],["u32",15]]],[11,"clear_function","","",0,[[]]],[11,"set_function","","",0,[[["u32",15]]]],[11,"get_has_index","","",0,[[],["bool",15]]],[11,"clear_has_index","","",0,[[]]],[11,"set_has_index","","",0,[[["bool",15]]]],[11,"get_index","","",0,[[],["u32",15]]],[11,"clear_index","","",0,[[]]],[11,"set_index","","",0,[[["u32",15]]]],[11,"get_eax","","",0,[[],["u32",15]]],[11,"clear_eax","","",0,[[]]],[11,"set_eax","","",0,[[["u32",15]]]],[11,"get_ebx","","",0,[[],["u32",15]]],[11,"clear_ebx","","",0,[[]]],[11,"set_ebx","","",0,[[["u32",15]]]],[11,"get_ecx","","",0,[[],["u32",15]]],[11,"clear_ecx","","",0,[[]]],[11,"set_ecx","","",0,[[["u32",15]]]],[11,"get_edx","","",0,[[],["u32",15]]],[11,"clear_edx","","",0,[[]]],[11,"set_edx","","",0,[[["u32",15]]]],[11,"new","","",1,[[],["mainrequest",3]]],[11,"get_create","","",1,[[],["mainrequest_create",3]]],[11,"clear_create","","",1,[[]]],[11,"has_create","","",1,[[],["bool",15]]],[11,"set_create","","",1,[[["mainrequest_create",3]]]],[11,"mut_create","","",1,[[],["mainrequest_create",3]]],[11,"take_create","","",1,[[],["mainrequest_create",3]]],[11,"get_destroy","","",1,[[],["mainrequest_destroy",3]]],[11,"clear_destroy","","",1,[[]]],[11,"has_destroy","","",1,[[],["bool",15]]],[11,"set_destroy","","",1,[[["mainrequest_destroy",3]]]],[11,"mut_destroy","","",1,[[],["mainrequest_destroy",3]]],[11,"take_destroy","","",1,[[],["mainrequest_destroy",3]]],[11,"get_new_connection","","",1,[[],["mainrequest_newconnection",3]]],[11,"clear_new_connection","","",1,[[]]],[11,"has_new_connection","","",1,[[],["bool",15]]],[11,"set_new_connection","","",1,[[["mainrequest_newconnection",3]]]],[11,"mut_new_connection","","",1,[[],["mainrequest_newconnection",3]]],[11,"take_new_connection","","",1,[[],["mainrequest_newconnection",3]]],[11,"get_get_shutdown_eventfd","","",1,[[],["mainrequest_getshutdowneventfd",3]]],[11,"clear_get_shutdown_eventfd","","",1,[[]]],[11,"has_get_shutdown_eventfd","","",1,[[],["bool",15]]],[11,"set_get_shutdown_eventfd","","",1,[[["mainrequest_getshutdowneventfd",3]]]],[11,"mut_get_shutdown_eventfd","","",1,[[],["mainrequest_getshutdowneventfd",3]]],[11,"take_get_shutdown_eventfd","","",1,[[],["mainrequest_getshutdowneventfd",3]]],[11,"get_check_extension","","",1,[[],["mainrequest_checkextension",3]]],[11,"clear_check_extension","","",1,[[]]],[11,"has_check_extension","","",1,[[],["bool",15]]],[11,"set_check_extension","","",1,[[["mainrequest_checkextension",3]]]],[11,"mut_check_extension","","",1,[[],["mainrequest_checkextension",3]]],[11,"take_check_extension","","",1,[[],["mainrequest_checkextension",3]]],[11,"get_get_supported_cpuid","","",1,[[],["mainrequest_cpuidrequest",3]]],[11,"clear_get_supported_cpuid","","",1,[[]]],[11,"has_get_supported_cpuid","","",1,[[],["bool",15]]],[11,"set_get_supported_cpuid","","",1,[[["mainrequest_cpuidrequest",3]]]],[11,"mut_get_supported_cpuid","","",1,[[],["mainrequest_cpuidrequest",3]]],[11,"take_get_supported_cpuid","","",1,[[],["mainrequest_cpuidrequest",3]]],[11,"get_get_emulated_cpuid","","",1,[[],["mainrequest_cpuidrequest",3]]],[11,"clear_get_emulated_cpuid","","",1,[[]]],[11,"has_get_emulated_cpuid","","",1,[[],["bool",15]]],[11,"set_get_emulated_cpuid","","",1,[[["mainrequest_cpuidrequest",3]]]],[11,"mut_get_emulated_cpuid","","",1,[[],["mainrequest_cpuidrequest",3]]],[11,"take_get_emulated_cpuid","","",1,[[],["mainrequest_cpuidrequest",3]]],[11,"get_get_msr_index_list","","",1,[[],["mainrequest_msrlistrequest",3]]],[11,"clear_get_msr_index_list","","",1,[[]]],[11,"has_get_msr_index_list","","",1,[[],["bool",15]]],[11,"set_get_msr_index_list","","",1,[[["mainrequest_msrlistrequest",3]]]],[11,"mut_get_msr_index_list","","",1,[[],["mainrequest_msrlistrequest",3]]],[11,"take_get_msr_index_list","","",1,[[],["mainrequest_msrlistrequest",3]]],[11,"get_get_net_config","","",1,[[],["mainrequest_getnetconfig",3]]],[11,"clear_get_net_config","","",1,[[]]],[11,"has_get_net_config","","",1,[[],["bool",15]]],[11,"set_get_net_config","","",1,[[["mainrequest_getnetconfig",3]]]],[11,"mut_get_net_config","","",1,[[],["mainrequest_getnetconfig",3]]],[11,"take_get_net_config","","",1,[[],["mainrequest_getnetconfig",3]]],[11,"get_reserve_range","","",1,[[],["mainrequest_reserverange",3]]],[11,"clear_reserve_range","","",1,[[]]],[11,"has_reserve_range","","",1,[[],["bool",15]]],[11,"set_reserve_range","","",1,[[["mainrequest_reserverange",3]]]],[11,"mut_reserve_range","","",1,[[],["mainrequest_reserverange",3]]],[11,"take_reserve_range","","",1,[[],["mainrequest_reserverange",3]]],[11,"get_set_irq","","",1,[[],["mainrequest_setirq",3]]],[11,"clear_set_irq","","",1,[[]]],[11,"has_set_irq","","",1,[[],["bool",15]]],[11,"set_set_irq","","",1,[[["mainrequest_setirq",3]]]],[11,"mut_set_irq","","",1,[[],["mainrequest_setirq",3]]],[11,"take_set_irq","","",1,[[],["mainrequest_setirq",3]]],[11,"get_set_irq_routing","","",1,[[],["mainrequest_setirqrouting",3]]],[11,"clear_set_irq_routing","","",1,[[]]],[11,"has_set_irq_routing","","",1,[[],["bool",15]]],[11,"set_set_irq_routing","","",1,[[["mainrequest_setirqrouting",3]]]],[11,"mut_set_irq_routing","","",1,[[],["mainrequest_setirqrouting",3]]],[11,"take_set_irq_routing","","",1,[[],["mainrequest_setirqrouting",3]]],[11,"get_get_state","","",1,[[],["mainrequest_getstate",3]]],[11,"clear_get_state","","",1,[[]]],[11,"has_get_state","","",1,[[],["bool",15]]],[11,"set_get_state","","",1,[[["mainrequest_getstate",3]]]],[11,"mut_get_state","","",1,[[],["mainrequest_getstate",3]]],[11,"take_get_state","","",1,[[],["mainrequest_getstate",3]]],[11,"get_set_state","","",1,[[],["mainrequest_setstate",3]]],[11,"clear_set_state","","",1,[[]]],[11,"has_set_state","","",1,[[],["bool",15]]],[11,"set_set_state","","",1,[[["mainrequest_setstate",3]]]],[11,"mut_set_state","","",1,[[],["mainrequest_setstate",3]]],[11,"take_set_state","","",1,[[],["mainrequest_setstate",3]]],[11,"get_set_identity_map_addr","","",1,[[],["mainrequest_setidentitymapaddr",3]]],[11,"clear_set_identity_map_addr","","",1,[[]]],[11,"has_set_identity_map_addr","","",1,[[],["bool",15]]],[11,"set_set_identity_map_addr","","",1,[[["mainrequest_setidentitymapaddr",3]]]],[11,"mut_set_identity_map_addr","","",1,[[],["mainrequest_setidentitymapaddr",3]]],[11,"take_set_identity_map_addr","","",1,[[],["mainrequest_setidentitymapaddr",3]]],[11,"get_pause_vcpus","","",1,[[],["mainrequest_pausevcpus",3]]],[11,"clear_pause_vcpus","","",1,[[]]],[11,"has_pause_vcpus","","",1,[[],["bool",15]]],[11,"set_pause_vcpus","","",1,[[["mainrequest_pausevcpus",3]]]],[11,"mut_pause_vcpus","","",1,[[],["mainrequest_pausevcpus",3]]],[11,"take_pause_vcpus","","",1,[[],["mainrequest_pausevcpus",3]]],[11,"get_get_vcpus","","",1,[[],["mainrequest_getvcpus",3]]],[11,"clear_get_vcpus","","",1,[[]]],[11,"has_get_vcpus","","",1,[[],["bool",15]]],[11,"set_get_vcpus","","",1,[[["mainrequest_getvcpus",3]]]],[11,"mut_get_vcpus","","",1,[[],["mainrequest_getvcpus",3]]],[11,"take_get_vcpus","","",1,[[],["mainrequest_getvcpus",3]]],[11,"get_start","","",1,[[],["mainrequest_start",3]]],[11,"clear_start","","",1,[[]]],[11,"has_start","","",1,[[],["bool",15]]],[11,"set_start","","",1,[[["mainrequest_start",3]]]],[11,"mut_start","","",1,[[],["mainrequest_start",3]]],[11,"take_start","","",1,[[],["mainrequest_start",3]]],[11,"get_set_call_hint","","",1,[[],["mainrequest_setcallhint",3]]],[11,"clear_set_call_hint","","",1,[[]]],[11,"has_set_call_hint","","",1,[[],["bool",15]]],[11,"set_set_call_hint","","",1,[[["mainrequest_setcallhint",3]]]],[11,"mut_set_call_hint","","",1,[[],["mainrequest_setcallhint",3]]],[11,"take_set_call_hint","","",1,[[],["mainrequest_setcallhint",3]]],[11,"get_dirty_log","","",1,[[],["mainrequest_memorydirtylog",3]]],[11,"clear_dirty_log","","",1,[[]]],[11,"has_dirty_log","","",1,[[],["bool",15]]],[11,"set_dirty_log","","",1,[[["mainrequest_memorydirtylog",3]]]],[11,"mut_dirty_log","","",1,[[],["mainrequest_memorydirtylog",3]]],[11,"take_dirty_log","","",1,[[],["mainrequest_memorydirtylog",3]]],[11,"new","","",3,[[],["mainrequest_create",3]]],[11,"get_id","","",3,[[],["u32",15]]],[11,"clear_id","","",3,[[]]],[11,"set_id","","",3,[[["u32",15]]]],[11,"get_io_event","","",3,[[],["mainrequest_create_ioevent",3]]],[11,"clear_io_event","","",3,[[]]],[11,"has_io_event","","",3,[[],["bool",15]]],[11,"set_io_event","","",3,[[["mainrequest_create_ioevent",3]]]],[11,"mut_io_event","","",3,[[],["mainrequest_create_ioevent",3]]],[11,"take_io_event","","",3,[[],["mainrequest_create_ioevent",3]]],[11,"get_memory","","",3,[[],["mainrequest_create_memory",3]]],[11,"clear_memory","","",3,[[]]],[11,"has_memory","","",3,[[],["bool",15]]],[11,"set_memory","","",3,[[["mainrequest_create_memory",3]]]],[11,"mut_memory","","",3,[[],["mainrequest_create_memory",3]]],[11,"take_memory","","",3,[[],["mainrequest_create_memory",3]]],[11,"get_irq_event","","",3,[[],["mainrequest_create_irqevent",3]]],[11,"clear_irq_event","","",3,[[]]],[11,"has_irq_event","","",3,[[],["bool",15]]],[11,"set_irq_event","","",3,[[["mainrequest_create_irqevent",3]]]],[11,"mut_irq_event","","",3,[[],["mainrequest_create_irqevent",3]]],[11,"take_irq_event","","",3,[[],["mainrequest_create_irqevent",3]]],[11,"new","","",5,[[],["mainrequest_create_ioevent",3]]],[11,"get_space","","",5,[[],["addressspace",4]]],[11,"clear_space","","",5,[[]]],[11,"set_space","","",5,[[["addressspace",4]]]],[11,"get_address","","",5,[[],["u64",15]]],[11,"clear_address","","",5,[[]]],[11,"set_address","","",5,[[["u64",15]]]],[11,"get_length","","",5,[[],["u32",15]]],[11,"clear_length","","",5,[[]]],[11,"set_length","","",5,[[["u32",15]]]],[11,"get_datamatch","","",5,[[],["u64",15]]],[11,"clear_datamatch","","",5,[[]]],[11,"set_datamatch","","",5,[[["u64",15]]]],[11,"new","","",6,[[],["mainrequest_create_memory",3]]],[11,"get_offset","","",6,[[],["u64",15]]],[11,"clear_offset","","",6,[[]]],[11,"set_offset","","",6,[[["u64",15]]]],[11,"get_start","","",6,[[],["u64",15]]],[11,"clear_start","","",6,[[]]],[11,"set_start","","",6,[[["u64",15]]]],[11,"get_length","","",6,[[],["u64",15]]],[11,"clear_length","","",6,[[]]],[11,"set_length","","",6,[[["u64",15]]]],[11,"get_read_only","","",6,[[],["bool",15]]],[11,"clear_read_only","","",6,[[]]],[11,"set_read_only","","",6,[[["bool",15]]]],[11,"get_dirty_log","","",6,[[],["bool",15]]],[11,"clear_dirty_log","","",6,[[]]],[11,"set_dirty_log","","",6,[[["bool",15]]]],[11,"new","","",7,[[],["mainrequest_create_irqevent",3]]],[11,"get_irq_id","","",7,[[],["u32",15]]],[11,"clear_irq_id","","",7,[[]]],[11,"set_irq_id","","",7,[[["u32",15]]]],[11,"get_resample","","",7,[[],["bool",15]]],[11,"clear_resample","","",7,[[]]],[11,"set_resample","","",7,[[["bool",15]]]],[11,"new","","",8,[[],["mainrequest_destroy",3]]],[11,"get_id","","",8,[[],["u32",15]]],[11,"clear_id","","",8,[[]]],[11,"set_id","","",8,[[["u32",15]]]],[11,"new","","",9,[[],["mainrequest_newconnection",3]]],[11,"new","","",10,[[],["mainrequest_getshutdowneventfd",3]]],[11,"new","","",11,[[],["mainrequest_checkextension",3]]],[11,"get_extension","","",11,[[],["u32",15]]],[11,"clear_extension","","",11,[[]]],[11,"set_extension","","",11,[[["u32",15]]]],[11,"new","","",12,[[],["mainrequest_cpuidrequest",3]]],[11,"new","","",13,[[],["mainrequest_msrlistrequest",3]]],[11,"new","","",14,[[],["mainrequest_getnetconfig",3]]],[11,"new","","",15,[[],["mainrequest_reserverange",3]]],[11,"get_space","","",15,[[],["addressspace",4]]],[11,"clear_space","","",15,[[]]],[11,"set_space","","",15,[[["addressspace",4]]]],[11,"get_start","","",15,[[],["u64",15]]],[11,"clear_start","","",15,[[]]],[11,"set_start","","",15,[[["u64",15]]]],[11,"get_length","","",15,[[],["u64",15]]],[11,"clear_length","","",15,[[]]],[11,"set_length","","",15,[[["u64",15]]]],[11,"get_async_write","","",15,[[],["bool",15]]],[11,"clear_async_write","","",15,[[]]],[11,"set_async_write","","",15,[[["bool",15]]]],[11,"new","","",16,[[],["mainrequest_setirq",3]]],[11,"get_irq_id","","",16,[[],["u32",15]]],[11,"clear_irq_id","","",16,[[]]],[11,"set_irq_id","","",16,[[["u32",15]]]],[11,"get_active","","",16,[[],["bool",15]]],[11,"clear_active","","",16,[[]]],[11,"set_active","","",16,[[["bool",15]]]],[11,"new","","",17,[[],["mainrequest_setirqrouting",3]]],[11,"get_routes","","",17,[[]]],[11,"clear_routes","","",17,[[]]],[11,"set_routes","","",17,[[["repeatedfield",3],["mainrequest_setirqrouting_route",3]]]],[11,"mut_routes","","",17,[[],["repeatedfield",3]]],[11,"take_routes","","",17,[[],[["repeatedfield",3],["mainrequest_setirqrouting_route",3]]]],[11,"new","","",18,[[],["mainrequest_setirqrouting_route",3]]],[11,"get_irq_id","","",18,[[],["u32",15]]],[11,"clear_irq_id","","",18,[[]]],[11,"set_irq_id","","",18,[[["u32",15]]]],[11,"get_irqchip","","",18,[[],["mainrequest_setirqrouting_route_irqchip",3]]],[11,"clear_irqchip","","",18,[[]]],[11,"has_irqchip","","",18,[[],["bool",15]]],[11,"set_irqchip","","",18,[[["mainrequest_setirqrouting_route_irqchip",3]]]],[11,"mut_irqchip","","",18,[[],["mainrequest_setirqrouting_route_irqchip",3]]],[11,"take_irqchip","","",18,[[],["mainrequest_setirqrouting_route_irqchip",3]]],[11,"get_msi","","",18,[[],["mainrequest_setirqrouting_route_msi",3]]],[11,"clear_msi","","",18,[[]]],[11,"has_msi","","",18,[[],["bool",15]]],[11,"set_msi","","",18,[[["mainrequest_setirqrouting_route_msi",3]]]],[11,"mut_msi","","",18,[[],["mainrequest_setirqrouting_route_msi",3]]],[11,"take_msi","","",18,[[],["mainrequest_setirqrouting_route_msi",3]]],[11,"new","","",20,[[],["mainrequest_setirqrouting_route_irqchip",3]]],[11,"get_irqchip","","",20,[[],["u32",15]]],[11,"clear_irqchip","","",20,[[]]],[11,"set_irqchip","","",20,[[["u32",15]]]],[11,"get_pin","","",20,[[],["u32",15]]],[11,"clear_pin","","",20,[[]]],[11,"set_pin","","",20,[[["u32",15]]]],[11,"new","","",21,[[],["mainrequest_setirqrouting_route_msi",3]]],[11,"get_address","","",21,[[],["u64",15]]],[11,"clear_address","","",21,[[]]],[11,"set_address","","",21,[[["u64",15]]]],[11,"get_data","","",21,[[],["u32",15]]],[11,"clear_data","","",21,[[]]],[11,"set_data","","",21,[[["u32",15]]]],[11,"new","","",22,[[],["mainrequest_getstate",3]]],[11,"get_set","","",22,[[],["mainrequest_stateset",4]]],[11,"clear_set","","",22,[[]]],[11,"set_set","","",22,[[["mainrequest_stateset",4]]]],[11,"new","","",23,[[],["mainrequest_setstate",3]]],[11,"get_set","","",23,[[],["mainrequest_stateset",4]]],[11,"clear_set","","",23,[[]]],[11,"set_set","","",23,[[["mainrequest_stateset",4]]]],[11,"get_state","","",23,[[]]],[11,"clear_state","","",23,[[]]],[11,"set_state","","",23,[[["vec",3],["u8",15]]]],[11,"mut_state","","",23,[[],["vec",3]]],[11,"take_state","","",23,[[],[["vec",3],["u8",15]]]],[11,"new","","",24,[[],["mainrequest_setidentitymapaddr",3]]],[11,"get_address","","",24,[[],["u32",15]]],[11,"clear_address","","",24,[[]]],[11,"set_address","","",24,[[["u32",15]]]],[11,"new","","",25,[[],["mainrequest_pausevcpus",3]]],[11,"get_cpu_mask","","",25,[[],["u64",15]]],[11,"clear_cpu_mask","","",25,[[]]],[11,"set_cpu_mask","","",25,[[["u64",15]]]],[11,"get_user","","",25,[[],["u64",15]]],[11,"clear_user","","",25,[[]]],[11,"set_user","","",25,[[["u64",15]]]],[11,"new","","",26,[[],["mainrequest_getvcpus",3]]],[11,"new","","",27,[[],["mainrequest_start",3]]],[11,"new","","",28,[[],["mainrequest_setcallhint",3]]],[11,"get_space","","",28,[[],["addressspace",4]]],[11,"clear_space","","",28,[[]]],[11,"set_space","","",28,[[["addressspace",4]]]],[11,"get_address","","",28,[[],["u64",15]]],[11,"clear_address","","",28,[[]]],[11,"set_address","","",28,[[["u64",15]]]],[11,"get_on_write","","",28,[[],["bool",15]]],[11,"clear_on_write","","",28,[[]]],[11,"set_on_write","","",28,[[["bool",15]]]],[11,"get_hints","","",28,[[]]],[11,"clear_hints","","",28,[[]]],[11,"set_hints","","",28,[[["repeatedfield",3],["mainrequest_setcallhint_reghint",3]]]],[11,"mut_hints","","",28,[[],["repeatedfield",3]]],[11,"take_hints","","",28,[[],[["repeatedfield",3],["mainrequest_setcallhint_reghint",3]]]],[11,"new","","",29,[[],["mainrequest_setcallhint_reghint",3]]],[11,"get_match_rax","","",29,[[],["bool",15]]],[11,"clear_match_rax","","",29,[[]]],[11,"set_match_rax","","",29,[[["bool",15]]]],[11,"get_match_rbx","","",29,[[],["bool",15]]],[11,"clear_match_rbx","","",29,[[]]],[11,"set_match_rbx","","",29,[[["bool",15]]]],[11,"get_match_rcx","","",29,[[],["bool",15]]],[11,"clear_match_rcx","","",29,[[]]],[11,"set_match_rcx","","",29,[[["bool",15]]]],[11,"get_match_rdx","","",29,[[],["bool",15]]],[11,"clear_match_rdx","","",29,[[]]],[11,"set_match_rdx","","",29,[[["bool",15]]]],[11,"get_rax","","",29,[[],["u64",15]]],[11,"clear_rax","","",29,[[]]],[11,"set_rax","","",29,[[["u64",15]]]],[11,"get_rbx","","",29,[[],["u64",15]]],[11,"clear_rbx","","",29,[[]]],[11,"set_rbx","","",29,[[["u64",15]]]],[11,"get_rcx","","",29,[[],["u64",15]]],[11,"clear_rcx","","",29,[[]]],[11,"set_rcx","","",29,[[["u64",15]]]],[11,"get_rdx","","",29,[[],["u64",15]]],[11,"clear_rdx","","",29,[[]]],[11,"set_rdx","","",29,[[["u64",15]]]],[11,"get_send_sregs","","",29,[[],["bool",15]]],[11,"clear_send_sregs","","",29,[[]]],[11,"set_send_sregs","","",29,[[["bool",15]]]],[11,"get_send_debugregs","","",29,[[],["bool",15]]],[11,"clear_send_debugregs","","",29,[[]]],[11,"set_send_debugregs","","",29,[[["bool",15]]]],[11,"new","","",30,[[],["mainrequest_memorydirtylog",3]]],[11,"get_id","","",30,[[],["u32",15]]],[11,"clear_id","","",30,[[]]],[11,"set_id","","",30,[[["u32",15]]]],[11,"new","","",32,[[],["mainresponse",3]]],[11,"get_errno","","",32,[[],["i32",15]]],[11,"clear_errno","","",32,[[]]],[11,"set_errno","","",32,[[["i32",15]]]],[11,"get_create","","",32,[[],["mainresponse_create",3]]],[11,"clear_create","","",32,[[]]],[11,"has_create","","",32,[[],["bool",15]]],[11,"set_create","","",32,[[["mainresponse_create",3]]]],[11,"mut_create","","",32,[[],["mainresponse_create",3]]],[11,"take_create","","",32,[[],["mainresponse_create",3]]],[11,"get_destroy","","",32,[[],["mainresponse_destroy",3]]],[11,"clear_destroy","","",32,[[]]],[11,"has_destroy","","",32,[[],["bool",15]]],[11,"set_destroy","","",32,[[["mainresponse_destroy",3]]]],[11,"mut_destroy","","",32,[[],["mainresponse_destroy",3]]],[11,"take_destroy","","",32,[[],["mainresponse_destroy",3]]],[11,"get_new_connection","","",32,[[],["mainresponse_newconnection",3]]],[11,"clear_new_connection","","",32,[[]]],[11,"has_new_connection","","",32,[[],["bool",15]]],[11,"set_new_connection","","",32,[[["mainresponse_newconnection",3]]]],[11,"mut_new_connection","","",32,[[],["mainresponse_newconnection",3]]],[11,"take_new_connection","","",32,[[],["mainresponse_newconnection",3]]],[11,"get_get_shutdown_eventfd","","",32,[[],["mainresponse_getshutdowneventfd",3]]],[11,"clear_get_shutdown_eventfd","","",32,[[]]],[11,"has_get_shutdown_eventfd","","",32,[[],["bool",15]]],[11,"set_get_shutdown_eventfd","","",32,[[["mainresponse_getshutdowneventfd",3]]]],[11,"mut_get_shutdown_eventfd","","",32,[[],["mainresponse_getshutdowneventfd",3]]],[11,"take_get_shutdown_eventfd","","",32,[[],["mainresponse_getshutdowneventfd",3]]],[11,"get_check_extension","","",32,[[],["mainresponse_checkextension",3]]],[11,"clear_check_extension","","",32,[[]]],[11,"has_check_extension","","",32,[[],["bool",15]]],[11,"set_check_extension","","",32,[[["mainresponse_checkextension",3]]]],[11,"mut_check_extension","","",32,[[],["mainresponse_checkextension",3]]],[11,"take_check_extension","","",32,[[],["mainresponse_checkextension",3]]],[11,"get_get_supported_cpuid","","",32,[[],["mainresponse_cpuidresponse",3]]],[11,"clear_get_supported_cpuid","","",32,[[]]],[11,"has_get_supported_cpuid","","",32,[[],["bool",15]]],[11,"set_get_supported_cpuid","","",32,[[["mainresponse_cpuidresponse",3]]]],[11,"mut_get_supported_cpuid","","",32,[[],["mainresponse_cpuidresponse",3]]],[11,"take_get_supported_cpuid","","",32,[[],["mainresponse_cpuidresponse",3]]],[11,"get_get_emulated_cpuid","","",32,[[],["mainresponse_cpuidresponse",3]]],[11,"clear_get_emulated_cpuid","","",32,[[]]],[11,"has_get_emulated_cpuid","","",32,[[],["bool",15]]],[11,"set_get_emulated_cpuid","","",32,[[["mainresponse_cpuidresponse",3]]]],[11,"mut_get_emulated_cpuid","","",32,[[],["mainresponse_cpuidresponse",3]]],[11,"take_get_emulated_cpuid","","",32,[[],["mainresponse_cpuidresponse",3]]],[11,"get_get_msr_index_list","","",32,[[],["mainresponse_msrlistresponse",3]]],[11,"clear_get_msr_index_list","","",32,[[]]],[11,"has_get_msr_index_list","","",32,[[],["bool",15]]],[11,"set_get_msr_index_list","","",32,[[["mainresponse_msrlistresponse",3]]]],[11,"mut_get_msr_index_list","","",32,[[],["mainresponse_msrlistresponse",3]]],[11,"take_get_msr_index_list","","",32,[[],["mainresponse_msrlistresponse",3]]],[11,"get_get_net_config","","",32,[[],["mainresponse_getnetconfig",3]]],[11,"clear_get_net_config","","",32,[[]]],[11,"has_get_net_config","","",32,[[],["bool",15]]],[11,"set_get_net_config","","",32,[[["mainresponse_getnetconfig",3]]]],[11,"mut_get_net_config","","",32,[[],["mainresponse_getnetconfig",3]]],[11,"take_get_net_config","","",32,[[],["mainresponse_getnetconfig",3]]],[11,"get_reserve_range","","",32,[[],["mainresponse_reserverange",3]]],[11,"clear_reserve_range","","",32,[[]]],[11,"has_reserve_range","","",32,[[],["bool",15]]],[11,"set_reserve_range","","",32,[[["mainresponse_reserverange",3]]]],[11,"mut_reserve_range","","",32,[[],["mainresponse_reserverange",3]]],[11,"take_reserve_range","","",32,[[],["mainresponse_reserverange",3]]],[11,"get_set_irq","","",32,[[],["mainresponse_setirq",3]]],[11,"clear_set_irq","","",32,[[]]],[11,"has_set_irq","","",32,[[],["bool",15]]],[11,"set_set_irq","","",32,[[["mainresponse_setirq",3]]]],[11,"mut_set_irq","","",32,[[],["mainresponse_setirq",3]]],[11,"take_set_irq","","",32,[[],["mainresponse_setirq",3]]],[11,"get_set_irq_routing","","",32,[[],["mainresponse_setirqrouting",3]]],[11,"clear_set_irq_routing","","",32,[[]]],[11,"has_set_irq_routing","","",32,[[],["bool",15]]],[11,"set_set_irq_routing","","",32,[[["mainresponse_setirqrouting",3]]]],[11,"mut_set_irq_routing","","",32,[[],["mainresponse_setirqrouting",3]]],[11,"take_set_irq_routing","","",32,[[],["mainresponse_setirqrouting",3]]],[11,"get_get_state","","",32,[[],["mainresponse_getstate",3]]],[11,"clear_get_state","","",32,[[]]],[11,"has_get_state","","",32,[[],["bool",15]]],[11,"set_get_state","","",32,[[["mainresponse_getstate",3]]]],[11,"mut_get_state","","",32,[[],["mainresponse_getstate",3]]],[11,"take_get_state","","",32,[[],["mainresponse_getstate",3]]],[11,"get_set_state","","",32,[[],["mainresponse_setstate",3]]],[11,"clear_set_state","","",32,[[]]],[11,"has_set_state","","",32,[[],["bool",15]]],[11,"set_set_state","","",32,[[["mainresponse_setstate",3]]]],[11,"mut_set_state","","",32,[[],["mainresponse_setstate",3]]],[11,"take_set_state","","",32,[[],["mainresponse_setstate",3]]],[11,"get_set_identity_map_addr","","",32,[[],["mainresponse_setidentitymapaddr",3]]],[11,"clear_set_identity_map_addr","","",32,[[]]],[11,"has_set_identity_map_addr","","",32,[[],["bool",15]]],[11,"set_set_identity_map_addr","","",32,[[["mainresponse_setidentitymapaddr",3]]]],[11,"mut_set_identity_map_addr","","",32,[[],["mainresponse_setidentitymapaddr",3]]],[11,"take_set_identity_map_addr","","",32,[[],["mainresponse_setidentitymapaddr",3]]],[11,"get_pause_vcpus","","",32,[[],["mainresponse_pausevcpus",3]]],[11,"clear_pause_vcpus","","",32,[[]]],[11,"has_pause_vcpus","","",32,[[],["bool",15]]],[11,"set_pause_vcpus","","",32,[[["mainresponse_pausevcpus",3]]]],[11,"mut_pause_vcpus","","",32,[[],["mainresponse_pausevcpus",3]]],[11,"take_pause_vcpus","","",32,[[],["mainresponse_pausevcpus",3]]],[11,"get_get_vcpus","","",32,[[],["mainresponse_getvcpus",3]]],[11,"clear_get_vcpus","","",32,[[]]],[11,"has_get_vcpus","","",32,[[],["bool",15]]],[11,"set_get_vcpus","","",32,[[["mainresponse_getvcpus",3]]]],[11,"mut_get_vcpus","","",32,[[],["mainresponse_getvcpus",3]]],[11,"take_get_vcpus","","",32,[[],["mainresponse_getvcpus",3]]],[11,"get_start","","",32,[[],["mainresponse_start",3]]],[11,"clear_start","","",32,[[]]],[11,"has_start","","",32,[[],["bool",15]]],[11,"set_start","","",32,[[["mainresponse_start",3]]]],[11,"mut_start","","",32,[[],["mainresponse_start",3]]],[11,"take_start","","",32,[[],["mainresponse_start",3]]],[11,"get_set_call_hint","","",32,[[],["mainresponse_setcallhint",3]]],[11,"clear_set_call_hint","","",32,[[]]],[11,"has_set_call_hint","","",32,[[],["bool",15]]],[11,"set_set_call_hint","","",32,[[["mainresponse_setcallhint",3]]]],[11,"mut_set_call_hint","","",32,[[],["mainresponse_setcallhint",3]]],[11,"take_set_call_hint","","",32,[[],["mainresponse_setcallhint",3]]],[11,"get_dirty_log","","",32,[[],["mainresponse_memorydirtylog",3]]],[11,"clear_dirty_log","","",32,[[]]],[11,"has_dirty_log","","",32,[[],["bool",15]]],[11,"set_dirty_log","","",32,[[["mainresponse_memorydirtylog",3]]]],[11,"mut_dirty_log","","",32,[[],["mainresponse_memorydirtylog",3]]],[11,"take_dirty_log","","",32,[[],["mainresponse_memorydirtylog",3]]],[11,"new","","",34,[[],["mainresponse_create",3]]],[11,"new","","",35,[[],["mainresponse_destroy",3]]],[11,"new","","",36,[[],["mainresponse_newconnection",3]]],[11,"new","","",37,[[],["mainresponse_getshutdowneventfd",3]]],[11,"new","","",38,[[],["mainresponse_checkextension",3]]],[11,"get_has_extension","","",38,[[],["bool",15]]],[11,"clear_has_extension","","",38,[[]]],[11,"set_has_extension","","",38,[[["bool",15]]]],[11,"new","","",39,[[],["mainresponse_cpuidresponse",3]]],[11,"get_entries","","",39,[[]]],[11,"clear_entries","","",39,[[]]],[11,"set_entries","","",39,[[["repeatedfield",3],["cpuidentry",3]]]],[11,"mut_entries","","",39,[[],["repeatedfield",3]]],[11,"take_entries","","",39,[[],[["repeatedfield",3],["cpuidentry",3]]]],[11,"new","","",40,[[],["mainresponse_msrlistresponse",3]]],[11,"get_indices","","",40,[[]]],[11,"clear_indices","","",40,[[]]],[11,"set_indices","","",40,[[["u32",15],["vec",3]]]],[11,"mut_indices","","",40,[[],["vec",3]]],[11,"take_indices","","",40,[[],[["u32",15],["vec",3]]]],[11,"new","","",41,[[],["mainresponse_getnetconfig",3]]],[11,"get_host_mac_address","","",41,[[]]],[11,"clear_host_mac_address","","",41,[[]]],[11,"set_host_mac_address","","",41,[[["vec",3],["u8",15]]]],[11,"mut_host_mac_address","","",41,[[],["vec",3]]],[11,"take_host_mac_address","","",41,[[],[["vec",3],["u8",15]]]],[11,"get_host_ipv4_address","","",41,[[],["u32",15]]],[11,"clear_host_ipv4_address","","",41,[[]]],[11,"set_host_ipv4_address","","",41,[[["u32",15]]]],[11,"get_netmask","","",41,[[],["u32",15]]],[11,"clear_netmask","","",41,[[]]],[11,"set_netmask","","",41,[[["u32",15]]]],[11,"new","","",42,[[],["mainresponse_reserverange",3]]],[11,"new","","",43,[[],["mainresponse_setirq",3]]],[11,"new","","",44,[[],["mainresponse_setirqrouting",3]]],[11,"new","","",45,[[],["mainresponse_getstate",3]]],[11,"get_state","","",45,[[]]],[11,"clear_state","","",45,[[]]],[11,"set_state","","",45,[[["vec",3],["u8",15]]]],[11,"mut_state","","",45,[[],["vec",3]]],[11,"take_state","","",45,[[],[["vec",3],["u8",15]]]],[11,"new","","",46,[[],["mainresponse_setstate",3]]],[11,"new","","",47,[[],["mainresponse_setidentitymapaddr",3]]],[11,"new","","",48,[[],["mainresponse_pausevcpus",3]]],[11,"new","","",49,[[],["mainresponse_getvcpus",3]]],[11,"new","","",50,[[],["mainresponse_start",3]]],[11,"new","","",51,[[],["mainresponse_setcallhint",3]]],[11,"new","","",52,[[],["mainresponse_memorydirtylog",3]]],[11,"get_bitmap","","",52,[[]]],[11,"clear_bitmap","","",52,[[]]],[11,"set_bitmap","","",52,[[["vec",3],["u8",15]]]],[11,"mut_bitmap","","",52,[[],["vec",3]]],[11,"take_bitmap","","",52,[[],[["vec",3],["u8",15]]]],[11,"new","","",53,[[],["vcpurequest",3]]],[11,"get_wait","","",53,[[],["vcpurequest_wait",3]]],[11,"clear_wait","","",53,[[]]],[11,"has_wait","","",53,[[],["bool",15]]],[11,"set_wait","","",53,[[["vcpurequest_wait",3]]]],[11,"mut_wait","","",53,[[],["vcpurequest_wait",3]]],[11,"take_wait","","",53,[[],["vcpurequest_wait",3]]],[11,"get_resume","","",53,[[],["vcpurequest_resume",3]]],[11,"clear_resume","","",53,[[]]],[11,"has_resume","","",53,[[],["bool",15]]],[11,"set_resume","","",53,[[["vcpurequest_resume",3]]]],[11,"mut_resume","","",53,[[],["vcpurequest_resume",3]]],[11,"take_resume","","",53,[[],["vcpurequest_resume",3]]],[11,"get_get_state","","",53,[[],["vcpurequest_getstate",3]]],[11,"clear_get_state","","",53,[[]]],[11,"has_get_state","","",53,[[],["bool",15]]],[11,"set_get_state","","",53,[[["vcpurequest_getstate",3]]]],[11,"mut_get_state","","",53,[[],["vcpurequest_getstate",3]]],[11,"take_get_state","","",53,[[],["vcpurequest_getstate",3]]],[11,"get_set_state","","",53,[[],["vcpurequest_setstate",3]]],[11,"clear_set_state","","",53,[[]]],[11,"has_set_state","","",53,[[],["bool",15]]],[11,"set_set_state","","",53,[[["vcpurequest_setstate",3]]]],[11,"mut_set_state","","",53,[[],["vcpurequest_setstate",3]]],[11,"take_set_state","","",53,[[],["vcpurequest_setstate",3]]],[11,"get_get_msrs","","",53,[[],["vcpurequest_getmsrs",3]]],[11,"clear_get_msrs","","",53,[[]]],[11,"has_get_msrs","","",53,[[],["bool",15]]],[11,"set_get_msrs","","",53,[[["vcpurequest_getmsrs",3]]]],[11,"mut_get_msrs","","",53,[[],["vcpurequest_getmsrs",3]]],[11,"take_get_msrs","","",53,[[],["vcpurequest_getmsrs",3]]],[11,"get_set_msrs","","",53,[[],["vcpurequest_setmsrs",3]]],[11,"clear_set_msrs","","",53,[[]]],[11,"has_set_msrs","","",53,[[],["bool",15]]],[11,"set_set_msrs","","",53,[[["vcpurequest_setmsrs",3]]]],[11,"mut_set_msrs","","",53,[[],["vcpurequest_setmsrs",3]]],[11,"take_set_msrs","","",53,[[],["vcpurequest_setmsrs",3]]],[11,"get_set_cpuid","","",53,[[],["vcpurequest_setcpuid",3]]],[11,"clear_set_cpuid","","",53,[[]]],[11,"has_set_cpuid","","",53,[[],["bool",15]]],[11,"set_set_cpuid","","",53,[[["vcpurequest_setcpuid",3]]]],[11,"mut_set_cpuid","","",53,[[],["vcpurequest_setcpuid",3]]],[11,"take_set_cpuid","","",53,[[],["vcpurequest_setcpuid",3]]],[11,"get_shutdown","","",53,[[],["vcpurequest_shutdown",3]]],[11,"clear_shutdown","","",53,[[]]],[11,"has_shutdown","","",53,[[],["bool",15]]],[11,"set_shutdown","","",53,[[["vcpurequest_shutdown",3]]]],[11,"mut_shutdown","","",53,[[],["vcpurequest_shutdown",3]]],[11,"take_shutdown","","",53,[[],["vcpurequest_shutdown",3]]],[11,"get_get_hyperv_cpuid","","",53,[[],["vcpurequest_cpuidrequest",3]]],[11,"clear_get_hyperv_cpuid","","",53,[[]]],[11,"has_get_hyperv_cpuid","","",53,[[],["bool",15]]],[11,"set_get_hyperv_cpuid","","",53,[[["vcpurequest_cpuidrequest",3]]]],[11,"mut_get_hyperv_cpuid","","",53,[[],["vcpurequest_cpuidrequest",3]]],[11,"take_get_hyperv_cpuid","","",53,[[],["vcpurequest_cpuidrequest",3]]],[11,"get_enable_capability","","",53,[[],["vcpurequest_enablecapability",3]]],[11,"clear_enable_capability","","",53,[[]]],[11,"has_enable_capability","","",53,[[],["bool",15]]],[11,"set_enable_capability","","",53,[[["vcpurequest_enablecapability",3]]]],[11,"mut_enable_capability","","",53,[[],["vcpurequest_enablecapability",3]]],[11,"take_enable_capability","","",53,[[],["vcpurequest_enablecapability",3]]],[11,"new","","",55,[[],["vcpurequest_wait",3]]],[11,"new","","",56,[[],["vcpurequest_resume",3]]],[11,"get_data","","",56,[[]]],[11,"clear_data","","",56,[[]]],[11,"set_data","","",56,[[["vec",3],["u8",15]]]],[11,"mut_data","","",56,[[],["vec",3]]],[11,"take_data","","",56,[[],[["vec",3],["u8",15]]]],[11,"get_regs","","",56,[[]]],[11,"clear_regs","","",56,[[]]],[11,"set_regs","","",56,[[["vec",3],["u8",15]]]],[11,"mut_regs","","",56,[[],["vec",3]]],[11,"take_regs","","",56,[[],[["vec",3],["u8",15]]]],[11,"get_sregs","","",56,[[]]],[11,"clear_sregs","","",56,[[]]],[11,"set_sregs","","",56,[[["vec",3],["u8",15]]]],[11,"mut_sregs","","",56,[[],["vec",3]]],[11,"take_sregs","","",56,[[],[["vec",3],["u8",15]]]],[11,"get_debugregs","","",56,[[]]],[11,"clear_debugregs","","",56,[[]]],[11,"set_debugregs","","",56,[[["vec",3],["u8",15]]]],[11,"mut_debugregs","","",56,[[],["vec",3]]],[11,"take_debugregs","","",56,[[],[["vec",3],["u8",15]]]],[11,"new","","",57,[[],["vcpurequest_getstate",3]]],[11,"get_set","","",57,[[],["vcpurequest_stateset",4]]],[11,"clear_set","","",57,[[]]],[11,"set_set","","",57,[[["vcpurequest_stateset",4]]]],[11,"new","","",58,[[],["vcpurequest_setstate",3]]],[11,"get_set","","",58,[[],["vcpurequest_stateset",4]]],[11,"clear_set","","",58,[[]]],[11,"set_set","","",58,[[["vcpurequest_stateset",4]]]],[11,"get_state","","",58,[[]]],[11,"clear_state","","",58,[[]]],[11,"set_state","","",58,[[["vec",3],["u8",15]]]],[11,"mut_state","","",58,[[],["vec",3]]],[11,"take_state","","",58,[[],[["vec",3],["u8",15]]]],[11,"new","","",59,[[],["vcpurequest_cpuidrequest",3]]],[11,"new","","",60,[[],["vcpurequest_getmsrs",3]]],[11,"get_entry_indices","","",60,[[]]],[11,"clear_entry_indices","","",60,[[]]],[11,"set_entry_indices","","",60,[[["u32",15],["vec",3]]]],[11,"mut_entry_indices","","",60,[[],["vec",3]]],[11,"take_entry_indices","","",60,[[],[["u32",15],["vec",3]]]],[11,"new","","",61,[[],["vcpurequest_msrentry",3]]],[11,"get_index","","",61,[[],["u32",15]]],[11,"clear_index","","",61,[[]]],[11,"set_index","","",61,[[["u32",15]]]],[11,"get_data","","",61,[[],["u64",15]]],[11,"clear_data","","",61,[[]]],[11,"set_data","","",61,[[["u64",15]]]],[11,"new","","",62,[[],["vcpurequest_setmsrs",3]]],[11,"get_entries","","",62,[[]]],[11,"clear_entries","","",62,[[]]],[11,"set_entries","","",62,[[["vcpurequest_msrentry",3],["repeatedfield",3]]]],[11,"mut_entries","","",62,[[],["repeatedfield",3]]],[11,"take_entries","","",62,[[],[["vcpurequest_msrentry",3],["repeatedfield",3]]]],[11,"new","","",63,[[],["vcpurequest_setcpuid",3]]],[11,"get_entries","","",63,[[]]],[11,"clear_entries","","",63,[[]]],[11,"set_entries","","",63,[[["repeatedfield",3],["cpuidentry",3]]]],[11,"mut_entries","","",63,[[],["repeatedfield",3]]],[11,"take_entries","","",63,[[],[["repeatedfield",3],["cpuidentry",3]]]],[11,"new","","",64,[[],["vcpurequest_shutdown",3]]],[11,"new","","",65,[[],["vcpurequest_enablecapability",3]]],[11,"get_capability","","",65,[[],["u32",15]]],[11,"clear_capability","","",65,[[]]],[11,"set_capability","","",65,[[["u32",15]]]],[11,"new","","",67,[[],["vcpuresponse",3]]],[11,"get_errno","","",67,[[],["i32",15]]],[11,"clear_errno","","",67,[[]]],[11,"set_errno","","",67,[[["i32",15]]]],[11,"get_wait","","",67,[[],["vcpuresponse_wait",3]]],[11,"clear_wait","","",67,[[]]],[11,"has_wait","","",67,[[],["bool",15]]],[11,"set_wait","","",67,[[["vcpuresponse_wait",3]]]],[11,"mut_wait","","",67,[[],["vcpuresponse_wait",3]]],[11,"take_wait","","",67,[[],["vcpuresponse_wait",3]]],[11,"get_get_state","","",67,[[],["vcpuresponse_getstate",3]]],[11,"clear_get_state","","",67,[[]]],[11,"has_get_state","","",67,[[],["bool",15]]],[11,"set_get_state","","",67,[[["vcpuresponse_getstate",3]]]],[11,"mut_get_state","","",67,[[],["vcpuresponse_getstate",3]]],[11,"take_get_state","","",67,[[],["vcpuresponse_getstate",3]]],[11,"get_set_state","","",67,[[],["vcpuresponse_setstate",3]]],[11,"clear_set_state","","",67,[[]]],[11,"has_set_state","","",67,[[],["bool",15]]],[11,"set_set_state","","",67,[[["vcpuresponse_setstate",3]]]],[11,"mut_set_state","","",67,[[],["vcpuresponse_setstate",3]]],[11,"take_set_state","","",67,[[],["vcpuresponse_setstate",3]]],[11,"get_get_msrs","","",67,[[],["vcpuresponse_getmsrs",3]]],[11,"clear_get_msrs","","",67,[[]]],[11,"has_get_msrs","","",67,[[],["bool",15]]],[11,"set_get_msrs","","",67,[[["vcpuresponse_getmsrs",3]]]],[11,"mut_get_msrs","","",67,[[],["vcpuresponse_getmsrs",3]]],[11,"take_get_msrs","","",67,[[],["vcpuresponse_getmsrs",3]]],[11,"get_set_msrs","","",67,[[],["vcpuresponse_setmsrs",3]]],[11,"clear_set_msrs","","",67,[[]]],[11,"has_set_msrs","","",67,[[],["bool",15]]],[11,"set_set_msrs","","",67,[[["vcpuresponse_setmsrs",3]]]],[11,"mut_set_msrs","","",67,[[],["vcpuresponse_setmsrs",3]]],[11,"take_set_msrs","","",67,[[],["vcpuresponse_setmsrs",3]]],[11,"get_set_cpuid","","",67,[[],["vcpuresponse_setcpuid",3]]],[11,"clear_set_cpuid","","",67,[[]]],[11,"has_set_cpuid","","",67,[[],["bool",15]]],[11,"set_set_cpuid","","",67,[[["vcpuresponse_setcpuid",3]]]],[11,"mut_set_cpuid","","",67,[[],["vcpuresponse_setcpuid",3]]],[11,"take_set_cpuid","","",67,[[],["vcpuresponse_setcpuid",3]]],[11,"get_get_hyperv_cpuid","","",67,[[],["vcpuresponse_cpuidresponse",3]]],[11,"clear_get_hyperv_cpuid","","",67,[[]]],[11,"has_get_hyperv_cpuid","","",67,[[],["bool",15]]],[11,"set_get_hyperv_cpuid","","",67,[[["vcpuresponse_cpuidresponse",3]]]],[11,"mut_get_hyperv_cpuid","","",67,[[],["vcpuresponse_cpuidresponse",3]]],[11,"take_get_hyperv_cpuid","","",67,[[],["vcpuresponse_cpuidresponse",3]]],[11,"get_enable_capability","","",67,[[],["vcpuresponse_enablecapability",3]]],[11,"clear_enable_capability","","",67,[[]]],[11,"has_enable_capability","","",67,[[],["bool",15]]],[11,"set_enable_capability","","",67,[[["vcpuresponse_enablecapability",3]]]],[11,"mut_enable_capability","","",67,[[],["vcpuresponse_enablecapability",3]]],[11,"take_enable_capability","","",67,[[],["vcpuresponse_enablecapability",3]]],[11,"new","","",69,[[],["vcpuresponse_wait",3]]],[11,"get_init","","",69,[[],["vcpuresponse_wait_init",3]]],[11,"clear_init","","",69,[[]]],[11,"has_init","","",69,[[],["bool",15]]],[11,"set_init","","",69,[[["vcpuresponse_wait_init",3]]]],[11,"mut_init","","",69,[[],["vcpuresponse_wait_init",3]]],[11,"take_init","","",69,[[],["vcpuresponse_wait_init",3]]],[11,"get_io","","",69,[[],["vcpuresponse_wait_io",3]]],[11,"clear_io","","",69,[[]]],[11,"has_io","","",69,[[],["bool",15]]],[11,"set_io","","",69,[[["vcpuresponse_wait_io",3]]]],[11,"mut_io","","",69,[[],["vcpuresponse_wait_io",3]]],[11,"take_io","","",69,[[],["vcpuresponse_wait_io",3]]],[11,"get_user","","",69,[[],["vcpuresponse_wait_user",3]]],[11,"clear_user","","",69,[[]]],[11,"has_user","","",69,[[],["bool",15]]],[11,"set_user","","",69,[[["vcpuresponse_wait_user",3]]]],[11,"mut_user","","",69,[[],["vcpuresponse_wait_user",3]]],[11,"take_user","","",69,[[],["vcpuresponse_wait_user",3]]],[11,"get_hyperv_call","","",69,[[],["vcpuresponse_wait_hypervcall",3]]],[11,"clear_hyperv_call","","",69,[[]]],[11,"has_hyperv_call","","",69,[[],["bool",15]]],[11,"set_hyperv_call","","",69,[[["vcpuresponse_wait_hypervcall",3]]]],[11,"mut_hyperv_call","","",69,[[],["vcpuresponse_wait_hypervcall",3]]],[11,"take_hyperv_call","","",69,[[],["vcpuresponse_wait_hypervcall",3]]],[11,"get_hyperv_synic","","",69,[[],["vcpuresponse_wait_hypervsynic",3]]],[11,"clear_hyperv_synic","","",69,[[]]],[11,"has_hyperv_synic","","",69,[[],["bool",15]]],[11,"set_hyperv_synic","","",69,[[["vcpuresponse_wait_hypervsynic",3]]]],[11,"mut_hyperv_synic","","",69,[[],["vcpuresponse_wait_hypervsynic",3]]],[11,"take_hyperv_synic","","",69,[[],["vcpuresponse_wait_hypervsynic",3]]],[11,"new","","",71,[[],["vcpuresponse_wait_init",3]]],[11,"new","","",72,[[],["vcpuresponse_wait_io",3]]],[11,"get_space","","",72,[[],["addressspace",4]]],[11,"clear_space","","",72,[[]]],[11,"set_space","","",72,[[["addressspace",4]]]],[11,"get_address","","",72,[[],["u64",15]]],[11,"clear_address","","",72,[[]]],[11,"set_address","","",72,[[["u64",15]]]],[11,"get_is_write","","",72,[[],["bool",15]]],[11,"clear_is_write","","",72,[[]]],[11,"set_is_write","","",72,[[["bool",15]]]],[11,"get_no_resume","","",72,[[],["bool",15]]],[11,"clear_no_resume","","",72,[[]]],[11,"set_no_resume","","",72,[[["bool",15]]]],[11,"get_data","","",72,[[]]],[11,"clear_data","","",72,[[]]],[11,"set_data","","",72,[[["vec",3],["u8",15]]]],[11,"mut_data","","",72,[[],["vec",3]]],[11,"take_data","","",72,[[],[["vec",3],["u8",15]]]],[11,"get_regs","","",72,[[]]],[11,"clear_regs","","",72,[[]]],[11,"set_regs","","",72,[[["vec",3],["u8",15]]]],[11,"mut_regs","","",72,[[],["vec",3]]],[11,"take_regs","","",72,[[],[["vec",3],["u8",15]]]],[11,"get_sregs","","",72,[[]]],[11,"clear_sregs","","",72,[[]]],[11,"set_sregs","","",72,[[["vec",3],["u8",15]]]],[11,"mut_sregs","","",72,[[],["vec",3]]],[11,"take_sregs","","",72,[[],[["vec",3],["u8",15]]]],[11,"get_debugregs","","",72,[[]]],[11,"clear_debugregs","","",72,[[]]],[11,"set_debugregs","","",72,[[["vec",3],["u8",15]]]],[11,"mut_debugregs","","",72,[[],["vec",3]]],[11,"take_debugregs","","",72,[[],[["vec",3],["u8",15]]]],[11,"new","","",73,[[],["vcpuresponse_wait_user",3]]],[11,"get_user","","",73,[[],["u64",15]]],[11,"clear_user","","",73,[[]]],[11,"set_user","","",73,[[["u64",15]]]],[11,"new","","",74,[[],["vcpuresponse_wait_hypervcall",3]]],[11,"get_input","","",74,[[],["u64",15]]],[11,"clear_input","","",74,[[]]],[11,"set_input","","",74,[[["u64",15]]]],[11,"get_params0","","",74,[[],["u64",15]]],[11,"clear_params0","","",74,[[]]],[11,"set_params0","","",74,[[["u64",15]]]],[11,"get_params1","","",74,[[],["u64",15]]],[11,"clear_params1","","",74,[[]]],[11,"set_params1","","",74,[[["u64",15]]]],[11,"new","","",75,[[],["vcpuresponse_wait_hypervsynic",3]]],[11,"get_msr","","",75,[[],["u32",15]]],[11,"clear_msr","","",75,[[]]],[11,"set_msr","","",75,[[["u32",15]]]],[11,"get_control","","",75,[[],["u64",15]]],[11,"clear_control","","",75,[[]]],[11,"set_control","","",75,[[["u64",15]]]],[11,"get_evt_page","","",75,[[],["u64",15]]],[11,"clear_evt_page","","",75,[[]]],[11,"set_evt_page","","",75,[[["u64",15]]]],[11,"get_msg_page","","",75,[[],["u64",15]]],[11,"clear_msg_page","","",75,[[]]],[11,"set_msg_page","","",75,[[["u64",15]]]],[11,"new","","",76,[[],["vcpuresponse_getstate",3]]],[11,"get_state","","",76,[[]]],[11,"clear_state","","",76,[[]]],[11,"set_state","","",76,[[["vec",3],["u8",15]]]],[11,"mut_state","","",76,[[],["vec",3]]],[11,"take_state","","",76,[[],[["vec",3],["u8",15]]]],[11,"new","","",77,[[],["vcpuresponse_setstate",3]]],[11,"new","","",78,[[],["vcpuresponse_cpuidresponse",3]]],[11,"get_entries","","",78,[[]]],[11,"clear_entries","","",78,[[]]],[11,"set_entries","","",78,[[["repeatedfield",3],["cpuidentry",3]]]],[11,"mut_entries","","",78,[[],["repeatedfield",3]]],[11,"take_entries","","",78,[[],[["repeatedfield",3],["cpuidentry",3]]]],[11,"new","","",79,[[],["vcpuresponse_getmsrs",3]]],[11,"get_entry_data","","",79,[[]]],[11,"clear_entry_data","","",79,[[]]],[11,"set_entry_data","","",79,[[["vec",3],["u64",15]]]],[11,"mut_entry_data","","",79,[[],["vec",3]]],[11,"take_entry_data","","",79,[[],[["vec",3],["u64",15]]]],[11,"new","","",80,[[],["vcpuresponse_setmsrs",3]]],[11,"new","","",81,[[],["vcpuresponse_setcpuid",3]]],[11,"new","","",82,[[],["vcpuresponse_enablecapability",3]]],[11,"new","protos::cdisk_spec","",84,[[],["componentdisk",3]]],[11,"get_file_path","","",84,[[],["str",15]]],[11,"clear_file_path","","",84,[[]]],[11,"set_file_path","","",84,[[["string",3]]]],[11,"mut_file_path","","",84,[[],["string",3]]],[11,"take_file_path","","",84,[[],["string",3]]],[11,"get_offset","","",84,[[],["u64",15]]],[11,"clear_offset","","",84,[[]]],[11,"set_offset","","",84,[[["u64",15]]]],[11,"get_read_write_capability","","",84,[[],["readwritecapability",4]]],[11,"clear_read_write_capability","","",84,[[]]],[11,"set_read_write_capability","","",84,[[["readwritecapability",4]]]],[11,"new","","",85,[[],["compositedisk",3]]],[11,"get_version","","",85,[[],["u64",15]]],[11,"clear_version","","",85,[[]]],[11,"set_version","","",85,[[["u64",15]]]],[11,"get_component_disks","","",85,[[]]],[11,"clear_component_disks","","",85,[[]]],[11,"set_component_disks","","",85,[[["repeatedfield",3],["componentdisk",3]]]],[11,"mut_component_disks","","",85,[[],["repeatedfield",3]]],[11,"take_component_disks","","",85,[[],[["repeatedfield",3],["componentdisk",3]]]],[11,"get_length","","",85,[[],["u64",15]]],[11,"clear_length","","",85,[[]]],[11,"set_length","","",85,[[["u64",15]]]]],"p":[[3,"CpuidEntry"],[3,"MainRequest"],[4,"MainRequest_oneof_message"],[3,"MainRequest_Create"],[4,"MainRequest_Create_oneof_constructor"],[3,"MainRequest_Create_IoEvent"],[3,"MainRequest_Create_Memory"],[3,"MainRequest_Create_IrqEvent"],[3,"MainRequest_Destroy"],[3,"MainRequest_NewConnection"],[3,"MainRequest_GetShutdownEventfd"],[3,"MainRequest_CheckExtension"],[3,"MainRequest_CpuidRequest"],[3,"MainRequest_MsrListRequest"],[3,"MainRequest_GetNetConfig"],[3,"MainRequest_ReserveRange"],[3,"MainRequest_SetIrq"],[3,"MainRequest_SetIrqRouting"],[3,"MainRequest_SetIrqRouting_Route"],[4,"MainRequest_SetIrqRouting_Route_oneof_route"],[3,"MainRequest_SetIrqRouting_Route_Irqchip"],[3,"MainRequest_SetIrqRouting_Route_Msi"],[3,"MainRequest_GetState"],[3,"MainRequest_SetState"],[3,"MainRequest_SetIdentityMapAddr"],[3,"MainRequest_PauseVcpus"],[3,"MainRequest_GetVcpus"],[3,"MainRequest_Start"],[3,"MainRequest_SetCallHint"],[3,"MainRequest_SetCallHint_RegHint"],[3,"MainRequest_MemoryDirtyLog"],[4,"MainRequest_StateSet"],[3,"MainResponse"],[4,"MainResponse_oneof_message"],[3,"MainResponse_Create"],[3,"MainResponse_Destroy"],[3,"MainResponse_NewConnection"],[3,"MainResponse_GetShutdownEventfd"],[3,"MainResponse_CheckExtension"],[3,"MainResponse_CpuidResponse"],[3,"MainResponse_MsrListResponse"],[3,"MainResponse_GetNetConfig"],[3,"MainResponse_ReserveRange"],[3,"MainResponse_SetIrq"],[3,"MainResponse_SetIrqRouting"],[3,"MainResponse_GetState"],[3,"MainResponse_SetState"],[3,"MainResponse_SetIdentityMapAddr"],[3,"MainResponse_PauseVcpus"],[3,"MainResponse_GetVcpus"],[3,"MainResponse_Start"],[3,"MainResponse_SetCallHint"],[3,"MainResponse_MemoryDirtyLog"],[3,"VcpuRequest"],[4,"VcpuRequest_oneof_message"],[3,"VcpuRequest_Wait"],[3,"VcpuRequest_Resume"],[3,"VcpuRequest_GetState"],[3,"VcpuRequest_SetState"],[3,"VcpuRequest_CpuidRequest"],[3,"VcpuRequest_GetMsrs"],[3,"VcpuRequest_MsrEntry"],[3,"VcpuRequest_SetMsrs"],[3,"VcpuRequest_SetCpuid"],[3,"VcpuRequest_Shutdown"],[3,"VcpuRequest_EnableCapability"],[4,"VcpuRequest_StateSet"],[3,"VcpuResponse"],[4,"VcpuResponse_oneof_message"],[3,"VcpuResponse_Wait"],[4,"VcpuResponse_Wait_oneof_exit"],[3,"VcpuResponse_Wait_Init"],[3,"VcpuResponse_Wait_Io"],[3,"VcpuResponse_Wait_User"],[3,"VcpuResponse_Wait_HypervCall"],[3,"VcpuResponse_Wait_HypervSynic"],[3,"VcpuResponse_GetState"],[3,"VcpuResponse_SetState"],[3,"VcpuResponse_CpuidResponse"],[3,"VcpuResponse_GetMsrs"],[3,"VcpuResponse_SetMsrs"],[3,"VcpuResponse_SetCpuid"],[3,"VcpuResponse_EnableCapability"],[4,"AddressSpace"],[3,"ComponentDisk"],[3,"CompositeDisk"],[4,"ReadWriteCapability"]]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending …",null,null],[10,"append","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_all","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_separated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_terminated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by <code>format_ident!</code>.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a <code>quote!</code> invocation.",null,null],[10,"to_tokens","","Write <code>self</code> to the given <code>TokenStream</code>.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing <code>Ident</code>s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as <code>quote!</code>, but applies a given span to all tokens …",null,null],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rand":{"doc":"Utilities for random number generation","i":[[0,"distributions","rand","Generating random samples from probability distributions",null,null],[0,"uniform","rand::distributions","A distribution uniformly sampling numbers within a given …",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[11,"new","","Create a new <code>Uniform</code> instance which samples uniformly …",0,[[],["uniform",3]]],[11,"new_inclusive","","Create a new <code>Uniform</code> instance which samples uniformly …",0,[[],["uniform",3]]],[8,"SampleUniform","","Helper trait for creating objects using the correct …",null,null],[16,"Sampler","","The <code>UniformSampler</code> implementation supporting type <code>X</code>.",1,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",2,null],[10,"new","","Construct self, with inclusive lower bound and exclusive …",2,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds <code>[low, high]</code>.",2,[[]]],[10,"sample","","Sample a value.",2,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with …",2,[[]]],[11,"sample_single_inclusive","","Sample a single value uniformly from a range with …",2,[[]]],[8,"SampleBorrow","","Helper trait similar to <code>Borrow</code> but implemented only for …",null,null],[10,"borrow","","Immutably borrows from an owned value. See <code>Borrow::borrow</code>",3,[[]]],[8,"SampleRange","","Range that supports generating a single sample …",null,null],[10,"sample_single","","Generate a sample from the given range.",4,[[]]],[10,"is_empty","","Check whether the range is empty.",4,[[],["bool",15]]],[3,"UniformInt","","The back-end implementing [<code>UniformSampler</code>] for integer …",null,null],[3,"UniformChar","","The back-end implementing [<code>UniformSampler</code>] for <code>char</code>.",null,null],[3,"UniformFloat","","The back-end implementing [<code>UniformSampler</code>] for …",null,null],[3,"UniformDuration","","The back-end implementing [<code>UniformSampler</code>] for <code>Duration</code>.",null,null],[0,"weighted","rand::distributions","Weighted index sampling",null,null],[0,"alias_method","rand::distributions::weighted","",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","",null,null],[11,"new","","",5,[[["vec",3]],[["result",4],["weightederror",4]]]],[8,"Weight","","",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling of discrete items",null,null],[4,"WeightedError","","Error type returned from <code>WeightedIndex::new</code>.",null,null],[13,"NoItem","","The provided weight collection contains no items.",6,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the …",6,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",6,null],[13,"TooMany","","Too many weights are provided (length greater than …",6,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[4,"BernoulliError","","Error type returned from <code>Bernoulli::new</code>.",null,null],[13,"InvalidProbability","","<code>p < 0</code> or <code>p > 1</code>.",7,null],[8,"Distribution","","Types (distributions) that can be used to create a random …",null,null],[10,"sample","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …",8,[[]]],[11,"sample_iter","","Create an iterator that generates random values of <code>T</code>, …",8,[[],["distiter",3]]],[11,"map","","Create a distribution of values of \'S\' by mapping the …",8,[[],["distmap",3]]],[3,"DistIter","","An iterator that generates random values of <code>T</code> with …",null,null],[3,"DistMap","","A distribution of values of type <code>S</code> derived from the …",null,null],[8,"DistString","","<code>String</code> sampler",null,null],[10,"append_string","","Append <code>len</code> random chars to <code>string</code>",9,[[["usize",15],["string",3]]]],[11,"sample_string","","Generate a <code>String</code> of <code>len</code> random chars",9,[[["usize",15]],["string",3]]],[3,"Open01","","A distribution to sample floating point numbers uniformly …",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly …",null,null],[3,"Alphanumeric","","Sample a <code>u8</code>, uniformly distributed over ASCII letters and …",null,null],[3,"Slice","","A distribution to sample items uniformly from a slice.",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[4,"WeightedError","","Error type returned from <code>WeightedIndex::new</code>.",null,null],[13,"NoItem","","The provided weight collection contains no items.",6,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the …",6,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",6,null],[13,"TooMany","","Too many weights are provided (length greater than …",6,null],[3,"WeightedIndex","","A distribution using weighted sampling of discrete items",null,null],[3,"Standard","","A generic random value distribution, implemented for many …",null,null],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[0,"adapter","rand::rngs","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","<code>ReadRng</code> error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type …",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements <code>BlockRngCore</code>, …",null,null],[0,"mock","rand::rngs","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of <code>RngCore</code> for testing purposes.",null,null],[11,"new","","Create a <code>StepRng</code>, yielding an arithmetic sequence …",10,[[["u64",15]]]],[3,"StdRng","rand::rngs","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …",null,null],[3,"ThreadRng","","A reference to the thread-local generator",null,null],[3,"OsRng","","A random number generator that retrieves randomness from …",null,null],[0,"seq","rand","Sequence-related functionality",null,null],[0,"index","rand::seq","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[11,"len","","Returns the number of indices",11,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the length is 0.",11,[[],["bool",15]]],[11,"index","","Return the value at the given <code>index</code>.",11,[[["usize",15]],["usize",15]]],[11,"into_vec","","Return result as a <code>Vec<usize></code>. Conversion may or may not …",11,[[],[["usize",15],["vec",3]]]],[11,"iter","","Iterate over the indices as a sequence of <code>usize</code> values",11,[[],["indexveciter",4]]],[4,"IndexVecIter","","Return type of <code>IndexVec::iter</code>.",null,null],[4,"IndexVecIntoIter","","Return type of <code>IndexVec::into_iter</code>.",null,null],[5,"sample","","Randomly sample exactly <code>amount</code> distinct indices from …",null,[[["usize",15]],["indexvec",4]]],[5,"sample_weighted","","Randomly sample exactly <code>amount</code> distinct indices from …",null,[[["usize",15]],[["weightederror",4],["indexvec",4],["result",4]]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and …",null,null],[16,"Item","","The element type.",12,null],[10,"choose","","Returns a reference to one random element of the slice, …",12,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the …",12,[[],["option",4]]],[10,"choose_multiple","","Chooses <code>amount</code> elements from the slice at random, without …",12,[[["usize",15]],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to <code>choose</code>, but where the likelihood of each …",12,[[],[["result",4],["weightederror",4]]]],[10,"choose_weighted_mut","","Similar to <code>choose_mut</code>, but where the likelihood of each …",12,[[],[["result",4],["weightederror",4]]]],[10,"choose_multiple_weighted","","Similar to <code>choose_multiple</code>, but where the likelihood of …",12,[[["usize",15]],[["result",4],["weightederror",4],["slicechooseiter",3]]]],[10,"shuffle","","Shuffle a mutable slice in place.",12,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",12,[[["usize",15]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling …",null,null],[11,"choose","","Choose one element at random from the iterator.",13,[[],["option",4]]],[11,"choose_stable","","Choose one element at random from the iterator.",13,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a …",13,[[],["usize",15]]],[11,"choose_multiple","","Collects <code>amount</code> values at random from the iterator into a …",13,[[["usize",15]],["vec",3]]],[3,"SliceChooseIter","","An iterator over multiple slice elements.",null,null],[8,"CryptoRng","rand","A marker trait used to indicate that an [<code>RngCore</code>] or …",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random <code>u32</code>.",14,[[],["u32",15]]],[10,"next_u64","","Return the next random <code>u64</code>.",14,[[],["u64",15]]],[10,"fill_bytes","","Fill <code>dest</code> with random data.",14,[[]]],[10,"try_fill_bytes","","Fill <code>dest</code> entirely with random data.",14,[[],[["error",3],["result",4]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types …",15,null],[10,"from_seed","","Create a new PRNG using the given seed.",15,[[]]],[11,"seed_from_u64","","Create a new PRNG using a <code>u64</code> seed.",15,[[["u64",15]]]],[11,"from_rng","","Create a new PRNG seeded from another <code>Rng</code>.",15,[[],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via <code>getrandom</code>.",15,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random …",null,[[],["threadrng",3]]],[8,"Fill","","Types which may be filled with random data",null,null],[10,"try_fill","","Fill self with random data",16,[[],[["error",3],["result",4]]]],[8,"Rng","","An automatically-implemented extension trait on [<code>RngCore</code>] …",null,null],[11,"gen","","Return a random value supporting the <code>Standard</code> …",17,[[]]],[11,"gen_range","","Generate a random value in the given range.",17,[[]]],[11,"sample","","Sample a new value, using the given distribution.",17,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given …",17,[[],["distiter",3]]],[11,"fill","","Fill any type implementing [<code>Fill</code>] with random data",17,[[]]],[11,"try_fill","","Fill any type implementing <code>Fill</code> with random data",17,[[],[["error",3],["result",4]]]],[11,"gen_bool","","Return a bool with a probability <code>p</code> of being true.",17,[[["f64",15]],["bool",15]]],[11,"gen_ratio","","Return a bool with a probability of <code>numerator/denominator</code> …",17,[[["u32",15]],["bool",15]]],[5,"random","","Generates a random value using the thread-local random …",null,[[]]],[11,"from","rand::distributions","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from","rand::distributions::weighted","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"vzip","","",6,[[]]],[11,"from","rand::distributions","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","rand::distributions::uniform","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"from","rand::distributions::weighted::alias_method","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","rand::distributions","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from","rand::rngs::adapter","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_string","","",32,[[],["string",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"from","rand::rngs::mock","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from","rand::rngs","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"vzip","","",36,[[]]],[11,"from","rand::seq::index","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"into_iter","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"into_iter","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"vzip","","",38,[[]]],[11,"from","rand::seq","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"into_iter","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","rand","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_string","","",40,[[],["string",3]]],[11,"vzip","","",40,[[]]],[11,"clone","rand::rngs","",36,[[],["osrng",3]]],[11,"from","rand","",40,[[["nonzerou32",3]],["error",3]]],[11,"from","","",40,[[["error",3]],["error",3]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"read","","",14,[[],[["usize",15],["result",4],["error",3]]]],[11,"source","","",40,[[],[["error",8],["option",4]]]],[11,"default","rand::rngs","",36,[[],["osrng",3]]],[11,"next_u32","","",36,[[],["u32",15]]],[11,"next_u64","","",36,[[],["u64",15]]],[11,"fill_bytes","","",36,[[]]],[11,"try_fill_bytes","","",36,[[],[["error",3],["result",4]]]],[11,"fmt","rand","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand::rngs","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sample","rand::distributions","",18,[[],["bool",15]]],[11,"sample","","",20,[[]]],[11,"sample","","",30,[[],["f32",15]]],[11,"sample","","",21,[[],["f32",15]]],[11,"sample","","",22,[[],["f32",15]]],[11,"sample","","",30,[[],["f64",15]]],[11,"sample","","",21,[[],["f64",15]]],[11,"sample","","",22,[[],["f64",15]]],[11,"sample","","",30,[[],["u8",15]]],[11,"sample","","",30,[[],["u16",15]]],[11,"sample","","",30,[[],["u32",15]]],[11,"sample","","",30,[[],["u64",15]]],[11,"sample","","",30,[[],["u128",15]]],[11,"sample","","",30,[[],["usize",15]]],[11,"sample","","",30,[[],["i8",15]]],[11,"sample","","",30,[[],["i16",15]]],[11,"sample","","",30,[[],["i32",15]]],[11,"sample","","",30,[[],["i64",15]]],[11,"sample","","",30,[[],["i128",15]]],[11,"sample","","",30,[[],["isize",15]]],[11,"sample","","",30,[[],["nonzerou8",3]]],[11,"sample","","",30,[[],["nonzerou16",3]]],[11,"sample","","",30,[[],["nonzerou32",3]]],[11,"sample","","",30,[[],["nonzerou64",3]]],[11,"sample","","",30,[[],["nonzerou128",3]]],[11,"sample","","",30,[[],["nonzerousize",3]]],[11,"sample","","",30,[[],["char",15]]],[11,"sample","","",23,[[],["u8",15]]],[11,"sample","","",30,[[],["bool",15]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[],["option",4]]],[11,"sample","","",30,[[],["wrapping",3]]],[11,"sample","","",24,[[]]],[11,"sample","rand::distributions::weighted","",25,[[],["usize",15]]],[11,"sample","rand::distributions","",0,[[]]],[11,"append_string","","",30,[[["usize",15],["string",3]]]],[11,"append_string","","",23,[[["usize",15],["string",3]]]],[11,"new","rand::distributions::uniform","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",26,[[]]],[11,"new_inclusive","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample_single","","",26,[[]]],[11,"sample_single_inclusive","","",26,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"new","","",28,[[]]],[11,"new_inclusive","","",28,[[]]],[11,"sample","","",28,[[]]],[11,"sample_single","","",28,[[]]],[11,"new","","",28,[[]]],[11,"new_inclusive","","",28,[[]]],[11,"sample","","",28,[[]]],[11,"sample_single","","",28,[[]]],[11,"new","","",29,[[]]],[11,"new_inclusive","","",29,[[]]],[11,"sample","","",29,[[],["duration",3]]],[11,"from","rand::distributions","",0,[[["range",3]],["uniform",3]]],[11,"from","","",0,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","rand::seq::index","",11,[[["vec",3],["u32",15]]]],[11,"from","","",11,[[["usize",15],["vec",3]]]],[11,"fmt","rand::distributions","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::uniform","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted::alias_method","",5,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",30,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::mock","",10,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq::index","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq","",39,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",6,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",32,[[["formatter",3]],["result",6]]],[11,"eq","rand::distributions","",7,[[["bernoullierror",4]],["bool",15]]],[11,"eq","rand::distributions::weighted","",6,[[["weightederror",4]],["bool",15]]],[11,"eq","rand::rngs::mock","",10,[[["steprng",3]],["bool",15]]],[11,"ne","","",10,[[["steprng",3]],["bool",15]]],[11,"eq","rand::rngs","",34,[[["stdrng",3]],["bool",15]]],[11,"ne","","",34,[[["stdrng",3]],["bool",15]]],[11,"eq","rand::seq::index","",11,[[["indexvec",4]],["bool",15]]],[11,"len","rand::seq","",39,[[],["usize",15]]],[11,"next","rand::distributions","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","rand::seq::index","",37,[[],[["option",4],["usize",15]]]],[11,"size_hint","","",37,[[]]],[11,"next","","",38,[[],["option",4]]],[11,"size_hint","","",38,[[]]],[11,"next","rand::seq","",39,[[],["option",4]]],[11,"size_hint","","",39,[[]]],[11,"into_iter","rand::seq::index","Convert into an iterator over the indices as a sequence …",11,[[],["indexvecintoiter",4]]],[11,"clone","rand::distributions","",18,[[],["bernoulli",3]]],[11,"clone","","",7,[[],["bernoullierror",4]]],[11,"clone","","",21,[[],["openclosed01",3]]],[11,"clone","","",22,[[],["open01",3]]],[11,"clone","","",23,[[],["alphanumeric",3]]],[11,"clone","","",24,[[],["slice",3]]],[11,"clone","rand::distributions::weighted","",25,[[],["weightedindex",3]]],[11,"clone","","",6,[[],["weightederror",4]]],[11,"clone","rand::distributions","",0,[[],["uniform",3]]],[11,"clone","rand::distributions::uniform","",26,[[],["uniformint",3]]],[11,"clone","","",27,[[],["uniformchar",3]]],[11,"clone","","",28,[[],["uniformfloat",3]]],[11,"clone","","",29,[[],["uniformduration",3]]],[11,"clone","rand::distributions","",30,[[],["standard",3]]],[11,"clone","rand::rngs::adapter","",33,[[],["reseedingrng",3]]],[11,"clone","rand::rngs::mock","",10,[[],["steprng",3]]],[11,"clone","rand::rngs","",34,[[],["stdrng",3]]],[11,"clone","","",35,[[],["threadrng",3]]],[11,"clone","rand::seq::index","",11,[[],["indexvec",4]]],[11,"clone","","",38,[[],["indexvecintoiter",4]]],[11,"default","rand::rngs","",35,[[],["threadrng",3]]],[11,"source","rand::rngs::adapter","",32,[[],[["option",4],["error",8]]]],[11,"next_u32","","",31,[[],["u32",15]]],[11,"next_u64","","",31,[[],["u64",15]]],[11,"fill_bytes","","",31,[[]]],[11,"try_fill_bytes","","",31,[[],[["error",3],["result",4]]]],[11,"next_u32","","",33,[[],["u32",15]]],[11,"next_u64","","",33,[[],["u64",15]]],[11,"fill_bytes","","",33,[[]]],[11,"try_fill_bytes","","",33,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs::mock","",10,[[],["u32",15]]],[11,"next_u64","","",10,[[],["u64",15]]],[11,"fill_bytes","","",10,[[]]],[11,"try_fill_bytes","","",10,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",34,[[],["u32",15]]],[11,"next_u64","","",34,[[],["u64",15]]],[11,"fill_bytes","","",34,[[]]],[11,"try_fill_bytes","","",34,[[],[["error",3],["result",4]]]],[11,"next_u32","","",35,[[],["u32",15]]],[11,"next_u64","","",35,[[],["u64",15]]],[11,"fill_bytes","","",35,[[]]],[11,"try_fill_bytes","","",35,[[],[["error",3],["result",4]]]],[11,"from_seed","","",34,[[]]],[11,"from_rng","","",34,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"new","rand::distributions","Construct a new <code>Bernoulli</code> with the given probability of …",18,[[["f64",15]],[["result",4],["bernoulli",3],["bernoullierror",4]]]],[11,"from_ratio","","Construct a new <code>Bernoulli</code> with the probability of success …",18,[[["u32",15]],[["result",4],["bernoulli",3],["bernoullierror",4]]]],[11,"sample_iter","","Create an iterator that generates random values of <code>T</code>, …",8,[[],["distiter",3]]],[11,"map","","Create a distribution of values of \'S\' by mapping the …",8,[[],["distmap",3]]],[11,"sample_string","","Generate a <code>String</code> of <code>len</code> random chars",9,[[["usize",15]],["string",3]]],[11,"new","","Create a new <code>Slice</code> instance which samples uniformly from …",24,[[],[["emptyslice",3],["result",4]]]],[11,"new","rand::distributions::weighted","Creates a new a <code>WeightedIndex</code> [<code>Distribution</code>] using the …",25,[[],[["result",4],["weightederror",4],["weightedindex",3]]]],[11,"update_weights","","Update a subset of weights, without changing the number …",25,[[],[["result",4],["weightederror",4]]]],[11,"gen","rand","Return a random value supporting the <code>Standard</code> …",17,[[]]],[11,"gen_range","","Generate a random value in the given range.",17,[[]]],[11,"sample","","Sample a new value, using the given distribution.",17,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given …",17,[[],["distiter",3]]],[11,"fill","","Fill any type implementing [<code>Fill</code>] with random data",17,[[]]],[11,"try_fill","","Fill any type implementing <code>Fill</code> with random data",17,[[],[["error",3],["result",4]]]],[11,"gen_bool","","Return a bool with a probability <code>p</code> of being true.",17,[[["f64",15]],["bool",15]]],[11,"gen_ratio","","Return a bool with a probability of <code>numerator/denominator</code> …",17,[[["u32",15]],["bool",15]]],[11,"new","rand::rngs::adapter","Create a new <code>ReadRng</code> from a <code>Read</code>.",31,[[],["readrng",3]]],[11,"new","","Create a new <code>ReseedingRng</code> from an existing PRNG, combined …",33,[[["u64",15]]]],[11,"reseed","","Reseed the internal PRNG.",33,[[],[["error",3],["result",4]]]],[18,"CUSTOM_START","rand","Codes at or above this point can be used by users to …",40,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive …",40,null],[11,"new","","Construct from any type supporting <code>std::error::Error</code>",40,[[],["error",3]]],[11,"inner","","Reference the inner error (<code>std</code> only)",40,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (<code>std</code> only)",40,[[],[["global",3],["error",8],["box",3]]]],[11,"raw_os_error","","Extract the raw OS error code (if this error came from …",40,[[],[["i32",15],["option",4]]]],[11,"code","","Retrieve the error code, if any.",40,[[],[["nonzerou32",3],["option",4]]]]],"p":[[3,"Uniform"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[8,"SampleRange"],[3,"WeightedIndex"],[4,"WeightedError"],[4,"BernoulliError"],[8,"Distribution"],[8,"DistString"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"RngCore"],[8,"SeedableRng"],[8,"Fill"],[8,"Rng"],[3,"Bernoulli"],[3,"DistIter"],[3,"DistMap"],[3,"OpenClosed01"],[3,"Open01"],[3,"Alphanumeric"],[3,"Slice"],[3,"WeightedIndex"],[3,"UniformInt"],[3,"UniformChar"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"Standard"],[3,"ReadRng"],[3,"ReadError"],[3,"ReseedingRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"OsRng"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"],[3,"SliceChooseIter"],[3,"Error"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that …",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that …",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that …",null,null],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",1,[[["chacha20core",3]]]],[11,"from","","",3,[[["chacha12core",3]]]],[11,"from","","",5,[[["chacha8core",3]]]],[11,"clone","","",0,[[],["chacha20core",3]]],[11,"clone","","",1,[[],["chacha20rng",3]]],[11,"clone","","",2,[[],["chacha12core",3]]],[11,"clone","","",3,[[],["chacha12rng",3]]],[11,"clone","","",4,[[],["chacha8core",3]]],[11,"clone","","",5,[[],["chacha8rng",3]]],[11,"eq","","",0,[[["chacha20core",3]],["bool",15]]],[11,"ne","","",0,[[["chacha20core",3]],["bool",15]]],[11,"eq","","",1,[[["chacha20rng",3]],["bool",15]]],[11,"eq","","",2,[[["chacha12core",3]],["bool",15]]],[11,"ne","","",2,[[["chacha12core",3]],["bool",15]]],[11,"eq","","",3,[[["chacha12rng",3]],["bool",15]]],[11,"eq","","",4,[[["chacha8core",3]],["bool",15]]],[11,"ne","","",4,[[["chacha8core",3]],["bool",15]]],[11,"eq","","",5,[[["chacha8rng",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"generate","","",0,[[]]],[11,"generate","","",2,[[]]],[11,"generate","","",4,[[]]],[11,"next_u32","","",1,[[],["u32",15]]],[11,"next_u64","","",1,[[],["u64",15]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["result",4],["error",3]]]],[11,"next_u32","","",3,[[],["u32",15]]],[11,"next_u64","","",3,[[],["u64",15]]],[11,"fill_bytes","","",3,[[]]],[11,"try_fill_bytes","","",3,[[],[["result",4],["error",3]]]],[11,"next_u32","","",5,[[],["u32",15]]],[11,"next_u64","","",5,[[],["u64",15]]],[11,"fill_bytes","","",5,[[]]],[11,"try_fill_bytes","","",5,[[],[["result",4],["error",3]]]],[11,"from_seed","","",0,[[]]],[11,"from_seed","","",1,[[]]],[11,"from_seed","","",2,[[]]],[11,"from_seed","","",3,[[]]],[11,"from_seed","","",4,[[]]],[11,"from_seed","","",5,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit …",1,[[],["u128",15]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit …",1,[[["u128",15]]]],[11,"set_stream","","Set the stream number.",1,[[["u64",15]]]],[11,"get_stream","","Get the stream number.",1,[[],["u64",15]]],[11,"get_seed","","Get the seed.",1,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit …",3,[[],["u128",15]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit …",3,[[["u128",15]]]],[11,"set_stream","","Set the stream number.",3,[[["u64",15]]]],[11,"get_stream","","Get the stream number.",3,[[],["u64",15]]],[11,"get_seed","","Get the seed.",3,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit …",5,[[],["u128",15]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit …",5,[[["u128",15]]]],[11,"set_stream","","Set the stream number.",5,[[["u64",15]]]],[11,"get_stream","","Get the stream number.",5,[[],["u64",15]]],[11,"get_seed","","Get the seed.",5,[[]]]],"p":[[3,"ChaCha20Core"],[3,"ChaCha20Rng"],[3,"ChaCha12Core"],[3,"ChaCha12Rng"],[3,"ChaCha8Core"],[3,"ChaCha8Rng"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[0,"block","rand_core","The <code>BlockRngCore</code> trait and implementation helpers",null,null],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers …",null,null],[16,"Item","","Results element type, e.g. <code>u32</code>.",0,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing …",0,null],[10,"generate","","Generate a new block of results.",0,[[]]],[3,"BlockRng","","A wrapper type implementing [<code>RngCore</code>] for some type …",null,null],[12,"core","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …",1,null],[11,"new","","Create a new <code>BlockRng</code> from an existing RNG implementing …",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[],["usize",15]]],[11,"reset","","Reset the number of available results. This will force a …",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the …",1,[[["usize",15]]]],[3,"BlockRng64","","A wrapper type implementing [<code>RngCore</code>] for some type …",null,null],[12,"core","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …",2,null],[11,"new","","Create a new <code>BlockRng</code> from an existing RNG implementing …",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[],["usize",15]]],[11,"reset","","Reset the number of available results. This will force a …",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the …",2,[[["usize",15]]]],[0,"impls","rand_core","Helper functions for implementing <code>RngCore</code> functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.",null,[[],["u64",15]]],[5,"fill_bytes_via_next","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …",null,[[]]],[5,"fill_via_u32_chunks","","Implement <code>fill_bytes</code> by reading chunks from the output …",null,[[]]],[5,"fill_via_u64_chunks","","Implement <code>fill_bytes</code> by reading chunks from the output …",null,[[]]],[5,"next_u32_via_fill","","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.",null,[[],["u32",15]]],[5,"next_u64_via_fill","","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.",null,[[],["u64",15]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",null,[[]]],[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from …",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random <code>u32</code>.",3,[[],["u32",15]]],[10,"next_u64","","Return the next random <code>u64</code>.",3,[[],["u64",15]]],[10,"fill_bytes","","Fill <code>dest</code> with random data.",3,[[]]],[10,"try_fill_bytes","","Fill <code>dest</code> entirely with random data.",3,[[],[["result",4],["error",3]]]],[8,"CryptoRng","","A marker trait used to indicate that an [<code>RngCore</code>] or …",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types …",4,null],[10,"from_seed","","Create a new PRNG using the given seed.",4,[[]]],[11,"seed_from_u64","","Create a new PRNG using a <code>u64</code> seed.",4,[[["u64",15]]]],[11,"from_rng","","Create a new PRNG seeded from another <code>Rng</code>.",4,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via <code>getrandom</code>.",4,[[]]],[11,"from","rand_core::block","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","rand_core","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_string","","",5,[[],["string",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"next_u32","rand_core::block","",1,[[],["u32",15]]],[11,"next_u64","","",1,[[],["u64",15]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["result",4],["error",3]]]],[11,"next_u32","","",2,[[],["u32",15]]],[11,"next_u64","","",2,[[],["u64",15]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["result",4],["error",3]]]],[11,"next_u32","rand_core","",6,[[],["u32",15]]],[11,"next_u64","","",6,[[],["u64",15]]],[11,"fill_bytes","","",6,[[]]],[11,"try_fill_bytes","","",6,[[],[["result",4],["error",3]]]],[11,"from_seed","rand_core::block","",1,[[]]],[11,"seed_from_u64","","",1,[[["u64",15]]]],[11,"from_rng","","",1,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[["u64",15]]]],[11,"from_rng","","",2,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from","rand_core","",5,[[["nonzerou32",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]],[11,"clone","rand_core","",6,[[],["osrng",3]]],[11,"default","","",6,[[],["osrng",3]]],[11,"source","","",5,[[],[["error",8],["option",4]]]],[11,"read","","",3,[[],[["usize",15],["result",4],["error",3]]]],[18,"CUSTOM_START","","Codes at or above this point can be used by users to …",5,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive …",5,null],[11,"new","","Construct from any type supporting <code>std::error::Error</code>",5,[[]]],[11,"inner","","Reference the inner error (<code>std</code> only)",5,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (<code>std</code> only)",5,[[],[["error",8],["box",3]]]],[11,"raw_os_error","","Extract the raw OS error code (if this error came from …",5,[[],[["option",4],["i32",15]]]],[11,"code","","Retrieve the error code, if any.",5,[[],[["option",4],["nonzerou32",3]]]]],"p":[[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"],[3,"Error"],[3,"OsRng"]]},\
"remain":{"doc":"github crates-io docs-rs","i":[[23,"sorted","remain","",null,null],[23,"check","","",null,null]],"p":[]},\
"remove_dir_all":{"doc":"Reliably remove a directory and all of its children.","i":[[5,"remove_dir_all","remove_dir_all","Removes a directory at this path, after removing all its …",null,[[],[["result",4],["error",3]]]]],"p":[],"a":{"delete":[0]}},\
"resources":{"doc":"Manages system resources that can be allocated to VMs and …","i":[[3,"AddressAllocator","resources","Manages allocating address ranges. Use <code>AddressAllocator</code> …",null,null],[4,"MmioType","","Manages allocating system resources such as address space …",null,null],[13,"Low","","",0,null],[13,"High","","",0,null],[3,"SystemAllocator","","",null,null],[4,"Alloc","","Used to tag SystemAllocator allocations.",null,null],[13,"Anon","","An anonymous resource allocation. Should only be …",1,null],[13,"PciBar","","A PCI BAR region with associated bus, device, function …",1,null],[12,"bus","resources::Alloc","",2,null],[12,"dev","","",2,null],[12,"func","","",2,null],[12,"bar","","",2,null],[13,"GpuRenderNode","resources","GPU render node region.",1,null],[13,"PmemDevice","","Pmem device region with associated device index.",1,null],[13,"Pstore","","pstore region.",1,null],[4,"Error","","",null,null],[13,"AllocSizeZero","","",3,null],[13,"BadAlignment","","",3,null],[13,"BadAlloc","","",3,null],[13,"ExistingAlloc","","",3,null],[13,"InvalidAlloc","","",3,null],[13,"MissingHighMMIOAddresses","","",3,null],[13,"MissingLowMMIOAddresses","","",3,null],[13,"MissingPlatformMMIOAddresses","","",3,null],[13,"NoIoAllocator","","",3,null],[13,"OutOfBounds","","",3,null],[13,"OutOfSpace","","",3,null],[13,"PoolOverflow","","",3,null],[12,"base","resources::Error","",4,null],[12,"size","","",4,null],[13,"PoolSizeZero","resources","",3,null],[13,"RegionOverlap","","",3,null],[12,"base","resources::Error","",5,null],[12,"size","","",5,null],[6,"Result","resources","",null,null],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",1,[[],["alloc",4]]],[11,"eq","","",6,[[["addressallocator",3]],["bool",15]]],[11,"ne","","",6,[[["addressallocator",3]],["bool",15]]],[11,"eq","","",1,[[["alloc",4]],["bool",15]]],[11,"ne","","",1,[[["alloc",4]],["bool",15]]],[11,"eq","","",3,[[["error",4]],["bool",15]]],[11,"ne","","",3,[[["error",4]],["bool",15]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"serialize","","",1,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"new","","Creates a new <code>AddressAllocator</code> for managing a range of …",6,[[["option",4],["u64",15]],["result",6]]],[11,"allocate_with_align","","Allocates a range of addresses from the managed region …",6,[[["string",3],["alloc",4],["u64",15]],[["u64",15],["result",6]]]],[11,"allocate","","",6,[[["alloc",4],["string",3],["u64",15]],[["u64",15],["result",6]]]],[11,"allocate_at","","Allocates a range of addresses from the managed region …",6,[[["alloc",4],["string",3],["u64",15]],["result",6]]],[11,"release","","Releases exising allocation back to free pool.",6,[[["alloc",4]],["result",6]]],[11,"get","","Returns allocation associated with <code>alloc</code>, or None if no …",6,[[["alloc",4]],["option",4]]],[11,"address_from_pci_offset","","Returns an address from associated PCI <code>alloc</code> given an …",6,[[["u64",15],["alloc",4]],[["u64",15],["result",6]]]],[11,"builder","","Returns a <code>SystemAllocatorBuilder</code> that can create a new …",7,[[],["systemallocatorbuilder",3]]],[11,"allocate_irq","","Reserves the next available system irq number.",7,[[],[["u32",15],["option",4]]]],[11,"reserve_irq","","Reserves the next available system irq number.",7,[[["u32",15]],["bool",15]]],[11,"allocate_pci","","Allocate PCI slot location.",7,[[["string",3],["u8",15]],[["option",4],["alloc",4]]]],[11,"reserve_pci","","Reserve PCI slot location.",7,[[["string",3],["alloc",4]],["bool",15]]],[11,"mmio_platform_allocator","","Gets an allocator to be used for platform device MMIO …",7,[[],[["addressallocator",3],["option",4]]]],[11,"io_allocator","","Gets an allocator to be used for IO memory.",7,[[],[["addressallocator",3],["option",4]]]],[11,"mmio_allocator","","Gets an allocator to be used for MMIO allocation. …",7,[[["mmiotype",4]],["addressallocator",3]]],[11,"mmio_allocator_any","","Gets a set of allocators to be used for MMIO allocation. …",7,[[],["addressallocatorset",3]]],[11,"get_anon_alloc","","Gets a unique anonymous allocation",7,[[],["alloc",4]]]],"p":[[4,"MmioType"],[4,"Alloc"],[13,"PciBar"],[4,"Error"],[13,"PoolOverflow"],[13,"RegionOverlap"],[3,"AddressAllocator"],[3,"SystemAllocator"]]},\
"rutabaga_gfx":{"doc":"A crate for handling 2D and 3D virtio-gpu hypercalls, …","i":[[3,"Rutabaga","rutabaga_gfx","The global libary handle used to query capability sets, …",null,null],[3,"RutabagaBuilder","","Rutabaga Builder, following the Rust builder pattern.",null,null],[3,"DrmFormat","","A fourcc format identifier.",null,null],[12,"0","","",0,null],[3,"ImageAllocationInfo","","Information required to allocate a swapchain image.",null,null],[12,"width","","",1,null],[12,"height","","",1,null],[12,"drm_format","","",1,null],[12,"flags","","",1,null],[3,"ImageMemoryRequirements","","The memory requirements, compression and layout of a …",null,null],[12,"info","","",2,null],[12,"map_info","","",2,null],[12,"strides","","",2,null],[12,"offsets","","",2,null],[12,"modifier","","",2,null],[12,"size","","",2,null],[12,"vulkan_info","","",2,null],[3,"RutabagaGralloc","","A container for a variety of allocation backends.",null,null],[3,"RutabagaGrallocFlags","","Usage flags for constructing a buffer object.",null,null],[12,"0","","",3,null],[3,"RutabagaIovec","","Represents a buffer.  <code>base</code> contains the address of a …",null,null],[12,"base","","",4,null],[12,"len","","",4,null],[17,"RUTABAGA_PIPE_TEXTURE_2D","","3D resource creation parameters.  Also used to create 2D …",null,null],[17,"RUTABAGA_PIPE_BIND_RENDER_TARGET","","",null,null],[3,"ResourceCreate3D","","",null,null],[12,"target","","",5,null],[12,"format","","",5,null],[12,"bind","","",5,null],[12,"width","","",5,null],[12,"height","","",5,null],[12,"depth","","",5,null],[12,"array_size","","",5,null],[12,"last_level","","",5,null],[12,"nr_samples","","",5,null],[12,"flags","","",5,null],[17,"RUTABAGA_BLOB_MEM_GUEST","","Blob resource creation parameters.",null,null],[17,"RUTABAGA_BLOB_MEM_HOST3D","","",null,null],[17,"RUTABAGA_BLOB_MEM_HOST3D_GUEST","","",null,null],[17,"RUTABAGA_BLOB_FLAG_USE_MAPPABLE","","",null,null],[17,"RUTABAGA_BLOB_FLAG_USE_SHAREABLE","","",null,null],[17,"RUTABAGA_BLOB_FLAG_USE_CROSS_DEVICE","","",null,null],[3,"ResourceCreateBlob","","",null,null],[12,"blob_mem","","",6,null],[12,"blob_flags","","",6,null],[12,"blob_id","","",6,null],[12,"size","","",6,null],[3,"Resource3DInfo","","Metadata associated with a swapchain, video or camera …",null,null],[12,"width","","",7,null],[12,"height","","",7,null],[12,"drm_fourcc","","",7,null],[12,"strides","","",7,null],[12,"offsets","","",7,null],[12,"modifier","","",7,null],[3,"VulkanInfo","","Memory index and physical device index of the associated …",null,null],[12,"memory_idx","","",8,null],[12,"physical_device_idx","","",8,null],[17,"RUTABAGA_CONTEXT_INIT_CAPSET_ID_MASK","","Rutabaga context init capset id mask (not upstreamed).",null,null],[17,"RUTABAGA_FLAG_FENCE","","Rutabaga flags for creating fences (fence ctx idx info …",null,null],[17,"RUTABAGA_FLAG_INFO_RING_IDX","","",null,null],[3,"RutabagaFence","","Convenience struct for Rutabaga fences",null,null],[12,"flags","","",9,null],[12,"fence_id","","",9,null],[12,"ctx_id","","",9,null],[12,"ring_idx","","",9,null],[17,"RUTABAGA_MAP_CACHE_CACHED","","Mapped memory caching flags (see virtio_gpu spec)",null,null],[17,"RUTABAGA_MAP_CACHE_UNCACHED","","",null,null],[17,"RUTABAGA_MAP_CACHE_WC","","",null,null],[17,"RUTABAGA_CAPSET_VIRGL","","Rutabaga capsets.",null,null],[17,"RUTABAGA_CAPSET_VIRGL2","","",null,null],[17,"RUTABAGA_CAPSET_GFXSTREAM","","The following capsets are not upstreamed.",null,null],[17,"RUTABAGA_CAPSET_VENUS","","",null,null],[17,"RUTABAGA_CAPSET_CROSS_DOMAIN","","",null,null],[4,"RutabagaError","","An error generated while using this crate.",null,null],[13,"AlreadyInUse","","Indicates <code>Rutabaga</code> was already initialized since only one …",10,null],[13,"BaseError","","Base error returned as a result of rutabaga library …",10,null],[13,"CheckedArithmetic","","Checked Arithmetic error",10,null],[12,"field1","rutabaga_gfx::RutabagaError","",11,null],[12,"field2","","",11,null],[12,"op","","",11,null],[13,"CheckedRange","rutabaga_gfx","Checked Range error",10,null],[12,"field1","rutabaga_gfx::RutabagaError","",12,null],[12,"field2","","",12,null],[13,"ComponentError","rutabaga_gfx","An internal Rutabaga component error was returned.",10,null],[13,"Invalid2DInfo","","Invalid 2D info",10,null],[13,"InvalidCapset","","Invalid Capset",10,null],[13,"InvalidCommandSize","","A command size was submitted that was invalid.",10,null],[13,"InvalidComponent","","Invalid RutabagaComponent",10,null],[13,"InvalidContextId","","Invalid Context ID",10,null],[13,"InvalidCrossDomainChannel","","Invalid cross domain channel",10,null],[13,"InvalidCrossDomainItemId","","Invalid cross domain item ID",10,null],[13,"InvalidCrossDomainItemType","","Invalid cross domain item type",10,null],[13,"InvalidCrossDomainState","","Invalid cross domain state",10,null],[13,"InvalidGrallocBackend","","Invalid gralloc backend.",10,null],[13,"InvalidGrallocDimensions","","Invalid gralloc dimensions.",10,null],[13,"InvalidGrallocDrmFormat","","Invalid gralloc DRM format.",10,null],[13,"InvalidGrallocGpuType","","Invalid GPU type.",10,null],[13,"InvalidGrallocNumberOfPlanes","","Invalid number of YUV planes.",10,null],[13,"InvalidIovec","","The indicated region of guest memory is invalid.",10,null],[13,"InvalidResourceId","","Invalid Resource ID.",10,null],[13,"InvalidRutabagaBuild","","Indicates an error in the RutabagaBuilder.",10,null],[13,"InvalidRutabagaHandle","","An error with the RutabagaHandle",10,null],[13,"InvalidVulkanInfo","","Invalid Vulkan info",10,null],[13,"IoError","","An input/output error occured.",10,null],[13,"MappingFailed","","The mapping failed.",10,null],[13,"SpecViolation","","Violation of the Rutabaga spec occured.",10,null],[13,"TryFromIntError","","An attempted integer conversion failed.",10,null],[13,"Unsupported","","The command is unsupported.",10,null],[13,"Utf8Error","","Utf8 error.",10,null],[13,"VolatileMemoryError","","Volatile memory error",10,null],[6,"RutabagaResult","","The result of an operation in this crate.",null,null],[3,"VirglRendererFlags","","virglrenderer flag struct.",null,null],[3,"GfxstreamFlags","","gfxstream flag struct.",null,null],[3,"Transfer3D","","Transfers {to, from} 1D buffers, 2D textures, 3D …",null,null],[12,"x","","",13,null],[12,"y","","",13,null],[12,"z","","",13,null],[12,"w","","",13,null],[12,"h","","",13,null],[12,"d","","",13,null],[12,"level","","",13,null],[12,"stride","","",13,null],[12,"layer_stride","","",13,null],[12,"offset","","",13,null],[17,"RUTABAGA_CHANNEL_TYPE_WAYLAND","","Rutabaga channel types",null,null],[17,"RUTABAGA_CHANNEL_TYPE_CAMERA","","",null,null],[3,"RutabagaChannel","","Information needed to open an OS-specific …",null,null],[12,"base_channel","","",14,null],[12,"channel_type","","",14,null],[4,"RutabagaComponentType","","Enumeration of possible rutabaga components.",null,null],[13,"Rutabaga2D","","",15,null],[13,"VirglRenderer","","",15,null],[13,"Gfxstream","","",15,null],[13,"CrossDomain","","",15,null],[17,"RUTABAGA_MEM_HANDLE_TYPE_OPAQUE_FD","","Rutabaga handle types (memory and sync in same namespace)",null,null],[17,"RUTABAGA_MEM_HANDLE_TYPE_DMABUF","","",null,null],[17,"RUTABAGE_MEM_HANDLE_TYPE_OPAQUE_WIN32","","",null,null],[17,"RUTABAGA_FENCE_HANDLE_TYPE_OPAQUE_FD","","",null,null],[17,"RUTABAGA_FENCE_HANDLE_TYPE_SYNC_FD","","",null,null],[17,"RUTABAGE_FENCE_HANDLE_TYPE_OPAQUE_WIN32","","",null,null],[3,"RutabagaHandle","","Handle to OS-specific memory or synchronization objects.",null,null],[12,"os_handle","","",16,null],[12,"handle_type","","",16,null],[8,"RutabagaFenceCallback","","Trait for fence completion handlers",null,null],[10,"call","","",17,[[["rutabagafence",3]]]],[10,"clone_box","","",17,[[],["rutabagafencehandler",6]]],[6,"RutabagaFenceHandler","","Wrapper type to allow cloning while respecting …",null,null],[3,"RutabagaFenceClosure","","Fence handler implementation that wraps a closure",null,null],[14,"checked_range","","",null,null],[14,"checked_arithmetic","","",null,null],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"call","","",23,[[["rutabagafence",3]]]],[11,"clone_box","","",23,[[],["rutabagafencehandler",6]]],[11,"from","","",0,[[["u32",15]],["drmformat",3]]],[11,"from","","",10,[[["ioerror",3]],["rutabagaerror",4]]],[11,"from","","",10,[[["baseerror",3]],["rutabagaerror",4]]],[11,"from","","",10,[[["tryfrominterror",3]],["rutabagaerror",4]]],[11,"from","","",10,[[["utf8error",3]],["rutabagaerror",4]]],[11,"from","","",10,[[["volatilememoryerror",4]],["rutabagaerror",4]]],[11,"clone","","",0,[[],["drmformat",3]]],[11,"clone","","",3,[[],["rutabagagrallocflags",3]]],[11,"clone","","",1,[[],["imageallocationinfo",3]]],[11,"clone","","",2,[[],["imagememoryrequirements",3]]],[11,"clone","","",4,[[],["rutabagaiovec",3]]],[11,"clone","","",5,[[],["resourcecreate3d",3]]],[11,"clone","","",6,[[],["resourcecreateblob",3]]],[11,"clone","","",7,[[],["resource3dinfo",3]]],[11,"clone","","",8,[[],["vulkaninfo",3]]],[11,"clone","","",9,[[],["rutabagafence",3]]],[11,"clone","","",21,[[],["virglrendererflags",3]]],[11,"clone","","",22,[[],["gfxstreamflags",3]]],[11,"clone","","",14,[[],["rutabagachannel",3]]],[11,"clone","","",15,[[],["rutabagacomponenttype",4]]],[11,"clone","","",24,[[]]],[11,"clone","","",23,[[],["rutabagafenceclosure",3]]],[11,"default","","",0,[[],["drmformat",3]]],[11,"default","","",3,[[],["rutabagagrallocflags",3]]],[11,"default","","",1,[[],["imageallocationinfo",3]]],[11,"default","","",2,[[],["imagememoryrequirements",3]]],[11,"default","","",7,[[],["resource3dinfo",3]]],[11,"default","","",8,[[],["vulkaninfo",3]]],[11,"default","","",21,[[],["virglrendererflags",3]]],[11,"default","","",22,[[],["gfxstreamflags",3]]],[11,"cmp","","",15,[[["rutabagacomponenttype",4]],["ordering",4]]],[11,"eq","","",0,[[["drmformat",3]],["bool",15]]],[11,"ne","","",0,[[["drmformat",3]],["bool",15]]],[11,"eq","","",3,[[["rutabagagrallocflags",3]],["bool",15]]],[11,"ne","","",3,[[["rutabagagrallocflags",3]],["bool",15]]],[11,"eq","","",15,[[["rutabagacomponenttype",4]],["bool",15]]],[11,"partial_cmp","","",15,[[["rutabagacomponenttype",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"get_capset_info","","Gets the version and size for the capabilty set <code>index</code>.",18,[[["u32",15]],["rutabagaresult",6]]],[11,"get_capset","","Gets the capability set for the <code>capset_id</code> and <code>version</code>. …",18,[[["u32",15]],[["rutabagaresult",6],["vec",3]]]],[11,"force_ctx_0","","Forces context zero for the default rutabaga component.",18,[[]]],[11,"create_fence","","Creates a fence with the given <code>fence</code>. If the flags …",18,[[["rutabagafence",3]],["rutabagaresult",6]]],[11,"poll","","Polls all rutabaga components and contexts, and returns a …",18,[[],[["rutabagafence",3],["vec",3]]]],[11,"resource_create_3d","","Creates a resource with the <code>resource_create_3d</code> metadata.",18,[[["u32",15],["resourcecreate3d",3]],["rutabagaresult",6]]],[11,"attach_backing","","Attaches <code>vecs</code> to the resource.",18,[[["u32",15],["vec",3],["rutabagaiovec",3]],["rutabagaresult",6]]],[11,"detach_backing","","Detaches any previously attached iovecs from the resource.",18,[[["u32",15]],["rutabagaresult",6]]],[11,"unref_resource","","Releases guest kernel reference on the resource.",18,[[["u32",15]],["rutabagaresult",6]]],[11,"transfer_write","","For HOST3D_GUEST resources, copies from the attached …",18,[[["u32",15],["transfer3d",3]],["rutabagaresult",6]]],[11,"transfer_read","","If specified, copies to <code>buf</code> from the host resource.…",18,[[["u32",15],["option",4],["transfer3d",3],["volatileslice",3]],["rutabagaresult",6]]],[11,"resource_create_blob","","Creates a blob resource with the <code>ctx_id</code> and …",18,[[["u32",15],["option",4],["rutabagahandle",3],["option",4],["vec",3],["resourcecreateblob",3]],["rutabagaresult",6]]],[11,"map","","Returns a memory mapping of the blob resource.",18,[[["u32",15]],[["externalmapping",3],["rutabagaresult",6]]]],[11,"map_info","","Returns the <code>map_info</code> of the blob resource. The valid …",18,[[["u32",15]],[["u32",15],["rutabagaresult",6]]]],[11,"vulkan_info","","Returns the <code>vulkan_info</code> of the blob resource, which …",18,[[["u32",15]],[["rutabagaresult",6],["vulkaninfo",3]]]],[11,"query","","Returns the 3D info associated with the resource, if any.",18,[[["u32",15]],[["rutabagaresult",6],["resource3dinfo",3]]]],[11,"export_blob","","Exports a blob resource.  See virtio-gpu spec for blob …",18,[[["u32",15]],[["rutabagaresult",6],["rutabagahandle",3]]]],[11,"export_fence","","Exports the given fence for import into other processes.",18,[[["u32",15]],[["rutabagaresult",6],["rutabagahandle",3]]]],[11,"create_context","","Creates a context with the given <code>ctx_id</code> and <code>context_init</code> …",18,[[["u32",15]],["rutabagaresult",6]]],[11,"destroy_context","","Destroys the context given by <code>ctx_id</code>.",18,[[["u32",15]],["rutabagaresult",6]]],[11,"context_attach_resource","","Attaches the resource given by <code>resource_id</code> to the context …",18,[[["u32",15]],["rutabagaresult",6]]],[11,"context_detach_resource","","Detaches the resource given by <code>resource_id</code> from the …",18,[[["u32",15]],["rutabagaresult",6]]],[11,"submit_command","","Submits <code>commands</code> to the context given by <code>ctx_id</code>.",18,[[["u32",15]],["rutabagaresult",6]]],[11,"new","","Create new a RutabagaBuilder.",19,[[["rutabagacomponenttype",4]],["rutabagabuilder",3]]],[11,"set_display_width","","Set display width for the RutabagaBuilder",19,[[["u32",15]],["rutabagabuilder",3]]],[11,"set_display_height","","Set display height for the RutabagaBuilder",19,[[["u32",15]],["rutabagabuilder",3]]],[11,"set_virglrenderer_flags","","Set virglrenderer flags for the RutabagaBuilder",19,[[["virglrendererflags",3]],["rutabagabuilder",3]]],[11,"set_gfxstream_flags","","Set gfxstream flags for the RutabagaBuilder",19,[[["gfxstreamflags",3]],["rutabagabuilder",3]]],[11,"set_rutabaga_channels","","Set rutabaga channels for the RutabagaBuilder",19,[[["option",4],["vec",3]],["rutabagabuilder",3]]],[11,"build","","Builds Rutabaga and returns a handle to it.",19,[[["rutabagafencehandler",6]],[["rutabaga",3],["rutabagaresult",6]]]],[11,"new","","Constructs a format identifer using a fourcc byte …",0,[[["u8",15]],["drmformat",3]]],[11,"to_bytes","","Returns the fourcc code as a sequence of bytes.",0,[[]]],[11,"planar_layout","","Returns the planar layout of the format.",0,[[],[["rutabagaresult",6],["planarlayout",3]]]],[11,"empty","","Returns empty set of flags.",3,[[],["rutabagagrallocflags",3]]],[11,"new","","Returns the given set of raw <code>RUTABAGA_GRALLOC</code> flags …",3,[[["u32",15]],["rutabagagrallocflags",3]]],[11,"use_scanout","","Sets the scanout flag\'s presence.",3,[[["bool",15]],["rutabagagrallocflags",3]]],[11,"use_rendering","","Sets the rendering flag\'s presence.",3,[[["bool",15]],["rutabagagrallocflags",3]]],[11,"use_linear","","Sets the linear flag\'s presence.",3,[[["bool",15]],["rutabagagrallocflags",3]]],[11,"use_sw_write","","Sets the SW write flag\'s presence.",3,[[["bool",15]],["rutabagagrallocflags",3]]],[11,"use_sw_read","","Sets the SW read flag\'s presence.",3,[[["bool",15]],["rutabagagrallocflags",3]]],[11,"uses_texturing","","Returns true if the texturing flag is set.",3,[[],["bool",15]]],[11,"uses_rendering","","Returns true if the rendering flag is set.",3,[[],["bool",15]]],[11,"host_visible","","Returns true if the memory will accessed by the CPU or an …",3,[[],["bool",15]]],[11,"host_cached","","Returns true if the memory will read by the CPU or an IP …",3,[[],["bool",15]]],[11,"new","","Returns a new RutabagaGralloc instance upon success.  All …",20,[[],[["rutabagaresult",6],["rutabagagralloc",3]]]],[11,"supports_external_gpu_memory","","Returns true if one of the allocation backends supports …",20,[[],["bool",15]]],[11,"supports_dmabuf","","Returns true if one of the allocation backends supports …",20,[[],["bool",15]]],[11,"get_image_memory_requirements","","Returns a image memory requirements for the given <code>info</code> …",20,[[["imageallocationinfo",3]],[["rutabagaresult",6],["imagememoryrequirements",3]]]],[11,"allocate_memory","","Allocates memory given the particular <code>reqs</code> upon success.",20,[[["imagememoryrequirements",3]],[["rutabagaresult",6],["rutabagahandle",3]]]],[11,"import_and_map","","Imports the <code>handle</code> using the given <code>vulkan_info</code>.  Returns …",20,[[["rutabagahandle",3],["vulkaninfo",3],["u64",15]],[["rutabagaresult",6],["box",3]]]],[11,"new","","Create new virglrenderer flags.",21,[[],["virglrendererflags",3]]],[11,"use_virgl","","Enable virgl support",21,[[["bool",15]],["virglrendererflags",3]]],[11,"use_venus","","Enable venus support",21,[[["bool",15]],["virglrendererflags",3]]],[11,"use_egl","","Use EGL for context creation.",21,[[["bool",15]],["virglrendererflags",3]]],[11,"use_thread_sync","","Use a dedicated thread for fence synchronization.",21,[[["bool",15]],["virglrendererflags",3]]],[11,"use_glx","","Use GLX for context creation.",21,[[["bool",15]],["virglrendererflags",3]]],[11,"use_surfaceless","","No surfaces required when creating context.",21,[[["bool",15]],["virglrendererflags",3]]],[11,"use_gles","","Use GLES drivers.",21,[[["bool",15]],["virglrendererflags",3]]],[11,"use_external_blob","","Use external memory when creating blob resources.",21,[[["bool",15]],["virglrendererflags",3]]],[11,"use_async_fence_cb","","Retire fence directly from sync thread.",21,[[["bool",15]],["virglrendererflags",3]]],[11,"new","","Create new gfxstream flags.",22,[[],["gfxstreamflags",3]]],[11,"use_egl","","Use EGL for context creation.",22,[[["bool",15]],["gfxstreamflags",3]]],[11,"use_glx","","Use GLX for context creation.",22,[[["bool",15]],["gfxstreamflags",3]]],[11,"use_surfaceless","","No surfaces required when creating context.",22,[[["bool",15]],["gfxstreamflags",3]]],[11,"use_gles","","Use GLES drivers.",22,[[["bool",15]],["gfxstreamflags",3]]],[11,"use_syncfd","","Use external synchronization.",22,[[["bool",15]],["gfxstreamflags",3]]],[11,"use_vulkan","","Support using Vulkan.",22,[[["bool",15]],["gfxstreamflags",3]]],[11,"use_guest_angle","","Use ANGLE as the guest GLES driver.",22,[[["bool",15]],["gfxstreamflags",3]]],[11,"new_2d","","Constructs a 2 dimensional XY box in 3 dimensional space …",13,[[["u32",15]],["transfer3d",3]]],[11,"is_empty","","Returns true if this box represents a volume of zero.",13,[[],["bool",15]]],[11,"try_clone","","Clones an existing rutabaga handle, by using OS specific …",16,[[],[["rutabagaresult",6],["rutabagahandle",3]]]],[11,"new","","",23,[[],["rutabagafencehandler",6]]]],"p":[[3,"DrmFormat"],[3,"ImageAllocationInfo"],[3,"ImageMemoryRequirements"],[3,"RutabagaGrallocFlags"],[3,"RutabagaIovec"],[3,"ResourceCreate3D"],[3,"ResourceCreateBlob"],[3,"Resource3DInfo"],[3,"VulkanInfo"],[3,"RutabagaFence"],[4,"RutabagaError"],[13,"CheckedArithmetic"],[13,"CheckedRange"],[3,"Transfer3D"],[3,"RutabagaChannel"],[4,"RutabagaComponentType"],[3,"RutabagaHandle"],[8,"RutabagaFenceCallback"],[3,"Rutabaga"],[3,"RutabagaBuilder"],[3,"RutabagaGralloc"],[3,"VirglRendererFlags"],[3,"GfxstreamFlags"],[3,"RutabagaFenceClosure"],[6,"RutabagaFenceHandler"]]},\
"ryu":{"doc":"github crates-io docs-rs","i":[[0,"raw","ryu","Unsafe functions that mirror the API of the C …",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes …",null,[[["f32",15]],["usize",15]]],[5,"format64","","Print f64 to the given buffer and return number of bytes …",null,[[["f64",15]],["usize",15]]],[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[8,"Float","","A floating point number, f32 or f64, that can be written …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[]]],[11,"new","","This is a cheap operation; you don\'t need to worry about …",0,[[]]],[11,"format","","Print a floating point number into this buffer and return …",0,[[["float",8]],["str",15]]],[11,"format_finite","","Print a floating point number into this buffer and return …",0,[[["float",8]],["str",15]]]],"p":[[3,"Buffer"]]},\
"serde":{"doc":"SerdeSerde is a framework for <em><strong>ser</strong></em>ializing and <em><strong>de</strong></em>…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[0,"value","serde::de","Building blocks for deserializing basic values using the …",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can …",null,null],[3,"UnitDeserializer","","A deserializer holding a <code>()</code>.",null,null],[3,"BoolDeserializer","","A deserializer holding a <code>bool</code>.",null,null],[3,"I8Deserializer","","A deserializer holding an <code>i8</code>.",null,null],[3,"I16Deserializer","","A deserializer holding an <code>i16</code>.",null,null],[3,"I32Deserializer","","A deserializer holding an <code>i32</code>.",null,null],[3,"I64Deserializer","","A deserializer holding an <code>i64</code>.",null,null],[3,"IsizeDeserializer","","A deserializer holding an <code>isize</code>.",null,null],[3,"U8Deserializer","","A deserializer holding a <code>u8</code>.",null,null],[3,"U16Deserializer","","A deserializer holding a <code>u16</code>.",null,null],[3,"U64Deserializer","","A deserializer holding a <code>u64</code>.",null,null],[3,"UsizeDeserializer","","A deserializer holding a <code>usize</code>.",null,null],[3,"F32Deserializer","","A deserializer holding an <code>f32</code>.",null,null],[3,"F64Deserializer","","A deserializer holding an <code>f64</code>.",null,null],[3,"CharDeserializer","","A deserializer holding a <code>char</code>.",null,null],[3,"I128Deserializer","","A deserializer holding an <code>i128</code>.",null,null],[3,"U128Deserializer","","A deserializer holding a <code>u128</code>.",null,null],[3,"U32Deserializer","","A deserializer holding a <code>u32</code>.",null,null],[3,"StrDeserializer","","A deserializer holding a <code>&str</code>.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a <code>&str</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",0,[[["str",15]],["borrowedstrdeserializer",3]]],[3,"StringDeserializer","","A deserializer holding a <code>String</code>.",null,null],[3,"CowStrDeserializer","","A deserializer holding a <code>Cow<str></code>.",null,null],[3,"BytesDeserializer","","A deserializer holding a <code>&[u8]</code>. Always calls […",null,null],[11,"new","","Create a new deserializer from the given bytes.",1,[[]]],[3,"BorrowedBytesDeserializer","","A deserializer holding a <code>&[u8]</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given …",2,[[]]],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[11,"new","","Construct a new <code>SeqDeserializer<I, E></code>.",3,[[]]],[11,"end","","Check for remaining elements after passing a …",3,[[],["result",4]]],[3,"SeqAccessDeserializer","","A deserializer holding a <code>SeqAccess</code>.",null,null],[11,"new","","Construct a new <code>SeqAccessDeserializer<A></code>.",4,[[]]],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[11,"new","","Construct a new <code>MapDeserializer<I, E></code>.",5,[[]]],[11,"end","","Check for remaining elements after passing a …",5,[[],["result",4]]],[3,"MapAccessDeserializer","","A deserializer holding a <code>MapAccess</code>.",null,null],[11,"new","","Construct a new <code>MapAccessDeserializer<A></code>.",6,[[]]],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[8,"Error","","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …",null,null],[10,"custom","","Raised when there is general error when deserializing a …",7,[[]]],[11,"invalid_type","","Raised when a <code>Deserialize</code> receives a type different from …",7,[[["unexpected",4],["expected",8]]]],[11,"invalid_value","","Raised when a <code>Deserialize</code> receives a value of the right …",7,[[["unexpected",4],["expected",8]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input …",7,[[["usize",15],["expected",8]]]],[11,"unknown_variant","","Raised when a <code>Deserialize</code> enum type received a variant …",7,[[["str",15]]]],[11,"unknown_field","","Raised when a <code>Deserialize</code> struct type received a field …",7,[[["str",15]]]],[11,"missing_field","","Raised when a <code>Deserialize</code> struct type expected to receive …",7,[[["str",15]]]],[11,"duplicate_field","","Raised when a <code>Deserialize</code> struct type received more than …",7,[[["str",15]]]],[4,"Unexpected","","<code>Unexpected</code> represents an unexpected invocation of any one …",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",8,null],[13,"Unsigned","","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or …",8,null],[13,"Signed","","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …",8,null],[13,"Float","","The input contained a floating point <code>f32</code> or <code>f64</code> that was …",8,null],[13,"Char","","The input contained a <code>char</code> that was not expected.",8,null],[13,"Str","","The input contained a <code>&str</code> or <code>String</code> that was not …",8,null],[13,"Bytes","","The input contained a <code>&[u8]</code> or <code>Vec<u8></code> that was not …",8,null],[13,"Unit","","The input contained a unit <code>()</code> that was not expected.",8,null],[13,"Option","","The input contained an <code>Option<T></code> that was not expected.",8,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not …",8,null],[13,"Seq","","The input contained a sequence that was not expected.",8,null],[13,"Map","","The input contained a map that was not expected.",8,null],[13,"Enum","","The input contained an enum that was not expected.",8,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",8,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not …",8,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",8,null],[13,"StructVariant","","The input contained a struct variant that was not …",8,null],[13,"Other","","A message stating what uncategorized thing the input …",8,null],[8,"Expected","","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …",null,null],[10,"fmt","","Format an explanation of what data was being expected. …",9,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without …",null,null],[8,"DeserializeSeed","","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …",null,null],[16,"Value","","The type produced by using this seed.",11,null],[10,"deserialize","","Equivalent to the more common <code>Deserialize::deserialize</code> …",11,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",12,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",12,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",12,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",12,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",12,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",12,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",12,[[],["bool",15]]],[8,"Visitor","","This trait represents a visitor that walks through a …",null,null],[16,"Value","","The value produced by this visitor.",13,null],[10,"expecting","","Format a message stating what data this Visitor expects …",13,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",13,[[["bool",15]],["result",4]]],[11,"visit_i8","","The input contains an <code>i8</code>.",13,[[["i8",15]],["result",4]]],[11,"visit_i16","","The input contains an <code>i16</code>.",13,[[["i16",15]],["result",4]]],[11,"visit_i32","","The input contains an <code>i32</code>.",13,[[["i32",15]],["result",4]]],[11,"visit_i64","","The input contains an <code>i64</code>.",13,[[["i64",15]],["result",4]]],[11,"visit_i128","","The input contains a <code>i128</code>.",13,[[["i128",15]],["result",4]]],[11,"visit_u8","","The input contains a <code>u8</code>.",13,[[["u8",15]],["result",4]]],[11,"visit_u16","","The input contains a <code>u16</code>.",13,[[["u16",15]],["result",4]]],[11,"visit_u32","","The input contains a <code>u32</code>.",13,[[["u32",15]],["result",4]]],[11,"visit_u64","","The input contains a <code>u64</code>.",13,[[["u64",15]],["result",4]]],[11,"visit_u128","","The input contains a <code>u128</code>.",13,[[["u128",15]],["result",4]]],[11,"visit_f32","","The input contains an <code>f32</code>.",13,[[["f32",15]],["result",4]]],[11,"visit_f64","","The input contains an <code>f64</code>.",13,[[["f64",15]],["result",4]]],[11,"visit_char","","The input contains a <code>char</code>.",13,[[["char",15]],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string …",13,[[["str",15]],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long …",13,[[["str",15]],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string …",13,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte …",13,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as …",13,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte …",13,[[["vec",3],["u8",15]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",13,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",13,[[],["result",4]]],[11,"visit_unit","","The input contains a unit <code>()</code>.",13,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",13,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",13,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",13,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",13,[[],["result",4]]],[8,"SeqAccess","","Provides a <code>Visitor</code> access to each element of a sequence …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",14,null],[10,"next_element_seed","","This returns <code>Ok(Some(value))</code> for the next value in the …",14,[[],[["result",4],["option",4]]]],[11,"next_element","","This returns <code>Ok(Some(value))</code> for the next value in the …",14,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, …",14,[[],[["usize",15],["option",4]]]],[8,"MapAccess","","Provides a <code>Visitor</code> access to each entry of a map in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",15,null],[10,"next_key_seed","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",15,[[],[["option",4],["result",4]]]],[10,"next_value_seed","","This returns a <code>Ok(value)</code> for the next value in the map.",15,[[],["result",4]]],[11,"next_entry_seed","","This returns <code>Ok(Some((key, value)))</code> for the next …",15,[[],[["option",4],["result",4]]]],[11,"next_key","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",15,[[],[["result",4],["option",4]]]],[11,"next_value","","This returns a <code>Ok(value)</code> for the next value in the map.",15,[[],["result",4]]],[11,"next_entry","","This returns <code>Ok(Some((key, value)))</code> for the next …",15,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if …",15,[[],[["usize",15],["option",4]]]],[8,"EnumAccess","","Provides a <code>Visitor</code> access to the data of an enum in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",16,null],[16,"Variant","","The <code>Visitor</code> that will be used to deserialize the content …",16,null],[10,"variant_seed","","<code>variant</code> is called to identify which variant to …",16,[[],["result",4]]],[11,"variant","","<code>variant</code> is called to identify which variant to …",16,[[],["result",4]]],[8,"VariantAccess","","<code>VariantAccess</code> is a visitor that is created by the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",17,null],[10,"unit_variant","","Called when deserializing a variant with no values.",17,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",17,[[["usize",15]],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",17,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a <code>Deserializer</code> from which …",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",18,null],[10,"into_deserializer","","Convert this value into a deserializer.",18,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a <code>Serializer</code> that does not …",null,null],[8,"Error","","Trait used by <code>Serialize</code> implementations to generically …",null,null],[10,"custom","","Used when a <code>Serialize</code> implementation encounters any error …",19,[[]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",21,null],[16,"Error","","The error type when some error occurs during …",21,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",21,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",21,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",21,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",21,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",21,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",21,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",21,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",21,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",21,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",21,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",21,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",21,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",21,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",21,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",21,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",21,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",21,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",21,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",21,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",21,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",21,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",21,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",21,[[],["bool",15]]],[8,"SerializeSeq","","Returned from <code>Serializer::serialize_seq</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",22,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",22,null],[10,"serialize_element","","Serialize a sequence element.",22,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",22,[[],["result",4]]],[8,"SerializeTuple","","Returned from <code>Serializer::serialize_tuple</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",23,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",23,null],[10,"serialize_element","","Serialize a tuple element.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",23,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from <code>Serializer::serialize_tuple_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",24,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",24,null],[10,"serialize_field","","Serialize a tuple struct field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",24,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from <code>Serializer::serialize_tuple_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",25,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",25,null],[10,"serialize_field","","Serialize a tuple variant field.",25,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",25,[[],["result",4]]],[8,"SerializeMap","","Returned from <code>Serializer::serialize_map</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",26,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",26,null],[10,"serialize_key","","Serialize a map key.",26,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",26,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",26,[[],["result",4]]],[10,"end","","Finish serializing a map.",26,[[],["result",4]]],[8,"SerializeStruct","","Returned from <code>Serializer::serialize_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",27,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",27,null],[10,"serialize_field","","Serialize a struct field.",27,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",27,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct.",27,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from <code>Serializer::serialize_struct_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",28,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",28,null],[10,"serialize_field","","Serialize a struct variant field.",28,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",28,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct variant.",28,[[],["result",4]]],[8,"Deserialize","serde","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",12,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",12,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",12,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",12,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",12,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",12,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",12,[[],["bool",15]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",21,null],[16,"Error","","The error type when some error occurs during …",21,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",21,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",21,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",21,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",21,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",21,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",21,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",21,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",21,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",21,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",21,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",21,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",21,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",21,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",21,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",21,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",21,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",21,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",21,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",21,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",21,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",21,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",21,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",21,[[],["bool",15]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the <code>Deserializer</code> part of a …",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is …",null,null],[11,"from","serde::de::value","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"fmt","serde::de","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","serde::ser","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"deserialize","serde::de","",50,[[],[["result",4],["ignoredany",3]]]],[11,"deserialize_bool","serde::de::value","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",30,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",31,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",32,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",33,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",34,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",35,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",36,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",37,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",38,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",39,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",40,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",41,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",42,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",43,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",44,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",45,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[["str",15]],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",0,[[],["result",4]]],[11,"deserialize_enum","","",0,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",0,[[],["result",4]]],[11,"deserialize_i8","","",0,[[],["result",4]]],[11,"deserialize_i16","","",0,[[],["result",4]]],[11,"deserialize_i32","","",0,[[],["result",4]]],[11,"deserialize_i64","","",0,[[],["result",4]]],[11,"deserialize_i128","","",0,[[],["result",4]]],[11,"deserialize_u8","","",0,[[],["result",4]]],[11,"deserialize_u16","","",0,[[],["result",4]]],[11,"deserialize_u32","","",0,[[],["result",4]]],[11,"deserialize_u64","","",0,[[],["result",4]]],[11,"deserialize_u128","","",0,[[],["result",4]]],[11,"deserialize_f32","","",0,[[],["result",4]]],[11,"deserialize_f64","","",0,[[],["result",4]]],[11,"deserialize_char","","",0,[[],["result",4]]],[11,"deserialize_str","","",0,[[],["result",4]]],[11,"deserialize_string","","",0,[[],["result",4]]],[11,"deserialize_bytes","","",0,[[],["result",4]]],[11,"deserialize_byte_buf","","",0,[[],["result",4]]],[11,"deserialize_option","","",0,[[],["result",4]]],[11,"deserialize_unit","","",0,[[],["result",4]]],[11,"deserialize_unit_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",0,[[],["result",4]]],[11,"deserialize_tuple","","",0,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",0,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",0,[[],["result",4]]],[11,"deserialize_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",0,[[],["result",4]]],[11,"deserialize_ignored_any","","",0,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",49,[[],["result",4]]],[11,"deserialize_enum","","",49,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",49,[[],["result",4]]],[11,"deserialize_i8","","",49,[[],["result",4]]],[11,"deserialize_i16","","",49,[[],["result",4]]],[11,"deserialize_i32","","",49,[[],["result",4]]],[11,"deserialize_i64","","",49,[[],["result",4]]],[11,"deserialize_i128","","",49,[[],["result",4]]],[11,"deserialize_u8","","",49,[[],["result",4]]],[11,"deserialize_u16","","",49,[[],["result",4]]],[11,"deserialize_u32","","",49,[[],["result",4]]],[11,"deserialize_u64","","",49,[[],["result",4]]],[11,"deserialize_u128","","",49,[[],["result",4]]],[11,"deserialize_f32","","",49,[[],["result",4]]],[11,"deserialize_f64","","",49,[[],["result",4]]],[11,"deserialize_char","","",49,[[],["result",4]]],[11,"deserialize_str","","",49,[[],["result",4]]],[11,"deserialize_string","","",49,[[],["result",4]]],[11,"deserialize_bytes","","",49,[[],["result",4]]],[11,"deserialize_byte_buf","","",49,[[],["result",4]]],[11,"deserialize_option","","",49,[[],["result",4]]],[11,"deserialize_unit","","",49,[[],["result",4]]],[11,"deserialize_unit_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",49,[[],["result",4]]],[11,"deserialize_tuple","","",49,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",49,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",49,[[],["result",4]]],[11,"deserialize_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",49,[[],["result",4]]],[11,"deserialize_ignored_any","","",49,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",1,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",2,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",3,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",4,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[["usize",15]],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",5,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"deserialize_any","","",6,[[],["result",4]]],[11,"deserialize_enum","","",6,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",6,[[],["result",4]]],[11,"deserialize_i8","","",6,[[],["result",4]]],[11,"deserialize_i16","","",6,[[],["result",4]]],[11,"deserialize_i32","","",6,[[],["result",4]]],[11,"deserialize_i64","","",6,[[],["result",4]]],[11,"deserialize_i128","","",6,[[],["result",4]]],[11,"deserialize_u8","","",6,[[],["result",4]]],[11,"deserialize_u16","","",6,[[],["result",4]]],[11,"deserialize_u32","","",6,[[],["result",4]]],[11,"deserialize_u64","","",6,[[],["result",4]]],[11,"deserialize_u128","","",6,[[],["result",4]]],[11,"deserialize_f32","","",6,[[],["result",4]]],[11,"deserialize_f64","","",6,[[],["result",4]]],[11,"deserialize_char","","",6,[[],["result",4]]],[11,"deserialize_str","","",6,[[],["result",4]]],[11,"deserialize_string","","",6,[[],["result",4]]],[11,"deserialize_bytes","","",6,[[],["result",4]]],[11,"deserialize_byte_buf","","",6,[[],["result",4]]],[11,"deserialize_option","","",6,[[],["result",4]]],[11,"deserialize_unit","","",6,[[],["result",4]]],[11,"deserialize_unit_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",6,[[],["result",4]]],[11,"deserialize_tuple","","",6,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",6,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",6,[[],["result",4]]],[11,"deserialize_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",6,[[],["result",4]]],[11,"deserialize_ignored_any","","",6,[[],["result",4]]],[11,"expecting","serde::de","",50,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",50,[[["bool",15]],["result",4]]],[11,"visit_i64","","",50,[[["i64",15]],["result",4]]],[11,"visit_i128","","",50,[[["i128",15]],["result",4]]],[11,"visit_u64","","",50,[[["u64",15]],["result",4]]],[11,"visit_u128","","",50,[[["u128",15]],["result",4]]],[11,"visit_f64","","",50,[[["f64",15]],["result",4]]],[11,"visit_str","","",50,[[["str",15]],["result",4]]],[11,"visit_none","","",50,[[],["result",4]]],[11,"visit_some","","",50,[[],["result",4]]],[11,"visit_newtype_struct","","",50,[[],["result",4]]],[11,"visit_unit","","",50,[[],["result",4]]],[11,"visit_seq","","",50,[[],["result",4]]],[11,"visit_map","","",50,[[],["result",4]]],[11,"visit_bytes","","",50,[[],["result",4]]],[11,"visit_enum","","",50,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",3,[[],[["option",4],["result",4]]]],[11,"size_hint","","",3,[[],[["usize",15],["option",4]]]],[11,"next_element_seed","","",5,[[],[["result",4],["option",4]]]],[11,"size_hint","","",5,[[],[["usize",15],["option",4]]]],[11,"next_key_seed","","",5,[[],[["result",4],["option",4]]]],[11,"next_value_seed","","",5,[[],["result",4]]],[11,"next_entry_seed","","",5,[[],[["option",4],["result",4]]]],[11,"size_hint","","",5,[[],[["usize",15],["option",4]]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",0,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",49,[[],["result",4]]],[11,"variant_seed","","",6,[[],["result",4]]],[11,"serialize_element","serde::ser","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_element","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_key","","",51,[[],["result",4]]],[11,"serialize_value","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[["str",15]],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[["str",15]],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"custom","serde::de::value","",29,[[]]],[11,"custom","","",29,[[]]],[11,"clone","","",29,[[],["error",3]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[],["seqdeserializer",3]]],[11,"clone","","",4,[[],["seqaccessdeserializer",3]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",50,[[],["ignoredany",3]]],[11,"clone","","",8,[[],["unexpected",4]]],[11,"default","","",50,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",29,[[["error",3]],["bool",15]]],[11,"ne","","",29,[[["error",3]],["bool",15]]],[11,"eq","serde::de","",8,[[["unexpected",4]],["bool",15]]],[11,"ne","","",8,[[["unexpected",4]],["bool",15]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",29,[[],["str",15]]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"serde_json":{"doc":"Serde JSONJSON is a ubiquitous open-standard format that …","i":[[0,"de","serde_json","Deserialize JSON data to a Rust data structure.",null,null],[8,"Read","serde_json::de","Trait used by the deserializer for iterating over input. …",null,null],[3,"SliceRead","","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[11,"new","","Create a JSON deserializer from one of the possible …",0,[[]]],[11,"from_reader","","Creates a JSON deserializer from an <code>io::Read</code>.",0,[[]]],[11,"from_slice","","Creates a JSON deserializer from a <code>&[u8]</code>.",0,[[]]],[11,"from_str","","Creates a JSON deserializer from a <code>&str</code>.",0,[[["str",15]]]],[11,"end","","The <code>Deserializer::end</code> method should be called after a …",0,[[],["result",6]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of …",0,[[],["streamdeserializer",3]]],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON …",null,null],[11,"new","","Create a JSON stream deserializer from one of the …",1,[[]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a …",1,[[],["usize",15]]],[5,"from_reader","","Deserialize an instance of type <code>T</code> from an IO stream of …",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type <code>T</code> from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type <code>T</code> from a string of JSON …",null,[[["str",15]],["result",6]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur …",null,null],[6,"Result","","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.",null,null],[11,"line","","One-based line number at which the error was detected.",2,[[],["usize",15]]],[11,"column","","One-based column number at which the error was detected.",2,[[],["usize",15]]],[11,"classify","","Categorizes the cause of this error.",2,[[],["category",4]]],[11,"is_io","","Returns true if this error was caused by a failure to …",2,[[],["bool",15]]],[11,"is_syntax","","Returns true if this error was caused by input that was …",2,[[],["bool",15]]],[11,"is_data","","Returns true if this error was caused by input data that …",2,[[],["bool",15]]],[11,"is_eof","","Returns true if this error was caused by prematurely …",2,[[],["bool",15]]],[4,"Category","","Categorizes the cause of a <code>serde_json::Error</code>.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes …",3,null],[13,"Syntax","","The error was caused by input that was not syntactically …",3,null],[13,"Data","","The error was caused by input data that was semantically …",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of …",3,null],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[11,"new","","Makes a new empty Map.",4,[[]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",4,[[["usize",15]]]],[11,"clear","","Clears the map, removing all values.",4,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",4,[[],[["value",4],["option",4]]]],[11,"contains_key","","Returns true if the map contains a value for the …",4,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",4,[[],[["value",4],["option",4]]]],[11,"insert","","Inserts a key-value pair into the map.",4,[[["string",3],["value",4]],[["value",4],["option",4]]]],[11,"remove","","Removes a key from the map, returning the value at the …",4,[[],[["value",4],["option",4]]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",4,[[],["option",4]]],[11,"append","","Moves all elements from other into Self, leaving other …",4,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",4,[[],["entry",4]]],[11,"len","","Returns the number of elements in the map.",4,[[],["usize",15]]],[11,"is_empty","","Returns true if the map contains no elements.",4,[[],["bool",15]]],[11,"iter","","Gets an iterator over the entries of the map.",4,[[],["iter",3]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",4,[[],["itermut",3]]],[11,"keys","","Gets an iterator over the keys of the map.",4,[[],["keys",3]]],[11,"values","","Gets an iterator over the values of the map.",4,[[],["values",3]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",4,[[],["valuesmut",3]]],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[3,"VacantEntry","","A vacant Entry. It is part of the <code>Entry</code> enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the <code>Entry</code> enum.",null,null],[11,"key","","Returns a reference to this entry\'s key.",5,[[],["string",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",5,[[["value",4]],["value",4]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",5,[[],["value",4]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",5,[[]]],[11,"key","","Gets a reference to the key that would be used when …",6,[[],["string",3]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",6,[[["value",4]],["value",4]]],[11,"key","","Gets a reference to the key in the entry.",7,[[],["string",3]]],[11,"get","","Gets a reference to the value in the entry.",7,[[],["value",4]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",7,[[],["value",4]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",7,[[],["value",4]]],[11,"insert","","Sets the value of the entry with the <code>OccupiedEntry</code>\'s key, …",7,[[["value",4]],["value",4]]],[11,"remove","","Takes the value of the entry out of the map, and returns …",7,[[],["value",4]]],[3,"Iter","","An iterator over a serde_json::Map\'s entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map\'s entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map\'s entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map\'s keys.",null,null],[3,"Values","","An iterator over a serde_json::Map\'s values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map\'s values.",null,null],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[11,"new","","Creates a new JSON serializer.",8,[[]]],[11,"pretty","","Creates a new JSON pretty print serializer.",8,[[]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written …",8,[[]]],[11,"into_inner","","Unwrap the <code>Writer</code> from the <code>Serializer</code>.",8,[[]]],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote <code>\\\"</code>",9,null],[13,"ReverseSolidus","","An escaped reverse solidus <code>\\\\</code>",9,null],[13,"Solidus","","An escaped solidus <code>/</code>",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as <code>\\\\b</code>)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as <code>\\\\f</code>)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as <code>\\\\n</code>)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as …",9,null],[13,"Tab","","An escaped tab character (usually escaped as <code>\\\\t</code>)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped …",9,null],[8,"Formatter","","This trait abstracts away serializing the JSON control …",null,null],[11,"write_null","","Writes a <code>null</code> value to the specified writer.",10,[[],["result",6]]],[11,"write_bool","","Writes a <code>true</code> or <code>false</code> value to the specified writer.",10,[[["bool",15]],["result",6]]],[11,"write_i8","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[["i8",15]],["result",6]]],[11,"write_i16","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[["i16",15]],["result",6]]],[11,"write_i32","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[["i32",15]],["result",6]]],[11,"write_i64","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[["i64",15]],["result",6]]],[11,"write_u8","","Writes an integer value like <code>123</code> to the specified writer.",10,[[["u8",15]],["result",6]]],[11,"write_u16","","Writes an integer value like <code>123</code> to the specified writer.",10,[[["u16",15]],["result",6]]],[11,"write_u32","","Writes an integer value like <code>123</code> to the specified writer.",10,[[["u32",15]],["result",6]]],[11,"write_u64","","Writes an integer value like <code>123</code> to the specified writer.",10,[[["u64",15]],["result",6]]],[11,"write_f32","","Writes a floating point value like <code>-31.26e+12</code> to the …",10,[[["f32",15]],["result",6]]],[11,"write_f64","","Writes a floating point value like <code>-31.26e+12</code> to the …",10,[[["f64",15]],["result",6]]],[11,"write_number_str","","Writes a number that has already been rendered to a …",10,[[["str",15]],["result",6]]],[11,"begin_string","","Called before each series of <code>write_string_fragment</code> and …",10,[[],["result",6]]],[11,"end_string","","Called after each series of <code>write_string_fragment</code> and …",10,[[],["result",6]]],[11,"write_string_fragment","","Writes a string fragment that doesn\'t need any escaping …",10,[[["str",15]],["result",6]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["charescape",4]],["result",6]]],[11,"begin_array","","Called before every array.  Writes a <code>[</code> to the specified …",10,[[],["result",6]]],[11,"end_array","","Called after every array.  Writes a <code>]</code> to the specified …",10,[[],["result",6]]],[11,"begin_array_value","","Called before every array value.  Writes a <code>,</code> if needed to …",10,[[["bool",15]],["result",6]]],[11,"end_array_value","","Called after every array value.",10,[[],["result",6]]],[11,"begin_object","","Called before every object.  Writes a <code>{</code> to the specified …",10,[[],["result",6]]],[11,"end_object","","Called after every object.  Writes a <code>}</code> to the specified …",10,[[],["result",6]]],[11,"begin_object_key","","Called before every object key.",10,[[["bool",15]],["result",6]]],[11,"end_object_key","","Called after every object key.  A <code>:</code> should be written to …",10,[[],["result",6]]],[11,"begin_object_value","","Called before every object value.  A <code>:</code> should be written …",10,[[],["result",6]]],[11,"end_object_value","","Called after every object value.",10,[[],["result",6]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn\'t need any escaping …",10,[[["str",15]],["result",6]]],[3,"CompactFormatter","","This structure compacts a JSON value with no extra …",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it …",null,null],[11,"new","","Construct a pretty printer formatter that defaults to …",11,[[]]],[11,"with_indent","","Construct a pretty printer formatter that uses the <code>indent</code> …",11,[[]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO …",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON …",null,[[],["result",6]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["vec",3],["result",6]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["string",3],["result",6]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["string",3],["result",6]]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any …",null,null],[8,"Index","serde_json::value","A type that can be used to index into a <code>serde_json::Value</code>.",null,null],[3,"Serializer","","Serializer whose output is a <code>Value</code>.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating …",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",12,null],[13,"Bool","","Represents a JSON boolean.",12,null],[13,"Number","","Represents a JSON number, whether integer or floating …",12,null],[13,"String","","Represents a JSON string.",12,null],[13,"Array","","Represents a JSON array.",12,null],[13,"Object","","Represents a JSON object.",12,null],[11,"get","","Index into a JSON array or map. A string index can be …",12,[[["index",8]],[["value",4],["option",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index …",12,[[["index",8]],[["value",4],["option",4]]]],[11,"is_object","","Returns true if the <code>Value</code> is an Object. Returns false …",12,[[],["bool",15]]],[11,"as_object","","If the <code>Value</code> is an Object, returns the associated Map. …",12,[[],[["option",4],["map",3]]]],[11,"as_object_mut","","If the <code>Value</code> is an Object, returns the associated mutable …",12,[[],[["option",4],["map",3]]]],[11,"is_array","","Returns true if the <code>Value</code> is an Array. Returns false …",12,[[],["bool",15]]],[11,"as_array","","If the <code>Value</code> is an Array, returns the associated vector. …",12,[[],[["option",4],["vec",3]]]],[11,"as_array_mut","","If the <code>Value</code> is an Array, returns the associated mutable …",12,[[],[["vec",3],["option",4]]]],[11,"is_string","","Returns true if the <code>Value</code> is a String. Returns false …",12,[[],["bool",15]]],[11,"as_str","","If the <code>Value</code> is a String, returns the associated str. …",12,[[],[["option",4],["str",15]]]],[11,"is_number","","Returns true if the <code>Value</code> is a Number. Returns false …",12,[[],["bool",15]]],[11,"is_i64","","Returns true if the <code>Value</code> is an integer between <code>i64::MIN</code> …",12,[[],["bool",15]]],[11,"is_u64","","Returns true if the <code>Value</code> is an integer between zero and …",12,[[],["bool",15]]],[11,"is_f64","","Returns true if the <code>Value</code> is a number that can be …",12,[[],["bool",15]]],[11,"as_i64","","If the <code>Value</code> is an integer, represent it as i64 if …",12,[[],[["i64",15],["option",4]]]],[11,"as_u64","","If the <code>Value</code> is an integer, represent it as u64 if …",12,[[],[["option",4],["u64",15]]]],[11,"as_f64","","If the <code>Value</code> is a number, represent it as f64 if …",12,[[],[["f64",15],["option",4]]]],[11,"is_boolean","","Returns true if the <code>Value</code> is a Boolean. Returns false …",12,[[],["bool",15]]],[11,"as_bool","","If the <code>Value</code> is a Boolean, returns the associated bool. …",12,[[],[["bool",15],["option",4]]]],[11,"is_null","","Returns true if the <code>Value</code> is a Null. Returns false …",12,[[],["bool",15]]],[11,"as_null","","If the <code>Value</code> is a Null, returns (). Returns None …",12,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",12,[[["str",15]],[["value",4],["option",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable …",12,[[["str",15]],[["value",4],["option",4]]]],[11,"take","","Takes the value out of the <code>Value</code>, leaving a <code>Null</code> in its …",12,[[],["value",4]]],[5,"to_value","","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …",null,[[],[["result",4],["value",4],["error",3]]]],[5,"from_value","","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.",null,[[["value",4]],[["error",3],["result",4]]]],[11,"is_i64","","Returns true if the <code>Number</code> is an integer between <code>i64::MIN</code> …",13,[[],["bool",15]]],[11,"is_u64","","Returns true if the <code>Number</code> is an integer between zero and …",13,[[],["bool",15]]],[11,"is_f64","","Returns true if the <code>Number</code> can be represented by f64.",13,[[],["bool",15]]],[11,"as_i64","","If the <code>Number</code> is an integer, represent it as i64 if …",13,[[],[["i64",15],["option",4]]]],[11,"as_u64","","If the <code>Number</code> is an integer, represent it as u64 if …",13,[[],[["option",4],["u64",15]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None …",13,[[],[["f64",15],["option",4]]]],[11,"from_f64","","Converts a finite <code>f64</code> to a <code>Number</code>. Infinite or NaN values …",13,[[["f64",15]],[["number",3],["option",4]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input …",14,[[]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str",15]]]],[5,"from_reader","serde_json","Deserialize an instance of type <code>T</code> from an IO stream of …",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type <code>T</code> from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type <code>T</code> from a string of JSON …",null,[[["str",15]],["result",6]]],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON …",null,null],[3,"Error","","This type represents all possible errors that can occur …",null,null],[6,"Result","","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.",null,null],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["string",3],["result",6]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["string",3],["result",6]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["vec",3],["result",6]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO …",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON …",null,[[],["result",6]]],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[5,"from_value","","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.",null,[[["value",4]],[["error",3],["result",4]]]],[5,"to_value","","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …",null,[[],[["result",4],["value",4],["error",3]]]],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating …",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",12,null],[13,"Bool","","Represents a JSON boolean.",12,null],[13,"Number","","Represents a JSON number, whether integer or floating …",12,null],[13,"String","","Represents a JSON string.",12,null],[13,"Array","","Represents a JSON array.",12,null],[13,"Object","","Represents a JSON object.",12,null],[14,"json","","Construct a <code>serde_json::Value</code> from a JSON literal.",null,null],[11,"from","serde_json::de","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","serde_json","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","serde_json::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_json","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","serde_json::map","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","serde_json","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","serde_json::ser","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","serde_json::value","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","serde_json","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"begin_array","serde_json::ser","",11,[[],["result",6]]],[11,"end_array","","",11,[[],["result",6]]],[11,"begin_array_value","","",11,[[["bool",15]],["result",6]]],[11,"end_array_value","","",11,[[],["result",6]]],[11,"begin_object","","",11,[[],["result",6]]],[11,"end_object","","",11,[[],["result",6]]],[11,"begin_object_key","","",11,[[["bool",15]],["result",6]]],[11,"begin_object_value","","",11,[[],["result",6]]],[11,"end_object_value","","",11,[[],["result",6]]],[11,"next","serde_json::de","",14,[[],[["result",6],["option",4]]]],[11,"peek","","",14,[[],[["result",6],["option",4]]]],[11,"discard","","",14,[[]]],[11,"position","","",14,[[],["position",3]]],[11,"peek_position","","",14,[[],["position",3]]],[11,"byte_offset","","",14,[[],["usize",15]]],[11,"parse_str","","",14,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",14,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",14,[[],["result",6]]],[11,"decode_hex_escape","","",14,[[],[["result",6],["u16",15]]]],[11,"set_failed","","",14,[[["bool",15]]]],[11,"next","","",15,[[],[["result",6],["option",4]]]],[11,"peek","","",15,[[],[["result",6],["option",4]]]],[11,"discard","","",15,[[]]],[11,"position","","",15,[[],["position",3]]],[11,"peek_position","","",15,[[],["position",3]]],[11,"byte_offset","","",15,[[],["usize",15]]],[11,"parse_str","","",15,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",15,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",15,[[],["result",6]]],[11,"decode_hex_escape","","",15,[[],[["result",6],["u16",15]]]],[11,"set_failed","","",15,[[["bool",15]]]],[11,"next","","",16,[[],[["result",6],["option",4]]]],[11,"peek","","",16,[[],[["result",6],["option",4]]]],[11,"discard","","",16,[[]]],[11,"position","","",16,[[],["position",3]]],[11,"peek_position","","",16,[[],["position",3]]],[11,"byte_offset","","",16,[[],["usize",15]]],[11,"parse_str","","",16,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",16,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",16,[[],["result",6]]],[11,"decode_hex_escape","","",16,[[],[["result",6],["u16",15]]]],[11,"set_failed","","",16,[[["bool",15]]]],[11,"from","serde_json","",12,[[["i8",15]]]],[11,"from","","",12,[[["i16",15]]]],[11,"from","","",12,[[["i32",15]]]],[11,"from","","",12,[[["i64",15]]]],[11,"from","","",12,[[["isize",15]]]],[11,"from","","",12,[[["u8",15]]]],[11,"from","","",12,[[["u16",15]]]],[11,"from","","",12,[[["u32",15]]]],[11,"from","","",12,[[["u64",15]]]],[11,"from","","",12,[[["usize",15]]]],[11,"from","","Convert 32-bit floating point number to <code>Value</code>",12,[[["f32",15]]]],[11,"from","","Convert 64-bit floating point number to <code>Value</code>",12,[[["f64",15]]]],[11,"from","","Convert boolean to <code>Value</code>",12,[[["bool",15]]]],[11,"from","","Convert <code>String</code> to <code>Value</code>",12,[[["string",3]]]],[11,"from","","Convert string slice to <code>Value</code>",12,[[["str",15]]]],[11,"from","","Convert copy-on-write string to <code>Value</code>",12,[[["cow",4],["str",15]]]],[11,"from","","Convert <code>Number</code> to <code>Value</code>",12,[[["number",3]]]],[11,"from","","Convert map (with string keys) to <code>Value</code>",12,[[["string",3],["map",3],["value",4]]]],[11,"from","","Convert a <code>Vec</code> to <code>Value</code>",12,[[["vec",3]]]],[11,"from","","Convert a slice to <code>Value</code>",12,[[]]],[11,"from","","Convert <code>()</code> to <code>Value</code>",12,[[]]],[11,"from","serde_json::value","",13,[[["u8",15]]]],[11,"from","","",13,[[["u16",15]]]],[11,"from","","",13,[[["u32",15]]]],[11,"from","","",13,[[["u64",15]]]],[11,"from","","",13,[[["usize",15]]]],[11,"from","","",13,[[["i8",15]]]],[11,"from","","",13,[[["i16",15]]]],[11,"from","","",13,[[["i32",15]]]],[11,"from","","",13,[[["i64",15]]]],[11,"from","","",13,[[["isize",15]]]],[11,"next_back","serde_json::map","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"len","","",17,[[],["usize",15]]],[11,"len","","",18,[[],["usize",15]]],[11,"len","","",19,[[],["usize",15]]],[11,"len","","",20,[[],["usize",15]]],[11,"len","","",21,[[],["usize",15]]],[11,"len","","",22,[[],["usize",15]]],[11,"extend","serde_json","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"next","","",1,[[],[["option",4],["result",6]]]],[11,"next","serde_json::map","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"clone","serde_json::error","",3,[[],["category",4]]],[11,"clone","serde_json","",4,[[]]],[11,"clone","serde_json::ser","",23,[[],["compactformatter",3]]],[11,"clone","","",11,[[],["prettyformatter",3]]],[11,"clone","serde_json","",12,[[],["value",4]]],[11,"clone","serde_json::value","",13,[[],["number",3]]],[11,"default","serde_json","",4,[[]]],[11,"default","serde_json::ser","",11,[[]]],[11,"default","serde_json","",12,[[],["value",4]]],[11,"eq","serde_json::error","",3,[[["category",4]],["bool",15]]],[11,"eq","serde_json","",4,[[],["bool",15]]],[11,"eq","","",12,[[["value",4]],["bool",15]]],[11,"ne","","",12,[[["value",4]],["bool",15]]],[11,"eq","","",12,[[["str",15]],["bool",15]]],[11,"eq","","",12,[[["str",15]],["bool",15]]],[11,"eq","","",12,[[["string",3]],["bool",15]]],[11,"eq","","",12,[[["i8",15]],["bool",15]]],[11,"eq","","",12,[[["i16",15]],["bool",15]]],[11,"eq","","",12,[[["i32",15]],["bool",15]]],[11,"eq","","",12,[[["i64",15]],["bool",15]]],[11,"eq","","",12,[[["isize",15]],["bool",15]]],[11,"eq","","",12,[[["u8",15]],["bool",15]]],[11,"eq","","",12,[[["u16",15]],["bool",15]]],[11,"eq","","",12,[[["u32",15]],["bool",15]]],[11,"eq","","",12,[[["u64",15]],["bool",15]]],[11,"eq","","",12,[[["usize",15]],["bool",15]]],[11,"eq","","",12,[[["f32",15]],["bool",15]]],[11,"eq","","",12,[[["f64",15]],["bool",15]]],[11,"eq","","",12,[[["bool",15]],["bool",15]]],[11,"eq","serde_json::value","",13,[[["number",3]],["bool",15]]],[11,"ne","","",13,[[["number",3]],["bool",15]]],[11,"fmt","serde_json::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","serde_json::ser","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",13,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","Display a JSON value as a string.",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",13,[[["formatter",3]],["result",6]]],[11,"index","serde_json","",4,[[],["value",4]]],[11,"index","","Index into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> …",12,[[],["value",4]]],[11,"index_mut","","",4,[[],["value",4]]],[11,"index_mut","","Write into a <code>serde_json::Value</code> using the syntax …",12,[[],["value",4]]],[11,"from_str","serde_json::value","",13,[[["str",15]],["result",4]]],[11,"from_str","serde_json","",12,[[["str",15]],[["result",4],["value",4],["error",3]]]],[11,"from_iter","","",4,[[]]],[11,"from_iter","","Convert an iteratable type to a <code>Value</code>",12,[[["intoiterator",8]]]],[11,"from_iter","","Convert an iteratable type to a <code>Value</code>",12,[[["intoiterator",8]]]],[11,"source","","",2,[[],[["option",4],["error",8]]]],[11,"deserialize_any","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_option","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_enum","","",12,[[["str",15]],[["error",3],["result",4]]]],[11,"deserialize_newtype_struct","","",12,[[["str",15]],[["error",3],["result",4]]]],[11,"deserialize_bool","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_char","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_str","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_string","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_bytes","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_byte_buf","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_unit","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_unit_struct","","",12,[[["str",15]],[["error",3],["result",4]]]],[11,"deserialize_seq","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple","","",12,[[["usize",15]],[["error",3],["result",4]]]],[11,"deserialize_tuple_struct","","",12,[[["usize",15],["str",15]],[["error",3],["result",4]]]],[11,"deserialize_map","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_struct","","",12,[[["str",15]],[["error",3],["result",4]]]],[11,"deserialize_identifier","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_ignored_any","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_any","serde_json::value","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_bool","","",13,[[],["result",4]]],[11,"deserialize_char","","",13,[[],["result",4]]],[11,"deserialize_str","","",13,[[],["result",4]]],[11,"deserialize_string","","",13,[[],["result",4]]],[11,"deserialize_bytes","","",13,[[],["result",4]]],[11,"deserialize_byte_buf","","",13,[[],["result",4]]],[11,"deserialize_option","","",13,[[],["result",4]]],[11,"deserialize_unit","","",13,[[],["result",4]]],[11,"deserialize_unit_struct","","",13,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",13,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",13,[[],["result",4]]],[11,"deserialize_tuple","","",13,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",13,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",13,[[],["result",4]]],[11,"deserialize_struct","","",13,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",13,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",13,[[],["result",4]]],[11,"deserialize_ignored_any","","",13,[[],["result",4]]],[11,"into_deserializer","serde_json","",12,[[]]],[11,"custom","","",2,[[["display",8]],["error",3]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","serde_json::value","",13,[[],["result",4]]],[11,"serialize_bool","","",24,[[["bool",15]],[["result",6],["value",4]]]],[11,"serialize_i8","","",24,[[["i8",15]],[["result",6],["value",4]]]],[11,"serialize_i16","","",24,[[["i16",15]],[["result",6],["value",4]]]],[11,"serialize_i32","","",24,[[["i32",15]],[["result",6],["value",4]]]],[11,"serialize_i64","","",24,[[["i64",15]],[["result",6],["value",4]]]],[11,"serialize_u8","","",24,[[["u8",15]],[["result",6],["value",4]]]],[11,"serialize_u16","","",24,[[["u16",15]],[["result",6],["value",4]]]],[11,"serialize_u32","","",24,[[["u32",15]],[["result",6],["value",4]]]],[11,"serialize_u64","","",24,[[["u64",15]],[["result",6],["value",4]]]],[11,"serialize_f32","","",24,[[["f32",15]],[["result",6],["value",4]]]],[11,"serialize_f64","","",24,[[["f64",15]],[["result",6],["value",4]]]],[11,"serialize_char","","",24,[[["char",15]],[["result",6],["value",4]]]],[11,"serialize_str","","",24,[[["str",15]],[["result",6],["value",4]]]],[11,"serialize_bytes","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_unit","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_unit_struct","","",24,[[["str",15]],[["result",6],["value",4]]]],[11,"serialize_unit_variant","","",24,[[["u32",15],["str",15]],[["result",6],["value",4]]]],[11,"serialize_newtype_struct","","",24,[[["str",15]],[["result",6],["value",4]]]],[11,"serialize_newtype_variant","","",24,[[["u32",15],["str",15]],[["result",6],["value",4]]]],[11,"serialize_none","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_some","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_seq","","",24,[[["usize",15],["option",4]],["result",6]]],[11,"serialize_tuple","","",24,[[["usize",15]],["result",6]]],[11,"serialize_tuple_struct","","",24,[[["usize",15],["str",15]],["result",6]]],[11,"serialize_tuple_variant","","",24,[[["u32",15],["str",15],["usize",15]],["result",6]]],[11,"serialize_map","","",24,[[["usize",15],["option",4]],["result",6]]],[11,"serialize_struct","","",24,[[["usize",15],["str",15]],["result",6]]],[11,"serialize_struct_variant","","",24,[[["u32",15],["str",15],["usize",15]],["result",6]]],[11,"collect_str","","",24,[[],[["result",6],["value",4]]]],[11,"deserialize","serde_json","",4,[[],["result",4]]],[11,"deserialize","","",12,[[],[["value",4],["result",4]]]],[11,"deserialize","serde_json::value","",13,[[],[["result",4],["number",3]]]],[11,"custom","serde_json","",2,[[["display",8]],["error",3]]],[11,"invalid_type","","",2,[[["expected",8],["unexpected",4]]]]],"p":[[3,"Deserializer"],[3,"StreamDeserializer"],[3,"Error"],[4,"Category"],[3,"Map"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Serializer"],[4,"CharEscape"],[8,"Formatter"],[3,"PrettyFormatter"],[4,"Value"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]},\
"slab":{"doc":"Pre-allocated storage for a uniform data type.","i":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",null,null],[3,"VacantEntry","","A handle to a vacant entry in a <code>Slab</code>.",null,null],[3,"IntoIter","","A consuming iterator over the values stored in a <code>Slab</code>",null,null],[3,"Iter","","An iterator over the values stored in the <code>Slab</code>",null,null],[3,"IterMut","","A mutable iterator over the values stored in the <code>Slab</code>",null,null],[3,"Drain","","A draining iterator for <code>Slab</code>",null,null],[11,"new","","Construct a new, empty <code>Slab</code>.",0,[[],["slab",3]]],[11,"with_capacity","","Construct a new, empty <code>Slab</code> with the specified capacity.",0,[[["usize",15]],["slab",3]]],[11,"capacity","","Return the number of values the slab can store without …",0,[[],["usize",15]]],[11,"reserve","","Reserve capacity for at least <code>additional</code> more values to …",0,[[["usize",15]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly …",0,[[["usize",15]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible …",0,[[]]],[11,"compact","","Reduce the capacity as much as possible, changing the key …",0,[[]]],[11,"clear","","Clear the slab of all values.",0,[[]]],[11,"len","","Return the number of stored values.",0,[[],["usize",15]]],[11,"is_empty","","Return <code>true</code> if there are no values stored in the slab.",0,[[],["bool",15]]],[11,"iter","","Return an iterator over the slab.",0,[[],["iter",3]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[],["itermut",3]]],[11,"get","","Return a reference to the value associated with the given …",0,[[["usize",15]],["option",4]]],[11,"get_mut","","Return a mutable reference to the value associated with …",0,[[["usize",15]],["option",4]]],[11,"get2_mut","","Return two mutable references to the values associated …",0,[[["usize",15]],["option",4]]],[11,"get_unchecked","","Return a reference to the value associated with the given …",0,[[["usize",15]]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with …",0,[[["usize",15]]]],[11,"get2_unchecked_mut","","Return two mutable references to the values associated …",0,[[["usize",15]]]],[11,"key_of","","Get the key for an element in the slab.",0,[[],["usize",15]]],[11,"insert","","Insert a value in the slab, returning key assigned to the …",0,[[],["usize",15]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further …",0,[[],["vacantentry",3]]],[11,"try_remove","","Tries to remove the value associated with the given key, …",0,[[["usize",15]],["option",4]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["usize",15]]]],[11,"contains","","Return <code>true</code> if a value is associated with the given key.",0,[[["usize",15]],["bool",15]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[]]],[11,"drain","","Return a draining iterator that removes all elements from …",0,[[],["drain",3]]],[11,"insert","","Insert a value in the entry, returning a mutable …",1,[[]]],[11,"key","","Return the key associated with this entry.",1,[[],["usize",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next_back","","",3,[[],["option",4]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"len","","",2,[[],["usize",15]]],[11,"len","","",3,[[],["usize",15]]],[11,"len","","",4,[[],["usize",15]]],[11,"len","","",5,[[],["usize",15]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"clone","","",0,[[],["slab",3]]],[11,"clone","","",3,[[]]],[11,"default","","",0,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"index","","",0,[[["usize",15]]]],[11,"index_mut","","",0,[[["usize",15]]]],[11,"from_iter","","",0,[[]]]],"p":[[3,"Slab"],[3,"VacantEntry"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","i":[[4,"CollectionAllocErr","smallvec","Error type for APIs with fallible heap allocation",null,null],[13,"CapacityOverflow","","Overflow <code>usize::MAX</code> or other error during size computation",0,null],[13,"AllocErr","","The allocator return an error",0,null],[12,"layout","smallvec::CollectionAllocErr","The layout that was passed to the allocator",1,null],[3,"Drain","smallvec","An iterator that removes the items from a <code>SmallVec</code> and …",null,null],[3,"SmallVec","","A <code>Vec</code>-like container that can store a small number of …",null,null],[11,"new","","Construct an empty vector",2,[[],["smallvec",3]]],[11,"with_capacity","","Construct an empty vector with enough capacity …",2,[[["usize",15]]]],[11,"from_vec","","Construct a new <code>SmallVec</code> from a <code>Vec<A::Item></code>.",2,[[["vec",3]],["smallvec",3]]],[11,"from_buf","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …",2,[[],["smallvec",3]]],[11,"from_buf_and_len","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …",2,[[["usize",15]],["smallvec",3]]],[11,"from_buf_and_len_unchecked","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …",2,[[["usize",15],["maybeuninit",19]],["smallvec",3]]],[11,"set_len","","Sets the length of a vector.",2,[[["usize",15]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",2,[[],["usize",15]]],[11,"len","","The number of elements stored in the vector",2,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the vector is empty",2,[[],["bool",15]]],[11,"capacity","","The number of items the vector can hold without …",2,[[],["usize",15]]],[11,"spilled","","Returns <code>true</code> if the data has spilled into a separate …",2,[[],["bool",15]]],[11,"drain","","Creates a draining iterator that removes the specified …",2,[[],["drain",3]]],[11,"push","","Append an item to the vector.",2,[[]]],[11,"pop","","Remove an item from the end of the vector and return it, …",2,[[],["option",4]]],[11,"append","","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …",2,[[["smallvec",3]]]],[11,"grow","","Re-allocate to set the capacity to …",2,[[["usize",15]]]],[11,"try_grow","","Re-allocate to set the capacity to …",2,[[["usize",15]],[["collectionallocerr",4],["result",4]]]],[11,"reserve","","Reserve capacity for <code>additional</code> more elements to be …",2,[[["usize",15]]]],[11,"try_reserve","","Reserve capacity for <code>additional</code> more elements to be …",2,[[["usize",15]],[["collectionallocerr",4],["result",4]]]],[11,"reserve_exact","","Reserve the minimum capacity for <code>additional</code> more elements …",2,[[["usize",15]]]],[11,"try_reserve_exact","","Reserve the minimum capacity for <code>additional</code> more elements …",2,[[["usize",15]],[["collectionallocerr",4],["result",4]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",2,[[]]],[11,"truncate","","Shorten the vector, keeping the first <code>len</code> elements and …",2,[[["usize",15]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",2,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",2,[[]]],[11,"swap_remove","","Remove the element at position <code>index</code>, replacing it with …",2,[[["usize",15]]]],[11,"clear","","Remove all elements from the vector.",2,[[]]],[11,"remove","","Remove and return the element at position <code>index</code>, shifting …",2,[[["usize",15]]]],[11,"insert","","Insert an element at position <code>index</code>, shifting all …",2,[[["usize",15]]]],[11,"insert_many","","Insert multiple elements at position <code>index</code>, shifting all …",2,[[["usize",15],["intoiterator",8]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the …",2,[[],["vec",3]]],[11,"into_boxed_slice","","Converts a <code>SmallVec</code> into a <code>Box<[T]></code> without reallocating …",2,[[],["box",3]]],[11,"into_inner","","Convert the SmallVec into an <code>A</code> if possible. Otherwise …",2,[[],["result",4]]],[11,"retain","","Retains only the elements specified by the predicate.",2,[[["fnmut",8]]]],[11,"dedup","","Removes consecutive duplicate elements.",2,[[]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given …",2,[[]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",2,[[]]],[11,"resize_with","","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …",2,[[["usize",15]]]],[11,"from_raw_parts","","Creates a <code>SmallVec</code> directly from the raw components of …",2,[[["usize",15]],["smallvec",3]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",2,[[]]],[11,"as_mut_ptr","","Returns a raw mutable pointer to the vector\'s buffer.",2,[[]]],[11,"from_slice","","Copy the elements from a slice into a new <code>SmallVec</code>.",2,[[]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position …",2,[[["usize",15]]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",2,[[]]],[11,"resize","","Resizes the vector so that its length is equal to <code>len</code>.",2,[[["usize",15]]]],[11,"from_elem","","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.",2,[[["usize",15]]]],[3,"IntoIter","","An iterator that consumes a <code>SmallVec</code> and yields its items …",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",3,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable …",3,[[]]],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array\'s elements.",4,null],[10,"size","","Returns the number of items the array can hold.",4,[[],["usize",15]]],[8,"ToSmallVec","","Convenience trait for constructing a <code>SmallVec</code>",null,null],[10,"to_smallvec","","Construct a new <code>SmallVec</code> from a slice.",5,[[],["smallvec",3]]],[14,"smallvec","","Creates a [<code>SmallVec</code>] containing the arguments.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"from","","",0,[[["layouterr",6]]]],[11,"from","","",2,[[],["smallvec",3]]],[11,"from","","",2,[[["vec",3]],["smallvec",3]]],[11,"from","","",2,[[],["smallvec",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[["smallvec",3]],["bool",15]]],[11,"cmp","","",2,[[["smallvec",3]],["ordering",4]]],[11,"partial_cmp","","",2,[[["smallvec",3]],[["option",4],["ordering",4]]]],[11,"drop","","",6,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",3,[[]]],[11,"index","","",2,[[]]],[11,"index_mut","","",2,[[]]],[11,"hash","","",2,[[]]],[11,"len","","",6,[[],["usize",15]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"from_iter","","",2,[[["intoiterator",8]],["smallvec",3]]],[11,"as_ref","","",2,[[]]],[11,"as_mut","","",2,[[]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",3,[[],["option",4]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"into_iter","","",2,[[]]],[11,"extend","","",2,[[["intoiterator",8]]]],[11,"clone","","",2,[[],["smallvec",3]]],[11,"clone_from","","",2,[[]]],[11,"clone","","",3,[[],["intoiter",3]]],[11,"default","","",2,[[],["smallvec",3]]]],"p":[[4,"CollectionAllocErr"],[13,"AllocErr"],[3,"SmallVec"],[3,"IntoIter"],[8,"Array"],[8,"ToSmallVec"],[3,"Drain"]]},\
"syn":{"doc":"github crates-io docs-rs","i":[[0,"token","syn","Tokens representing Rust punctuation, keywords, and …",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","<code>_</code>",null,null],[12,"spans","","",0,null],[3,"Abstract","","<code>abstract</code>",null,null],[12,"span","","",1,null],[3,"As","","<code>as</code>",null,null],[12,"span","","",2,null],[3,"Async","","<code>async</code>",null,null],[12,"span","","",3,null],[3,"Auto","","<code>auto</code>",null,null],[12,"span","","",4,null],[3,"Await","","<code>await</code>",null,null],[12,"span","","",5,null],[3,"Become","","<code>become</code>",null,null],[12,"span","","",6,null],[3,"Box","","<code>box</code>",null,null],[12,"span","","",7,null],[3,"Break","","<code>break</code>",null,null],[12,"span","","",8,null],[3,"Const","","<code>const</code>",null,null],[12,"span","","",9,null],[3,"Continue","","<code>continue</code>",null,null],[12,"span","","",10,null],[3,"Crate","","<code>crate</code>",null,null],[12,"span","","",11,null],[3,"Default","","<code>default</code>",null,null],[12,"span","","",12,null],[3,"Do","","<code>do</code>",null,null],[12,"span","","",13,null],[3,"Dyn","","<code>dyn</code>",null,null],[12,"span","","",14,null],[3,"Else","","<code>else</code>",null,null],[12,"span","","",15,null],[3,"Enum","","<code>enum</code>",null,null],[12,"span","","",16,null],[3,"Extern","","<code>extern</code>",null,null],[12,"span","","",17,null],[3,"Final","","<code>final</code>",null,null],[12,"span","","",18,null],[3,"Fn","","<code>fn</code>",null,null],[12,"span","","",19,null],[3,"For","","<code>for</code>",null,null],[12,"span","","",20,null],[3,"If","","<code>if</code>",null,null],[12,"span","","",21,null],[3,"Impl","","<code>impl</code>",null,null],[12,"span","","",22,null],[3,"In","","<code>in</code>",null,null],[12,"span","","",23,null],[3,"Let","","<code>let</code>",null,null],[12,"span","","",24,null],[3,"Loop","","<code>loop</code>",null,null],[12,"span","","",25,null],[3,"Macro","","<code>macro</code>",null,null],[12,"span","","",26,null],[3,"Match","","<code>match</code>",null,null],[12,"span","","",27,null],[3,"Mod","","<code>mod</code>",null,null],[12,"span","","",28,null],[3,"Move","","<code>move</code>",null,null],[12,"span","","",29,null],[3,"Mut","","<code>mut</code>",null,null],[12,"span","","",30,null],[3,"Override","","<code>override</code>",null,null],[12,"span","","",31,null],[3,"Priv","","<code>priv</code>",null,null],[12,"span","","",32,null],[3,"Pub","","<code>pub</code>",null,null],[12,"span","","",33,null],[3,"Ref","","<code>ref</code>",null,null],[12,"span","","",34,null],[3,"Return","","<code>return</code>",null,null],[12,"span","","",35,null],[3,"SelfType","","<code>Self</code>",null,null],[12,"span","","",36,null],[3,"SelfValue","","<code>self</code>",null,null],[12,"span","","",37,null],[3,"Static","","<code>static</code>",null,null],[12,"span","","",38,null],[3,"Struct","","<code>struct</code>",null,null],[12,"span","","",39,null],[3,"Super","","<code>super</code>",null,null],[12,"span","","",40,null],[3,"Trait","","<code>trait</code>",null,null],[12,"span","","",41,null],[3,"Try","","<code>try</code>",null,null],[12,"span","","",42,null],[3,"Type","","<code>type</code>",null,null],[12,"span","","",43,null],[3,"Typeof","","<code>typeof</code>",null,null],[12,"span","","",44,null],[3,"Union","","<code>union</code>",null,null],[12,"span","","",45,null],[3,"Unsafe","","<code>unsafe</code>",null,null],[12,"span","","",46,null],[3,"Unsized","","<code>unsized</code>",null,null],[12,"span","","",47,null],[3,"Use","","<code>use</code>",null,null],[12,"span","","",48,null],[3,"Virtual","","<code>virtual</code>",null,null],[12,"span","","",49,null],[3,"Where","","<code>where</code>",null,null],[12,"span","","",50,null],[3,"While","","<code>while</code>",null,null],[12,"span","","",51,null],[3,"Yield","","<code>yield</code>",null,null],[12,"span","","",52,null],[3,"Add","","<code>+</code>",null,null],[12,"spans","","",53,null],[3,"AddEq","","<code>+=</code>",null,null],[12,"spans","","",54,null],[3,"And","","<code>&</code>",null,null],[12,"spans","","",55,null],[3,"AndAnd","","<code>&&</code>",null,null],[12,"spans","","",56,null],[3,"AndEq","","<code>&=</code>",null,null],[12,"spans","","",57,null],[3,"At","","<code>@</code>",null,null],[12,"spans","","",58,null],[3,"Bang","","<code>!</code>",null,null],[12,"spans","","",59,null],[3,"Caret","","<code>^</code>",null,null],[12,"spans","","",60,null],[3,"CaretEq","","<code>^=</code>",null,null],[12,"spans","","",61,null],[3,"Colon","","<code>:</code>",null,null],[12,"spans","","",62,null],[3,"Colon2","","<code>::</code>",null,null],[12,"spans","","",63,null],[3,"Comma","","<code>,</code>",null,null],[12,"spans","","",64,null],[3,"Div","","<code>/</code>",null,null],[12,"spans","","",65,null],[3,"DivEq","","<code>/=</code>",null,null],[12,"spans","","",66,null],[3,"Dollar","","<code>$</code>",null,null],[12,"spans","","",67,null],[3,"Dot","","<code>.</code>",null,null],[12,"spans","","",68,null],[3,"Dot2","","<code>..</code>",null,null],[12,"spans","","",69,null],[3,"Dot3","","<code>...</code>",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","<code>..=</code>",null,null],[12,"spans","","",71,null],[3,"Eq","","<code>=</code>",null,null],[12,"spans","","",72,null],[3,"EqEq","","<code>==</code>",null,null],[12,"spans","","",73,null],[3,"Ge","","<code>>=</code>",null,null],[12,"spans","","",74,null],[3,"Gt","","<code>></code>",null,null],[12,"spans","","",75,null],[3,"Le","","<code><=</code>",null,null],[12,"spans","","",76,null],[3,"Lt","","<code><</code>",null,null],[12,"spans","","",77,null],[3,"MulEq","","<code>*=</code>",null,null],[12,"spans","","",78,null],[3,"Ne","","<code>!=</code>",null,null],[12,"spans","","",79,null],[3,"Or","","<code>|</code>",null,null],[12,"spans","","",80,null],[3,"OrEq","","<code>|=</code>",null,null],[12,"spans","","",81,null],[3,"OrOr","","<code>||</code>",null,null],[12,"spans","","",82,null],[3,"Pound","","<code>#</code>",null,null],[12,"spans","","",83,null],[3,"Question","","<code>?</code>",null,null],[12,"spans","","",84,null],[3,"RArrow","","<code>-></code>",null,null],[12,"spans","","",85,null],[3,"LArrow","","<code><-</code>",null,null],[12,"spans","","",86,null],[3,"Rem","","<code>%</code>",null,null],[12,"spans","","",87,null],[3,"RemEq","","<code>%=</code>",null,null],[12,"spans","","",88,null],[3,"FatArrow","","<code>=></code>",null,null],[12,"spans","","",89,null],[3,"Semi","","<code>;</code>",null,null],[12,"spans","","",90,null],[3,"Shl","","<code><<</code>",null,null],[12,"spans","","",91,null],[3,"ShlEq","","<code><<=</code>",null,null],[12,"spans","","",92,null],[3,"Shr","","<code>>></code>",null,null],[12,"spans","","",93,null],[3,"ShrEq","","<code>>>=</code>",null,null],[12,"spans","","",94,null],[3,"Star","","<code>*</code>",null,null],[12,"spans","","",95,null],[3,"Sub","","<code>-</code>",null,null],[12,"spans","","",96,null],[3,"SubEq","","<code>-=</code>",null,null],[12,"spans","","",97,null],[3,"Tilde","","<code>~</code>",null,null],[12,"spans","","",98,null],[3,"Brace","","<code>{...}</code>",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","<code>[...]</code>",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","<code>(...)</code>",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient …",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple …",null,null],[11,"new","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the …",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a <code>TokenBuffer</code>.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the …",104,[[],["bool",15]]],[11,"group","","If the cursor is pointing at a <code>Group</code> with the given …",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a <code>Ident</code>, returns it along …",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an <code>Punct</code>, returns it along …",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a <code>Literal</code>, return it along …",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a <code>Lifetime</code>, returns it along …",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into …",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a <code>TokenTree</code>, returns it …",104,[[],["option",4]]],[11,"span","","Returns the <code>Span</code> of the current token, or …",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign …",null,null],[8,"IdentExt","syn::ext","Additional methods for <code>Ident</code> not provided by proc-macro2 …",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage: …",105,null],[10,"unraw","","Strips the raw marker <code>r#</code>, if any, from the beginning of …",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by …",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type <code>T</code> …",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, …",106,[[],["bool",15]]],[11,"len","","Returns the number of syntax tree nodes in this …",106,[[],["usize",15]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of …",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree …",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as …",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this …",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or …",106,[[],[["pair",4],["option",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a …",106,[[],["bool",15]]],[11,"empty_or_trailing","","Returns true if either this <code>Punctuated</code> is empty, or it …",106,[[],["bool",15]]],[11,"push","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"insert","","Inserts an element at position <code>index</code>.",106,[[["usize",15]]]],[11,"clear","","Clears the sequence of all values and punctuation, making …",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of <code>T</code> using the given …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of <code>T</code> using the given parse …",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type <code>Pair<&T, &P></code>.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type …",null,null],[3,"IntoPairs","","An iterator over owned pairs of type <code>Pair<T, P></code>.",null,null],[3,"IntoIter","","An iterator over owned values of type <code>T</code>.",null,null],[3,"Iter","","An iterator over borrowed values of type <code>&T</code>.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type <code>&mut T</code>.",null,null],[4,"Pair","","A single syntax tree node of type <code>T</code> followed by its …",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, …",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated …",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless …",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and …",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree …",107,[[]]],[0,"spanned","syn","A trait that can provide the <code>Span</code> of the complete …",null,null],[8,"Spanned","syn::spanned","A trait that can provide the <code>Span</code> of the complete …",null,null],[10,"span","","Returns a <code>Span</code> covering the complete contents of this …",108,[[],["span",3]]],[0,"visit_mut","syn","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[8,"VisitMut","syn::visit_mut","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[11,"visit_abi_mut","","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",109,[[["arm",3]]]],[11,"visit_attr_style_mut","","",109,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",109,[[["binop",4]]]],[11,"visit_binding_mut","","",109,[[["binding",3]]]],[11,"visit_block_mut","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",109,[[["constparam",3]]]],[11,"visit_constraint_mut","","",109,[[["constraint",3]]]],[11,"visit_data_mut","","",109,[[["data",4]]]],[11,"visit_data_enum_mut","","",109,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",109,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",109,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",109,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",109,[[["expr",4]]]],[11,"visit_expr_array_mut","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",109,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",109,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",109,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",109,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",109,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",109,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",109,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",109,[[["expryield",3]]]],[11,"visit_field_mut","","",109,[[["field",3]]]],[11,"visit_field_pat_mut","","",109,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",109,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",109,[[["fields",4]]]],[11,"visit_fields_named_mut","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",109,[[["file",3]]]],[11,"visit_fn_arg_mut","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",109,[[["genericparam",4]]]],[11,"visit_generics_mut","","",109,[[["generics",3]]]],[11,"visit_ident_mut","","",109,[[["ident",3]]]],[11,"visit_impl_item_mut","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",109,[[["implitemtype",3]]]],[11,"visit_index_mut","","",109,[[["index",3]]]],[11,"visit_item_mut","","",109,[[["item",4]]]],[11,"visit_item_const_mut","","",109,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",109,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",109,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",109,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",109,[[["itemuse",3]]]],[11,"visit_label_mut","","",109,[[["label",3]]]],[11,"visit_lifetime_mut","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",109,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",109,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",109,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",109,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",109,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",109,[[["litint",3]]]],[11,"visit_lit_str_mut","","",109,[[["litstr",3]]]],[11,"visit_local_mut","","",109,[[["local",3]]]],[11,"visit_macro_mut","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",109,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",109,[[["member",4]]]],[11,"visit_meta_mut","","",109,[[["meta",4]]]],[11,"visit_meta_list_mut","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",109,[[["pat",4]]]],[11,"visit_pat_box_mut","","",109,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",109,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",109,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",109,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",109,[[["pator",3]]]],[11,"visit_pat_path_mut","","",109,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",109,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",109,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",109,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",109,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",109,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",109,[[["patwild",3]]]],[11,"visit_path_mut","","",109,[[["path",3]]]],[11,"visit_path_arguments_mut","","",109,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",109,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",109,[[["qself",3]]]],[11,"visit_range_limits_mut","","",109,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",109,[[["receiver",3]]]],[11,"visit_return_type_mut","","",109,[[["returntype",4]]]],[11,"visit_signature_mut","","",109,[[["signature",3]]]],[11,"visit_span_mut","","",109,[[["span",3]]]],[11,"visit_stmt_mut","","",109,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",109,[[["traititemtype",3]]]],[11,"visit_type_mut","","",109,[[["type",4]]]],[11,"visit_type_array_mut","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",109,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",109,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",109,[[["typenever",3]]]],[11,"visit_type_param_mut","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",109,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",109,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",109,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",109,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",109,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",109,[[["unop",4]]]],[11,"visit_use_glob_mut","","",109,[[["useglob",3]]]],[11,"visit_use_group_mut","","",109,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",109,[[["usename",3]]]],[11,"visit_use_path_mut","","",109,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",109,[[["userename",3]]]],[11,"visit_use_tree_mut","","",109,[[["usetree",4]]]],[11,"visit_variadic_mut","","",109,[[["variadic",3]]]],[11,"visit_variant_mut","","",109,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",109,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",109,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",109,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",109,[[["wherepredicate",4]]]],[5,"visit_abi_mut","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments_mut","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm_mut","","",null,[[["arm",3]]]],[5,"visit_attr_style_mut","","",null,[[["attrstyle",4]]]],[5,"visit_attribute_mut","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg_mut","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op_mut","","",null,[[["binop",4]]]],[5,"visit_binding_mut","","",null,[[["binding",3]]]],[5,"visit_block_mut","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes_mut","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param_mut","","",null,[[["constparam",3]]]],[5,"visit_constraint_mut","","",null,[[["constraint",3]]]],[5,"visit_data_mut","","",null,[[["data",4]]]],[5,"visit_data_enum_mut","","",null,[[["dataenum",3]]]],[5,"visit_data_struct_mut","","",null,[[["datastruct",3]]]],[5,"visit_data_union_mut","","",null,[[["dataunion",3]]]],[5,"visit_derive_input_mut","","",null,[[["deriveinput",3]]]],[5,"visit_expr_mut","","",null,[[["expr",4]]]],[5,"visit_expr_array_mut","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign_mut","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op_mut","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async_mut","","",null,[[["exprasync",3]]]],[5,"visit_expr_await_mut","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary_mut","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block_mut","","",null,[[["exprblock",3]]]],[5,"visit_expr_box_mut","","",null,[[["exprbox",3]]]],[5,"visit_expr_break_mut","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call_mut","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast_mut","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure_mut","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue_mut","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field_mut","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop_mut","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group_mut","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if_mut","","",null,[[["exprif",3]]]],[5,"visit_expr_index_mut","","",null,[[["exprindex",3]]]],[5,"visit_expr_let_mut","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit_mut","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop_mut","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro_mut","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match_mut","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call_mut","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren_mut","","",null,[[["exprparen",3]]]],[5,"visit_expr_path_mut","","",null,[[["exprpath",3]]]],[5,"visit_expr_range_mut","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference_mut","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat_mut","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return_mut","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct_mut","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try_mut","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block_mut","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple_mut","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type_mut","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary_mut","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe_mut","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while_mut","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield_mut","","",null,[[["expryield",3]]]],[5,"visit_field_mut","","",null,[[["field",3]]]],[5,"visit_field_pat_mut","","",null,[[["fieldpat",3]]]],[5,"visit_field_value_mut","","",null,[[["fieldvalue",3]]]],[5,"visit_fields_mut","","",null,[[["fields",4]]]],[5,"visit_fields_named_mut","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed_mut","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file_mut","","",null,[[["file",3]]]],[5,"visit_fn_arg_mut","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item_mut","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn_mut","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro_mut","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static_mut","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type_mut","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument_mut","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument_mut","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param_mut","","",null,[[["genericparam",4]]]],[5,"visit_generics_mut","","",null,[[["generics",3]]]],[5,"visit_ident_mut","","",null,[[["ident",3]]]],[5,"visit_impl_item_mut","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const_mut","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro_mut","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method_mut","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type_mut","","",null,[[["implitemtype",3]]]],[5,"visit_index_mut","","",null,[[["index",3]]]],[5,"visit_item_mut","","",null,[[["item",4]]]],[5,"visit_item_const_mut","","",null,[[["itemconst",3]]]],[5,"visit_item_enum_mut","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate_mut","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn_mut","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod_mut","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl_mut","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro_mut","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2_mut","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod_mut","","",null,[[["itemmod",3]]]],[5,"visit_item_static_mut","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct_mut","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait_mut","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias_mut","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type_mut","","",null,[[["itemtype",3]]]],[5,"visit_item_union_mut","","",null,[[["itemunion",3]]]],[5,"visit_item_use_mut","","",null,[[["itemuse",3]]]],[5,"visit_label_mut","","",null,[[["label",3]]]],[5,"visit_lifetime_mut","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def_mut","","",null,[[["lifetimedef",3]]]],[5,"visit_lit_mut","","",null,[[["lit",4]]]],[5,"visit_lit_bool_mut","","",null,[[["litbool",3]]]],[5,"visit_lit_byte_mut","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str_mut","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char_mut","","",null,[[["litchar",3]]]],[5,"visit_lit_float_mut","","",null,[[["litfloat",3]]]],[5,"visit_lit_int_mut","","",null,[[["litint",3]]]],[5,"visit_lit_str_mut","","",null,[[["litstr",3]]]],[5,"visit_local_mut","","",null,[[["local",3]]]],[5,"visit_macro_mut","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter_mut","","",null,[[["macrodelimiter",4]]]],[5,"visit_member_mut","","",null,[[["member",4]]]],[5,"visit_meta_mut","","",null,[[["meta",4]]]],[5,"visit_meta_list_mut","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value_mut","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish_mut","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta_mut","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments_mut","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat_mut","","",null,[[["pat",4]]]],[5,"visit_pat_box_mut","","",null,[[["patbox",3]]]],[5,"visit_pat_ident_mut","","",null,[[["patident",3]]]],[5,"visit_pat_lit_mut","","",null,[[["patlit",3]]]],[5,"visit_pat_macro_mut","","",null,[[["patmacro",3]]]],[5,"visit_pat_or_mut","","",null,[[["pator",3]]]],[5,"visit_pat_path_mut","","",null,[[["patpath",3]]]],[5,"visit_pat_range_mut","","",null,[[["patrange",3]]]],[5,"visit_pat_reference_mut","","",null,[[["patreference",3]]]],[5,"visit_pat_rest_mut","","",null,[[["patrest",3]]]],[5,"visit_pat_slice_mut","","",null,[[["patslice",3]]]],[5,"visit_pat_struct_mut","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple_mut","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct_mut","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type_mut","","",null,[[["pattype",3]]]],[5,"visit_pat_wild_mut","","",null,[[["patwild",3]]]],[5,"visit_path_mut","","",null,[[["path",3]]]],[5,"visit_path_arguments_mut","","",null,[[["patharguments",4]]]],[5,"visit_path_segment_mut","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq_mut","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime_mut","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type_mut","","",null,[[["predicatetype",3]]]],[5,"visit_qself_mut","","",null,[[["qself",3]]]],[5,"visit_range_limits_mut","","",null,[[["rangelimits",4]]]],[5,"visit_receiver_mut","","",null,[[["receiver",3]]]],[5,"visit_return_type_mut","","",null,[[["returntype",4]]]],[5,"visit_signature_mut","","",null,[[["signature",3]]]],[5,"visit_span_mut","","",null,[[["span",3]]]],[5,"visit_stmt_mut","","",null,[[["stmt",4]]]],[5,"visit_trait_bound_mut","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier_mut","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item_mut","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const_mut","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro_mut","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method_mut","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type_mut","","",null,[[["traititemtype",3]]]],[5,"visit_type_mut","","",null,[[["type",4]]]],[5,"visit_type_array_mut","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn_mut","","",null,[[["typebarefn",3]]]],[5,"visit_type_group_mut","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait_mut","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer_mut","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro_mut","","",null,[[["typemacro",3]]]],[5,"visit_type_never_mut","","",null,[[["typenever",3]]]],[5,"visit_type_param_mut","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound_mut","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren_mut","","",null,[[["typeparen",3]]]],[5,"visit_type_path_mut","","",null,[[["typepath",3]]]],[5,"visit_type_ptr_mut","","",null,[[["typeptr",3]]]],[5,"visit_type_reference_mut","","",null,[[["typereference",3]]]],[5,"visit_type_slice_mut","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object_mut","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple_mut","","",null,[[["typetuple",3]]]],[5,"visit_un_op_mut","","",null,[[["unop",4]]]],[5,"visit_use_glob_mut","","",null,[[["useglob",3]]]],[5,"visit_use_group_mut","","",null,[[["usegroup",3]]]],[5,"visit_use_name_mut","","",null,[[["usename",3]]]],[5,"visit_use_path_mut","","",null,[[["usepath",3]]]],[5,"visit_use_rename_mut","","",null,[[["userename",3]]]],[5,"visit_use_tree_mut","","",null,[[["usetree",4]]]],[5,"visit_variadic_mut","","",null,[[["variadic",3]]]],[5,"visit_variant_mut","","",null,[[["variant",3]]]],[5,"visit_vis_crate_mut","","",null,[[["viscrate",3]]]],[5,"visit_vis_public_mut","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted_mut","","",null,[[["visrestricted",3]]]],[5,"visit_visibility_mut","","",null,[[["visibility",4]]]],[5,"visit_where_clause_mut","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate_mut","","",null,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a …",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the <code>ParseStream</code> API to support speculative …",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked …",110,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide …",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be …",null,null],[10,"parse","","",111,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse …",112,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type <code>T</code>, advancing the …",113,[[],[["parse",8],["result",6]]]],[11,"call","","Calls the given parser function to parse a syntax tree …",113,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine …",113,[[["peek",8]],["bool",15]]],[11,"peek2","","Looks at the second-next token in the parse stream.",113,[[["peek",8]],["bool",15]]],[11,"peek3","","Looks at the third-next token in the parse stream.",113,[[["peek",8]],["bool",15]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",113,[[],[["punctuated",3],["result",6]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",113,[[],["bool",15]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this …",113,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either …",113,[[]]],[11,"error","","Triggers an error at the current position of the parse …",113,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream, …",113,[[],["result",6]]],[11,"span","","Returns the <code>Span</code> of the next token in the parse stream, or…",113,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation …",113,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular …",null,null],[16,"Output","","",114,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",114,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree …",114,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",114,[[["str",15]],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when …",null,null],[11,"new","","Usually the <code>ParseStream::error</code> method will be used …",115,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the …",115,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",115,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",115,[[],["tokenstream",3]]],[11,"into_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",115,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when …",115,[[["error",3]]]],[3,"Ident","syn","A word of Rust code, which may be a keyword or legal …",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item …",null,null],[13,"Outer","","",116,null],[13,"Inner","","",116,null],[3,"Attribute","","An attribute like <code>#[repr(transparent)]</code>.",null,null],[12,"pound_token","","",117,null],[12,"style","","",117,null],[12,"bracket_token","","",117,null],[12,"path","","",117,null],[12,"tokens","","",117,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation …",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",118,null],[13,"List","","A structured list within an attribute, like …",118,null],[13,"NameValue","","A name-value pair within an attribute, like …",118,null],[3,"MetaList","","A structured list within an attribute, like …",null,null],[12,"path","","",119,null],[12,"paren_token","","",119,null],[12,"nested","","",119,null],[3,"MetaNameValue","","A name-value pair within an attribute, like …",null,null],[12,"path","","",120,null],[12,"eq_token","","",120,null],[12,"lit","","",120,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …",121,null],[13,"Lit","","A Rust literal, like the <code>\\\"new_name\\\"</code> in …",121,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",122,null],[12,"vis","","Visibility of the field.",122,null],[12,"ident","","Name of the field, if any.",122,null],[12,"colon_token","","",122,null],[12,"ty","","Type of the field.",122,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as …",123,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as …",123,null],[13,"Unit","","Unit struct or unit variant such as <code>None</code>.",123,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as …",null,null],[12,"brace_token","","",124,null],[12,"named","","",124,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as …",null,null],[12,"paren_token","","",125,null],[12,"unnamed","","",125,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",126,null],[12,"ident","","Name of the variant.",126,null],[12,"fields","","Content stored in the variant.",126,null],[12,"discriminant","","Explicit discriminant: <code>Variant = 1</code>",126,null],[3,"VisCrate","","A crate-level visibility: <code>crate</code>.",null,null],[12,"crate_token","","",127,null],[3,"VisPublic","","A public visibility level: <code>pub</code>.",null,null],[12,"pub_token","","",128,null],[3,"VisRestricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",null,null],[12,"pub_token","","",129,null],[12,"paren_token","","",129,null],[12,"in_token","","",129,null],[12,"path","","",129,null],[4,"Visibility","","The visibility level of an item: inherited or <code>pub</code> or …",null,null],[13,"Public","","A public visibility level: <code>pub</code>.",130,null],[13,"Crate","","A crate-level visibility: <code>crate</code>.",130,null],[13,"Restricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",130,null],[13,"Inherited","","An inherited visibility, which usually means private.",130,null],[3,"Arm","","One arm of a <code>match</code> expression: <code>0...10 => { return true; }</code>.",null,null],[12,"attrs","","",131,null],[12,"pat","","",131,null],[12,"guard","","",131,null],[12,"fat_arrow_token","","",131,null],[12,"body","","",131,null],[12,"comma","","",131,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",132,null],[12,"member","","Name or index of the field.",132,null],[12,"colon_token","","The colon in <code>Struct { x: x }</code>. If written in shorthand like…",132,null],[12,"expr","","Value of the field.",132,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like <code>T</code>.",null,null],[13,"Type","","A type argument.",133,null],[13,"Const","","A const expression. Must be inside of a block.",133,null],[3,"Label","","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.",null,null],[12,"name","","",134,null],[12,"colon_token","","",134,null],[3,"MethodTurbofish","","The <code>::<></code> explicit type parameters passed to a method call:…",null,null],[12,"colon2_token","","",135,null],[12,"lt_token","","",135,null],[12,"args","","",135,null],[12,"gt_token","","",135,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",136,null],[13,"Closed","","Inclusive at the beginning and end.",136,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: <code>[a, b, c, d]</code>.",137,null],[13,"Assign","","An assignment expression: <code>a = compute()</code>.",137,null],[13,"AssignOp","","A compound assignment expression: <code>counter += 1</code>.",137,null],[13,"Async","","An async block: <code>async { ... }</code>.",137,null],[13,"Await","","An await expression: <code>fut.await</code>.",137,null],[13,"Binary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",137,null],[13,"Block","","A blocked scope: <code>{ ... }</code>.",137,null],[13,"Box","","A box expression: <code>box f</code>.",137,null],[13,"Break","","A <code>break</code>, with an optional label to break and an optional …",137,null],[13,"Call","","A function call expression: <code>invoke(a, b)</code>.",137,null],[13,"Cast","","A cast expression: <code>foo as f64</code>.",137,null],[13,"Closure","","A closure expression: <code>|a, b| a + b</code>.",137,null],[13,"Continue","","A <code>continue</code>, with an optional label.",137,null],[13,"Field","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",137,null],[13,"ForLoop","","A for loop: <code>for pat in expr { ... }</code>.",137,null],[13,"Group","","An expression contained within invisible delimiters.",137,null],[13,"If","","An <code>if</code> expression with an optional <code>else</code> block: …",137,null],[13,"Index","","A square bracketed indexing expression: <code>vector[2]</code>.",137,null],[13,"Let","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",137,null],[13,"Lit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",137,null],[13,"Loop","","Conditionless loop: <code>loop { ... }</code>.",137,null],[13,"Macro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",137,null],[13,"Match","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",137,null],[13,"MethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",137,null],[13,"Paren","","A parenthesized expression: <code>(a + b)</code>.",137,null],[13,"Path","","A path like <code>std::mem::replace</code> possibly containing generic …",137,null],[13,"Range","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",137,null],[13,"Reference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",137,null],[13,"Repeat","","An array literal constructed from one repeated element: …",137,null],[13,"Return","","A <code>return</code>, with an optional value to be returned.",137,null],[13,"Struct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",137,null],[13,"Try","","A try-expression: <code>expr?</code>.",137,null],[13,"TryBlock","","A try block: <code>try { ... }</code>.",137,null],[13,"Tuple","","A tuple expression: <code>(a, b, c, d)</code>.",137,null],[13,"Type","","A type ascription expression: <code>foo: f64</code>.",137,null],[13,"Unary","","A unary operation: <code>!x</code>, <code>*x</code>.",137,null],[13,"Unsafe","","An unsafe block: <code>unsafe { ... }</code>.",137,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",137,null],[13,"While","","A while loop: <code>while expr { ... }</code>.",137,null],[13,"Yield","","A yield expression: <code>yield expr</code>.",137,null],[3,"ExprArray","","A slice literal expression: <code>[a, b, c, d]</code>.",null,null],[12,"attrs","","",138,null],[12,"bracket_token","","",138,null],[12,"elems","","",138,null],[3,"ExprAssign","","An assignment expression: <code>a = compute()</code>.",null,null],[12,"attrs","","",139,null],[12,"left","","",139,null],[12,"eq_token","","",139,null],[12,"right","","",139,null],[3,"ExprAssignOp","","A compound assignment expression: <code>counter += 1</code>.",null,null],[12,"attrs","","",140,null],[12,"left","","",140,null],[12,"op","","",140,null],[12,"right","","",140,null],[3,"ExprAsync","","An async block: <code>async { ... }</code>.",null,null],[12,"attrs","","",141,null],[12,"async_token","","",141,null],[12,"capture","","",141,null],[12,"block","","",141,null],[3,"ExprAwait","","An await expression: <code>fut.await</code>.",null,null],[12,"attrs","","",142,null],[12,"base","","",142,null],[12,"dot_token","","",142,null],[12,"await_token","","",142,null],[3,"ExprBinary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",null,null],[12,"attrs","","",143,null],[12,"left","","",143,null],[12,"op","","",143,null],[12,"right","","",143,null],[3,"ExprBlock","","A blocked scope: <code>{ ... }</code>.",null,null],[12,"attrs","","",144,null],[12,"label","","",144,null],[12,"block","","",144,null],[3,"ExprBox","","A box expression: <code>box f</code>.",null,null],[12,"attrs","","",145,null],[12,"box_token","","",145,null],[12,"expr","","",145,null],[3,"ExprBreak","","A <code>break</code>, with an optional label to break and an optional …",null,null],[12,"attrs","","",146,null],[12,"break_token","","",146,null],[12,"label","","",146,null],[12,"expr","","",146,null],[3,"ExprCall","","A function call expression: <code>invoke(a, b)</code>.",null,null],[12,"attrs","","",147,null],[12,"func","","",147,null],[12,"paren_token","","",147,null],[12,"args","","",147,null],[3,"ExprCast","","A cast expression: <code>foo as f64</code>.",null,null],[12,"attrs","","",148,null],[12,"expr","","",148,null],[12,"as_token","","",148,null],[12,"ty","","",148,null],[3,"ExprClosure","","A closure expression: <code>|a, b| a + b</code>.",null,null],[12,"attrs","","",149,null],[12,"asyncness","","",149,null],[12,"movability","","",149,null],[12,"capture","","",149,null],[12,"or1_token","","",149,null],[12,"inputs","","",149,null],[12,"or2_token","","",149,null],[12,"output","","",149,null],[12,"body","","",149,null],[3,"ExprContinue","","A <code>continue</code>, with an optional label.",null,null],[12,"attrs","","",150,null],[12,"continue_token","","",150,null],[12,"label","","",150,null],[3,"ExprField","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",null,null],[12,"attrs","","",151,null],[12,"base","","",151,null],[12,"dot_token","","",151,null],[12,"member","","",151,null],[3,"ExprForLoop","","A for loop: <code>for pat in expr { ... }</code>.",null,null],[12,"attrs","","",152,null],[12,"label","","",152,null],[12,"for_token","","",152,null],[12,"pat","","",152,null],[12,"in_token","","",152,null],[12,"expr","","",152,null],[12,"body","","",152,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",153,null],[12,"group_token","","",153,null],[12,"expr","","",153,null],[3,"ExprIf","","An <code>if</code> expression with an optional <code>else</code> block: …",null,null],[12,"attrs","","",154,null],[12,"if_token","","",154,null],[12,"cond","","",154,null],[12,"then_branch","","",154,null],[12,"else_branch","","",154,null],[3,"ExprIndex","","A square bracketed indexing expression: <code>vector[2]</code>.",null,null],[12,"attrs","","",155,null],[12,"expr","","",155,null],[12,"bracket_token","","",155,null],[12,"index","","",155,null],[3,"ExprLet","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",null,null],[12,"attrs","","",156,null],[12,"let_token","","",156,null],[12,"pat","","",156,null],[12,"eq_token","","",156,null],[12,"expr","","",156,null],[3,"ExprLit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",null,null],[12,"attrs","","",157,null],[12,"lit","","",157,null],[3,"ExprLoop","","Conditionless loop: <code>loop { ... }</code>.",null,null],[12,"attrs","","",158,null],[12,"label","","",158,null],[12,"loop_token","","",158,null],[12,"body","","",158,null],[3,"ExprMacro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",null,null],[12,"attrs","","",159,null],[12,"mac","","",159,null],[3,"ExprMatch","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",null,null],[12,"attrs","","",160,null],[12,"match_token","","",160,null],[12,"expr","","",160,null],[12,"brace_token","","",160,null],[12,"arms","","",160,null],[3,"ExprMethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",null,null],[12,"attrs","","",161,null],[12,"receiver","","",161,null],[12,"dot_token","","",161,null],[12,"method","","",161,null],[12,"turbofish","","",161,null],[12,"paren_token","","",161,null],[12,"args","","",161,null],[3,"ExprParen","","A parenthesized expression: <code>(a + b)</code>.",null,null],[12,"attrs","","",162,null],[12,"paren_token","","",162,null],[12,"expr","","",162,null],[3,"ExprPath","","A path like <code>std::mem::replace</code> possibly containing generic …",null,null],[12,"attrs","","",163,null],[12,"qself","","",163,null],[12,"path","","",163,null],[3,"ExprRange","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",null,null],[12,"attrs","","",164,null],[12,"from","","",164,null],[12,"limits","","",164,null],[12,"to","","",164,null],[3,"ExprReference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",null,null],[12,"attrs","","",165,null],[12,"and_token","","",165,null],[12,"raw","","",165,null],[12,"mutability","","",165,null],[12,"expr","","",165,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: …",null,null],[12,"attrs","","",166,null],[12,"bracket_token","","",166,null],[12,"expr","","",166,null],[12,"semi_token","","",166,null],[12,"len","","",166,null],[3,"ExprReturn","","A <code>return</code>, with an optional value to be returned.",null,null],[12,"attrs","","",167,null],[12,"return_token","","",167,null],[12,"expr","","",167,null],[3,"ExprStruct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",null,null],[12,"attrs","","",168,null],[12,"path","","",168,null],[12,"brace_token","","",168,null],[12,"fields","","",168,null],[12,"dot2_token","","",168,null],[12,"rest","","",168,null],[3,"ExprTry","","A try-expression: <code>expr?</code>.",null,null],[12,"attrs","","",169,null],[12,"expr","","",169,null],[12,"question_token","","",169,null],[3,"ExprTryBlock","","A try block: <code>try { ... }</code>.",null,null],[12,"attrs","","",170,null],[12,"try_token","","",170,null],[12,"block","","",170,null],[3,"ExprTuple","","A tuple expression: <code>(a, b, c, d)</code>.",null,null],[12,"attrs","","",171,null],[12,"paren_token","","",171,null],[12,"elems","","",171,null],[3,"ExprType","","A type ascription expression: <code>foo: f64</code>.",null,null],[12,"attrs","","",172,null],[12,"expr","","",172,null],[12,"colon_token","","",172,null],[12,"ty","","",172,null],[3,"ExprUnary","","A unary operation: <code>!x</code>, <code>*x</code>.",null,null],[12,"attrs","","",173,null],[12,"op","","",173,null],[12,"expr","","",173,null],[3,"ExprUnsafe","","An unsafe block: <code>unsafe { ... }</code>.",null,null],[12,"attrs","","",174,null],[12,"unsafe_token","","",174,null],[12,"block","","",174,null],[3,"ExprWhile","","A while loop: <code>while expr { ... }</code>.",null,null],[12,"attrs","","",175,null],[12,"label","","",175,null],[12,"while_token","","",175,null],[12,"cond","","",175,null],[12,"body","","",175,null],[3,"ExprYield","","A yield expression: <code>yield expr</code>.",null,null],[12,"attrs","","",176,null],[12,"yield_token","","",176,null],[12,"expr","","",176,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",177,null],[12,"span","","",177,null],[4,"Member","","A struct or tuple struct field accessed in a struct …",null,null],[13,"Named","","A named field like <code>self.x</code>.",178,null],[13,"Unnamed","","An unnamed field like <code>self.0</code>.",178,null],[3,"BoundLifetimes","","A set of bound lifetimes: <code>for<\'a, \'b, \'c></code>.",null,null],[12,"for_token","","",179,null],[12,"lt_token","","",179,null],[12,"lifetimes","","",179,null],[12,"gt_token","","",179,null],[3,"ConstParam","","A const generic parameter: <code>const LENGTH: usize</code>.",null,null],[12,"attrs","","",180,null],[12,"const_token","","",180,null],[12,"ident","","",180,null],[12,"colon_token","","",180,null],[12,"ty","","",180,null],[12,"eq_token","","",180,null],[12,"default","","",180,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: …",null,null],[13,"Type","","A generic type parameter: <code>T: Into<String></code>.",181,null],[13,"Lifetime","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",181,null],[13,"Const","","A const generic parameter: <code>const LENGTH: usize</code>.",181,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration …",null,null],[12,"lt_token","","",182,null],[12,"params","","",182,null],[12,"gt_token","","",182,null],[12,"where_clause","","",182,null],[3,"LifetimeDef","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",null,null],[12,"attrs","","",183,null],[12,"lifetime","","",183,null],[12,"colon_token","","",183,null],[12,"bounds","","",183,null],[3,"PredicateEq","","An equality predicate in a <code>where</code> clause (unsupported).",null,null],[12,"lhs_ty","","",184,null],[12,"eq_token","","",184,null],[12,"rhs_ty","","",184,null],[3,"PredicateLifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",null,null],[12,"lifetime","","",185,null],[12,"colon_token","","",185,null],[12,"bounds","","",185,null],[3,"PredicateType","","A type predicate in a <code>where</code> clause: …",null,null],[12,"lifetimes","","Any lifetimes from a <code>for</code> binding",186,null],[12,"bounded_ty","","The type being bounded",186,null],[12,"colon_token","","",186,null],[12,"bounds","","Trait and lifetime bounds (<code>Clone+Send+\'static</code>)",186,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",187,null],[12,"modifier","","",187,null],[12,"lifetimes","","The <code>for<\'a></code> in <code>for<\'a> Foo<&\'a T></code>",187,null],[12,"path","","The <code>Foo<&\'a T></code> in <code>for<\'a> Foo<&\'a T></code>",187,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the <code>?</code>…",null,null],[13,"None","","",188,null],[13,"Maybe","","",188,null],[3,"TypeParam","","A generic type parameter: <code>T: Into<String></code>.",null,null],[12,"attrs","","",189,null],[12,"ident","","",189,null],[12,"colon_token","","",189,null],[12,"bounds","","",189,null],[12,"eq_token","","",189,null],[12,"default","","",189,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",190,null],[13,"Lifetime","","",190,null],[3,"WhereClause","","A <code>where</code> clause in a definition: …",null,null],[12,"where_token","","",191,null],[12,"predicates","","",191,null],[4,"WherePredicate","","A single predicate in a <code>where</code> clause: <code>T: Deserialize<\'de></code>.",null,null],[13,"Type","","A type predicate in a <code>where</code> clause: …",192,null],[13,"Lifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",192,null],[13,"Eq","","An equality predicate in a <code>where</code> clause (unsupported).",192,null],[3,"ImplGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[3,"Turbofish","","Returned by <code>TypeGenerics::as_turbofish</code>.",null,null],[3,"TypeGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[4,"FnArg","","An argument in a function signature: the <code>n: usize</code> in …",null,null],[13,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",193,null],[13,"Typed","","A function argument accepted by pattern and type.",193,null],[4,"ForeignItem","","An item within an <code>extern</code> block.",null,null],[13,"Fn","","A foreign function in an <code>extern</code> block.",194,null],[13,"Static","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",194,null],[13,"Type","","A foreign type in an <code>extern</code> block: <code>type void</code>.",194,null],[13,"Macro","","A macro invocation within an extern block.",194,null],[13,"Verbatim","","Tokens in an <code>extern</code> block not interpreted by Syn.",194,null],[3,"ForeignItemFn","","A foreign function in an <code>extern</code> block.",null,null],[12,"attrs","","",195,null],[12,"vis","","",195,null],[12,"sig","","",195,null],[12,"semi_token","","",195,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",196,null],[12,"mac","","",196,null],[12,"semi_token","","",196,null],[3,"ForeignItemStatic","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",null,null],[12,"attrs","","",197,null],[12,"vis","","",197,null],[12,"static_token","","",197,null],[12,"mutability","","",197,null],[12,"ident","","",197,null],[12,"colon_token","","",197,null],[12,"ty","","",197,null],[12,"semi_token","","",197,null],[3,"ForeignItemType","","A foreign type in an <code>extern</code> block: <code>type void</code>.",null,null],[12,"attrs","","",198,null],[12,"vis","","",198,null],[12,"type_token","","",198,null],[12,"ident","","",198,null],[12,"semi_token","","",198,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",199,null],[13,"Method","","A method within an impl block.",199,null],[13,"Type","","An associated type within an impl block.",199,null],[13,"Macro","","A macro invocation within an impl block.",199,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",199,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",200,null],[12,"vis","","",200,null],[12,"defaultness","","",200,null],[12,"const_token","","",200,null],[12,"ident","","",200,null],[12,"colon_token","","",200,null],[12,"ty","","",200,null],[12,"eq_token","","",200,null],[12,"expr","","",200,null],[12,"semi_token","","",200,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",201,null],[12,"mac","","",201,null],[12,"semi_token","","",201,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",202,null],[12,"vis","","",202,null],[12,"defaultness","","",202,null],[12,"sig","","",202,null],[12,"block","","",202,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",203,null],[12,"vis","","",203,null],[12,"defaultness","","",203,null],[12,"type_token","","",203,null],[12,"ident","","",203,null],[12,"generics","","",203,null],[12,"eq_token","","",203,null],[12,"ty","","",203,null],[12,"semi_token","","",203,null],[4,"Item","","Things that can appear directly inside of a module or …",null,null],[13,"Const","","A constant item: <code>const MAX: u16 = 65535</code>.",204,null],[13,"Enum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",204,null],[13,"ExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",204,null],[13,"Fn","","A free-standing function: …",204,null],[13,"ForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",204,null],[13,"Impl","","An impl block providing trait or associated items: …",204,null],[13,"Macro","","A macro invocation, which includes <code>macro_rules!</code> …",204,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",204,null],[13,"Mod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",204,null],[13,"Static","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",204,null],[13,"Struct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",204,null],[13,"Trait","","A trait definition: <code>pub trait Iterator { ... }</code>.",204,null],[13,"TraitAlias","","A trait alias: …",204,null],[13,"Type","","A type alias: …",204,null],[13,"Union","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",204,null],[13,"Use","","A use declaration: <code>use std::collections::HashMap</code>.",204,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",204,null],[3,"ItemConst","","A constant item: <code>const MAX: u16 = 65535</code>.",null,null],[12,"attrs","","",205,null],[12,"vis","","",205,null],[12,"const_token","","",205,null],[12,"ident","","",205,null],[12,"colon_token","","",205,null],[12,"ty","","",205,null],[12,"eq_token","","",205,null],[12,"expr","","",205,null],[12,"semi_token","","",205,null],[3,"ItemEnum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",null,null],[12,"attrs","","",206,null],[12,"vis","","",206,null],[12,"enum_token","","",206,null],[12,"ident","","",206,null],[12,"generics","","",206,null],[12,"brace_token","","",206,null],[12,"variants","","",206,null],[3,"ItemExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",null,null],[12,"attrs","","",207,null],[12,"vis","","",207,null],[12,"extern_token","","",207,null],[12,"crate_token","","",207,null],[12,"ident","","",207,null],[12,"rename","","",207,null],[12,"semi_token","","",207,null],[3,"ItemFn","","A free-standing function: …",null,null],[12,"attrs","","",208,null],[12,"vis","","",208,null],[12,"sig","","",208,null],[12,"block","","",208,null],[3,"ItemForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",null,null],[12,"attrs","","",209,null],[12,"abi","","",209,null],[12,"brace_token","","",209,null],[12,"items","","",209,null],[3,"ItemImpl","","An impl block providing trait or associated items: …",null,null],[12,"attrs","","",210,null],[12,"defaultness","","",210,null],[12,"unsafety","","",210,null],[12,"impl_token","","",210,null],[12,"generics","","",210,null],[12,"trait_","","Trait this impl implements.",210,null],[12,"self_ty","","The Self type of the impl.",210,null],[12,"brace_token","","",210,null],[12,"items","","",210,null],[3,"ItemMacro","","A macro invocation, which includes <code>macro_rules!</code> …",null,null],[12,"attrs","","",211,null],[12,"ident","","The <code>example</code> in <code>macro_rules! example { ... }</code>.",211,null],[12,"mac","","",211,null],[12,"semi_token","","",211,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",null,null],[12,"attrs","","",212,null],[12,"vis","","",212,null],[12,"macro_token","","",212,null],[12,"ident","","",212,null],[12,"rules","","",212,null],[3,"ItemMod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",null,null],[12,"attrs","","",213,null],[12,"vis","","",213,null],[12,"mod_token","","",213,null],[12,"ident","","",213,null],[12,"content","","",213,null],[12,"semi","","",213,null],[3,"ItemStatic","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",null,null],[12,"attrs","","",214,null],[12,"vis","","",214,null],[12,"static_token","","",214,null],[12,"mutability","","",214,null],[12,"ident","","",214,null],[12,"colon_token","","",214,null],[12,"ty","","",214,null],[12,"eq_token","","",214,null],[12,"expr","","",214,null],[12,"semi_token","","",214,null],[3,"ItemStruct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",null,null],[12,"attrs","","",215,null],[12,"vis","","",215,null],[12,"struct_token","","",215,null],[12,"ident","","",215,null],[12,"generics","","",215,null],[12,"fields","","",215,null],[12,"semi_token","","",215,null],[3,"ItemTrait","","A trait definition: <code>pub trait Iterator { ... }</code>.",null,null],[12,"attrs","","",216,null],[12,"vis","","",216,null],[12,"unsafety","","",216,null],[12,"auto_token","","",216,null],[12,"trait_token","","",216,null],[12,"ident","","",216,null],[12,"generics","","",216,null],[12,"colon_token","","",216,null],[12,"supertraits","","",216,null],[12,"brace_token","","",216,null],[12,"items","","",216,null],[3,"ItemTraitAlias","","A trait alias: …",null,null],[12,"attrs","","",217,null],[12,"vis","","",217,null],[12,"trait_token","","",217,null],[12,"ident","","",217,null],[12,"generics","","",217,null],[12,"eq_token","","",217,null],[12,"bounds","","",217,null],[12,"semi_token","","",217,null],[3,"ItemType","","A type alias: …",null,null],[12,"attrs","","",218,null],[12,"vis","","",218,null],[12,"type_token","","",218,null],[12,"ident","","",218,null],[12,"generics","","",218,null],[12,"eq_token","","",218,null],[12,"ty","","",218,null],[12,"semi_token","","",218,null],[3,"ItemUnion","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",null,null],[12,"attrs","","",219,null],[12,"vis","","",219,null],[12,"union_token","","",219,null],[12,"ident","","",219,null],[12,"generics","","",219,null],[12,"fields","","",219,null],[3,"ItemUse","","A use declaration: <code>use std::collections::HashMap</code>.",null,null],[12,"attrs","","",220,null],[12,"vis","","",220,null],[12,"use_token","","",220,null],[12,"leading_colon","","",220,null],[12,"tree","","",220,null],[12,"semi_token","","",220,null],[3,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",null,null],[12,"attrs","","",221,null],[12,"reference","","",221,null],[12,"mutability","","",221,null],[12,"self_token","","",221,null],[3,"Signature","","A function signature in a trait or implementation: …",null,null],[12,"constness","","",222,null],[12,"asyncness","","",222,null],[12,"unsafety","","",222,null],[12,"abi","","",222,null],[12,"fn_token","","",222,null],[12,"ident","","",222,null],[12,"generics","","",222,null],[12,"paren_token","","",222,null],[12,"inputs","","",222,null],[12,"variadic","","",222,null],[12,"output","","",222,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",223,null],[13,"Method","","A trait method within the definition of a trait.",223,null],[13,"Type","","An associated type within the definition of a trait.",223,null],[13,"Macro","","A macro invocation within the definition of a trait.",223,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted …",223,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",224,null],[12,"const_token","","",224,null],[12,"ident","","",224,null],[12,"colon_token","","",224,null],[12,"ty","","",224,null],[12,"default","","",224,null],[12,"semi_token","","",224,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",225,null],[12,"mac","","",225,null],[12,"semi_token","","",225,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",226,null],[12,"sig","","",226,null],[12,"default","","",226,null],[12,"semi_token","","",226,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",227,null],[12,"type_token","","",227,null],[12,"ident","","",227,null],[12,"generics","","",227,null],[12,"colon_token","","",227,null],[12,"bounds","","",227,null],[12,"default","","",227,null],[12,"semi_token","","",227,null],[3,"UseGlob","","A glob import in a <code>use</code> item: <code>*</code>.",null,null],[12,"star_token","","",228,null],[3,"UseGroup","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",null,null],[12,"brace_token","","",229,null],[12,"items","","",229,null],[3,"UseName","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",null,null],[12,"ident","","",230,null],[3,"UsePath","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",null,null],[12,"ident","","",231,null],[12,"colon2_token","","",231,null],[12,"tree","","",231,null],[3,"UseRename","","An renamed identifier imported by a <code>use</code> item: …",null,null],[12,"ident","","",232,null],[12,"as_token","","",232,null],[12,"rename","","",232,null],[4,"UseTree","","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …",null,null],[13,"Path","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",233,null],[13,"Name","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",233,null],[13,"Rename","","An renamed identifier imported by a <code>use</code> item: …",233,null],[13,"Glob","","A glob import in a <code>use</code> item: <code>*</code>.",233,null],[13,"Group","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",233,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",234,null],[12,"attrs","","",234,null],[12,"items","","",234,null],[3,"Lifetime","","A Rust lifetime: <code>\'a</code>.",null,null],[12,"apostrophe","","",235,null],[12,"ident","","",235,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",236,null],[13,"ByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",236,null],[13,"Byte","","A byte literal: <code>b\'f\'</code>.",236,null],[13,"Char","","A character literal: <code>\'a\'</code>.",236,null],[13,"Int","","An integer literal: <code>1</code> or <code>1u16</code>.",236,null],[13,"Float","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",236,null],[13,"Bool","","A boolean literal: <code>true</code> or <code>false</code>.",236,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",236,null],[3,"LitBool","","A boolean literal: <code>true</code> or <code>false</code>.",null,null],[12,"value","","",237,null],[12,"span","","",237,null],[3,"LitByte","","A byte literal: <code>b\'f\'</code>.",null,null],[3,"LitByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",null,null],[3,"LitChar","","A character literal: <code>\'a\'</code>.",null,null],[3,"LitFloat","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",null,null],[3,"LitInt","","An integer literal: <code>1</code> or <code>1u16</code>.",null,null],[3,"LitStr","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a …",null,null],[13,"Cooked","","An ordinary string like <code>\\\"data\\\"</code>.",238,null],[13,"Raw","","A raw string like <code>r##\\\"data\\\"##</code>.",238,null],[3,"Macro","","A macro invocation: <code>println!(\\\"{}\\\", mac)</code>.",null,null],[12,"path","","",239,null],[12,"bang_token","","",239,null],[12,"delimiter","","",239,null],[12,"tokens","","",239,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: <code>m!(...)</code> or …",null,null],[13,"Paren","","",240,null],[13,"Brace","","",240,null],[13,"Bracket","","",240,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a <code>proc_macro_derive</code> macro.",241,null],[13,"Enum","","An enum input to a <code>proc_macro_derive</code> macro.",241,null],[13,"Union","","An untagged union input to a <code>proc_macro_derive</code> macro.",241,null],[3,"DataEnum","","An enum input to a <code>proc_macro_derive</code> macro.",null,null],[12,"enum_token","","",242,null],[12,"brace_token","","",242,null],[12,"variants","","",242,null],[3,"DataStruct","","A struct input to a <code>proc_macro_derive</code> macro.",null,null],[12,"struct_token","","",243,null],[12,"fields","","",243,null],[12,"semi_token","","",243,null],[3,"DataUnion","","An untagged union input to a <code>proc_macro_derive</code> macro.",null,null],[12,"union_token","","",244,null],[12,"fields","","",244,null],[3,"DeriveInput","","Data structure sent to a <code>proc_macro_derive</code> macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",245,null],[12,"vis","","Visibility of the struct or enum.",245,null],[12,"ident","","Name of the struct or enum.",245,null],[12,"generics","","Generics required to complete the definition.",245,null],[12,"data","","Data within the struct or enum.",245,null],[4,"BinOp","","A binary operator: <code>+</code>, <code>+=</code>, <code>&</code>.",null,null],[13,"Add","","The <code>+</code> operator (addition)",246,null],[13,"Sub","","The <code>-</code> operator (subtraction)",246,null],[13,"Mul","","The <code>*</code> operator (multiplication)",246,null],[13,"Div","","The <code>/</code> operator (division)",246,null],[13,"Rem","","The <code>%</code> operator (modulus)",246,null],[13,"And","","The <code>&&</code> operator (logical and)",246,null],[13,"Or","","The <code>||</code> operator (logical or)",246,null],[13,"BitXor","","The <code>^</code> operator (bitwise xor)",246,null],[13,"BitAnd","","The <code>&</code> operator (bitwise and)",246,null],[13,"BitOr","","The <code>|</code> operator (bitwise or)",246,null],[13,"Shl","","The <code><<</code> operator (shift left)",246,null],[13,"Shr","","The <code>>></code> operator (shift right)",246,null],[13,"Eq","","The <code>==</code> operator (equality)",246,null],[13,"Lt","","The <code><</code> operator (less than)",246,null],[13,"Le","","The <code><=</code> operator (less than or equal to)",246,null],[13,"Ne","","The <code>!=</code> operator (not equal to)",246,null],[13,"Ge","","The <code>>=</code> operator (greater than or equal to)",246,null],[13,"Gt","","The <code>></code> operator (greater than)",246,null],[13,"AddEq","","The <code>+=</code> operator",246,null],[13,"SubEq","","The <code>-=</code> operator",246,null],[13,"MulEq","","The <code>*=</code> operator",246,null],[13,"DivEq","","The <code>/=</code> operator",246,null],[13,"RemEq","","The <code>%=</code> operator",246,null],[13,"BitXorEq","","The <code>^=</code> operator",246,null],[13,"BitAndEq","","The <code>&=</code> operator",246,null],[13,"BitOrEq","","The <code>|=</code> operator",246,null],[13,"ShlEq","","The <code><<=</code> operator",246,null],[13,"ShrEq","","The <code>>>=</code> operator",246,null],[4,"UnOp","","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.",null,null],[13,"Deref","","The <code>*</code> operator for dereferencing",247,null],[13,"Not","","The <code>!</code> operator for logical inversion",247,null],[13,"Neg","","The <code>-</code> operator for negation",247,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",248,null],[12,"stmts","","Statements in a block",248,null],[3,"Local","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.",null,null],[12,"attrs","","",249,null],[12,"let_token","","",249,null],[12,"pat","","",249,null],[12,"init","","",249,null],[12,"semi_token","","",249,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",250,null],[13,"Item","","An item definition.",250,null],[13,"Expr","","Expr without trailing semicolon.",250,null],[13,"Semi","","Expression with trailing semicolon.",250,null],[3,"Abi","","The binary interface of a function: <code>extern \\\"C\\\"</code>.",null,null],[12,"extern_token","","",251,null],[12,"name","","",251,null],[3,"BareFnArg","","An argument in a function type: the <code>usize</code> in …",null,null],[12,"attrs","","",252,null],[12,"name","","",252,null],[12,"ty","","",252,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",253,null],[13,"Type","","A particular type is returned.",253,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: <code>[T; n]</code>.",254,null],[13,"BareFn","","A bare function type: <code>fn(usize) -> bool</code>.",254,null],[13,"Group","","A type contained within invisible delimiters.",254,null],[13,"ImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",254,null],[13,"Infer","","Indication that a type should be inferred by the …",254,null],[13,"Macro","","A macro in the type position.",254,null],[13,"Never","","The never type: <code>!</code>.",254,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",254,null],[13,"Path","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",254,null],[13,"Ptr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",254,null],[13,"Reference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",254,null],[13,"Slice","","A dynamically sized slice type: <code>[T]</code>.",254,null],[13,"TraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",254,null],[13,"Tuple","","A tuple type: <code>(A, B, C, String)</code>.",254,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",254,null],[3,"TypeArray","","A fixed size array type: <code>[T; n]</code>.",null,null],[12,"bracket_token","","",255,null],[12,"elem","","",255,null],[12,"semi_token","","",255,null],[12,"len","","",255,null],[3,"TypeBareFn","","A bare function type: <code>fn(usize) -> bool</code>.",null,null],[12,"lifetimes","","",256,null],[12,"unsafety","","",256,null],[12,"abi","","",256,null],[12,"fn_token","","",256,null],[12,"paren_token","","",256,null],[12,"inputs","","",256,null],[12,"variadic","","",256,null],[12,"output","","",256,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",257,null],[12,"elem","","",257,null],[3,"TypeImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",null,null],[12,"impl_token","","",258,null],[12,"bounds","","",258,null],[3,"TypeInfer","","Indication that a type should be inferred by the …",null,null],[12,"underscore_token","","",259,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",260,null],[3,"TypeNever","","The never type: <code>!</code>.",null,null],[12,"bang_token","","",261,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",262,null],[12,"elem","","",262,null],[3,"TypePath","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",null,null],[12,"qself","","",263,null],[12,"path","","",263,null],[3,"TypePtr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",null,null],[12,"star_token","","",264,null],[12,"const_token","","",264,null],[12,"mutability","","",264,null],[12,"elem","","",264,null],[3,"TypeReference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",null,null],[12,"and_token","","",265,null],[12,"lifetime","","",265,null],[12,"mutability","","",265,null],[12,"elem","","",265,null],[3,"TypeSlice","","A dynamically sized slice type: <code>[T]</code>.",null,null],[12,"bracket_token","","",266,null],[12,"elem","","",266,null],[3,"TypeTraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",null,null],[12,"dyn_token","","",267,null],[12,"bounds","","",267,null],[3,"TypeTuple","","A tuple type: <code>(A, B, C, String)</code>.",null,null],[12,"paren_token","","",268,null],[12,"elems","","",268,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",269,null],[12,"dots","","",269,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",270,null],[12,"member","","",270,null],[12,"colon_token","","",270,null],[12,"pat","","",270,null],[4,"Pat","","A pattern in a local binding, function signature, match …",null,null],[13,"Box","","A box pattern: <code>box v</code>.",271,null],[13,"Ident","","A pattern that binds a new variable: …",271,null],[13,"Lit","","A literal pattern: <code>0</code>.",271,null],[13,"Macro","","A macro in pattern position.",271,null],[13,"Or","","A pattern that matches any one of a set of cases.",271,null],[13,"Path","","A path pattern like <code>Color::Red</code>, optionally qualified with …",271,null],[13,"Range","","A range pattern: <code>1..=2</code>.",271,null],[13,"Reference","","A reference pattern: <code>&mut var</code>.",271,null],[13,"Rest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",271,null],[13,"Slice","","A dynamically sized slice pattern: …",271,null],[13,"Struct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",271,null],[13,"Tuple","","A tuple pattern: <code>(a, b)</code>.",271,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: …",271,null],[13,"Type","","A type ascription pattern: <code>foo: f64</code>.",271,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",271,null],[13,"Wild","","A pattern that matches any value: <code>_</code>.",271,null],[3,"PatBox","","A box pattern: <code>box v</code>.",null,null],[12,"attrs","","",272,null],[12,"box_token","","",272,null],[12,"pat","","",272,null],[3,"PatIdent","","A pattern that binds a new variable: …",null,null],[12,"attrs","","",273,null],[12,"by_ref","","",273,null],[12,"mutability","","",273,null],[12,"ident","","",273,null],[12,"subpat","","",273,null],[3,"PatLit","","A literal pattern: <code>0</code>.",null,null],[12,"attrs","","",274,null],[12,"expr","","",274,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",275,null],[12,"mac","","",275,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",276,null],[12,"leading_vert","","",276,null],[12,"cases","","",276,null],[3,"PatPath","","A path pattern like <code>Color::Red</code>, optionally qualified with …",null,null],[12,"attrs","","",277,null],[12,"qself","","",277,null],[12,"path","","",277,null],[3,"PatRange","","A range pattern: <code>1..=2</code>.",null,null],[12,"attrs","","",278,null],[12,"lo","","",278,null],[12,"limits","","",278,null],[12,"hi","","",278,null],[3,"PatReference","","A reference pattern: <code>&mut var</code>.",null,null],[12,"attrs","","",279,null],[12,"and_token","","",279,null],[12,"mutability","","",279,null],[12,"pat","","",279,null],[3,"PatRest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",null,null],[12,"attrs","","",280,null],[12,"dot2_token","","",280,null],[3,"PatSlice","","A dynamically sized slice pattern: …",null,null],[12,"attrs","","",281,null],[12,"bracket_token","","",281,null],[12,"elems","","",281,null],[3,"PatStruct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",null,null],[12,"attrs","","",282,null],[12,"path","","",282,null],[12,"brace_token","","",282,null],[12,"fields","","",282,null],[12,"dot2_token","","",282,null],[3,"PatTuple","","A tuple pattern: <code>(a, b)</code>.",null,null],[12,"attrs","","",283,null],[12,"paren_token","","",283,null],[12,"elems","","",283,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: …",null,null],[12,"attrs","","",284,null],[12,"path","","",284,null],[12,"pat","","",284,null],[3,"PatType","","A type ascription pattern: <code>foo: f64</code>.",null,null],[12,"attrs","","",285,null],[12,"pat","","",285,null],[12,"colon_token","","",285,null],[12,"ty","","",285,null],[3,"PatWild","","A pattern that matches any value: <code>_</code>.",null,null],[12,"attrs","","",286,null],[12,"underscore_token","","",286,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the <code><K, V></code> …",null,null],[12,"colon2_token","","",287,null],[12,"lt_token","","",287,null],[12,"args","","",287,null],[12,"gt_token","","",287,null],[3,"Binding","","A binding (equality constraint) on an associated type: …",null,null],[12,"ident","","",288,null],[12,"eq_token","","",288,null],[12,"ty","","",288,null],[3,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",null,null],[12,"ident","","",289,null],[12,"colon_token","","",289,null],[12,"bounds","","",289,null],[4,"GenericArgument","","An individual generic argument, like <code>\'a</code>, <code>T</code>, or <code>Item = T</code>.",null,null],[13,"Lifetime","","A lifetime argument.",290,null],[13,"Type","","A type argument.",290,null],[13,"Binding","","A binding (equality constraint) on an associated type: …",290,null],[13,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",290,null],[13,"Const","","A const expression. Must be inside of a block.",290,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the <code>(A, B) -> C</code> in …",null,null],[12,"paren_token","","",291,null],[12,"inputs","","<code>(A, B)</code>",291,null],[12,"output","","<code>C</code>",291,null],[3,"Path","","A path at which a named item is exported (e.g. …",null,null],[12,"leading_colon","","",292,null],[12,"segments","","",292,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path …",null,null],[13,"None","","",293,null],[13,"AngleBracketed","","The <code><\'a, T></code> in <code>std::slice::iter<\'a, T></code>.",293,null],[13,"Parenthesized","","The <code>(A, B) -> C</code> in <code>Fn(A, B) -> C</code>.",293,null],[3,"PathSegment","","A segment of a path together with any path arguments on …",null,null],[12,"ident","","",294,null],[12,"arguments","","",294,null],[3,"QSelf","","The explicit Self type in a qualified path: the <code>T</code> in …",null,null],[12,"lt_token","","",295,null],[12,"ty","","",295,null],[12,"position","","",295,null],[12,"as_token","","",295,null],[12,"gt_token","","",295,null],[3,"Error","","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree …",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",null,[[["str",15]],[["parse",8],["result",6]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str",15]],[["file",3],["result",6]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to …",null,null],[14,"braced","","Parse a set of curly braces and expose their content to …",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content …",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type …",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the <code>quote!</code> …",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a …",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given …",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a …",null,null],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",296,[[],["span",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"to_string","","",296,[[],["string",3]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"span","","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",297,[[],["span",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"span","","",298,[[],["span",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"span","","",299,[[],["span",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"to_string","","",235,[[],["string",3]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",300,[[],["span",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"span","","",301,[[],["span",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"span","","",302,[[],["span",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"to_string","","",304,[[],["string",3]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"to_string","","",305,[[],["string",3]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"span","","",239,[[],["span",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"span","","",245,[[],["span",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"span","","",279,[[],["span",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"span","","",280,[[],["span",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"span","","",281,[[],["span",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"span","","",282,[[],["span",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"span","","",292,[[],["span",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"span","","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"span","","",290,[[],["span",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"span","","",291,[[],["span",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"fmt","syn","",296,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",296,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",296,[[]]],[11,"partial_cmp","","",296,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"clone","","",296,[[],["ident",3]]],[11,"cmp","","",296,[[["ident",3]],["ordering",4]]],[11,"eq","","",296,[[],["bool",15]]],[11,"eq","","",296,[[["ident",3]],["bool",15]]],[11,"to_tokens","","",296,[[["tokenstream",3]]]],[11,"span","","",296,[[],[["option",4],["span",3]]]],[11,"fmt","","",296,[[["formatter",3]],[["error",3],["result",4]]]],[11,"peek","","",235,[[["cursor",3]],["bool",15]]],[11,"display","","",235,[[],["str",15]]],[11,"peek","","",236,[[["cursor",3]],["bool",15]]],[11,"display","","",236,[[],["str",15]]],[11,"peek","","",300,[[["cursor",3]],["bool",15]]],[11,"display","","",300,[[],["str",15]]],[11,"peek","","",301,[[["cursor",3]],["bool",15]]],[11,"display","","",301,[[],["str",15]]],[11,"peek","","",302,[[["cursor",3]],["bool",15]]],[11,"display","","",302,[[],["str",15]]],[11,"peek","","",303,[[["cursor",3]],["bool",15]]],[11,"display","","",303,[[],["str",15]]],[11,"peek","","",304,[[["cursor",3]],["bool",15]]],[11,"display","","",304,[[],["str",15]]],[11,"peek","","",305,[[["cursor",3]],["bool",15]]],[11,"display","","",305,[[],["str",15]]],[11,"peek","","",237,[[["cursor",3]],["bool",15]]],[11,"display","","",237,[[],["str",15]]],[11,"peek","syn::token","",0,[[["cursor",3]],["bool",15]]],[11,"display","","",0,[[],["str",15]]],[11,"peek","","",101,[[["cursor",3]],["bool",15]]],[11,"display","","",101,[[],["str",15]]],[11,"peek","","",99,[[["cursor",3]],["bool",15]]],[11,"display","","",99,[[],["str",15]]],[11,"peek","","",100,[[["cursor",3]],["bool",15]]],[11,"display","","",100,[[],["str",15]]],[11,"peek","","",102,[[["cursor",3]],["bool",15]]],[11,"display","","",102,[[],["str",15]]],[11,"peek","","",1,[[["cursor",3]],["bool",15]]],[11,"display","","",1,[[],["str",15]]],[11,"peek","","",2,[[["cursor",3]],["bool",15]]],[11,"display","","",2,[[],["str",15]]],[11,"peek","","",3,[[["cursor",3]],["bool",15]]],[11,"display","","",3,[[],["str",15]]],[11,"peek","","",4,[[["cursor",3]],["bool",15]]],[11,"display","","",4,[[],["str",15]]],[11,"peek","","",5,[[["cursor",3]],["bool",15]]],[11,"display","","",5,[[],["str",15]]],[11,"peek","","",6,[[["cursor",3]],["bool",15]]],[11,"display","","",6,[[],["str",15]]],[11,"peek","","",7,[[["cursor",3]],["bool",15]]],[11,"display","","",7,[[],["str",15]]],[11,"peek","","",8,[[["cursor",3]],["bool",15]]],[11,"display","","",8,[[],["str",15]]],[11,"peek","","",9,[[["cursor",3]],["bool",15]]],[11,"display","","",9,[[],["str",15]]],[11,"peek","","",10,[[["cursor",3]],["bool",15]]],[11,"display","","",10,[[],["str",15]]],[11,"peek","","",11,[[["cursor",3]],["bool",15]]],[11,"display","","",11,[[],["str",15]]],[11,"peek","","",12,[[["cursor",3]],["bool",15]]],[11,"display","","",12,[[],["str",15]]],[11,"peek","","",13,[[["cursor",3]],["bool",15]]],[11,"display","","",13,[[],["str",15]]],[11,"peek","","",14,[[["cursor",3]],["bool",15]]],[11,"display","","",14,[[],["str",15]]],[11,"peek","","",15,[[["cursor",3]],["bool",15]]],[11,"display","","",15,[[],["str",15]]],[11,"peek","","",16,[[["cursor",3]],["bool",15]]],[11,"display","","",16,[[],["str",15]]],[11,"peek","","",17,[[["cursor",3]],["bool",15]]],[11,"display","","",17,[[],["str",15]]],[11,"peek","","",18,[[["cursor",3]],["bool",15]]],[11,"display","","",18,[[],["str",15]]],[11,"peek","","",19,[[["cursor",3]],["bool",15]]],[11,"display","","",19,[[],["str",15]]],[11,"peek","","",20,[[["cursor",3]],["bool",15]]],[11,"display","","",20,[[],["str",15]]],[11,"peek","","",21,[[["cursor",3]],["bool",15]]],[11,"display","","",21,[[],["str",15]]],[11,"peek","","",22,[[["cursor",3]],["bool",15]]],[11,"display","","",22,[[],["str",15]]],[11,"peek","","",23,[[["cursor",3]],["bool",15]]],[11,"display","","",23,[[],["str",15]]],[11,"peek","","",24,[[["cursor",3]],["bool",15]]],[11,"display","","",24,[[],["str",15]]],[11,"peek","","",25,[[["cursor",3]],["bool",15]]],[11,"display","","",25,[[],["str",15]]],[11,"peek","","",26,[[["cursor",3]],["bool",15]]],[11,"display","","",26,[[],["str",15]]],[11,"peek","","",27,[[["cursor",3]],["bool",15]]],[11,"display","","",27,[[],["str",15]]],[11,"peek","","",28,[[["cursor",3]],["bool",15]]],[11,"display","","",28,[[],["str",15]]],[11,"peek","","",29,[[["cursor",3]],["bool",15]]],[11,"display","","",29,[[],["str",15]]],[11,"peek","","",30,[[["cursor",3]],["bool",15]]],[11,"display","","",30,[[],["str",15]]],[11,"peek","","",31,[[["cursor",3]],["bool",15]]],[11,"display","","",31,[[],["str",15]]],[11,"peek","","",32,[[["cursor",3]],["bool",15]]],[11,"display","","",32,[[],["str",15]]],[11,"peek","","",33,[[["cursor",3]],["bool",15]]],[11,"display","","",33,[[],["str",15]]],[11,"peek","","",34,[[["cursor",3]],["bool",15]]],[11,"display","","",34,[[],["str",15]]],[11,"peek","","",35,[[["cursor",3]],["bool",15]]],[11,"display","","",35,[[],["str",15]]],[11,"peek","","",36,[[["cursor",3]],["bool",15]]],[11,"display","","",36,[[],["str",15]]],[11,"peek","","",37,[[["cursor",3]],["bool",15]]],[11,"display","","",37,[[],["str",15]]],[11,"peek","","",38,[[["cursor",3]],["bool",15]]],[11,"display","","",38,[[],["str",15]]],[11,"peek","","",39,[[["cursor",3]],["bool",15]]],[11,"display","","",39,[[],["str",15]]],[11,"peek","","",40,[[["cursor",3]],["bool",15]]],[11,"display","","",40,[[],["str",15]]],[11,"peek","","",41,[[["cursor",3]],["bool",15]]],[11,"display","","",41,[[],["str",15]]],[11,"peek","","",42,[[["cursor",3]],["bool",15]]],[11,"display","","",42,[[],["str",15]]],[11,"peek","","",43,[[["cursor",3]],["bool",15]]],[11,"display","","",43,[[],["str",15]]],[11,"peek","","",44,[[["cursor",3]],["bool",15]]],[11,"display","","",44,[[],["str",15]]],[11,"peek","","",45,[[["cursor",3]],["bool",15]]],[11,"display","","",45,[[],["str",15]]],[11,"peek","","",46,[[["cursor",3]],["bool",15]]],[11,"display","","",46,[[],["str",15]]],[11,"peek","","",47,[[["cursor",3]],["bool",15]]],[11,"display","","",47,[[],["str",15]]],[11,"peek","","",48,[[["cursor",3]],["bool",15]]],[11,"display","","",48,[[],["str",15]]],[11,"peek","","",49,[[["cursor",3]],["bool",15]]],[11,"display","","",49,[[],["str",15]]],[11,"peek","","",50,[[["cursor",3]],["bool",15]]],[11,"display","","",50,[[],["str",15]]],[11,"peek","","",51,[[["cursor",3]],["bool",15]]],[11,"display","","",51,[[],["str",15]]],[11,"peek","","",52,[[["cursor",3]],["bool",15]]],[11,"display","","",52,[[],["str",15]]],[11,"peek","","",53,[[["cursor",3]],["bool",15]]],[11,"display","","",53,[[],["str",15]]],[11,"peek","","",54,[[["cursor",3]],["bool",15]]],[11,"display","","",54,[[],["str",15]]],[11,"peek","","",55,[[["cursor",3]],["bool",15]]],[11,"display","","",55,[[],["str",15]]],[11,"peek","","",56,[[["cursor",3]],["bool",15]]],[11,"display","","",56,[[],["str",15]]],[11,"peek","","",57,[[["cursor",3]],["bool",15]]],[11,"display","","",57,[[],["str",15]]],[11,"peek","","",58,[[["cursor",3]],["bool",15]]],[11,"display","","",58,[[],["str",15]]],[11,"peek","","",59,[[["cursor",3]],["bool",15]]],[11,"display","","",59,[[],["str",15]]],[11,"peek","","",60,[[["cursor",3]],["bool",15]]],[11,"display","","",60,[[],["str",15]]],[11,"peek","","",61,[[["cursor",3]],["bool",15]]],[11,"display","","",61,[[],["str",15]]],[11,"peek","","",62,[[["cursor",3]],["bool",15]]],[11,"display","","",62,[[],["str",15]]],[11,"peek","","",63,[[["cursor",3]],["bool",15]]],[11,"display","","",63,[[],["str",15]]],[11,"peek","","",64,[[["cursor",3]],["bool",15]]],[11,"display","","",64,[[],["str",15]]],[11,"peek","","",65,[[["cursor",3]],["bool",15]]],[11,"display","","",65,[[],["str",15]]],[11,"peek","","",66,[[["cursor",3]],["bool",15]]],[11,"display","","",66,[[],["str",15]]],[11,"peek","","",67,[[["cursor",3]],["bool",15]]],[11,"display","","",67,[[],["str",15]]],[11,"peek","","",68,[[["cursor",3]],["bool",15]]],[11,"display","","",68,[[],["str",15]]],[11,"peek","","",69,[[["cursor",3]],["bool",15]]],[11,"display","","",69,[[],["str",15]]],[11,"peek","","",70,[[["cursor",3]],["bool",15]]],[11,"display","","",70,[[],["str",15]]],[11,"peek","","",71,[[["cursor",3]],["bool",15]]],[11,"display","","",71,[[],["str",15]]],[11,"peek","","",72,[[["cursor",3]],["bool",15]]],[11,"display","","",72,[[],["str",15]]],[11,"peek","","",73,[[["cursor",3]],["bool",15]]],[11,"display","","",73,[[],["str",15]]],[11,"peek","","",74,[[["cursor",3]],["bool",15]]],[11,"display","","",74,[[],["str",15]]],[11,"peek","","",75,[[["cursor",3]],["bool",15]]],[11,"display","","",75,[[],["str",15]]],[11,"peek","","",76,[[["cursor",3]],["bool",15]]],[11,"display","","",76,[[],["str",15]]],[11,"peek","","",77,[[["cursor",3]],["bool",15]]],[11,"display","","",77,[[],["str",15]]],[11,"peek","","",78,[[["cursor",3]],["bool",15]]],[11,"display","","",78,[[],["str",15]]],[11,"peek","","",79,[[["cursor",3]],["bool",15]]],[11,"display","","",79,[[],["str",15]]],[11,"peek","","",80,[[["cursor",3]],["bool",15]]],[11,"display","","",80,[[],["str",15]]],[11,"peek","","",81,[[["cursor",3]],["bool",15]]],[11,"display","","",81,[[],["str",15]]],[11,"peek","","",82,[[["cursor",3]],["bool",15]]],[11,"display","","",82,[[],["str",15]]],[11,"peek","","",83,[[["cursor",3]],["bool",15]]],[11,"display","","",83,[[],["str",15]]],[11,"peek","","",84,[[["cursor",3]],["bool",15]]],[11,"display","","",84,[[],["str",15]]],[11,"peek","","",85,[[["cursor",3]],["bool",15]]],[11,"display","","",85,[[],["str",15]]],[11,"peek","","",86,[[["cursor",3]],["bool",15]]],[11,"display","","",86,[[],["str",15]]],[11,"peek","","",87,[[["cursor",3]],["bool",15]]],[11,"display","","",87,[[],["str",15]]],[11,"peek","","",88,[[["cursor",3]],["bool",15]]],[11,"display","","",88,[[],["str",15]]],[11,"peek","","",89,[[["cursor",3]],["bool",15]]],[11,"display","","",89,[[],["str",15]]],[11,"peek","","",90,[[["cursor",3]],["bool",15]]],[11,"display","","",90,[[],["str",15]]],[11,"peek","","",91,[[["cursor",3]],["bool",15]]],[11,"display","","",91,[[],["str",15]]],[11,"peek","","",92,[[["cursor",3]],["bool",15]]],[11,"display","","",92,[[],["str",15]]],[11,"peek","","",93,[[["cursor",3]],["bool",15]]],[11,"display","","",93,[[],["str",15]]],[11,"peek","","",94,[[["cursor",3]],["bool",15]]],[11,"display","","",94,[[],["str",15]]],[11,"peek","","",95,[[["cursor",3]],["bool",15]]],[11,"display","","",95,[[],["str",15]]],[11,"peek","","",96,[[["cursor",3]],["bool",15]]],[11,"display","","",96,[[],["str",15]]],[11,"peek","","",97,[[["cursor",3]],["bool",15]]],[11,"display","","",97,[[],["str",15]]],[11,"peek","","",98,[[["cursor",3]],["bool",15]]],[11,"display","","",98,[[],["str",15]]],[11,"peek","syn","",296,[[["cursor",3]],["bool",15]]],[11,"display","","",296,[[],["str",15]]],[11,"parse_any","","",296,[[["parsestream",6]],["result",6]]],[11,"unraw","","",296,[[],["ident",3]]],[11,"advance_to","syn::parse","",113,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",296,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",130,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",154,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",134,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",132,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",136,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],[["result",6],["arm",3]]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],[["result",6],["usetree",4]]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",300,[[["parsestream",6]],["result",6]]],[11,"parse","","",301,[[["parsestream",6]],["result",6]]],[11,"parse","","",302,[[["parsestream",6]],["result",6]]],[11,"parse","","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",304,[[["parsestream",6]],["result",6]]],[11,"parse","","",305,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",239,[[["parsestream",6]],["result",6]]],[11,"parse","","",245,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",250,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",271,[[["parsestream",6]],["result",6]]],[11,"parse","","",292,[[["parsestream",6]],["result",6]]],[11,"parse","","",290,[[["parsestream",6]],["result",6]]],[11,"parse","","",287,[[["parsestream",6]],["result",6]]],[11,"parse","","",291,[[["parsestream",6]],["result",6]]],[11,"parse","","",294,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",313,[[["parsestream",6]],["result",6]]],[11,"drop","","",113,[[]]],[11,"from","syn","",296,[[["selfvalue",3]],["ident",3]]],[11,"from","","",296,[[["selftype",3]],["ident",3]]],[11,"from","","",296,[[["super",3]],["ident",3]]],[11,"from","","",296,[[["crate",3]],["ident",3]]],[11,"from","","",296,[[["extern",3]],["ident",3]]],[11,"from","","",296,[[["underscore",3]],["ident",3]]],[11,"from","","",118,[[["path",3]],["meta",4]]],[11,"from","","",118,[[["metalist",3]],["meta",4]]],[11,"from","","",118,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",121,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",121,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",123,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",123,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",130,[[["vispublic",3]],["visibility",4]]],[11,"from","","",130,[[["viscrate",3]],["visibility",4]]],[11,"from","","",130,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",137,[[["exprarray",3]],["expr",4]]],[11,"from","","",137,[[["exprassign",3]],["expr",4]]],[11,"from","","",137,[[["exprassignop",3]],["expr",4]]],[11,"from","","",137,[[["exprasync",3]],["expr",4]]],[11,"from","","",137,[[["exprawait",3]],["expr",4]]],[11,"from","","",137,[[["exprbinary",3]],["expr",4]]],[11,"from","","",137,[[["exprblock",3]],["expr",4]]],[11,"from","","",137,[[["exprbox",3]],["expr",4]]],[11,"from","","",137,[[["exprbreak",3]],["expr",4]]],[11,"from","","",137,[[["exprcall",3]],["expr",4]]],[11,"from","","",137,[[["exprcast",3]],["expr",4]]],[11,"from","","",137,[[["exprclosure",3]],["expr",4]]],[11,"from","","",137,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",137,[[["exprfield",3]],["expr",4]]],[11,"from","","",137,[[["exprforloop",3]],["expr",4]]],[11,"from","","",137,[[["exprgroup",3]],["expr",4]]],[11,"from","","",137,[[["exprif",3]],["expr",4]]],[11,"from","","",137,[[["exprindex",3]],["expr",4]]],[11,"from","","",137,[[["exprlet",3]],["expr",4]]],[11,"from","","",137,[[["exprlit",3]],["expr",4]]],[11,"from","","",137,[[["exprloop",3]],["expr",4]]],[11,"from","","",137,[[["exprmacro",3]],["expr",4]]],[11,"from","","",137,[[["exprmatch",3]],["expr",4]]],[11,"from","","",137,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",137,[[["exprparen",3]],["expr",4]]],[11,"from","","",137,[[["exprpath",3]],["expr",4]]],[11,"from","","",137,[[["exprrange",3]],["expr",4]]],[11,"from","","",137,[[["exprreference",3]],["expr",4]]],[11,"from","","",137,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",137,[[["exprreturn",3]],["expr",4]]],[11,"from","","",137,[[["exprstruct",3]],["expr",4]]],[11,"from","","",137,[[["exprtry",3]],["expr",4]]],[11,"from","","",137,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",137,[[["exprtuple",3]],["expr",4]]],[11,"from","","",137,[[["exprtype",3]],["expr",4]]],[11,"from","","",137,[[["exprunary",3]],["expr",4]]],[11,"from","","",137,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",137,[[["exprwhile",3]],["expr",4]]],[11,"from","","",137,[[["expryield",3]],["expr",4]]],[11,"from","","",178,[[["ident",3]],["member",4]]],[11,"from","","",178,[[["index",3]],["member",4]]],[11,"from","","",178,[[["usize",15]],["member",4]]],[11,"from","","",177,[[["usize",15]],["index",3]]],[11,"from","","",181,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",181,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",181,[[["constparam",3]],["genericparam",4]]],[11,"from","","",189,[[["ident",3]]]],[11,"from","","",190,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",190,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",192,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",192,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",192,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",204,[[["itemconst",3]],["item",4]]],[11,"from","","",204,[[["itemenum",3]],["item",4]]],[11,"from","","",204,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",204,[[["itemfn",3]],["item",4]]],[11,"from","","",204,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",204,[[["itemimpl",3]],["item",4]]],[11,"from","","",204,[[["itemmacro",3]],["item",4]]],[11,"from","","",204,[[["itemmacro2",3]],["item",4]]],[11,"from","","",204,[[["itemmod",3]],["item",4]]],[11,"from","","",204,[[["itemstatic",3]],["item",4]]],[11,"from","","",204,[[["itemstruct",3]],["item",4]]],[11,"from","","",204,[[["itemtrait",3]],["item",4]]],[11,"from","","",204,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",204,[[["itemtype",3]],["item",4]]],[11,"from","","",204,[[["itemunion",3]],["item",4]]],[11,"from","","",204,[[["itemuse",3]],["item",4]]],[11,"from","","",204,[[["deriveinput",3]],["item",4]]],[11,"from","","",245,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",245,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",245,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",233,[[["usepath",3]],["usetree",4]]],[11,"from","","",233,[[["usename",3]],["usetree",4]]],[11,"from","","",233,[[["userename",3]],["usetree",4]]],[11,"from","","",233,[[["useglob",3]],["usetree",4]]],[11,"from","","",233,[[["usegroup",3]],["usetree",4]]],[11,"from","","",194,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",223,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",223,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",223,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",223,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",199,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",199,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",199,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",199,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",193,[[["receiver",3]],["fnarg",4]]],[11,"from","","",193,[[["pattype",3]],["fnarg",4]]],[11,"from","","",236,[[["litstr",3]],["lit",4]]],[11,"from","","",236,[[["litbytestr",3]],["lit",4]]],[11,"from","","",236,[[["litbyte",3]],["lit",4]]],[11,"from","","",236,[[["litchar",3]],["lit",4]]],[11,"from","","",236,[[["litint",3]],["lit",4]]],[11,"from","","",236,[[["litfloat",3]],["lit",4]]],[11,"from","","",236,[[["litbool",3]],["lit",4]]],[11,"from","","",304,[[["literal",3]]]],[11,"from","","",305,[[["literal",3]]]],[11,"from","","",241,[[["datastruct",3]],["data",4]]],[11,"from","","",241,[[["dataenum",3]],["data",4]]],[11,"from","","",241,[[["dataunion",3]],["data",4]]],[11,"from","","",254,[[["typearray",3]],["type",4]]],[11,"from","","",254,[[["typebarefn",3]],["type",4]]],[11,"from","","",254,[[["typegroup",3]],["type",4]]],[11,"from","","",254,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",254,[[["typeinfer",3]],["type",4]]],[11,"from","","",254,[[["typemacro",3]],["type",4]]],[11,"from","","",254,[[["typenever",3]],["type",4]]],[11,"from","","",254,[[["typeparen",3]],["type",4]]],[11,"from","","",254,[[["typepath",3]],["type",4]]],[11,"from","","",254,[[["typeptr",3]],["type",4]]],[11,"from","","",254,[[["typereference",3]],["type",4]]],[11,"from","","",254,[[["typeslice",3]],["type",4]]],[11,"from","","",254,[[["typetraitobject",3]],["type",4]]],[11,"from","","",254,[[["typetuple",3]],["type",4]]],[11,"from","","",271,[[["patbox",3]],["pat",4]]],[11,"from","","",271,[[["patident",3]],["pat",4]]],[11,"from","","",271,[[["patlit",3]],["pat",4]]],[11,"from","","",271,[[["patmacro",3]],["pat",4]]],[11,"from","","",271,[[["pator",3]],["pat",4]]],[11,"from","","",271,[[["patpath",3]],["pat",4]]],[11,"from","","",271,[[["patrange",3]],["pat",4]]],[11,"from","","",271,[[["patreference",3]],["pat",4]]],[11,"from","","",271,[[["patrest",3]],["pat",4]]],[11,"from","","",271,[[["patslice",3]],["pat",4]]],[11,"from","","",271,[[["patstruct",3]],["pat",4]]],[11,"from","","",271,[[["pattuple",3]],["pat",4]]],[11,"from","","",271,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",271,[[["pattype",3]],["pat",4]]],[11,"from","","",271,[[["patwild",3]],["pat",4]]],[11,"from","","",292,[[]]],[11,"from","","",294,[[]]],[11,"from","syn::parse","",115,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",306,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"len","","",306,[[],["usize",15]]],[11,"len","","",307,[[],["usize",15]]],[11,"len","","",308,[[],["usize",15]]],[11,"len","","",309,[[],["usize",15]]],[11,"len","","",310,[[],["usize",15]]],[11,"len","","",311,[[],["usize",15]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",115,[[["intoiterator",8]]]],[11,"into_iter","syn","",123,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",115,[[]]],[11,"next","syn::punctuated","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",297,[[]]],[11,"clone","","",298,[[]]],[11,"clone","","",299,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",300,[[]]],[11,"clone","","",301,[[]]],[11,"clone","","",302,[[]]],[11,"clone","","",303,[[]]],[11,"clone","","",304,[[]]],[11,"clone","","",305,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",306,[[]]],[11,"clone","","",308,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",251,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",252,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",289,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",290,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",239,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",291,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",292,[[]]],[11,"clone","","",293,[[]]],[11,"clone","","",294,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",295,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",192,[[]]],[11,"clone","syn::parse","",112,[[]]],[11,"clone","","",115,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",182,[[]]],[11,"default","","",179,[[]]],[11,"default","","",293,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",235,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",178,[[],["bool",15]]],[11,"eq","","",177,[[],["bool",15]]],[11,"eq","","",235,[[["lifetime",3]],["bool",15]]],[11,"eq","syn::buffer","",104,[[],["bool",15]]],[11,"partial_cmp","syn","",235,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",112,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",304,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[["usize",15]]]],[11,"index_mut","","",106,[[["usize",15]]]],[11,"hash","syn","",178,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",235,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",297,[[["tokenstream",3]]]],[11,"to_tokens","","",298,[[["tokenstream",3]]]],[11,"to_tokens","","",299,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",300,[[["tokenstream",3]]]],[11,"to_tokens","","",301,[[["tokenstream",3]]]],[11,"to_tokens","","",302,[[["tokenstream",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",239,[[["tokenstream",3]]]],[11,"to_tokens","","",245,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",282,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",279,[[["tokenstream",3]]]],[11,"to_tokens","","",280,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","","",281,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",292,[[["tokenstream",3]]]],[11,"to_tokens","","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"to_tokens","","",290,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",291,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",178,[[["formatter",3]],["result",6]]],[11,"span","","",178,[[],[["option",4],["span",3]]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"span","","",177,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",296,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",296,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",296,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the …",117,[[],[["meta",4],["result",6]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",117,[[],[["parse",8],["result",6]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given …",117,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",117,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",117,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta …",118,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [<code>Field</code>] items in this …",123,[[],[["field",3],["iter",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [<code>Field</code>] items …",123,[[],[["itermut",3],["field",3]]]],[11,"len","","Returns the number of fields.",123,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if there are zero fields.",123,[[],["bool",15]]],[11,"parse_without_eager_brace","","An alternative to the primary <code>Expr::parse</code> parser (from the…",137,[[["parsestream",6]],[["result",6],["expr",4]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type …",182,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type …",182,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the …",182,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the …",182,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant …",182,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the …",182,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty <code>where</code>-clause if there is not one …",182,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for …",182,[[]]],[11,"as_turbofish","","Turn a type\'s generics like <code><X, Y></code> into a turbofish like …",298,[[],["turbofish",3]]],[11,"new","","",183,[[["lifetime",3]]]],[11,"receiver","","A method\'s <code>self</code> receiver, such as <code>&self</code> or <code>self: Box<Self></code>…",222,[[],[["fnarg",4],["option",4]]]],[11,"lifetime","","",221,[[],[["lifetime",3],["option",4]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the …",235,[[["span",3],["str",15]]]],[11,"span","","",235,[[],["span",3]]],[11,"set_span","","",235,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",236,[[["literal",3]]]],[11,"suffix","","",236,[[],["str",15]]],[11,"span","","",236,[[],["span",3]]],[11,"set_span","","",236,[[["span",3]]]],[11,"new","","",300,[[["span",3],["str",15]]]],[11,"value","","",300,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string …",300,[[],[["parse",8],["result",6]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",300,[[["parser",8]],["result",6]]],[11,"span","","",300,[[],["span",3]]],[11,"set_span","","",300,[[["span",3]]]],[11,"suffix","","",300,[[],["str",15]]],[11,"new","","",301,[[["span",3]]]],[11,"value","","",301,[[],[["vec",3],["u8",15]]]],[11,"span","","",301,[[],["span",3]]],[11,"set_span","","",301,[[["span",3]]]],[11,"suffix","","",301,[[],["str",15]]],[11,"new","","",302,[[["span",3],["u8",15]]]],[11,"value","","",302,[[],["u8",15]]],[11,"span","","",302,[[],["span",3]]],[11,"set_span","","",302,[[["span",3]]]],[11,"suffix","","",302,[[],["str",15]]],[11,"new","","",303,[[["char",15],["span",3]]]],[11,"value","","",303,[[],["char",15]]],[11,"span","","",303,[[],["span",3]]],[11,"set_span","","",303,[[["span",3]]]],[11,"suffix","","",303,[[],["str",15]]],[11,"new","","",304,[[["span",3],["str",15]]]],[11,"base10_digits","","",304,[[],["str",15]]],[11,"base10_parse","","Parses the literal into a selected number type.",304,[[],["result",6]]],[11,"suffix","","",304,[[],["str",15]]],[11,"span","","",304,[[],["span",3]]],[11,"set_span","","",304,[[["span",3]]]],[11,"new","","",305,[[["span",3],["str",15]]]],[11,"base10_digits","","",305,[[],["str",15]]],[11,"base10_parse","","",305,[[],["result",6]]],[11,"suffix","","",305,[[],["str",15]]],[11,"span","","",305,[[],["span",3]]],[11,"set_span","","",305,[[["span",3]]]],[11,"new","","",237,[[["bool",15],["span",3]]]],[11,"value","","",237,[[],["bool",15]]],[11,"span","","",237,[[],["span",3]]],[11,"set_span","","",237,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters …",239,[[],[["parse",8],["result",6]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters …",239,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements, …",248,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"without_plus","","In some positions, types may not contain the <code>+</code> character, …",254,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",253,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",267,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",258,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a <code>Path</code> containing no path arguments on any of its …",292,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to …",292,[[],["bool",15]]],[11,"get_ident","","If this path consists of a single ident, returns the …",292,[[],[["option",4],["ident",3]]]],[11,"is_empty","","",293,[[],["bool",15]]],[11,"visit_abi_mut","syn::visit_mut","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",109,[[["arm",3]]]],[11,"visit_attr_style_mut","","",109,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",109,[[["binop",4]]]],[11,"visit_binding_mut","","",109,[[["binding",3]]]],[11,"visit_block_mut","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",109,[[["constparam",3]]]],[11,"visit_constraint_mut","","",109,[[["constraint",3]]]],[11,"visit_data_mut","","",109,[[["data",4]]]],[11,"visit_data_enum_mut","","",109,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",109,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",109,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",109,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",109,[[["expr",4]]]],[11,"visit_expr_array_mut","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",109,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",109,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",109,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",109,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",109,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",109,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",109,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",109,[[["expryield",3]]]],[11,"visit_field_mut","","",109,[[["field",3]]]],[11,"visit_field_pat_mut","","",109,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",109,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",109,[[["fields",4]]]],[11,"visit_fields_named_mut","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",109,[[["file",3]]]],[11,"visit_fn_arg_mut","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",109,[[["genericparam",4]]]],[11,"visit_generics_mut","","",109,[[["generics",3]]]],[11,"visit_ident_mut","","",109,[[["ident",3]]]],[11,"visit_impl_item_mut","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",109,[[["implitemtype",3]]]],[11,"visit_index_mut","","",109,[[["index",3]]]],[11,"visit_item_mut","","",109,[[["item",4]]]],[11,"visit_item_const_mut","","",109,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",109,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",109,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",109,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",109,[[["itemuse",3]]]],[11,"visit_label_mut","","",109,[[["label",3]]]],[11,"visit_lifetime_mut","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",109,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",109,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",109,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",109,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",109,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",109,[[["litint",3]]]],[11,"visit_lit_str_mut","","",109,[[["litstr",3]]]],[11,"visit_local_mut","","",109,[[["local",3]]]],[11,"visit_macro_mut","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",109,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",109,[[["member",4]]]],[11,"visit_meta_mut","","",109,[[["meta",4]]]],[11,"visit_meta_list_mut","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",109,[[["pat",4]]]],[11,"visit_pat_box_mut","","",109,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",109,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",109,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",109,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",109,[[["pator",3]]]],[11,"visit_pat_path_mut","","",109,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",109,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",109,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",109,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",109,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",109,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",109,[[["patwild",3]]]],[11,"visit_path_mut","","",109,[[["path",3]]]],[11,"visit_path_arguments_mut","","",109,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",109,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",109,[[["qself",3]]]],[11,"visit_range_limits_mut","","",109,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",109,[[["receiver",3]]]],[11,"visit_return_type_mut","","",109,[[["returntype",4]]]],[11,"visit_signature_mut","","",109,[[["signature",3]]]],[11,"visit_span_mut","","",109,[[["span",3]]]],[11,"visit_stmt_mut","","",109,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",109,[[["traititemtype",3]]]],[11,"visit_type_mut","","",109,[[["type",4]]]],[11,"visit_type_array_mut","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",109,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",109,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",109,[[["typenever",3]]]],[11,"visit_type_param_mut","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",109,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",109,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",109,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",109,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",109,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",109,[[["unop",4]]]],[11,"visit_use_glob_mut","","",109,[[["useglob",3]]]],[11,"visit_use_group_mut","","",109,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",109,[[["usename",3]]]],[11,"visit_use_path_mut","","",109,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",109,[[["userename",3]]]],[11,"visit_use_tree_mut","","",109,[[["usetree",4]]]],[11,"visit_variadic_mut","","",109,[[["variadic",3]]]],[11,"visit_variant_mut","","",109,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",109,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",109,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",109,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",109,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine …",312,[[["peek",8]],["bool",15]]],[11,"error","","Triggers an error at the current position of the parse …",312,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"VisitMut"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"sync":{"doc":"Sync primitive types whose methods panic rather than …","i":[[3,"Condvar","sync","A Condition Variable.",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared …",null,null],[3,"WouldBlock","","The lock could not be acquired at this time because the …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"default","","",0,[[],["condvar",3]]],[11,"default","","",1,[[],["mutex",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new condvar that is ready to be waited on.",0,[[],["condvar",3]]],[11,"wait","","Waits on a condvar, blocking the current thread until it …",0,[[["mutexguard",3]],["mutexguard",3]]],[11,"wait_while","","Blocks the current thread until this condition variable …",0,[[["mutexguard",3]],["mutexguard",3]]],[11,"wait_timeout","","Waits on a condvar, blocking the current thread until it …",0,[[["duration",3],["mutexguard",3]]]],[11,"wait_timeout_while","","Waits on this condition variable for a notification, …",0,[[["duration",3],["mutexguard",3]]]],[11,"notify_one","","Notifies one thread blocked by this condvar.",0,[[]]],[11,"notify_all","","Notifies all threads blocked by this condvar.",0,[[]]],[11,"new","","Creates a new mutex in an unlocked state ready for use.",1,[[],["mutex",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",1,[[]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is …",1,[[],["mutexguard",3]]],[11,"try_lock","","Attempts to acquire this lock.",1,[[],[["wouldblock",3],["mutexguard",3],["result",4]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",1,[[]]]],"p":[[3,"Condvar"],[3,"Mutex"],[3,"WouldBlock"]]},\
"sys_util":{"doc":"Small system utility modules for usage by other modules.","i":[[0,"handle_eintr","sys_util","Macro and helper trait for handling interrupted routines.",null,null],[8,"InterruptibleResult","sys_util::handle_eintr","Trait for determining if a result indicates the operation …",null,null],[10,"is_interrupted","","Returns <code>true</code> if this result indicates the operation was …",0,[[],["bool",15]]],[0,"ioctl","sys_util","Macros and wrapper functions for dealing with ioctls.",null,null],[17,"_IOC_NRBITS","sys_util::ioctl","",null,null],[17,"_IOC_TYPEBITS","","",null,null],[17,"_IOC_SIZEBITS","","",null,null],[17,"_IOC_DIRBITS","","",null,null],[17,"_IOC_NRMASK","","",null,null],[17,"_IOC_TYPEMASK","","",null,null],[17,"_IOC_SIZEMASK","","",null,null],[17,"_IOC_DIRMASK","","",null,null],[17,"_IOC_NRSHIFT","","",null,null],[17,"_IOC_TYPESHIFT","","",null,null],[17,"_IOC_SIZESHIFT","","",null,null],[17,"_IOC_DIRSHIFT","","",null,null],[17,"_IOC_NONE","","",null,null],[17,"_IOC_WRITE","","",null,null],[17,"_IOC_READ","","",null,null],[17,"IOC_IN","","",null,null],[17,"IOC_OUT","","",null,null],[17,"IOC_INOUT","","",null,null],[17,"IOCSIZE_MASK","","",null,null],[17,"IOCSIZE_SHIFT","","",null,null],[6,"IoctlNr","","",null,null],[5,"ioctl","","Run an ioctl with no arguments.",null,[[["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_val","","Run an ioctl with a single value argument.",null,[[["c_ulong",6],["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_ref","","Run an ioctl with an immutable reference.",null,[[["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_mut_ref","","Run an ioctl with a mutable reference.",null,[[["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_ptr","","Run an ioctl with a raw pointer.",null,[[["ioctlnr",6]],["c_int",6]]],[5,"ioctl_with_mut_ptr","","Run an ioctl with a mutable raw pointer.",null,[[["ioctlnr",6]],["c_int",6]]],[0,"syslog","sys_util","Facilities for sending log message to syslog.",null,null],[4,"Priority","sys_util::syslog","The priority (i.e. severity) of a syslog message.",null,null],[13,"Emergency","","",1,null],[13,"Alert","","",1,null],[13,"Critical","","",1,null],[13,"Error","","",1,null],[13,"Warning","","",1,null],[13,"Notice","","",1,null],[13,"Info","","",1,null],[13,"Debug","","",1,null],[4,"Facility","","The facility of a syslog message.",null,null],[13,"Kernel","","",2,null],[13,"User","","",2,null],[13,"Mail","","",2,null],[13,"Daemon","","",2,null],[13,"Auth","","",2,null],[13,"Syslog","","",2,null],[13,"Lpr","","",2,null],[13,"News","","",2,null],[13,"Uucp","","",2,null],[13,"Local0","","",2,null],[13,"Local1","","",2,null],[13,"Local2","","",2,null],[13,"Local3","","",2,null],[13,"Local4","","",2,null],[13,"Local5","","",2,null],[13,"Local6","","",2,null],[13,"Local7","","",2,null],[4,"Error","","Errors returned by <code>syslog::init()</code>.",null,null],[13,"Connect","","Error while attempting to connect socket.",3,null],[13,"GetLowestFd","","There was an error using <code>open</code> to get the lowest file …",3,null],[13,"InvalidFd","","The guess of libc\'s file descriptor for the syslog …",3,null],[13,"NeverInitialized","","Initialization was never attempted.",3,null],[13,"Poisoned","","Initialization has previously failed and can not be …",3,null],[13,"Socket","","Error while creating socket.",3,null],[5,"init","","Initialize the syslog connection and internal variables.",null,[[],[["error",4],["result",4]]]],[5,"set_proc_name","","Replaces the process name reported in each syslog message.",null,[[["into",8],["string",3]]]],[5,"echo_syslog","","Enables or disables echoing log messages to the syslog.",null,[[["bool",15]],[["error",4],["result",4]]]],[5,"echo_file","","Replaces the optional <code>File</code> to echo log messages to.",null,[[["option",4],["file",3]]]],[5,"echo_stderr","","Enables or disables echoing log messages to the …",null,[[["bool",15]]]],[5,"push_fds","","Retrieves the file descriptors owned by the global …",null,[[["vec",3]]]],[5,"push_descriptors","","Does the same as push_fds, but using the RawDescriptorType",null,[[["vec",3]]]],[5,"log","","Records a log message with the given details.",null,[[["priority",4],["option",4],["arguments",3],["facility",4]]]],[3,"Syslogger","","",null,null],[11,"new","","",4,[[["priority",4],["facility",4]],["syslogger",3]]],[0,"file_traits","sys_util","",null,null],[0,"lib","sys_util::file_traits","",null,null],[6,"c_int","sys_util::file_traits::lib","",null,null],[4,"c_void","","Equivalent to C\'s <code>void</code> type when used as a pointer.",null,null],[3,"iovec","","",null,null],[12,"iov_base","","",5,null],[12,"iov_len","","",5,null],[6,"off64_t","","",null,null],[5,"pread64","","",null,[[["usize",15],["i64",15],["i32",15]],["isize",15]]],[5,"preadv64","","",null,[[["i64",15],["i32",15]],["isize",15]]],[5,"pwrite64","","",null,[[["usize",15],["i64",15],["i32",15]],["isize",15]]],[5,"pwritev64","","",null,[[["i64",15],["i32",15]],["isize",15]]],[5,"read","","",null,[[["usize",15],["i32",15]],["isize",15]]],[5,"readv","","",null,[[["i32",15]],["isize",15]]],[6,"size_t","","",null,null],[5,"write","","",null,[[["usize",15],["i32",15]],["isize",15]]],[5,"writev","","",null,[[["i32",15]],["isize",15]]],[3,"VolatileSlice","","A slice of raw memory that supports volatile access. Like …",null,null],[8,"FileSync","sys_util::file_traits","A trait for flushing the contents of a file to disk. This …",null,null],[10,"fsync","","",6,[[],["result",6]]],[8,"FileSetLen","","A trait for setting the size of a file. This is …",null,null],[10,"set_len","","",7,[[["u64",15]],["result",6]]],[8,"FileGetLen","","A trait for getting the size of a file. This is …",null,null],[10,"get_len","","Get the current length of the file in bytes.",8,[[],[["result",6],["u64",15]]]],[8,"FileAllocate","","A trait for allocating disk space in a sparse file. This …",null,null],[10,"allocate","","Allocate storage for the region of the file starting at …",9,[[["u64",15]],["result",6]]],[8,"FileReadWriteVolatile","","A trait similar to <code>Read</code> and <code>Write</code>, but uses volatile …",null,null],[10,"read_volatile","","Read bytes from this file into the given slice, returning …",10,[[["volatileslice",3]],[["usize",15],["result",6]]]],[11,"read_vectored_volatile","","Like <code>read_volatile</code>, except it reads to a slice of …",10,[[],[["usize",15],["result",6]]]],[11,"read_exact_volatile","","Reads bytes from this into the given slice until all …",10,[[["volatileslice",3]],["result",6]]],[10,"write_volatile","","Write bytes from the slice to the given file, returning …",10,[[["volatileslice",3]],[["usize",15],["result",6]]]],[11,"write_vectored_volatile","","Like <code>write_volatile</code>, except that it writes from a slice …",10,[[],[["usize",15],["result",6]]]],[11,"write_all_volatile","","Write bytes from the slice to the given file until all …",10,[[["volatileslice",3]],["result",6]]],[8,"FileReadWriteAtVolatile","","A trait similar to the unix <code>ReadExt</code> and <code>WriteExt</code> traits, …",null,null],[10,"read_at_volatile","","Reads bytes from this file at <code>offset</code> into the given …",11,[[["u64",15],["volatileslice",3]],[["usize",15],["result",6]]]],[11,"read_vectored_at_volatile","","Like <code>read_at_volatile</code>, except it reads to a slice of …",11,[[["u64",15]],[["usize",15],["result",6]]]],[11,"read_exact_at_volatile","","Reads bytes from this file at <code>offset</code> into the given slice …",11,[[["u64",15],["volatileslice",3]],["result",6]]],[10,"write_at_volatile","","Writes bytes from this file at <code>offset</code> into the given …",11,[[["u64",15],["volatileslice",3]],[["usize",15],["result",6]]]],[11,"write_vectored_at_volatile","","Like <code>write_at_at_volatile</code>, except that it writes from a …",11,[[["u64",15]],[["usize",15],["result",6]]]],[11,"write_all_at_volatile","","Writes bytes from this file at <code>offset</code> into the given …",11,[[["u64",15],["volatileslice",3]],["result",6]]],[8,"AsRawFds","","A trait similar to <code>AsRawFd</code> but supports an arbitrary …",null,null],[10,"as_raw_fds","","",12,[[],[["rawfd",6],["vec",3]]]],[0,"net","sys_util","",null,null],[4,"InetVersion","sys_util::net","Assist in handling both IP version 4 and IP version 6.",null,null],[13,"V4","","",13,null],[13,"V6","","",13,null],[11,"from_sockaddr","","",13,[[["socketaddr",4]]]],[3,"TcpSocket","","A TCP socket.",null,null],[11,"new","","",14,[[["inetversion",4]],["result",6]]],[11,"bind","","",14,[[["tosocketaddrs",8]],["result",6]]],[11,"connect","","",14,[[["tosocketaddrs",8]],[["result",6],["tcpstream",3]]]],[11,"listen","","",14,[[],[["result",6],["tcplistener",3]]]],[11,"local_port","","Returns the port that this socket is bound to. This can …",14,[[],[["result",6],["u16",15]]]],[3,"UnixSeqpacket","","A Unix <code>SOCK_SEQPACKET</code> socket point to given <code>path</code>",null,null],[11,"connect","","Open a <code>SOCK_SEQPACKET</code> connection to socket named by <code>path</code>.",15,[[["path",3],["asref",8]],["result",6]]],[11,"pair","","Creates a pair of connected <code>SOCK_SEQPACKET</code> sockets.",15,[[],["result",6]]],[11,"try_clone","","Clone the underlying FD.",15,[[],["result",6]]],[11,"get_readable_bytes","","Gets the number of bytes that can be read from this …",15,[[],[["usize",15],["result",6]]]],[11,"next_packet_size","","Gets the number of bytes in the next packet. This blocks …",15,[[],[["usize",15],["result",6]]]],[11,"send","","Write data from a given buffer to the socket fd",15,[[],[["usize",15],["result",6]]]],[11,"recv","","Read data from the socket fd to a given buffer",15,[[],[["usize",15],["result",6]]]],[11,"recv_to_vec","","Read data from the socket fd to a given <code>Vec</code>, resizing it …",15,[[["vec",3]],["result",6]]],[11,"recv_as_vec","","Read data from the socket fd to a new <code>Vec</code>.",15,[[],[["result",6],["vec",3]]]],[11,"recv_as_vec_with_fds","","Read data and fds from the socket fd to a new pair of <code>Vec</code>.",15,[[],["result",6]]],[11,"set_read_timeout","","Sets or removes the timeout for read/recv operations on …",15,[[["option",4],["duration",3]],["result",6]]],[11,"set_write_timeout","","Sets or removes the timeout for write/send operations on …",15,[[["option",4],["duration",3]],["result",6]]],[3,"UnixSeqpacketListener","","Like a <code>UnixListener</code> but for accepting <code>UnixSeqpacket</code> type …",null,null],[11,"bind","","Creates a new <code>UnixSeqpacketListener</code> bound to the given …",16,[[["path",3],["asref",8]],["result",6]]],[11,"accept","","Blocks for and accepts a new incoming connection and …",16,[[],[["unixseqpacket",3],["result",6]]]],[11,"path","","Gets the path that this listener is bound to.",16,[[],[["result",6],["pathbuf",3]]]],[3,"UnlinkUnixSeqpacketListener","","Used to attempt to clean up a <code>UnixSeqpacketListener</code> after …",null,null],[12,"0","","",17,null],[0,"rand","sys_util","Rust implementation of functionality parallel to …",null,null],[4,"Source","sys_util::rand","Represents whether or not the random bytes are pulled …",null,null],[13,"Pseudorandom","","",18,null],[13,"Random","","",18,null],[5,"rand_bytes","","Fills <code>output</code> completely with random bytes from the …",null,[[["source",4]],["result",6]]],[5,"rand_vec","","Allocates a vector of length <code>len</code> filled with random bytes …",null,[[["usize",15],["source",4]],[["vec",3],["result",6]]]],[0,"read_dir","sys_util","",null,null],[3,"DirEntry","sys_util::read_dir","",null,null],[12,"ino","","",19,null],[12,"offset","","",19,null],[12,"type_","","",19,null],[12,"name","","",19,null],[3,"ReadDir","","",null,null],[11,"next","","Return the next directory entry. This is implemented as a …",20,[[],[["option",4],["result",6]]]],[5,"read_dir","","",null,[[["off64_t",6]],[["readdir",3],["result",6]]]],[0,"scoped_path","sys_util","",null,null],[5,"get_temp_path","sys_util::scoped_path","Returns a stable path based on the label, pid, and tid. …",null,[[["option",4],["str",15]],["pathbuf",3]]],[3,"ScopedPath","","Automatically deletes the path it contains when it goes …",null,null],[11,"create","","",21,[[],["result",6]]],[0,"scoped_signal_handler","sys_util","Provides a struct for registering signal handlers that …",null,null],[4,"Error","sys_util::scoped_signal_handler","",null,null],[13,"AlreadyWaiting","","Already waiting for interrupt.",22,null],[13,"HandlerAlreadySet","","Signal already has a handler.",22,null],[13,"HasDefaultSignalHandler","","Failed to check if signal has the default signal handler.",22,null],[13,"RegisterSignalHandler","","Failed to register a signal handler.",22,null],[13,"Sigaction","","Sigaction failed.",22,null],[13,"WaitForSignal","","Failed to wait for signal.",22,null],[6,"Result","","",null,null],[8,"SignalHandler","","The interface used by Scoped Signal handler.",null,null],[10,"handle_signal","","A function that is called to handle the passed signal.",23,[[["signal",4]]]],[3,"ScopedSignalHandler","","Represents a signal handler that is registered with a set …",null,null],[11,"new","","Attempts to register <code>handler</code> with the provided <code>signals</code>. …",24,[[],["result",6]]],[3,"EmptySignalHandler","","A signal handler that does nothing.",null,null],[5,"wait_for_interrupt","","Blocks until SIGINT is received, which often happens …",null,[[],["result",6]]],[0,"signal","sys_util","",null,null],[4,"Error","sys_util::signal","",null,null],[13,"BlockSignal","","The signal could not be blocked.",25,null],[13,"ClearCheckPending","","Failed to check if given signal is in the set of pending …",25,null],[13,"ClearGetPending","","Failed to get pending signals.",25,null],[13,"ClearWaitPending","","Failed to wait for given signal.",25,null],[13,"CompareBlockedSignals","","Failed to check if the requested signal is in the blocked …",25,null],[13,"CreateSigset","","Couldn\'t create a sigset.",25,null],[13,"GetSid","","Failed to get session id.",25,null],[13,"Kill","","Failed to send signal to pid.",25,null],[13,"RetrieveSignalMask","","The signal mask could not be retrieved.",25,null],[13,"RtSignumGreaterThanMax","","Converted signum greater than SIGRTMAX.",25,null],[13,"SignalAlreadyBlocked","","The wrapped signal has already been blocked.",25,null],[13,"TimedOut","","Timeout reached.",25,null],[13,"UnblockSignal","","The signal could not be unblocked.",25,null],[13,"UnrecognizedSignum","","Failed to convert signum to Signal.",25,null],[13,"WaitForSignal","","Failed to wait for signal.",25,null],[13,"WaitPid","","Failed to wait for pid.",25,null],[4,"Signal","","",null,null],[13,"Abort","","",26,null],[13,"Alarm","","",26,null],[13,"Bus","","",26,null],[13,"Child","","",26,null],[13,"Continue","","",26,null],[13,"ExceededFileSize","","",26,null],[13,"FloatingPointException","","",26,null],[13,"HangUp","","",26,null],[13,"IllegalInstruction","","",26,null],[13,"Interrupt","","",26,null],[13,"Io","","",26,null],[13,"Kill","","",26,null],[13,"Pipe","","",26,null],[13,"Power","","",26,null],[13,"Profile","","",26,null],[13,"Quit","","",26,null],[13,"SegmentationViolation","","",26,null],[13,"StackFault","","",26,null],[13,"Stop","","",26,null],[13,"Sys","","",26,null],[13,"Trap","","",26,null],[13,"Terminate","","",26,null],[13,"TtyIn","","",26,null],[13,"TtyOut","","",26,null],[13,"TtyStop","","",26,null],[13,"Urgent","","",26,null],[13,"User1","","",26,null],[13,"User2","","",26,null],[13,"VtAlarm","","",26,null],[13,"Winch","","",26,null],[13,"Xcpu","","",26,null],[13,"Rt0","","",26,null],[13,"Rt1","","",26,null],[13,"Rt2","","",26,null],[13,"Rt3","","",26,null],[13,"Rt4","","",26,null],[13,"Rt5","","",26,null],[13,"Rt6","","",26,null],[13,"Rt7","","",26,null],[13,"Rt8","","",26,null],[13,"Rt9","","",26,null],[13,"Rt10","","",26,null],[13,"Rt11","","",26,null],[13,"Rt12","","",26,null],[13,"Rt13","","",26,null],[13,"Rt14","","",26,null],[13,"Rt15","","",26,null],[13,"Rt16","","",26,null],[13,"Rt17","","",26,null],[13,"Rt18","","",26,null],[13,"Rt19","","",26,null],[13,"Rt20","","",26,null],[13,"Rt21","","",26,null],[13,"Rt22","","",26,null],[13,"Rt23","","",26,null],[13,"Rt24","","",26,null],[13,"Rt25","","",26,null],[13,"Rt26","","",26,null],[13,"Rt27","","",26,null],[13,"Rt28","","",26,null],[13,"Rt29","","",26,null],[13,"Rt30","","",26,null],[13,"Rt31","","",26,null],[6,"SignalResult","","",null,null],[5,"SIGRTMIN","","Returns the minimum (inclusive) real-time signal number.",null,[[],["c_int",6]]],[5,"SIGRTMAX","","Returns the maximum (inclusive) real-time signal number.",null,[[],["c_int",6]]],[5,"register_signal_handler","","Registers <code>handler</code> as the signal handler of signum <code>num</code>.",null,[[["c_int",6]],["result",6]]],[5,"clear_signal_handler","","Resets the signal handler of signum <code>num</code> back to the …",null,[[["c_int",6]],["result",6]]],[5,"has_default_signal_handler","","Returns true if the signal handler for signum <code>num</code> is the …",null,[[["c_int",6]],[["result",6],["bool",15]]]],[5,"register_rt_signal_handler","","Registers <code>handler</code> as the signal handler for the real-time …",null,[[["c_int",6]],["result",6]]],[5,"create_sigset","","Creates <code>sigset</code> from an array of signal numbers.",null,[[],[["sigset_t",3],["result",6]]]],[5,"wait_for_signal","","Wait for signal before continuing. The signal number of …",null,[[["option",4],["duration",3]],[["result",6],["c_int",6]]]],[5,"get_blocked_signals","","Retrieves the signal mask of the current thread as a …",null,[[],[["signalresult",6],["vec",3]]]],[5,"block_signal","","Masks given signal.",null,[[["c_int",6]],["signalresult",6]]],[5,"unblock_signal","","Unmasks given signal.",null,[[["c_int",6]],["signalresult",6]]],[5,"clear_signal","","Clears pending signal.",null,[[["c_int",6]],["signalresult",6]]],[5,"kill","","SafetyThis is marked unsafe because it allows signals to …",null,[[["c_int",6],["pid",6]],["result",6]]],[8,"Killable","","Trait for threads that can be signalled via <code>pthread_kill</code>.",null,null],[10,"pthread_handle","","",27,[[],["pthread_t",6]]],[11,"kill","","Sends the signal <code>num</code> to this killable thread.",27,[[["c_int",6]],["result",6]]],[5,"kill_tree","","Terminates and reaps a child process. If the child …",null,[[["duration",3],["child",3]],["signalresult",6]]],[3,"KillOnDrop","","Wraps a Child process, and calls kill_tree for its …",null,null],[11,"timeout","","Get the timeout. See timeout_mut() for more details.",28,[[],["duration",3]]],[11,"timeout_mut","","Change the timeout for how long child processes are …",28,[[],["duration",3]]],[0,"vsock","sys_util","",null,null],[17,"VMADDR_PORT_ANY","sys_util::vsock","Vsock equivalent of binding on port 0. Binds to a random …",null,null],[3,"AddrParseError","","",null,null],[4,"VsockCid","","The vsock equivalent of an IP address.",null,null],[13,"Any","","Vsock equivalent of INADDR_ANY. Indicates the context id …",29,null],[13,"Hypervisor","","An address that refers to the bare-metal machine that …",29,null],[13,"Local","","The loopback address.",29,null],[13,"Host","","The parent machine. It may not be the hypervisor for …",29,null],[13,"Cid","","An assigned CID that serves as the address for VSOCK.",29,null],[3,"SocketAddr","","An address associated with a virtual socket.",null,null],[12,"cid","","",30,null],[12,"port","","",30,null],[8,"ToSocketAddr","","",null,null],[10,"to_socket_addr","","",31,[[],[["addrparseerror",3],["socketaddr",3],["result",4]]]],[3,"VsockSocket","","A virtual socket.",null,null],[11,"new","","",32,[[],["result",6]]],[11,"bind","","",32,[[["tosocketaddr",8]],["result",6]]],[11,"connect","","",32,[[["tosocketaddr",8]],[["vsockstream",3],["result",6]]]],[11,"listen","","",32,[[],[["result",6],["vsocklistener",3]]]],[11,"local_port","","Returns the port that this socket is bound to. This can …",32,[[],[["u32",15],["result",6]]]],[11,"try_clone","","",32,[[],["result",6]]],[11,"set_nonblocking","","",32,[[["bool",15]],["result",6]]],[3,"VsockStream","","A virtual stream socket.",null,null],[11,"connect","","",33,[[["tosocketaddr",8]],[["vsockstream",3],["result",6]]]],[11,"local_port","","Returns the port that this stream is bound to.",33,[[],[["u32",15],["result",6]]]],[11,"try_clone","","",33,[[],[["vsockstream",3],["result",6]]]],[11,"set_nonblocking","","",33,[[["bool",15]],["result",6]]],[3,"VsockListener","","Represents a virtual socket server.",null,null],[11,"bind","","Creates a new <code>VsockListener</code> bound to the specified port …",34,[[["tosocketaddr",8]],[["result",6],["vsocklistener",3]]]],[11,"local_port","","Returns the port that this listener is bound to.",34,[[],[["u32",15],["result",6]]]],[11,"accept","","Accepts a new incoming connection on this listener.  …",34,[[],["result",6]]],[11,"set_nonblocking","","",34,[[["bool",15]],["result",6]]],[0,"with_as_descriptor","sys_util","Module that exports <code>serialize</code>/<code>deserialize</code> functions for …",null,null],[5,"serialize","sys_util::with_as_descriptor","",null,[[["asrawdescriptor",8],["serializer",8]],["result",4]]],[5,"deserialize","","",null,[[],["result",4]]],[0,"with_raw_descriptor","sys_util","Module that exports <code>serialize</code>/<code>deserialize</code> functions for …",null,null],[5,"serialize","sys_util::with_raw_descriptor","Serializes a descriptor for later retrieval in a parent …",null,[[["rawdescriptor",6],["serializer",8]],["result",4]]],[5,"deserialize","","",null,[[],[["rawdescriptor",6],["result",4]]]],[3,"LayoutAllocation","sys_util","A contiguous memory allocation with a specified size and …",null,null],[5,"drop_capabilities","","Drops all capabilities (permitted, inheritable, and …",null,[[],["result",6]]],[3,"Clock","","",null,null],[3,"FakeClock","","A fake clock that can be used in tests to give exact …",null,null],[6,"RawDescriptor","","",null,null],[8,"IntoRawDescriptor","","Trait for forfeiting ownership of the current raw …",null,null],[10,"into_raw_descriptor","","",35,[[],["rawdescriptor",6]]],[8,"AsRawDescriptor","","Trait for returning the underlying raw descriptor, …",null,null],[10,"as_raw_descriptor","","",36,[[],["rawdescriptor",6]]],[8,"FromRawDescriptor","","",null,null],[10,"from_raw_descriptor","","SafetySafe only if the caller ensures nothing has access …",37,[[["rawdescriptor",6]]]],[5,"clone_descriptor","","Clones <code>descriptor</code>, returning a new <code>RawDescriptor</code> that …",null,[[["asrawdescriptor",8]],[["result",6],["rawdescriptor",6]]]],[5,"clone_fd","","Clones <code>fd</code>, returning a new file descriptor that refers to …",null,[[["asrawfd",8]],[["rawfd",6],["result",6]]]],[3,"SafeDescriptor","","Wraps a RawDescriptor and safely closes it when self …",null,null],[3,"Descriptor","","For use cases where a simple wrapper around a …",null,null],[12,"0","","",38,null],[5,"errno_result","","Returns the last errno as a Result that is always an …",null,[[],["result",6]]],[3,"Error","","An error number, retrieved from errno (man 3 errno), set …",null,null],[6,"Result","","",null,null],[3,"EventFd","","A safe wrapper around a Linux eventfd (man 2 eventfd).",null,null],[4,"EventReadResult","","Wrapper around the return value of doing a read on an …",null,null],[13,"Count","","",39,null],[13,"Timeout","","",39,null],[3,"ScopedEvent","","An <code>EventFd</code> wrapper which triggers when it goes out of …",null,null],[4,"Error","","",null,null],[13,"InvalidSize","","",40,null],[13,"LibraryError","","",40,null],[13,"NullAddress","","",40,null],[13,"Unsupported","","",40,null],[6,"Result","","",null,null],[6,"Map","","",null,null],[6,"Unmap","","",null,null],[3,"ExternalMapping","","ExternalMapping wraps an external library mapping.  This …",null,null],[4,"FileFlags","","",null,null],[13,"Read","","",41,null],[13,"Write","","",41,null],[13,"ReadWrite","","",41,null],[4,"CloneNamespace","","Controls what namespace <code>clone_process</code> will have. See …",null,null],[13,"Inherit","","The new process will inherit the namespace from the old …",42,null],[13,"NewUserPid","","The new process with be in a new user and PID namespace.",42,null],[4,"CloneError","","",null,null],[13,"IterateTasks","","There was an error trying to iterate this process\'s …",43,null],[13,"Multithreaded","","There are multiple threads running. The <code>usize</code> indicates …",43,null],[13,"Sys","","There was an error while cloning.",43,null],[5,"clone_process","","Clones this process and calls a closure in the new …",null,[[["clonenamespace",4]],[["pid_t",6],["result",4],["cloneerror",4]]]],[5,"get_filesystem_type","","Obtain file system type of the file system that the file …",null,[[["file",3]],[["i64",15],["result",6]]]],[4,"Error","","",null,null],[13,"AddFdMappingIsUnsupported","","",44,null],[13,"InvalidAddress","","",44,null],[13,"InvalidArgument","","",44,null],[13,"InvalidOffset","","",44,null],[13,"InvalidRange","","",44,null],[13,"NotPageAligned","","",44,null],[13,"ReadToMemory","","",44,null],[13,"RemoveMappingIsUnsupported","","",44,null],[13,"SystemCallFailed","","",44,null],[13,"WriteFromMemory","","",44,null],[3,"Protection","","Memory access type for anonymous shared memory mapping.",null,null],[8,"MappedRegion","","A range of memory that can be msynced, for abstracting …",null,null],[10,"as_ptr","","Returns a pointer to the beginning of the memory region. …",45,[[]]],[10,"size","","Returns the size of the memory region in bytes.",45,[[],["usize",15]]],[11,"add_fd_mapping","","Maps <code>size</code> bytes starting at <code>fd_offset</code> bytes from within …",45,[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["error",4],["result",4]]]],[11,"remove_mapping","","Remove <code>size</code>-byte mapping starting at <code>offset</code>.",45,[[["usize",15]],[["error",4],["result",4]]]],[3,"MemoryMapping","","Wraps an anonymous shared memory mapping in the current …",null,null],[3,"MemoryMappingArena","","Tracks Fixed Memory Maps within an anonymous …",null,null],[3,"EpollEvents","","EpollEvents wraps raw epoll_events, it should only be …",null,null],[8,"PollToken","","Trait for a token that can be associated with an <code>fd</code> in a …",null,null],[10,"as_raw_token","","Converts this token into a u64 that can be turned back …",46,[[],["u64",15]]],[10,"from_raw_token","","Converts a raw token as returned from <code>as_raw_token</code> back …",46,[[["u64",15]]]],[3,"PollEvent","","An event returned by <code>PollContext::wait</code>.",null,null],[3,"PollEventIter","","An iterator over some (sub)set of events returned by …",null,null],[3,"PollEvents","","The list of event returned by <code>PollContext::wait</code>.",null,null],[3,"PollEventsOwned","","A deep copy of the event records from <code>PollEvents</code>.",null,null],[3,"WatchingEvents","","Watching events taken by PollContext.",null,null],[3,"EpollContext","","EpollContext wraps linux epoll. It provides similar …",null,null],[3,"PollContext","","Used to poll multiple objects that have file descriptors.",null,null],[5,"set_rt_prio_limit","","Enables real time thread priorities in the current thread …",null,[[["u64",15]],["result",6]]],[5,"set_rt_round_robin","","Sets the current thread to be scheduled using the round …",null,[[["i32",15]],["result",6]]],[3,"Fd","","",null,null],[12,"0","","",47,null],[5,"set_cpu_affinity","","Set the CPU affinity of the current thread to a given set …",null,[[["intoiterator",8]],["result",6]]],[5,"enable_core_scheduling","","Enable experimental core scheduling for the current …",null,[[],["result",6]]],[3,"SharedMemory","","A shared memory file descriptor and its size.",null,null],[3,"MemfdSeals","","A set of memfd seals.",null,null],[5,"kernel_has_memfd","","Checks if the kernel we are running on has memfd_create. …",null,[[],["bool",15]]],[4,"Error","","",null,null],[13,"CreateBlockSignal","","Failed to block the signal when creating signalfd.",48,null],[13,"CreateSignalFd","","Failed to create a new signalfd.",48,null],[13,"CreateSigset","","Failed to construct sigset when creating signalfd.",48,null],[13,"SignalFdPartialRead","","Signalfd could be read, but didn\'t return a full siginfo …",48,null],[13,"SignalFdRead","","Unable to read from signalfd.",48,null],[3,"SignalFd","","A safe wrapper around a Linux signalfd (man 2 signalfd).",null,null],[17,"SCM_SOCKET_MAX_FD_COUNT","","The maximum number of FDs that can be sent in a single …",null,null],[8,"ScmSocket","","Trait for file descriptors can send and receive socket …",null,null],[10,"socket_fd","","Gets the file descriptor of this socket.",49,[[],["rawfd",6]]],[11,"send_with_fd","","Sends the given data and file descriptor over the socket.",49,[[["rawfd",6]],[["result",6],["usize",15]]]],[11,"send_with_fds","","Sends the given data and file descriptors over the socket.",49,[[],[["result",6],["usize",15]]]],[11,"send_bufs_with_fd","","Sends the given data and file descriptor over the socket.",49,[[["rawfd",6]],[["result",6],["usize",15]]]],[11,"send_bufs_with_fds","","Sends the given data and file descriptors over the socket.",49,[[],[["result",6],["usize",15]]]],[11,"recv_with_fd","","Receives data and potentially a file descriptor from the …",49,[[],["result",6]]],[11,"recv_with_fds","","Receives data and file descriptors from the socket.",49,[[],["result",6]]],[11,"recv_iovecs_with_fds","","Receives data and file descriptors from the socket.",49,[[],["result",6]]],[8,"AsIobuf","","Trait for types that can be converted into an <code>iovec</code> that …",null,null],[10,"as_iobuf","","Returns a <code>iovec</code> that describes a contiguous region of …",50,[[],["iovec",3]]],[10,"as_iobuf_slice","","Returns a slice of <code>iovec</code>s that each describe a contiguous …",50,[[]]],[5,"read_raw_stdin","","Read raw bytes from stdin.",null,[[],[["result",6],["usize",15]]]],[8,"Terminal","","Trait for file descriptors that are TTYs, according to …",null,null],[10,"tty_fd","","Gets the file descriptor of the TTY.",51,[[],["rawfd",6]]],[11,"set_canon_mode","","Set this terminal\'s mode to canonical mode (…",51,[[],["result",6]]],[11,"set_raw_mode","","Set this terminal\'s mode to raw mode (…",51,[[],["result",6]]],[11,"set_non_block","","Sets the non-blocking mode of this terminal\'s file …",51,[[["bool",15]],["result",6]]],[3,"TimerFd","","A safe wrapper around a Linux timerfd (man 2 …",null,null],[3,"FakeTimerFd","","FakeTimerFd: For use in tests.",null,null],[5,"deserialize_with_descriptors","","Allows the use of any serde deserializer within a closure …",null,[[["vec",3]],["result",4]]],[3,"FileSerdeWrapper","","A simple wrapper around <code>File</code> that implements <code>Serialize</code>/…",null,null],[12,"0","","",52,null],[3,"SerializeDescriptors","","Wrapper for a <code>Serialize</code> value which will capture any …",null,null],[24,"PollToken","","Implements the PollToken trait for a given <code>enum</code>.",null,null],[4,"ExternalMappingError","","",null,null],[13,"InvalidSize","","",40,null],[13,"LibraryError","","",40,null],[13,"NullAddress","","",40,null],[13,"Unsupported","","",40,null],[6,"ExternalMappingResult","","",null,null],[4,"MmapError","","",null,null],[13,"AddFdMappingIsUnsupported","","",44,null],[13,"InvalidAddress","","",44,null],[13,"InvalidArgument","","",44,null],[13,"InvalidOffset","","",44,null],[13,"InvalidRange","","",44,null],[13,"NotPageAligned","","",44,null],[13,"ReadToMemory","","",44,null],[13,"RemoveMappingIsUnsupported","","",44,null],[13,"SystemCallFailed","","",44,null],[13,"WriteFromMemory","","",44,null],[8,"SeekHole","","A trait for seeking to the next hole or non-hole position …",null,null],[10,"seek_hole","","Seek to the first hole in a file at a position greater …",53,[[["u64",15]],[["result",6],["option",4]]]],[10,"seek_data","","Seek to the first data in a file at a position greater …",53,[[["u64",15]],[["result",6],["option",4]]]],[4,"SignalFdError","","",null,null],[13,"CreateBlockSignal","","Failed to block the signal when creating signalfd.",48,null],[13,"CreateSignalFd","","Failed to create a new signalfd.",48,null],[13,"CreateSigset","","Failed to construct sigset when creating signalfd.",48,null],[13,"SignalFdPartialRead","","Signalfd could be read, but didn\'t return a full siginfo …",48,null],[13,"SignalFdRead","","Unable to read from signalfd.",48,null],[8,"PunchHole","","A trait for deallocating space in a file.",null,null],[10,"punch_hole","","Replace a range of bytes with a hole.",54,[[["u64",15]],["result",6]]],[8,"WriteZeroes","","A trait for writing zeroes to a stream.",null,null],[10,"write_zeroes","","Write up to <code>length</code> bytes of zeroes to the stream, …",55,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_zeroes_all","","Write zeroes to the stream until <code>length</code> bytes have been …",55,[[["usize",15]],["result",6]]],[8,"WriteZeroesAt","","A trait for writing zeroes to an arbitrary position in a …",null,null],[10,"write_zeroes_at","","Write up to <code>length</code> bytes of zeroes starting at <code>offset</code>, …",56,[[["usize",15],["u64",15]],[["usize",15],["result",6]]]],[11,"write_zeroes_all_at","","Write zeroes starting at <code>offset</code> until <code>length</code> bytes have …",56,[[["usize",15],["u64",15]],["result",6]]],[6,"Pid","","Re-export libc types that are part of the API.",null,null],[6,"Uid","","",null,null],[6,"Gid","","",null,null],[6,"Mode","","",null,null],[6,"UnsyncMarker","","Used to mark types as !Sync.",null,null],[5,"pagesize","","Safe wrapper for <code>sysconf(_SC_PAGESIZE)</code>.",null,[[],["usize",15]]],[5,"iov_max","","Safe wrapper for <code>sysconf(_SC_IOV_MAX)</code>.",null,[[],["usize",15]]],[5,"round_up_to_page_size","","Uses the system\'s page size in bytes to round the given …",null,[[["usize",15]],["usize",15]]],[5,"getpid","","This bypasses <code>libc</code>\'s caching <code>getpid(2)</code> wrapper which can …",null,[[],["pid",6]]],[5,"gettid","","Safe wrapper for the gettid Linux systemcall.",null,[[],["pid",6]]],[5,"getsid","","Safe wrapper for <code>getsid(2)</code>.",null,[[["option",4],["pid",6]],[["result",6],["pid",6]]]],[5,"setsid","","Wrapper for <code>setsid(2)</code>.",null,[[],[["result",6],["pid",6]]]],[5,"geteuid","","Safe wrapper for <code>geteuid(2)</code>.",null,[[],["uid",6]]],[5,"getegid","","Safe wrapper for <code>getegid(2)</code>.",null,[[],["gid",6]]],[5,"chown","","Safe wrapper for chown(2).",null,[[["gid",6],["cstr",3],["uid",6]],["result",6]]],[5,"fchmod","","Safe wrapper for fchmod(2).",null,[[["mode",6]],["result",6]]],[5,"fchown","","Safe wrapper for fchown(2).",null,[[["gid",6],["uid",6]],["result",6]]],[4,"FlockOperation","","The operation to perform with <code>flock</code>.",null,null],[13,"LockShared","","",57,null],[13,"LockExclusive","","",57,null],[13,"Unlock","","",57,null],[5,"flock","","Safe wrapper for flock(2) with the operation <code>op</code> and …",null,[[["flockoperation",4],["bool",15],["asrawfd",8]],["result",6]]],[4,"FallocateMode","","The operation to perform with <code>fallocate</code>.",null,null],[13,"PunchHole","","",58,null],[13,"ZeroRange","","",58,null],[13,"Allocate","","",58,null],[5,"fallocate","","Safe wrapper for <code>fallocate()</code>.",null,[[["asrawfd",8],["bool",15],["u64",15],["fallocatemode",4]],["result",6]]],[8,"AsRawPid","","A trait used to abstract types that provide a process id …",null,null],[10,"as_raw_pid","","",59,[[],["pid",6]]],[4,"WaitStatus","","A logical set of the values *status can take from …",null,null],[13,"Continued","","",60,null],[13,"Exited","","",60,null],[13,"Running","","",60,null],[13,"Signaled","","",60,null],[13,"Stopped","","",60,null],[5,"wait_for_pid","","A safe wrapper around waitpid.",null,[[["asrawpid",8],["c_int",6]],["result",6]]],[5,"reap_child","","Reaps a child process that has terminated.",null,[[],[["result",6],["pid",6]]]],[5,"kill_process_group","","Kill all processes in the current process group.",null,[[],["result",6]]],[5,"pipe","","Spawns a pipe pair where the first pipe is the read end …",null,[[["bool",15]],["result",6]]],[5,"set_pipe_size","","Sets the pipe signified with fd to <code>size</code>.",null,[[["rawfd",6],["usize",15]],[["result",6],["usize",15]]]],[5,"new_pipe_full","","Test-only function used to create a pipe that is full. …",null,[[],["result",6]]],[3,"UnlinkUnixDatagram","","Used to attempt to clean up a named pipe after it is no …",null,null],[12,"0","","",61,null],[3,"UnlinkUnixListener","","Used to attempt to clean up a named pipe after it is no …",null,null],[12,"0","","",62,null],[5,"validate_raw_fd","","Verifies that |raw_fd| is actually owned by this process …",null,[[["rawfd",6]],[["rawfd",6],["result",6]]]],[5,"poll_in","","Utility function that returns true if the given FD is …",null,[[["asrawfd",8]],["bool",15]]],[5,"add_fd_flags","","Performs a logical OR of the given flags with the FD\'s …",null,[[["rawfd",6],["c_int",6]],["result",6]]],[5,"clear_fd_flags","","Clears the given flags in the FD\'s flags.",null,[[["rawfd",6],["c_int",6]],["result",6]]],[5,"duration_to_timespec","","Return a timespec filed with the specified Duration …",null,[[["duration",3]],["timespec",3]]],[5,"max_timeout","","Return the maximum Duration that can be used with …",null,[[],["duration",3]]],[5,"safe_descriptor_from_path","","If the given path is of the form /proc/self/fd/N for some …",null,[[["path",3],["asref",8]],[["result",6],["option",4]]]],[5,"open_file","","Open the file with the given path, or if it is of the …",null,[[["asref",8],["bool",15],["path",3]],[["result",6],["file",3]]]],[5,"get_max_open_files","","Get the max number of open files allowed by the …",null,[[],[["result",6],["u64",15]]]],[14,"handle_eintr","","Macro that retries the given expression every time its …",null,null],[14,"handle_eintr_rc","","Macro that retries the given expression every time its …",null,null],[14,"handle_eintr_errno","","Macro that retries the given expression every time its …",null,null],[14,"ioctl_expr","","Raw macro to declare the expression that calculates an …",null,null],[14,"ioctl_ioc_nr","","Raw macro to declare a function that returns an ioctl …",null,null],[14,"ioctl_io_nr","","Declare an ioctl that transfers no data.",null,null],[14,"ioctl_ior_nr","","Declare an ioctl that reads data.",null,null],[14,"ioctl_iow_nr","","Declare an ioctl that writes data.",null,null],[14,"ioctl_iowr_nr","","Declare an ioctl that reads and writes data.",null,null],[14,"log","","A macro for logging at an arbitrary priority level.",null,null],[14,"error","","A macro for logging an error.",null,null],[14,"warn","","A macro for logging a warning.",null,null],[14,"info","","A macro for logging info.",null,null],[14,"debug","","A macro for logging debug information.",null,null],[14,"volatile_impl","","",null,null],[14,"volatile_at_impl","","",null,null],[14,"syscall","","",null,null],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","sys_util::syslog","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","sys_util","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"as_raw_fds","","",66,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"as_raw_fds","","",38,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"to_string","","",68,[[],["string",3]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"as_raw_fds","","",69,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","sys_util::file_traits::lib","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","sys_util","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","sys_util::net","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"as_raw_fds","","",14,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"as_raw_fds","","",15,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"as_raw_fds","","",16,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"as_raw_fds","","",17,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","sys_util","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"as_raw_fds","","",83,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"as_raw_fds","","",84,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","sys_util::rand","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"as_raw_fds","sys_util","",47,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","sys_util::read_dir","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","sys_util::scoped_path","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","sys_util::scoped_signal_handler","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"as_raw_fds","sys_util","",86,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","sys_util::signal","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","sys_util","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"as_raw_fds","","",88,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"as_raw_fds","","",89,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"as_raw_fds","","",90,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","sys_util::vsock","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"as_raw_fds","","",32,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"as_raw_fds","","",33,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"as_raw_fds","","",34,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","sys_util","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"fmt","sys_util::file_traits::lib","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",5,[[],["iovec",3]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",73,[[],["volatileslice",3]]],[11,"get_slice","","",73,[[["usize",15]],[["volatilememoryerror",4],["result",4],["volatileslice",3]]]],[11,"is_interrupted","sys_util","",92,[[],["bool",15]]],[11,"into_raw_descriptor","","",66,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",66,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","","",38,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","sys_util::net","",17,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","sys_util","",69,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","sys_util::net","",15,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","sys_util","",88,[[],["rawdescriptor",6]]],[11,"from_raw_descriptor","","",66,[[["rawdescriptor",6]]]],[11,"from_raw_descriptor","sys_util::net","",15,[[["rawdescriptor",6]]]],[11,"as_ptr","sys_util","used for passing this region to ioctls for setting guest …",71,[[]]],[11,"size","","Returns the size of the memory region in bytes.",71,[[],["usize",15]]],[11,"as_ptr","","",75,[[]]],[11,"size","","",75,[[],["usize",15]]],[11,"as_ptr","","",76,[[]]],[11,"size","","",76,[[],["usize",15]]],[11,"add_fd_mapping","","",76,[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["error",4],["result",4]]]],[11,"remove_mapping","","",76,[[["usize",15]],[["error",4],["result",4]]]],[11,"as_raw_token","","",38,[[],["u64",15]]],[11,"from_raw_token","","",38,[[["u64",15]]]],[11,"handle_signal","sys_util::scoped_signal_handler","",85,[[["signal",4]]]],[11,"socket_fd","sys_util::net","",15,[[],["rawfd",6]]],[11,"as_iobuf","sys_util::file_traits::lib","",73,[[],["iovec",3]]],[11,"as_iobuf_slice","","",73,[[]]],[11,"to_socket_addr","sys_util::vsock","",30,[[],[["addrparseerror",3],["socketaddr",3],["result",4]]]],[11,"as_raw_pid","sys_util","",93,[[],["pid",6]]],[11,"drop","","",63,[[]]],[11,"drop","","",66,[[]]],[11,"drop","","",70,[[]]],[11,"drop","","",71,[[]]],[11,"drop","","",75,[[]]],[11,"drop","","",76,[[]]],[11,"drop","sys_util::net","",14,[[]]],[11,"drop","","",15,[[]]],[11,"drop","","",16,[[]]],[11,"drop","","",17,[[]]],[11,"drop","sys_util::scoped_path","",21,[[]]],[11,"drop","sys_util::scoped_signal_handler","",24,[[]]],[11,"drop","sys_util::signal","",28,[[]]],[11,"drop","sys_util","",88,[[]]],[11,"drop","sys_util::vsock","",32,[[]]],[11,"drop","sys_util","",61,[[]]],[11,"drop","","",62,[[]]],[11,"as_mut","sys_util::signal","",28,[[],["child",3]]],[11,"as_ref","sys_util::net","",17,[[],["unixseqpacketlistener",3]]],[11,"as_ref","sys_util::scoped_path","",21,[[],["path",3]]],[11,"as_ref","sys_util::signal","",28,[[],["child",3]]],[11,"as_ref","sys_util","",61,[[],["unixdatagram",3]]],[11,"as_ref","","",62,[[],["unixlistener",3]]],[11,"from","","",66,[[["file",3]],["safedescriptor",3]]],[11,"from","","",52,[[["file",3]]]],[11,"from","","",68,[[["error",3]]]],[11,"from","","",70,[[["eventfd",3]]]],[11,"from","","",69,[[["scopedevent",3]]]],[11,"from","","",74,[[["c_int",6]]]],[11,"from","","",94,[[["protection",3]],["c_int",6]]],[11,"from","","",76,[[["memorymapping",3]]]],[11,"from","","",94,[[["signal",4]],["c_int",6]]],[11,"from","sys_util::signal","",28,[[["child",3]]]],[11,"from","sys_util::vsock","",29,[[["c_uint",6]]]],[11,"from","sys_util","",60,[[["c_int",6]],["waitstatus",4]]],[11,"next","","",79,[[],["option",4]]],[11,"clone","sys_util::syslog","",1,[[],["priority",4]]],[11,"clone","","",2,[[],["facility",4]]],[11,"clone","sys_util","",64,[[],["clock",3]]],[11,"clone","","",38,[[],["descriptor",3]]],[11,"clone","","",68,[[],["error",3]]],[11,"clone","","",41,[[],["fileflags",4]]],[11,"clone","","",74,[[],["protection",3]]],[11,"clone","sys_util::net","",13,[[],["inetversion",4]]],[11,"clone","sys_util::rand","",18,[[],["source",4]]],[11,"clone","sys_util","",87,[[],["memfdseals",3]]],[11,"clone","sys_util::signal","",26,[[],["signal",4]]],[11,"clone","sys_util::vsock","",29,[[],["vsockcid",4]]],[11,"clone","","",30,[[],["socketaddr",3]]],[11,"default","sys_util","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",77,[[],["epollevents",3]]],[11,"default","sys_util::rand","",18,[[]]],[11,"default","sys_util","",87,[[],["memfdseals",3]]],[11,"cmp","","",38,[[["descriptor",3]],["ordering",4]]],[11,"cmp","sys_util::vsock","",29,[[["vsockcid",4]],["ordering",4]]],[11,"cmp","","",30,[[["socketaddr",3]],["ordering",4]]],[11,"eq","sys_util","",66,[[],["bool",15]]],[11,"eq","","",38,[[["descriptor",3]],["bool",15]]],[11,"ne","","",38,[[["descriptor",3]],["bool",15]]],[11,"eq","","",68,[[["error",3]],["bool",15]]],[11,"ne","","",68,[[["error",3]],["bool",15]]],[11,"eq","","",69,[[["eventfd",3]],["bool",15]]],[11,"ne","","",69,[[["eventfd",3]],["bool",15]]],[11,"eq","","",39,[[["eventreadresult",4]],["bool",15]]],[11,"ne","","",39,[[["eventreadresult",4]],["bool",15]]],[11,"eq","","",40,[[["error",4]],["bool",15]]],[11,"ne","","",40,[[["error",4]],["bool",15]]],[11,"eq","","",71,[[["externalmapping",3]],["bool",15]]],[11,"ne","","",71,[[["externalmapping",3]],["bool",15]]],[11,"eq","","",41,[[["fileflags",4]],["bool",15]]],[11,"eq","","",74,[[["protection",3]],["bool",15]]],[11,"ne","","",74,[[["protection",3]],["bool",15]]],[11,"eq","sys_util::net","",13,[[["inetversion",4]],["bool",15]]],[11,"eq","sys_util::rand","",18,[[["source",4]],["bool",15]]],[11,"eq","sys_util::signal","",26,[[["signal",4]],["bool",15]]],[11,"eq","sys_util::vsock","",29,[[["vsockcid",4]],["bool",15]]],[11,"ne","","",29,[[["vsockcid",4]],["bool",15]]],[11,"eq","","",30,[[["socketaddr",3]],["bool",15]]],[11,"ne","","",30,[[["socketaddr",3]],["bool",15]]],[11,"partial_cmp","sys_util","",38,[[["descriptor",3]],[["option",4],["ordering",4]]]],[11,"lt","","",38,[[["descriptor",3]],["bool",15]]],[11,"le","","",38,[[["descriptor",3]],["bool",15]]],[11,"gt","","",38,[[["descriptor",3]],["bool",15]]],[11,"ge","","",38,[[["descriptor",3]],["bool",15]]],[11,"partial_cmp","sys_util::vsock","",29,[[["vsockcid",4]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["vsockcid",4]],["bool",15]]],[11,"le","","",29,[[["vsockcid",4]],["bool",15]]],[11,"gt","","",29,[[["vsockcid",4]],["bool",15]]],[11,"ge","","",29,[[["vsockcid",4]],["bool",15]]],[11,"partial_cmp","","",30,[[["socketaddr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",30,[[["socketaddr",3]],["bool",15]]],[11,"le","","",30,[[["socketaddr",3]],["bool",15]]],[11,"gt","","",30,[[["socketaddr",3]],["bool",15]]],[11,"ge","","",30,[[["socketaddr",3]],["bool",15]]],[11,"deref","sys_util","",52,[[]]],[11,"deref","","",70,[[],["eventfd",3]]],[11,"deref","sys_util::net","",17,[[]]],[11,"deref","sys_util::scoped_path","",21,[[]]],[11,"deref","sys_util::signal","",28,[[]]],[11,"deref","sys_util","",62,[[],["unixlistener",3]]],[11,"deref_mut","","",52,[[]]],[11,"deref_mut","sys_util::signal","",28,[[]]],[11,"fmt","sys_util::syslog","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util::net","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util::rand","",18,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util::scoped_signal_handler","",22,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util::signal","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util","",48,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util::vsock","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util::syslog","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util::scoped_signal_handler","",22,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util::signal","",25,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util","",48,[[["formatter",3]],["result",6]]],[11,"fmt","sys_util::vsock","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"hash","sys_util","",38,[[]]],[11,"hash","sys_util::vsock","",29,[[]]],[11,"hash","","",30,[[]]],[11,"try_from","sys_util","",66,[[["asrawfd",8]],["result",4]]],[11,"try_from","sys_util::signal","",26,[[["c_int",6]],["result",4]]],[11,"from_str","sys_util::vsock","",29,[[["str",15]],["result",4]]],[11,"from_str","","Parse a vsock SocketAddr from a string. vsock socket …",30,[[["str",15]],[["addrparseerror",3],["result",4],["socketaddr",3]]]],[11,"source","sys_util","",44,[[],[["option",4],["error",8]]]],[11,"read","","",86,[[],[["usize",15],["result",6]]]],[11,"read","sys_util::vsock","",33,[[],[["usize",15],["result",6]]]],[11,"seek","sys_util","",86,[[["seekfrom",4]],[["u64",15],["result",6]]]],[11,"write","sys_util::syslog","",4,[[],[["usize",15],["result",6]]]],[11,"flush","","",4,[[],["result",6]]],[11,"write","sys_util","",86,[[],[["usize",15],["result",6]]]],[11,"flush","","",86,[[],["result",6]]],[11,"write","sys_util::vsock","",33,[[],[["usize",15],["result",6]]]],[11,"flush","","",33,[[],["result",6]]],[11,"as_raw_fd","sys_util","",66,[[],["rawfd",6]]],[11,"as_raw_fd","","",38,[[],["rawfd",6]]],[11,"as_raw_fd","","",69,[[],["rawfd",6]]],[11,"as_raw_fd","sys_util::net","",14,[[],["rawfd",6]]],[11,"as_raw_fd","","",15,[[],["rawfd",6]]],[11,"as_raw_fd","","",16,[[],["rawfd",6]]],[11,"as_raw_fd","","",17,[[],["rawfd",6]]],[11,"as_raw_fd","sys_util","",83,[[],["rawfd",6]]],[11,"as_raw_fd","","",84,[[],["rawfd",6]]],[11,"as_raw_fd","","",47,[[],["rawfd",6]]],[11,"as_raw_fd","","",86,[[],["rawfd",6]]],[11,"as_raw_fd","","",88,[[],["rawfd",6]]],[11,"as_raw_fd","","",89,[[],["rawfd",6]]],[11,"as_raw_fd","","",90,[[],["rawfd",6]]],[11,"as_raw_fd","sys_util::vsock","",32,[[],["rawfd",6]]],[11,"as_raw_fd","","",33,[[],["rawfd",6]]],[11,"as_raw_fd","","",34,[[],["rawfd",6]]],[11,"from_raw_fd","sys_util","",69,[[["rawfd",6]]]],[11,"from_raw_fd","sys_util::net","",15,[[["rawfd",6]]]],[11,"from_raw_fd","","",16,[[["rawfd",6]]]],[11,"from_raw_fd","sys_util","",89,[[["rawfd",6]]]],[11,"into_raw_fd","","",69,[[],["rawfd",6]]],[11,"into_raw_fd","sys_util::net","",14,[[],["rawfd",6]]],[11,"into_raw_fd","sys_util","",83,[[],["rawfd",6]]],[11,"into_raw_fd","","",84,[[],["rawfd",6]]],[11,"into_raw_fd","","",86,[[],["rawfd",6]]],[11,"into_raw_fd","","",89,[[],["rawfd",6]]],[11,"into_raw_fd","","",90,[[],["rawfd",6]]],[11,"into_raw_fd","sys_util::vsock","",32,[[],["rawfd",6]]],[11,"into_raw_fd","","",33,[[],["rawfd",6]]],[11,"serialize","sys_util","",66,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","","",68,[[],["result",4]]],[11,"serialize","","",69,[[],["result",4]]],[11,"serialize","sys_util::net","",15,[[],["result",4]]],[11,"serialize","sys_util","",86,[[],["result",4]]],[11,"deserialize","","",66,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","","",68,[[],["result",4]]],[11,"deserialize","","",69,[[],["result",4]]],[11,"deserialize","sys_util::net","",15,[[],["result",4]]],[11,"deserialize","sys_util","",86,[[],["result",4]]],[11,"get_slice","","",75,[[["usize",15]],[["volatileslice",3],["volatilememoryresult",6]]]],[11,"uninitialized","","Allocates memory with the specified size and alignment. …",63,[[["layout",3]]]],[11,"zeroed","","Allocates memory with the specified size and alignment …",63,[[["layout",3]]]],[11,"as_ptr","","Returns a raw pointer to the allocated data.",63,[[]]],[11,"as_ref","","Returns a shared reference to the allocated data.",63,[[]]],[11,"as_mut","","Returns an exclusive reference to the allocated data.",63,[[]]],[11,"new","","",64,[[]]],[11,"now","","",64,[[]]],[11,"duration_since","","",64,[[],["duration",3]]],[11,"elapsed","","",64,[[],["duration",3]]],[11,"checked_sub","","",64,[[["duration",3]],["option",4]]],[11,"new","","",65,[[]]],[11,"now","","Get the current time, according to this clock.",65,[[]]],[11,"nanos","","Get the current time in ns, according to this clock.",65,[[],["u64",15]]],[11,"duration_since","","Get the duration since |earlier|, assuming that earlier < …",65,[[],["duration",3]]],[11,"elapsed","","Get the time that has elapsed since this clock was made. …",65,[[],["duration",3]]],[11,"checked_sub","","",65,[[["duration",3]],["option",4]]],[11,"add_event_fd","","Register the event fd for a notification when self\'s time …",65,[[["eventfd",3],["u64",15]]]],[11,"add_ns","","",65,[[["u64",15]]]],[11,"try_clone","","Clones this descriptor, internally creating a new …",66,[[],[["result",6],["safedescriptor",3]]]],[11,"new","","",67,[[]]],[11,"into_descriptors","","",67,[[],[["vec",3],["rawdescriptor",6]]]],[11,"new","","Constructs a new error with the given errno.",68,[[["i32",15]],["error",3]]],[11,"last","","Constructs an error from the current errno.",68,[[],["error",3]]],[11,"errno","","Gets the errno for this error",68,[[],["i32",15]]],[11,"new","","Creates a new blocking EventFd with an initial value of 0.",69,[[],[["eventfd",3],["result",6]]]],[11,"write","","Adds <code>v</code> to the eventfd\'s count, blocking until this won\'t …",69,[[["u64",15]],["result",6]]],[11,"read","","Blocks until the the eventfd\'s count is non-zero, then …",69,[[],[["result",6],["u64",15]]]],[11,"read_timeout","","Blocks for a maximum of <code>timeout</code> duration until the the …",69,[[["duration",3]],[["eventreadresult",4],["result",6]]]],[11,"try_clone","","Clones this EventFd, internally creating a new file …",69,[[],[["eventfd",3],["result",6]]]],[11,"new","","Creates a new <code>ScopedEvent</code> which triggers when it goes out …",70,[[],[["scopedevent",3],["result",6]]]],[11,"new","","Creates an ExternalMapping given a library-specific …",71,[[["u32",15],["map",6],["unmap",6]],[["result",6],["externalmapping",3]]]],[11,"from_file","","",41,[[["asrawfd",8]],[["fileflags",4],["result",6]]]],[11,"new","sys_util::file_traits::lib","Creates a slice of raw memory that must support volatile …",73,[[],["volatileslice",3]]],[11,"from_raw_parts","","Creates a <code>VolatileSlice</code> from a pointer and a length.",73,[[["usize",15]],["volatileslice",3]]],[11,"as_ptr","","Gets a const pointer to this slice\'s memory.",73,[[]]],[11,"as_mut_ptr","","Gets a mutable pointer to this slice\'s memory.",73,[[]]],[11,"size","","Gets the size of this slice.",73,[[],["usize",15]]],[11,"as_iobuf","","Returns this <code>VolatileSlice</code> as an <code>iovec</code>.",73,[[],["iovec",3]]],[11,"as_iobufs","","Converts a slice of <code>VolatileSlice</code>s into a slice of <code>iovec</code>s",73,[[]]],[11,"offset","","Creates a copy of this slice with the address increased …",73,[[["usize",15]],[["volatileslice",3],["result",4],["volatilememoryerror",4]]]],[11,"sub_slice","","Similar to <code>get_slice</code> but the returned slice outlives this …",73,[[["usize",15]],[["volatileslice",3],["result",4],["volatilememoryerror",4]]]],[11,"write_bytes","","Sets each byte of this slice with the given byte, similar …",73,[[["u8",15]]]],[11,"copy_to","","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> …",73,[[]]],[11,"copy_to_volatile_slice","","Copies <code>self.size()</code> or <code>slice.size()</code> bytes, whichever is …",73,[[["volatileslice",3]]]],[11,"copy_from","","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> …",73,[[]]],[11,"none","sys_util","Returns Protection allowing no access.",74,[[],["protection",3]]],[11,"read_write","","Returns Protection allowing read/write access.",74,[[],["protection",3]]],[11,"read","","Returns Protection allowing read access.",74,[[],["protection",3]]],[11,"set_read","","Set read events.",74,[[],["protection",3]]],[11,"set_write","","Set write events.",74,[[],["protection",3]]],[11,"add_fd_mapping","","Maps <code>size</code> bytes starting at <code>fd_offset</code> bytes from within …",45,[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["error",4],["result",4]]]],[11,"remove_mapping","","Remove <code>size</code>-byte mapping starting at <code>offset</code>.",45,[[["usize",15]],[["error",4],["result",4]]]],[11,"msync","","Calls msync with MS_SYNC on a mapping of <code>size</code> bytes …",45,[[["usize",15]],[["error",4],["result",4]]]],[11,"new","","Creates an anonymous shared, read/write mapping of <code>size</code> …",75,[[["usize",15]],[["memorymapping",3],["result",4],["error",4]]]],[11,"new_protection","","Creates an anonymous shared mapping of <code>size</code> bytes with …",75,[[["usize",15],["protection",3]],[["memorymapping",3],["result",4],["error",4]]]],[11,"from_fd","","Maps the first <code>size</code> bytes of the given <code>fd</code> as read/write.",75,[[["usize",15],["asrawfd",8]],[["memorymapping",3],["result",4],["error",4]]]],[11,"from_fd_offset","","",75,[[["usize",15],["u64",15],["asrawfd",8]],[["memorymapping",3],["result",4],["error",4]]]],[11,"from_fd_offset_protection","","Maps the <code>size</code> bytes starting at <code>offset</code> bytes of the given …",75,[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["memorymapping",3],["result",4],["error",4]]]],[11,"from_fd_offset_protection_populate","","Maps <code>size</code> bytes starting at <code>offset</code> from the given <code>fd</code> as …",75,[[["usize",15],["u64",15],["asrawfd",8],["protection",3],["bool",15]],[["memorymapping",3],["result",4],["error",4]]]],[11,"new_protection_fixed","","Creates an anonymous shared mapping of <code>size</code> bytes with …",75,[[["usize",15],["protection",3]],[["memorymapping",3],["result",4],["error",4]]]],[11,"from_fd_offset_protection_fixed","","Maps the <code>size</code> bytes starting at <code>offset</code> bytes of the given …",75,[[["usize",15],["asrawfd",8],["u64",15],["protection",3]],[["memorymapping",3],["result",4],["error",4]]]],[11,"use_hugepages","","Madvise the kernel to use Huge Pages for this mapping.",75,[[],[["error",4],["result",4]]]],[11,"msync","","Calls msync with MS_SYNC on the mapping.",75,[[],[["error",4],["result",4]]]],[11,"write_slice","","Writes a slice to the memory region at the specified …",75,[[["usize",15]],[["usize",15],["error",4],["result",4]]]],[11,"read_slice","","Reads to a slice from the memory region at the specified …",75,[[["usize",15]],[["usize",15],["error",4],["result",4]]]],[11,"write_obj","","Writes an object to the memory region at the specified …",75,[[["usize",15],["datainit",8]],[["error",4],["result",4]]]],[11,"read_obj","","Reads on object from the memory region at the given …",75,[[["usize",15]],[["error",4],["result",4],["datainit",8]]]],[11,"read_to_memory","","Reads data from a file descriptor and writes it to guest …",75,[[["usize",15],["asrawfd",8]],[["error",4],["result",4]]]],[11,"write_from_memory","","Writes data from memory to a file descriptor.",75,[[["usize",15],["asrawfd",8]],[["error",4],["result",4]]]],[11,"remove_range","","Uses madvise to tell the kernel to remove the specified …",75,[[["usize",15]],[["error",4],["result",4]]]],[11,"new","","Creates an mmap arena of <code>size</code> bytes.",76,[[["usize",15]],[["result",4],["error",4],["memorymappingarena",3]]]],[11,"add_anon_protection","","Anonymously maps <code>size</code> bytes at <code>offset</code> bytes from the …",76,[[["usize",15],["protection",3]],[["error",4],["result",4]]]],[11,"add_anon","","Anonymously maps <code>size</code> bytes at <code>offset</code> bytes from the …",76,[[["usize",15]],[["error",4],["result",4]]]],[11,"add_fd","","Maps <code>size</code> bytes from the start of the given <code>fd</code> at <code>offset</code> …",76,[[["usize",15],["asrawfd",8]],[["error",4],["result",4]]]],[11,"add_fd_offset","","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …",76,[[["usize",15],["u64",15],["asrawfd",8]],[["error",4],["result",4]]]],[11,"add_fd_offset_protection","","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …",76,[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["error",4],["result",4]]]],[11,"remove","","Removes <code>size</code> bytes at <code>offset</code> bytes from the start of the …",76,[[["usize",15]],[["error",4],["result",4]]]],[11,"new","","",77,[[],["epollevents",3]]],[11,"token","","Gets the token associated in <code>PollContext::add</code> with this …",78,[[]]],[11,"readable","","True if the <code>fd</code> associated with this token in …",78,[[],["bool",15]]],[11,"writable","","True if the <code>fd</code> associated with this token in …",78,[[],["bool",15]]],[11,"hungup","","True if the <code>fd</code> associated with this token in …",78,[[],["bool",15]]],[11,"to_owned","","Copies the events to an owned structure so the reference …",80,[[],["polleventsowned",3]]],[11,"iter","","Iterates over each event.",80,[[],[["polleventiter",3],["iter",3]]]],[11,"iter_readable","","Iterates over each readable event.",80,[[],[["polleventiter",3],["iter",3]]]],[11,"iter_writable","","Iterates over each writable event.",80,[[],[["polleventiter",3],["iter",3]]]],[11,"iter_hungup","","Iterates over each hungup event.",80,[[],[["polleventiter",3],["iter",3]]]],[11,"as_ref","","Takes a reference to the events so that they can be …",81,[[],["pollevents",3]]],[11,"empty","","Returns empty Events.",82,[[],["watchingevents",3]]],[11,"new","","Build Events from raw epoll events (defined in …",82,[[["u32",15]],["watchingevents",3]]],[11,"set_read","","Set read events.",82,[[],["watchingevents",3]]],[11,"set_write","","Set write events.",82,[[],["watchingevents",3]]],[11,"get_raw","","Get the underlying epoll events.",82,[[],["u32",15]]],[11,"new","","Creates a new <code>EpollContext</code>.",83,[[],[["epollcontext",3],["result",6]]]],[11,"build_with","","Creates a new <code>EpollContext</code> and adds the slice of <code>fd</code> and …",83,[[],[["epollcontext",3],["result",6]]]],[11,"add_many","","Adds the given slice of <code>fd</code> and <code>token</code> tuples to this …",83,[[],["result",6]]],[11,"add","","Adds the given <code>fd</code> to this context and associates the …",83,[[["asrawfd",8]],["result",6]]],[11,"add_fd_with_events","","Adds the given <code>fd</code> to this context, watching for the …",83,[[["watchingevents",3],["asrawfd",8]],["result",6]]],[11,"modify","","If <code>fd</code> was previously added to this context, the watched …",83,[[["watchingevents",3],["asrawfd",8]],["result",6]]],[11,"delete","","Deletes the given <code>fd</code> from this context.",83,[[["asrawfd",8]],["result",6]]],[11,"wait","","Waits for any events to occur in FDs that were previously …",83,[[["epollevents",3]],[["pollevents",3],["result",6]]]],[11,"wait_timeout","","Like <code>wait</code> except will only block for a maximum of the …",83,[[["epollevents",3],["duration",3]],[["pollevents",3],["result",6]]]],[11,"new","","Creates a new <code>PollContext</code>.",84,[[],[["pollcontext",3],["result",6]]]],[11,"build_with","","Creates a new <code>PollContext</code> and adds the slice of <code>fd</code> and …",84,[[],[["pollcontext",3],["result",6]]]],[11,"add_many","","Adds the given slice of <code>fd</code> and <code>token</code> tuples to this …",84,[[],["result",6]]],[11,"add","","Adds the given <code>fd</code> to this context and associates the …",84,[[["asrawfd",8]],["result",6]]],[11,"add_fd_with_events","","Adds the given <code>fd</code> to this context, watching for the …",84,[[["watchingevents",3],["asrawfd",8]],["result",6]]],[11,"modify","","If <code>fd</code> was previously added to this context, the watched …",84,[[["watchingevents",3],["asrawfd",8]],["result",6]]],[11,"delete","","Deletes the given <code>fd</code> from this context.",84,[[["asrawfd",8]],["result",6]]],[11,"wait","","Waits for any events to occur in FDs that were previously …",84,[[],[["result",6],["pollevents",3]]]],[11,"wait_timeout","","Like <code>wait</code> except will only block for a maximum of the …",84,[[["duration",3]],[["result",6],["pollevents",3]]]],[11,"new","","Returns an empty set of memfd seals.",87,[[],["memfdseals",3]]],[11,"bitmask","","Gets the raw bitmask of seals enumerated in <code>fcntl(2)</code>.",87,[[],["i32",15]]],[11,"grow_seal","","True of the grow seal bit is present.",87,[[],["bool",15]]],[11,"set_grow_seal","","Sets the grow seal bit.",87,[[]]],[11,"shrink_seal","","True of the shrink seal bit is present.",87,[[],["bool",15]]],[11,"set_shrink_seal","","Sets the shrink seal bit.",87,[[]]],[11,"write_seal","","True of the write seal bit is present.",87,[[],["bool",15]]],[11,"set_write_seal","","Sets the write seal bit.",87,[[]]],[11,"seal_seal","","True of the seal seal bit is present.",87,[[],["bool",15]]],[11,"set_seal_seal","","Sets the seal seal bit.",87,[[]]],[11,"named","","Convenience function for <code>SharedMemory::new</code> that is always …",86,[[["vec",3],["into",8]],[["result",6],["sharedmemory",3]]]],[11,"anon","","Convenience function for <code>SharedMemory::new</code> that has an …",86,[[],[["result",6],["sharedmemory",3]]]],[11,"new","","Creates a new shared memory file descriptor with zero …",86,[[["option",4],["cstr",3]],[["result",6],["sharedmemory",3]]]],[11,"from_file","","Constructs a <code>SharedMemory</code> instance from a <code>File</code> that …",86,[[["file",3]],[["result",6],["sharedmemory",3]]]],[11,"get_seals","","Gets the memfd seals that have already been added to this.",86,[[],[["result",6],["memfdseals",3]]]],[11,"add_seals","","Adds the given set of memfd seals.",86,[[["memfdseals",3]],["result",6]]],[11,"size","","Gets the size in bytes of the shared memory.",86,[[],["u64",15]]],[11,"set_size","","Sets the size in bytes of the shared memory.",86,[[["u64",15]],["result",6]]],[11,"read_name","","Reads the name from the underlying file as a <code>String</code>.",86,[[],[["result",6],["string",3]]]],[11,"new","","Creates a new SignalFd for the given signal, blocking the …",88,[[["c_int",6]],[["signalfd",3],["result",4],["error",4]]]],[11,"read","","Read a siginfo struct from the signalfd, if available.",88,[[],[["option",4],["result",4],["error",4]]]],[11,"send_with_fd","","Sends the given data and file descriptor over the socket.",49,[[["rawfd",6]],[["result",6],["usize",15]]]],[11,"send_with_fds","","Sends the given data and file descriptors over the socket.",49,[[],[["result",6],["usize",15]]]],[11,"send_bufs_with_fd","","Sends the given data and file descriptor over the socket.",49,[[["rawfd",6]],[["result",6],["usize",15]]]],[11,"send_bufs_with_fds","","Sends the given data and file descriptors over the socket.",49,[[],[["result",6],["usize",15]]]],[11,"recv_with_fd","","Receives data and potentially a file descriptor from the …",49,[[],["result",6]]],[11,"recv_with_fds","","Receives data and file descriptors from the socket.",49,[[],["result",6]]],[11,"recv_iovecs_with_fds","","Receives data and file descriptors from the socket.",49,[[],["result",6]]],[11,"set_canon_mode","","Set this terminal\'s mode to canonical mode (…",51,[[],["result",6]]],[11,"set_raw_mode","","Set this terminal\'s mode to raw mode (…",51,[[],["result",6]]],[11,"set_non_block","","Sets the non-blocking mode of this terminal\'s file …",51,[[["bool",15]],["result",6]]],[11,"new","","Creates a new timerfd.  The timer is initally disarmed …",89,[[],[["timerfd",3],["result",6]]]],[11,"try_clone","","Creates a new <code>TimerFd</code> instance that shares the same …",89,[[],[["error",3],["result",4],["timerfd",3]]]],[11,"reset","","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …",89,[[["option",4],["duration",3]],["result",6]]],[11,"wait","","Waits until the timer expires.  The return value …",89,[[],[["result",6],["u64",15]]]],[11,"is_armed","","Returns <code>true</code> if the timer is currently armed.",89,[[],[["bool",15],["result",6]]]],[11,"clear","","Disarms the timer.",89,[[],["result",6]]],[11,"resolution","","Returns the resolution of timers on the host.",89,[[],[["duration",3],["result",6]]]],[11,"new","","Creates a new fake timerfd.  The timer is initally …",90,[[["mutex",3],["arc",3]]]],[11,"reset","","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …",90,[[["option",4],["duration",3]],["result",6]]],[11,"wait","","Waits until the timer expires.  The return value …",90,[[],[["result",6],["u64",15]]]],[11,"is_armed","","Returns <code>true</code> if the timer is currently armed.",90,[[],[["bool",15],["result",6]]]],[11,"clear","","Disarms the timer.",90,[[],["result",6]]],[11,"resolution","","Returns the resolution of timers on the host.",90,[[],[["duration",3],["result",6]]]],[11,"write_zeroes_all","","Write zeroes to the stream until <code>length</code> bytes have been …",55,[[["usize",15]],["result",6]]],[11,"write_zeroes_all_at","","Write zeroes starting at <code>offset</code> until <code>length</code> bytes have …",56,[[["usize",15],["u64",15]],["result",6]]]],"p":[[8,"InterruptibleResult"],[4,"Priority"],[4,"Facility"],[4,"Error"],[3,"Syslogger"],[3,"iovec"],[8,"FileSync"],[8,"FileSetLen"],[8,"FileGetLen"],[8,"FileAllocate"],[8,"FileReadWriteVolatile"],[8,"FileReadWriteAtVolatile"],[8,"AsRawFds"],[4,"InetVersion"],[3,"TcpSocket"],[3,"UnixSeqpacket"],[3,"UnixSeqpacketListener"],[3,"UnlinkUnixSeqpacketListener"],[4,"Source"],[3,"DirEntry"],[3,"ReadDir"],[3,"ScopedPath"],[4,"Error"],[8,"SignalHandler"],[3,"ScopedSignalHandler"],[4,"Error"],[4,"Signal"],[8,"Killable"],[3,"KillOnDrop"],[4,"VsockCid"],[3,"SocketAddr"],[8,"ToSocketAddr"],[3,"VsockSocket"],[3,"VsockStream"],[3,"VsockListener"],[8,"IntoRawDescriptor"],[8,"AsRawDescriptor"],[8,"FromRawDescriptor"],[3,"Descriptor"],[4,"EventReadResult"],[4,"Error"],[4,"FileFlags"],[4,"CloneNamespace"],[4,"CloneError"],[4,"Error"],[8,"MappedRegion"],[8,"PollToken"],[3,"Fd"],[4,"Error"],[8,"ScmSocket"],[8,"AsIobuf"],[8,"Terminal"],[3,"FileSerdeWrapper"],[8,"SeekHole"],[8,"PunchHole"],[8,"WriteZeroes"],[8,"WriteZeroesAt"],[4,"FlockOperation"],[4,"FallocateMode"],[8,"AsRawPid"],[4,"WaitStatus"],[3,"UnlinkUnixDatagram"],[3,"UnlinkUnixListener"],[3,"LayoutAllocation"],[3,"Clock"],[3,"FakeClock"],[3,"SafeDescriptor"],[3,"SerializeDescriptors"],[3,"Error"],[3,"EventFd"],[3,"ScopedEvent"],[3,"ExternalMapping"],[4,"c_void"],[3,"VolatileSlice"],[3,"Protection"],[3,"MemoryMapping"],[3,"MemoryMappingArena"],[3,"EpollEvents"],[3,"PollEvent"],[3,"PollEventIter"],[3,"PollEvents"],[3,"PollEventsOwned"],[3,"WatchingEvents"],[3,"EpollContext"],[3,"PollContext"],[3,"EmptySignalHandler"],[3,"SharedMemory"],[3,"MemfdSeals"],[3,"SignalFd"],[3,"TimerFd"],[3,"FakeTimerFd"],[3,"AddrParseError"],[6,"Result"],[6,"Pid"],[6,"c_int"]]},\
"tempfile":{"doc":"Temporary files and directories.","i":[[5,"tempdir","tempfile","Create a new temporary directory.",null,[[],[["result",6],["tempdir",3]]]],[5,"tempdir_in","","Create a new temporary directory.",null,[[["path",3],["asref",8]],[["result",6],["tempdir",3]]]],[3,"TempDir","","A directory in the filesystem that is automatically …",null,null],[5,"tempfile","","Create a new temporary file.",null,[[],[["result",6],["file",3]]]],[5,"tempfile_in","","Create a new temporary file in the specified directory.",null,[[["path",3],["asref",8]],[["result",6],["file",3]]]],[3,"NamedTempFile","","A named temporary file.",null,null],[3,"PathPersistError","","Error returned when persisting a temporary file path …",null,null],[12,"error","","The underlying IO error.",0,null],[12,"path","","The temporary file path that couldn\'t be persisted.",0,null],[3,"PersistError","","Error returned when persisting a temporary file fails.",null,null],[12,"error","","The underlying IO error.",1,null],[12,"file","","The temporary file that couldn\'t be persisted.",1,null],[3,"TempPath","","A path to a named temporary file without an open file …",null,null],[5,"spooled_tempfile","","Create a new spooled temporary file.",null,[[["usize",15]],["spooledtempfile",3]]],[3,"SpooledTempFile","","An object that behaves like a regular temporary file, but …",null,null],[3,"Builder","","Create a new temporary file or directory with custom …",null,null],[11,"new","","Create a new <code>Builder</code>.",2,[[]]],[11,"prefix","","Set a custom filename prefix.",2,[[]]],[11,"suffix","","Set a custom filename suffix.",2,[[]]],[11,"rand_bytes","","Set the number of random bytes.",2,[[["usize",15]]]],[11,"append","","Set the file to be opened in append mode.",2,[[["bool",15]]]],[11,"tempfile","","Create the named temporary file.",2,[[],[["namedtempfile",3],["result",6]]]],[11,"tempfile_in","","Create the named temporary file in the specified …",2,[[["path",3],["asref",8]],[["namedtempfile",3],["result",6]]]],[11,"tempdir","","Attempts to make a temporary directory inside of …",2,[[],[["result",6],["tempdir",3]]]],[11,"tempdir_in","","Attempts to make a temporary directory inside of <code>dir</code>. The …",2,[[["path",3],["asref",8]],[["result",6],["tempdir",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"drop","","",3,[[]]],[11,"drop","","",4,[[]]],[11,"as_ref","","",3,[[],["path",3]]],[11,"as_ref","","",4,[[],["path",3]]],[11,"as_ref","","",4,[[],["osstr",3]]],[11,"as_ref","","",5,[[],["path",3]]],[11,"from","","",4,[[["pathpersisterror",3]],["temppath",3]]],[11,"from","","",5,[[["persisterror",3]],["namedtempfile",3]]],[11,"clone","","",2,[[],["builder",3]]],[11,"default","","",2,[[]]],[11,"eq","","",2,[[["builder",3]],["bool",15]]],[11,"ne","","",2,[[["builder",3]],["bool",15]]],[11,"deref","","",4,[[],["path",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"source","","",1,[[],[["error",8],["option",4]]]],[11,"read","","",5,[[],[["usize",15],["result",6]]]],[11,"read","","",6,[[],[["usize",15],["result",6]]]],[11,"seek","","",5,[[["seekfrom",4]],[["u64",15],["result",6]]]],[11,"seek","","",6,[[["seekfrom",4]],[["u64",15],["result",6]]]],[11,"write","","",5,[[],[["usize",15],["result",6]]]],[11,"flush","","",5,[[],["result",6]]],[11,"write","","",6,[[],[["usize",15],["result",6]]]],[11,"flush","","",6,[[],["result",6]]],[11,"as_raw_fd","","",5,[[],["rawfd",6]]],[11,"new","","Attempts to make a temporary directory inside of …",3,[[],[["result",6],["tempdir",3]]]],[11,"new_in","","Attempts to make a temporary directory inside of <code>dir</code>. The …",3,[[["path",3],["asref",8]],[["result",6],["tempdir",3]]]],[11,"path","","Accesses the <code>Path</code> to the temporary directory.",3,[[],["path",3]]],[11,"into_path","","Persist the temporary directory to disk, returning the …",3,[[],["pathbuf",3]]],[11,"close","","Closes and removes the temporary directory, returning a …",3,[[],["result",6]]],[11,"close","","Close and remove the temporary file.",4,[[],["result",6]]],[11,"persist","","Persist the temporary file at the target path.",4,[[["path",3],["asref",8]],[["result",4],["pathpersisterror",3]]]],[11,"persist_noclobber","","Persist the temporary file at the target path if and only …",4,[[["path",3],["asref",8]],[["result",4],["pathpersisterror",3]]]],[11,"keep","","Keep the temporary file from being deleted. This function …",4,[[],[["pathbuf",3],["result",4],["pathpersisterror",3]]]],[11,"new","","Create a new named temporary file.",5,[[],[["namedtempfile",3],["result",6]]]],[11,"new_in","","Create a new named temporary file in the specified …",5,[[["path",3],["asref",8]],[["namedtempfile",3],["result",6]]]],[11,"path","","Get the temporary file\'s path.",5,[[],["path",3]]],[11,"close","","Close and remove the temporary file.",5,[[],["result",6]]],[11,"persist","","Persist the temporary file at the target path.",5,[[["path",3],["asref",8]],[["persisterror",3],["result",4],["file",3]]]],[11,"persist_noclobber","","Persist the temporary file at the target path if and only …",5,[[["path",3],["asref",8]],[["persisterror",3],["result",4],["file",3]]]],[11,"keep","","Keep the temporary file from being deleted. This function …",5,[[],[["result",4],["persisterror",3]]]],[11,"reopen","","Securely reopen the temporary file.",5,[[],[["result",6],["file",3]]]],[11,"as_file","","Get a reference to the underlying file.",5,[[],["file",3]]],[11,"as_file_mut","","Get a mutable reference to the underlying file.",5,[[],["file",3]]],[11,"into_file","","Convert the temporary file into a <code>std::fs::File</code>.",5,[[],["file",3]]],[11,"into_temp_path","","Closes the file, leaving only the temporary file path.",5,[[],["temppath",3]]],[11,"into_parts","","Converts the named temporary file into its constituent …",5,[[]]],[11,"new","","",6,[[["usize",15]],["spooledtempfile",3]]],[11,"is_rolled","","Returns true if the file has been rolled over to disk.",6,[[],["bool",15]]],[11,"roll","","Rolls over to a file on disk, regardless of current size. …",6,[[],["result",6]]],[11,"set_len","","",6,[[["u64",15]],[["error",3],["result",4]]]]],"p":[[3,"PathPersistError"],[3,"PersistError"],[3,"Builder"],[3,"TempDir"],[3,"TempPath"],[3,"NamedTempFile"],[3,"SpooledTempFile"]]},\
"thiserror":{"doc":"github crates-io docs-rs","i":[[24,"Error","thiserror","",null,null]],"p":[]},\
"thiserror_impl":{"doc":"","i":[[24,"Error","thiserror_impl","",null,null]],"p":[]},\
"tpm2":{"doc":"","i":[[3,"Simulator","tpm2","A libtpm2-based TPM simulator.",null,null],[11,"singleton_in_current_directory","","Initializes a TPM simulator in the current working …",0,[[]]],[11,"execute_command","","Sends a TPM command to the TPM simulator, waits for the …",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"Simulator"]]},\
"tpm2_sys":{"doc":"","i":[[5,"TPM_Manufacture","tpm2_sys","",null,null],[5,"_plat__SetNvAvail","","",null,null],[5,"_plat__Signal_PowerOn","","",null,null],[5,"_TPM_Init","","",null,null],[5,"ExecuteCommand","","",null,null]],"p":[]},\
"unicode_width":{"doc":"Determine displayed width of <code>char</code> and <code>str</code> types according …","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width …",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode …",null,null],[10,"width","","Returns the character\'s displayed width in columns, or …",0,[[],[["option",4],["usize",15]]]],[10,"width_cjk","","Returns the character\'s displayed width in columns, or …",0,[[],[["option",4],["usize",15]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode …",null,null],[10,"width","","Returns the string\'s displayed width in columns.",1,[[],["usize",15]]],[10,"width_cjk","","Returns the string\'s displayed width in columns.",1,[[],["usize",15]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid …",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid …",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the …",0,[[],["bool",15]]],[10,"is_xid_continue","","Returns whether the specified <code>char</code> satisfies the …",0,[[],["bool",15]]]],"p":[[8,"UnicodeXID"]]},\
"usb_sys":{"doc":"","i":[[3,"__IncompleteArrayField","usb_sys","",null,null],[11,"new","","",0,[[]]],[11,"as_ptr","","",0,[[]]],[11,"as_mut_ptr","","",0,[[]]],[11,"as_slice","","",0,[[["usize",15]]]],[11,"as_mut_slice","","",0,[[["usize",15]]]],[3,"usbdevfs_ctrltransfer","","",null,null],[12,"bRequestType","","",1,null],[12,"bRequest","","",1,null],[12,"wValue","","",1,null],[12,"wIndex","","",1,null],[12,"wLength","","",1,null],[12,"timeout","","",1,null],[12,"data","","",1,null],[3,"usbdevfs_bulktransfer","","",null,null],[12,"ep","","",2,null],[12,"len","","",2,null],[12,"timeout","","",2,null],[12,"data","","",2,null],[3,"usbdevfs_setinterface","","",null,null],[12,"interface","","",3,null],[12,"altsetting","","",3,null],[17,"USBDEVFS_MAXDRIVERNAME","","",null,null],[3,"usbdevfs_getdriver","","",null,null],[12,"interface","","",4,null],[12,"driver","","",4,null],[3,"usbdevfs_connectinfo","","",null,null],[12,"devnum","","",5,null],[12,"slow","","",5,null],[17,"USBDEVFS_URB_SHORT_NOT_OK","","",null,null],[17,"USBDEVFS_URB_ISO_ASAP","","",null,null],[17,"USBDEVFS_URB_BULK_CONTINUATION","","",null,null],[17,"USBDEVFS_URB_NO_FSBR","","",null,null],[17,"USBDEVFS_URB_ZERO_PACKET","","",null,null],[17,"USBDEVFS_URB_NO_INTERRUPT","","",null,null],[17,"USBDEVFS_URB_TYPE_ISO","","",null,null],[17,"USBDEVFS_URB_TYPE_INTERRUPT","","",null,null],[17,"USBDEVFS_URB_TYPE_CONTROL","","",null,null],[17,"USBDEVFS_URB_TYPE_BULK","","",null,null],[3,"usbdevfs_iso_packet_desc","","",null,null],[12,"length","","",6,null],[12,"actual_length","","",6,null],[12,"status","","",6,null],[3,"usbdevfs_urb","","",null,null],[12,"urb_type","","",7,null],[12,"endpoint","","",7,null],[12,"status","","",7,null],[12,"flags","","",7,null],[12,"buffer","","",7,null],[12,"buffer_length","","",7,null],[12,"actual_length","","",7,null],[12,"start_frame","","",7,null],[12,"number_of_packets_or_stream_id","","",7,null],[12,"error_count","","",7,null],[12,"signr","","",7,null],[12,"usercontext","","",7,null],[12,"iso_frame_desc","","",7,null],[3,"usbdevfs_ioctl","","",null,null],[12,"ifno","","",8,null],[12,"ioctl_code","","",8,null],[12,"data","","",8,null],[3,"usbdevfs_hub_portinfo","","",null,null],[12,"nports","","",9,null],[12,"port","","",9,null],[17,"USBDEVFS_CAP_ZERO_PACKET","","",null,null],[17,"USBDEVFS_CAP_BULK_CONTINUATION","","",null,null],[17,"USBDEVFS_CAP_NO_PACKET_SIZE_LIM","","",null,null],[17,"USBDEVFS_CAP_BULK_SCATTER_GATHER","","",null,null],[17,"USBDEVFS_CAP_REAP_AFTER_DISCONNECT","","",null,null],[17,"USBDEVFS_CAP_MMAP","","",null,null],[17,"USBDEVFS_CAP_DROP_PRIVILEGES","","",null,null],[17,"USBDEVFS_DISCONNECT_CLAIM_IF_DRIVER","","",null,null],[17,"USBDEVFS_DISCONNECT_CLAIM_EXCEPT_DRIVER","","",null,null],[3,"usbdevfs_disconnect_claim","","",null,null],[12,"interface","","",10,null],[12,"flags","","",10,null],[12,"driver","","",10,null],[3,"usbdevfs_streams","","",null,null],[12,"num_streams","","",11,null],[12,"num_eps","","",11,null],[12,"eps","","",11,null],[5,"USBDEVFS_CONTROL","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_BULK","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_RESETEP","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_SETINTERFACE","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_SETCONFIGURATION","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_GETDRIVER","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_SUBMITURB","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_DISCARDURB","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_REAPURB","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_REAPURBNDELAY","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_DISCSIGNAL","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_CLAIMINTERFACE","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_RELEASEINTERFACE","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_CONNECTINFO","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_IOCTL","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_HUB_PORTINFO","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_RESET","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_CLEAR_HALT","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_DISCONNECT","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_CONNECT","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_CLAIM_PORT","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_RELEASE_PORT","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_GET_CAPABILITIES","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_DISCONNECT_CLAIM","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_ALLOC_STREAMS","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_FREE_STREAMS","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_DROP_PRIVILEGES","","",null,[[],["ioctlnr",6]]],[5,"USBDEVFS_GET_SPEED","","",null,[[],["ioctlnr",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"clone","","",1,[[],["usbdevfs_ctrltransfer",3]]],[11,"clone","","",2,[[],["usbdevfs_bulktransfer",3]]],[11,"clone","","",3,[[],["usbdevfs_setinterface",3]]],[11,"clone","","",4,[[],["usbdevfs_getdriver",3]]],[11,"clone","","",5,[[],["usbdevfs_connectinfo",3]]],[11,"clone","","",6,[[],["usbdevfs_iso_packet_desc",3]]],[11,"clone","","",7,[[],["usbdevfs_urb",3]]],[11,"clone","","",8,[[],["usbdevfs_ioctl",3]]],[11,"clone","","",9,[[],["usbdevfs_hub_portinfo",3]]],[11,"clone","","",10,[[],["usbdevfs_disconnect_claim",3]]],[11,"default","","",0,[[],["__incompletearrayfield",3]]],[11,"default","","",3,[[],["usbdevfs_setinterface",3]]],[11,"default","","",5,[[],["usbdevfs_connectinfo",3]]],[11,"default","","",6,[[],["usbdevfs_iso_packet_desc",3]]],[11,"default","","",7,[[]]]],"p":[[3,"__IncompleteArrayField"],[3,"usbdevfs_ctrltransfer"],[3,"usbdevfs_bulktransfer"],[3,"usbdevfs_setinterface"],[3,"usbdevfs_getdriver"],[3,"usbdevfs_connectinfo"],[3,"usbdevfs_iso_packet_desc"],[3,"usbdevfs_urb"],[3,"usbdevfs_ioctl"],[3,"usbdevfs_hub_portinfo"],[3,"usbdevfs_disconnect_claim"],[3,"usbdevfs_streams"]]},\
"usb_util":{"doc":"","i":[[5,"parse_usbfs_descriptors","usb_util","Given <code>data</code> containing a full set of descriptors as …",null,[[],[["devicedescriptortree",3],["result",6]]]],[3,"ConfigDescriptorTree","","",null,null],[3,"DeviceDescriptorTree","","",null,null],[3,"InterfaceDescriptorTree","","",null,null],[3,"Device","","Device represents a USB device.",null,null],[3,"Transfer","","Transfer contains the information necessary to submit a …",null,null],[12,"buffer","","",0,null],[4,"TransferStatus","","",null,null],[13,"Completed","","",1,null],[13,"Error","","",1,null],[13,"Cancelled","","",1,null],[13,"NoDevice","","",1,null],[4,"Error","","",null,null],[13,"DescriptorParse","","",2,null],[13,"DescriptorRead","","",2,null],[13,"FdCloneFailed","","",2,null],[13,"InvalidActualLength","","",2,null],[13,"InvalidBufferLength","","",2,null],[13,"IoctlFailed","","",2,null],[13,"NoDevice","","",2,null],[13,"NoSuchDescriptor","","",2,null],[13,"RcGetMutFailed","","",2,null],[13,"RcUnwrapFailed","","",2,null],[13,"TransferAlreadyCompleted","","",2,null],[6,"Result","","",null,null],[5,"control_request_type","","Construct a bmRequestType value for a control request.",null,[[["controlrequesttype",4],["controlrequestdataphasetransferdirection",4],["controlrequestrecipient",4]],["u8",15]]],[3,"ConfigDescriptor","","Standard USB configuration descriptor as defined in USB …",null,null],[12,"wTotalLength","","",3,null],[12,"bNumInterfaces","","",3,null],[12,"bConfigurationValue","","",3,null],[12,"iConfiguration","","",3,null],[12,"bmAttributes","","",3,null],[12,"bMaxPower","","",3,null],[4,"ControlRequestDataPhaseTransferDirection","","",null,null],[13,"HostToDevice","","",4,null],[13,"DeviceToHost","","",4,null],[4,"ControlRequestRecipient","","Recipient type of control request.",null,null],[13,"Device","","",5,null],[13,"Interface","","",5,null],[13,"Endpoint","","",5,null],[13,"Other","","",5,null],[13,"Reserved","","",5,null],[4,"ControlRequestType","","Request types.",null,null],[13,"Standard","","",6,null],[13,"Class","","",6,null],[13,"Vendor","","",6,null],[13,"Reserved","","",6,null],[3,"DescriptorHeader","","Standard USB descriptor header common to all descriptor …",null,null],[12,"bLength","","",7,null],[12,"bDescriptorType","","",7,null],[4,"DescriptorType","","Standard USB descriptor types.",null,null],[13,"Device","","",8,null],[13,"Configuration","","",8,null],[13,"Interface","","",8,null],[13,"Endpoint","","",8,null],[3,"DeviceDescriptor","","Standard USB device descriptor as defined in USB 2.0 …",null,null],[12,"bcdUSB","","",9,null],[12,"bDeviceClass","","",9,null],[12,"bDeviceSubClass","","",9,null],[12,"bDeviceProtocol","","",9,null],[12,"bMaxPacketSize0","","",9,null],[12,"idVendor","","",9,null],[12,"idProduct","","",9,null],[12,"bcdDevice","","",9,null],[12,"iManufacturer","","",9,null],[12,"iProduct","","",9,null],[12,"iSerialNumber","","",9,null],[12,"bNumConfigurations","","",9,null],[3,"EndpointDescriptor","","Standard USB endpoint descriptor as defined in USB 2.0 …",null,null],[12,"bEndpointAddress","","",10,null],[12,"bmAttributes","","",10,null],[12,"wMaxPacketSize","","",10,null],[12,"bInterval","","",10,null],[4,"EndpointDirection","","Endpoint Directions.",null,null],[13,"HostToDevice","","",11,null],[13,"DeviceToHost","","",11,null],[4,"EndpointType","","Endpoint types.",null,null],[13,"Control","","",12,null],[13,"Isochronous","","",12,null],[13,"Bulk","","",12,null],[13,"Interrupt","","",12,null],[3,"InterfaceDescriptor","","Standard USB interface descriptor as defined in USB 2.0 …",null,null],[12,"bInterfaceNumber","","",13,null],[12,"bAlternateSetting","","",13,null],[12,"bNumEndpoints","","",13,null],[12,"bInterfaceClass","","",13,null],[12,"bInterfaceSubClass","","",13,null],[12,"bInterfaceProtocol","","",13,null],[12,"iInterface","","",13,null],[4,"StandardControlRequest","","Standard request defined in usb spec.",null,null],[13,"GetStatus","","",14,null],[13,"ClearFeature","","",14,null],[13,"SetFeature","","",14,null],[13,"SetAddress","","",14,null],[13,"GetDescriptor","","",14,null],[13,"SetDescriptor","","",14,null],[13,"GetConfiguration","","",14,null],[13,"SetConfiguration","","",14,null],[13,"GetInterface","","",14,null],[13,"SetInterface","","",14,null],[13,"SynchFrame","","",14,null],[3,"UsbRequestSetup","","RequestSetup is first part of control transfer buffer.",null,null],[12,"request_type","","",15,null],[12,"request","","",15,null],[12,"value","","",15,null],[12,"index","","",15,null],[12,"length","","",15,null],[17,"ENDPOINT_DIRECTION_OFFSET","","Endpoint direction offset.",null,null],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"as_raw_descriptors","","",19,[[],[["vec",3],["global",3],["i32",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"clone","","",16,[[],["devicedescriptortree",3]]],[11,"clone","","",17,[[],["configdescriptortree",3]]],[11,"clone","","",18,[[],["interfacedescriptortree",3]]],[11,"clone","","",7,[[],["descriptorheader",3]]],[11,"clone","","",9,[[],["devicedescriptor",3]]],[11,"clone","","",3,[[],["configdescriptor",3]]],[11,"clone","","",13,[[],["interfacedescriptor",3]]],[11,"clone","","",10,[[],["endpointdescriptor",3]]],[11,"clone","","",11,[[],["endpointdirection",4]]],[11,"clone","","",4,[[],["controlrequestdataphasetransferdirection",4]]],[11,"clone","","",15,[[],["usbrequestsetup",3]]],[11,"default","","",7,[[],["descriptorheader",3]]],[11,"default","","",9,[[],["devicedescriptor",3]]],[11,"default","","",3,[[],["configdescriptor",3]]],[11,"default","","",13,[[],["interfacedescriptor",3]]],[11,"default","","",10,[[],["endpointdescriptor",3]]],[11,"eq","","",1,[[["transferstatus",4]],["bool",15]]],[11,"eq","","",12,[[["endpointtype",4]],["bool",15]]],[11,"eq","","",11,[[["endpointdirection",4]],["bool",15]]],[11,"eq","","",4,[[["controlrequestdataphasetransferdirection",4]],["bool",15]]],[11,"eq","","",6,[[["controlrequesttype",4]],["bool",15]]],[11,"eq","","",5,[[["controlrequestrecipient",4]],["bool",15]]],[11,"eq","","",14,[[["standardcontrolrequest",4]],["bool",15]]],[11,"deref","","",16,[[],["devicedescriptor",3]]],[11,"deref","","",17,[[],["configdescriptor",3]]],[11,"deref","","",18,[[],["interfacedescriptor",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"as_raw_descriptor","","",19,[[],["rawdescriptor",6]]],[11,"get_config_descriptor","","",16,[[["u8",15]],[["configdescriptortree",3],["option",4]]]],[11,"get_config_descriptor_by_index","","Retrieve the Nth configuration descriptor in the device …",16,[[["u8",15]],[["configdescriptortree",3],["option",4]]]],[11,"raw","","Access the raw descriptor tree as a slice of bytes.",16,[[]]],[11,"get_interface_descriptor","","Get interface by number and alt setting.",17,[[["u8",15]],[["interfacedescriptortree",3],["option",4]]]],[11,"offset","","Get the offset of this configuration descriptor within …",17,[[],["usize",15]]],[11,"get_endpoint_descriptor","","",18,[[["u8",15]],[["option",4],["endpointdescriptor",3]]]],[11,"offset","","Get the offset of this interface descriptor within the …",18,[[],["usize",15]]],[11,"new","","Create a new <code>Device</code> from a file descriptor. <code>fd</code> should be …",19,[[["file",3]],["result",6]]],[11,"fd","","",19,[[],[["file",3],["arc",3]]]],[11,"submit_transfer","","Submit a transfer to the device. The transfer will be …",19,[[["transfer",3]],[["transferhandle",3],["result",6]]]],[11,"poll_transfers","","Check for completed asynchronous transfers submitted via …",19,[[],["result",6]]],[11,"reset","","Perform a USB port reset to reinitialize a device.",19,[[],["result",6]]],[11,"claim_interface","","Claim an interface on this device.",19,[[["u8",15]],["result",6]]],[11,"release_interface","","Release an interface previously claimed with …",19,[[["u8",15]],["result",6]]],[11,"set_interface_alt_setting","","Activate an alternate setting for an interface.",19,[[["u8",15]],["result",6]]],[11,"set_active_configuration","","Set active configuration for this device.",19,[[["u8",15]],["result",6]]],[11,"get_device_descriptor","","Get the device descriptor of this device.",19,[[],[["devicedescriptor",3],["result",6]]]],[11,"get_device_descriptor_tree","","",19,[[],["devicedescriptortree",3]]],[11,"get_config_descriptor","","Get active config descriptor of this device.",19,[[["u8",15]],[["configdescriptortree",3],["result",6]]]],[11,"get_config_descriptor_by_index","","Get a configuration descriptor by its index within the …",19,[[["u8",15]],[["configdescriptortree",3],["result",6]]]],[11,"get_active_configuration","","Get bConfigurationValue of the currently active …",19,[[],[["u8",15],["result",6]]]],[11,"get_num_configurations","","Get the total number of configurations for this device.",19,[[],["u8",15]]],[11,"clear_halt","","Clear the halt/stall condition for an endpoint.",19,[[["u8",15]],["result",6]]],[11,"new_control","","Create a control transfer.",0,[[["vec",3],["u8",15]],[["transfer",3],["result",6]]]],[11,"new_interrupt","","Create an interrupt transfer.",0,[[["vec",3],["u8",15]],[["transfer",3],["result",6]]]],[11,"new_bulk","","Create a bulk transfer.",0,[[["vec",3],["u8",15]],[["transfer",3],["result",6]]]],[11,"new_isochronous","","Create an isochronous transfer.",0,[[["vec",3],["u8",15]],[["transfer",3],["result",6]]]],[11,"status","","Get the status of a completed transfer.",0,[[],["transferstatus",4]]],[11,"actual_length","","Get the actual amount of data transferred, which may be …",0,[[],["usize",15]]],[11,"set_callback","","Set callback function for transfer completion.",0,[[["send",8],["fn",8],["sync",8]]]],[11,"num_interfaces","","",3,[[],["u8",15]]],[11,"get_direction","","",10,[[],["endpointdirection",4]]],[11,"get_endpoint_number","","",10,[[],["u8",15]]],[11,"get_endpoint_type","","",10,[[],[["option",4],["endpointtype",4]]]],[11,"new","","",15,[[["u16",15],["u8",15]],["usbrequestsetup",3]]],[11,"get_type","","Get type of request.",15,[[],["controlrequesttype",4]]],[11,"get_direction","","Get request direction.",15,[[],["controlrequestdataphasetransferdirection",4]]],[11,"get_recipient","","Get recipient of this control transfer.",15,[[],["controlrequestrecipient",4]]],[11,"get_standard_request","","Return the type of standard control request.",15,[[],[["option",4],["standardcontrolrequest",4]]]]],"p":[[3,"Transfer"],[4,"TransferStatus"],[4,"Error"],[3,"ConfigDescriptor"],[4,"ControlRequestDataPhaseTransferDirection"],[4,"ControlRequestRecipient"],[4,"ControlRequestType"],[3,"DescriptorHeader"],[4,"DescriptorType"],[3,"DeviceDescriptor"],[3,"EndpointDescriptor"],[4,"EndpointDirection"],[4,"EndpointType"],[3,"InterfaceDescriptor"],[4,"StandardControlRequest"],[3,"UsbRequestSetup"],[3,"DeviceDescriptorTree"],[3,"ConfigDescriptorTree"],[3,"InterfaceDescriptorTree"],[3,"Device"]]},\
"uuid":{"doc":"Generate and parse UUIDs.","i":[[0,"adapter","uuid","Adapters for various formats for UUIDs",null,null],[3,"Hyphenated","uuid::adapter","An adaptor for formatting an <code>Uuid</code> as a hyphenated string.",null,null],[3,"HyphenatedRef","","An adaptor for formatting an <code>Uuid</code> as a hyphenated string.",null,null],[3,"Simple","","An adaptor for formatting an <code>Uuid</code> as a simple string.",null,null],[3,"SimpleRef","","An adaptor for formatting an <code>Uuid</code> as a simple string.",null,null],[3,"Urn","","An adaptor for formatting an <code>Uuid</code> as a URN string.",null,null],[3,"UrnRef","","An adaptor for formatting an <code>Uuid</code> as a URN string.",null,null],[18,"LENGTH","","The length of a hyphenated <code>Uuid</code> string.",0,null],[11,"from_uuid","","Creates a <code>Hyphenated</code> from a <code>Uuid</code>.",0,[[["uuid",3]]]],[11,"encode_lower","","Writes the <code>Uuid</code> as a lower-case hyphenated string to …",0,[[],["str",15]]],[11,"encode_upper","","Writes the <code>Uuid</code> as an upper-case hyphenated string to …",0,[[],["str",15]]],[18,"LENGTH","","The length of a hyphenated <code>Uuid</code> string.",1,null],[11,"from_uuid_ref","","Creates a <code>HyphenatedRef</code> from a <code>Uuid</code> reference.",1,[[["uuid",3]]]],[11,"encode_lower","","Writes the <code>Uuid</code> as a lower-case hyphenated string to …",1,[[],["str",15]]],[11,"encode_upper","","Writes the <code>Uuid</code> as an upper-case hyphenated string to …",1,[[],["str",15]]],[18,"LENGTH","","The length of a simple <code>Uuid</code> string.",2,null],[11,"from_uuid","","Creates a <code>Simple</code> from a <code>Uuid</code>.",2,[[["uuid",3]]]],[11,"encode_lower","","Writes the <code>Uuid</code> as a lower-case simple string to <code>buffer</code>, …",2,[[],["str",15]]],[11,"encode_upper","","Writes the <code>Uuid</code> as an upper-case simple string to <code>buffer</code>, …",2,[[],["str",15]]],[18,"LENGTH","","The length of a simple <code>Uuid</code> string.",3,null],[11,"from_uuid_ref","","Creates a <code>SimpleRef</code> from a <code>Uuid</code> reference.",3,[[["uuid",3]]]],[11,"encode_lower","","Writes the <code>Uuid</code> as a lower-case simple string to <code>buffer</code>, …",3,[[],["str",15]]],[11,"encode_upper","","Writes the <code>Uuid</code> as an upper-case simple string to <code>buffer</code>, …",3,[[],["str",15]]],[18,"LENGTH","","The length of a URN <code>Uuid</code> string.",4,null],[11,"from_uuid","","Creates a <code>Urn</code> from a <code>Uuid</code>.",4,[[["uuid",3]]]],[11,"encode_lower","","Writes the <code>Uuid</code> as a lower-case URN string to <code>buffer</code>, and …",4,[[],["str",15]]],[11,"encode_upper","","Writes the <code>Uuid</code> as an upper-case URN string to <code>buffer</code>, …",4,[[],["str",15]]],[18,"LENGTH","","The length of a URN <code>Uuid</code> string.",5,null],[11,"from_uuid_ref","","Creates a <code>UrnRef</code> from a <code>Uuid</code> reference.",5,[[["uuid",3]]]],[11,"encode_lower","","Writes the <code>Uuid</code> as a lower-case URN string to <code>buffer</code>, and …",5,[[],["str",15]]],[11,"encode_upper","","Writes the <code>Uuid</code> as an upper-case URN string to <code>buffer</code>, …",5,[[],["str",15]]],[3,"Error","uuid","A general error that can occur when working with UUIDs.",null,null],[3,"Builder","","A builder struct for creating a UUID.",null,null],[6,"Bytes","","A 128-bit (16 byte) buffer containing the ID.",null,null],[4,"Version","","The version of the UUID, denoting the generating …",null,null],[13,"Nil","","Special case for <code>nil</code> UUID.",6,null],[13,"Mac","","Version 1: MAC address.",6,null],[13,"Dce","","Version 2: DCE Security.",6,null],[13,"Md5","","Version 3: MD5 hash.",6,null],[13,"Random","","Version 4: Random.",6,null],[13,"Sha1","","Version 5: SHA-1 hash.",6,null],[4,"Variant","","The reserved variants of UUIDs.",null,null],[13,"NCS","","Reserved by the NCS for backward compatibility.",7,null],[13,"RFC4122","","As described in the RFC4122 Specification (default).",7,null],[13,"Microsoft","","Reserved by Microsoft for backward compatibility.",7,null],[13,"Future","","Reserved for future expansion.",7,null],[3,"Uuid","","A Universally Unique Identifier (UUID).",null,null],[18,"NAMESPACE_DNS","","UUID namespace for Domain Name System (DNS).",8,null],[18,"NAMESPACE_OID","","UUID namespace for ISO Object Identifiers (OIDs).",8,null],[18,"NAMESPACE_URL","","UUID namespace for Uniform Resource Locators (URLs).",8,null],[18,"NAMESPACE_X500","","UUID namespace for X.500 Distinguished Names (DNs).",8,null],[11,"get_variant","","Returns the variant of the UUID structure.",8,[[],[["option",4],["variant",4]]]],[11,"get_version_num","","Returns the version number of the UUID.",8,[[],["usize",15]]],[11,"get_version","","Returns the version of the UUID.",8,[[],[["option",4],["version",4]]]],[11,"as_fields","","Returns the four field values of the UUID in big-endian …",8,[[]]],[11,"to_fields_le","","Returns the four field values of the UUID in …",8,[[]]],[11,"as_u128","","Returns a 128bit value containing the UUID data.",8,[[],["u128",15]]],[11,"to_u128_le","","Returns a 128bit little-endian value containing the UUID …",8,[[],["u128",15]]],[11,"as_bytes","","Returns an array of 16 octets containing the UUID data.",8,[[],["bytes",6]]],[11,"is_nil","","Tests if the UUID is nil.",8,[[],["bool",15]]],[11,"encode_buffer","","A buffer that can be used for <code>encode_...</code> calls, that is …",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"from","uuid::adapter","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"from","uuid","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"from","uuid::adapter","",0,[[["uuid",3]]]],[11,"from","","",1,[[["uuid",3]]]],[11,"from","","",2,[[["uuid",3]]]],[11,"from","","",3,[[["uuid",3]]]],[11,"from","","",4,[[["uuid",3]]]],[11,"from","","",5,[[["uuid",3]]]],[11,"fmt","uuid","",9,[[["formatter",3]],["result",6]]],[11,"fmt","uuid::adapter","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","uuid","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","uuid::adapter","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","uuid","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"eq","","",9,[[["error",3]],["bool",15]]],[11,"ne","","",9,[[["error",3]],["bool",15]]],[11,"eq","uuid::adapter","",0,[[["hyphenated",3]],["bool",15]]],[11,"ne","","",0,[[["hyphenated",3]],["bool",15]]],[11,"eq","","",1,[[["hyphenatedref",3]],["bool",15]]],[11,"ne","","",1,[[["hyphenatedref",3]],["bool",15]]],[11,"eq","","",2,[[["simple",3]],["bool",15]]],[11,"ne","","",2,[[["simple",3]],["bool",15]]],[11,"eq","","",3,[[["simpleref",3]],["bool",15]]],[11,"ne","","",3,[[["simpleref",3]],["bool",15]]],[11,"eq","","",4,[[["urn",3]],["bool",15]]],[11,"ne","","",4,[[["urn",3]],["bool",15]]],[11,"eq","","",5,[[["urnref",3]],["bool",15]]],[11,"ne","","",5,[[["urnref",3]],["bool",15]]],[11,"eq","uuid","",6,[[["version",4]],["bool",15]]],[11,"eq","","",7,[[["variant",4]],["bool",15]]],[11,"eq","","",8,[[["uuid",3]],["bool",15]]],[11,"ne","","",8,[[["uuid",3]],["bool",15]]],[11,"cmp","uuid::adapter","",0,[[["hyphenated",3]],["ordering",4]]],[11,"cmp","","",1,[[["hyphenatedref",3]],["ordering",4]]],[11,"cmp","","",2,[[["simple",3]],["ordering",4]]],[11,"cmp","","",3,[[["simpleref",3]],["ordering",4]]],[11,"cmp","","",4,[[["urn",3]],["ordering",4]]],[11,"cmp","","",5,[[["urnref",3]],["ordering",4]]],[11,"cmp","uuid","",8,[[["uuid",3]],["ordering",4]]],[11,"partial_cmp","uuid::adapter","",0,[[["hyphenated",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["hyphenated",3]],["bool",15]]],[11,"le","","",0,[[["hyphenated",3]],["bool",15]]],[11,"gt","","",0,[[["hyphenated",3]],["bool",15]]],[11,"ge","","",0,[[["hyphenated",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["hyphenatedref",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["hyphenatedref",3]],["bool",15]]],[11,"le","","",1,[[["hyphenatedref",3]],["bool",15]]],[11,"gt","","",1,[[["hyphenatedref",3]],["bool",15]]],[11,"ge","","",1,[[["hyphenatedref",3]],["bool",15]]],[11,"partial_cmp","","",2,[[["simple",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["simple",3]],["bool",15]]],[11,"le","","",2,[[["simple",3]],["bool",15]]],[11,"gt","","",2,[[["simple",3]],["bool",15]]],[11,"ge","","",2,[[["simple",3]],["bool",15]]],[11,"partial_cmp","","",3,[[["simpleref",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["simpleref",3]],["bool",15]]],[11,"le","","",3,[[["simpleref",3]],["bool",15]]],[11,"gt","","",3,[[["simpleref",3]],["bool",15]]],[11,"ge","","",3,[[["simpleref",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["urn",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["urn",3]],["bool",15]]],[11,"le","","",4,[[["urn",3]],["bool",15]]],[11,"gt","","",4,[[["urn",3]],["bool",15]]],[11,"ge","","",4,[[["urn",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["urnref",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["urnref",3]],["bool",15]]],[11,"le","","",5,[[["urnref",3]],["bool",15]]],[11,"gt","","",5,[[["urnref",3]],["bool",15]]],[11,"ge","","",5,[[["urnref",3]],["bool",15]]],[11,"partial_cmp","uuid","",8,[[["uuid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["uuid",3]],["bool",15]]],[11,"le","","",8,[[["uuid",3]],["bool",15]]],[11,"gt","","",8,[[["uuid",3]],["bool",15]]],[11,"ge","","",8,[[["uuid",3]],["bool",15]]],[11,"hash","","",9,[[]]],[11,"hash","uuid::adapter","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","uuid","",8,[[]]],[11,"from_str","","",8,[[["str",15]],["result",4]]],[11,"fmt","uuid::adapter","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","uuid","",8,[[["formatter",3]],["result",6]]],[11,"fmt","uuid::adapter","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","uuid","",8,[[["formatter",3]],["result",6]]],[11,"clone","","",9,[[],["error",3]]],[11,"clone","uuid::adapter","",0,[[],["hyphenated",3]]],[11,"clone","","",1,[[],["hyphenatedref",3]]],[11,"clone","","",2,[[],["simple",3]]],[11,"clone","","",3,[[],["simpleref",3]]],[11,"clone","","",4,[[],["urn",3]]],[11,"clone","","",5,[[],["urnref",3]]],[11,"clone","uuid","",6,[[],["version",4]]],[11,"clone","","",7,[[],["variant",4]]],[11,"clone","","",8,[[],["uuid",3]]],[11,"default","uuid::adapter","",0,[[],["hyphenated",3]]],[11,"default","","",2,[[],["simple",3]]],[11,"default","","",4,[[],["urn",3]]],[11,"default","uuid","",8,[[]]],[11,"source","","",9,[[],[["error",8],["option",4]]]],[11,"nil","","The \'nil UUID\'.",8,[[]]],[11,"from_fields","","Creates a UUID from four field values in big-endian order.",8,[[["u32",15],["u16",15]],[["uuid",3],["error",3],["result",4]]]],[11,"from_fields_le","","Creates a UUID from four field values in little-endian …",8,[[["u32",15],["u16",15]],[["uuid",3],["error",3],["result",4]]]],[11,"from_u128","","Creates a UUID from a 128bit value in big-endian order.",8,[[["u128",15]]]],[11,"from_u128_le","","Creates a UUID from a 128bit value in little-endian order.",8,[[["u128",15]]]],[11,"from_slice","","Creates a UUID using the supplied big-endian bytes.",8,[[],[["uuid",3],["error",3],["result",4]]]],[11,"from_bytes","","Creates a UUID using the supplied big-endian bytes.",8,[[["bytes",6]],["uuid",3]]],[11,"from_bytes","","Creates a <code>Builder</code> using the supplied big-endian bytes.",10,[[["bytes",6]]]],[11,"from_slice","","Creates a <code>Builder</code> using the supplied big-endian bytes.",10,[[],[["error",3],["result",4]]]],[11,"from_fields","","Creates a <code>Builder</code> from four big-endian field values.",10,[[["u32",15],["u16",15]],[["error",3],["result",4]]]],[11,"from_u128","","Creates a <code>Builder</code> from a big-endian 128bit value.",10,[[["u128",15]]]],[11,"nil","","Creates a <code>Builder</code> with an initial [<code>Uuid::nil</code>].",10,[[]]],[11,"set_variant","","Specifies the variant of the UUID.",10,[[["variant",4]]]],[11,"set_version","","Specifies the version number of the UUID.",10,[[["version",4]]]],[11,"build","","Hands over the internal constructed <code>Uuid</code>.",10,[[],["uuid",3]]],[11,"parse_str","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …",8,[[["str",15]],[["uuid",3],["error",3],["result",4]]]],[11,"to_hyphenated","","Get a <code>Hyphenated</code> formatter.",8,[[],["hyphenated",3]]],[11,"to_hyphenated_ref","","Get a borrowed <code>HyphenatedRef</code> formatter.",8,[[],["hyphenatedref",3]]],[11,"to_simple","","Get a <code>Simple</code> formatter.",8,[[],["simple",3]]],[11,"to_simple_ref","","Get a borrowed <code>SimpleRef</code> formatter.",8,[[],["simpleref",3]]],[11,"to_urn","","Get a <code>Urn</code> formatter.",8,[[],["urn",3]]],[11,"to_urn_ref","","Get a borrowed <code>UrnRef</code> formatter.",8,[[],["urnref",3]]],[11,"new_v4","","Creates a random UUID.",8,[[],["uuid",3]]]],"p":[[3,"Hyphenated"],[3,"HyphenatedRef"],[3,"Simple"],[3,"SimpleRef"],[3,"Urn"],[3,"UrnRef"],[4,"Version"],[4,"Variant"],[3,"Uuid"],[3,"Error"],[3,"Builder"]]},\
"vfio_sys":{"doc":"","i":[[0,"plat","vfio_sys","",null,null],[3,"__IncompleteArrayField","vfio_sys::plat","",null,null],[11,"new","","",0,[[]]],[11,"as_ptr","","",0,[[]]],[11,"as_mut_ptr","","",0,[[]]],[11,"as_slice","","",0,[[["usize",15]]]],[11,"as_mut_slice","","",0,[[["usize",15]]]],[17,"_IOC_NRBITS","","",null,null],[17,"_IOC_TYPEBITS","","",null,null],[17,"_IOC_SIZEBITS","","",null,null],[17,"_IOC_DIRBITS","","",null,null],[17,"_IOC_NRMASK","","",null,null],[17,"_IOC_TYPEMASK","","",null,null],[17,"_IOC_SIZEMASK","","",null,null],[17,"_IOC_DIRMASK","","",null,null],[17,"_IOC_NRSHIFT","","",null,null],[17,"_IOC_TYPESHIFT","","",null,null],[17,"_IOC_SIZESHIFT","","",null,null],[17,"_IOC_DIRSHIFT","","",null,null],[17,"_IOC_NONE","","",null,null],[17,"_IOC_WRITE","","",null,null],[17,"_IOC_READ","","",null,null],[17,"IOC_IN","","",null,null],[17,"IOC_OUT","","",null,null],[17,"IOC_INOUT","","",null,null],[17,"IOCSIZE_MASK","","",null,null],[17,"IOCSIZE_SHIFT","","",null,null],[17,"__BITS_PER_LONG","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"PLAT_IRQ_FORWARD_API_VERSION","","",null,null],[17,"PLAT_IRQ_FORWARD_TYPE","","",null,null],[17,"PLAT_IRQ_FORWARD_BASE","","",null,null],[17,"PLAT_IRQ_FORWARD_SET_LEVEL_TRIGGER_EVENTFD","","",null,null],[17,"PLAT_IRQ_FORWARD_SET_LEVEL_UNMASK_EVENTFD","","",null,null],[17,"PLAT_IRQ_FORWARD_SET_EDGE_TRIGGER","","",null,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[3,"__kernel_fd_set","","",null,null],[12,"fds_bits","","",1,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",2,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[3,"plat_irq_forward_set","","",null,null],[12,"argsz","","",3,null],[12,"action_flags","","",3,null],[12,"irq_number_host","","",3,null],[12,"count","","",3,null],[12,"eventfd","","",3,null],[0,"vfio","vfio_sys","",null,null],[3,"__IncompleteArrayField","vfio_sys::vfio","",null,null],[11,"new","","",4,[[]]],[11,"as_ptr","","",4,[[]]],[11,"as_mut_ptr","","",4,[[]]],[11,"as_slice","","",4,[[["usize",15]]]],[11,"as_mut_slice","","",4,[[["usize",15]]]],[17,"__BITS_PER_LONG","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_IOC_NRBITS","","",null,null],[17,"_IOC_TYPEBITS","","",null,null],[17,"_IOC_SIZEBITS","","",null,null],[17,"_IOC_DIRBITS","","",null,null],[17,"_IOC_NRMASK","","",null,null],[17,"_IOC_TYPEMASK","","",null,null],[17,"_IOC_SIZEMASK","","",null,null],[17,"_IOC_DIRMASK","","",null,null],[17,"_IOC_NRSHIFT","","",null,null],[17,"_IOC_TYPESHIFT","","",null,null],[17,"_IOC_SIZESHIFT","","",null,null],[17,"_IOC_DIRSHIFT","","",null,null],[17,"_IOC_NONE","","",null,null],[17,"_IOC_WRITE","","",null,null],[17,"_IOC_READ","","",null,null],[17,"IOC_IN","","",null,null],[17,"IOC_OUT","","",null,null],[17,"IOC_INOUT","","",null,null],[17,"IOCSIZE_MASK","","",null,null],[17,"IOCSIZE_SHIFT","","",null,null],[17,"VFIO_API_VERSION","","",null,null],[17,"VFIO_TYPE1_IOMMU","","",null,null],[17,"VFIO_SPAPR_TCE_IOMMU","","",null,null],[17,"VFIO_TYPE1v2_IOMMU","","",null,null],[17,"VFIO_DMA_CC_IOMMU","","",null,null],[17,"VFIO_EEH","","",null,null],[17,"VFIO_TYPE1_NESTING_IOMMU","","",null,null],[17,"VFIO_SPAPR_TCE_v2_IOMMU","","",null,null],[17,"VFIO_NOIOMMU_IOMMU","","",null,null],[17,"VFIO_TYPE","","",null,null],[17,"VFIO_BASE","","",null,null],[17,"VFIO_GROUP_FLAGS_VIABLE","","",null,null],[17,"VFIO_GROUP_FLAGS_CONTAINER_SET","","",null,null],[17,"VFIO_DEVICE_FLAGS_RESET","","",null,null],[17,"VFIO_DEVICE_FLAGS_PCI","","",null,null],[17,"VFIO_DEVICE_FLAGS_PLATFORM","","",null,null],[17,"VFIO_DEVICE_FLAGS_AMBA","","",null,null],[17,"VFIO_DEVICE_FLAGS_CCW","","",null,null],[17,"VFIO_DEVICE_API_PCI_STRING","","",null,null],[17,"VFIO_DEVICE_API_PLATFORM_STRING","","",null,null],[17,"VFIO_DEVICE_API_AMBA_STRING","","",null,null],[17,"VFIO_DEVICE_API_CCW_STRING","","",null,null],[17,"VFIO_REGION_INFO_FLAG_READ","","",null,null],[17,"VFIO_REGION_INFO_FLAG_WRITE","","",null,null],[17,"VFIO_REGION_INFO_FLAG_MMAP","","",null,null],[17,"VFIO_REGION_INFO_FLAG_CAPS","","",null,null],[17,"VFIO_REGION_INFO_CAP_SPARSE_MMAP","","",null,null],[17,"VFIO_REGION_INFO_CAP_TYPE","","",null,null],[17,"VFIO_REGION_INFO_CAP_MSIX_MAPPABLE","","",null,null],[17,"VFIO_REGION_TYPE_PCI_VENDOR_TYPE","","",null,null],[17,"VFIO_REGION_TYPE_PCI_VENDOR_MASK","","",null,null],[17,"VFIO_REGION_SUBTYPE_INTEL_IGD_OPREGION","","",null,null],[17,"VFIO_REGION_SUBTYPE_INTEL_IGD_HOST_CFG","","",null,null],[17,"VFIO_REGION_SUBTYPE_INTEL_IGD_LPC_CFG","","",null,null],[17,"VFIO_IRQ_INFO_EVENTFD","","",null,null],[17,"VFIO_IRQ_INFO_MASKABLE","","",null,null],[17,"VFIO_IRQ_INFO_AUTOMASKED","","",null,null],[17,"VFIO_IRQ_INFO_NORESIZE","","",null,null],[17,"VFIO_IRQ_SET_DATA_NONE","","",null,null],[17,"VFIO_IRQ_SET_DATA_BOOL","","",null,null],[17,"VFIO_IRQ_SET_DATA_EVENTFD","","",null,null],[17,"VFIO_IRQ_SET_ACTION_MASK","","",null,null],[17,"VFIO_IRQ_SET_ACTION_UNMASK","","",null,null],[17,"VFIO_IRQ_SET_ACTION_TRIGGER","","",null,null],[17,"VFIO_IRQ_SET_DATA_TYPE_MASK","","",null,null],[17,"VFIO_IRQ_SET_ACTION_TYPE_MASK","","",null,null],[17,"VFIO_GFX_PLANE_TYPE_PROBE","","",null,null],[17,"VFIO_GFX_PLANE_TYPE_DMABUF","","",null,null],[17,"VFIO_GFX_PLANE_TYPE_REGION","","",null,null],[17,"VFIO_DEVICE_IOEVENTFD_8","","",null,null],[17,"VFIO_DEVICE_IOEVENTFD_16","","",null,null],[17,"VFIO_DEVICE_IOEVENTFD_32","","",null,null],[17,"VFIO_DEVICE_IOEVENTFD_64","","",null,null],[17,"VFIO_DEVICE_IOEVENTFD_SIZE_MASK","","",null,null],[17,"VFIO_IOMMU_INFO_PGSIZES","","",null,null],[17,"VFIO_DMA_MAP_FLAG_READ","","",null,null],[17,"VFIO_DMA_MAP_FLAG_WRITE","","",null,null],[17,"VFIO_IOMMU_SPAPR_INFO_DDW","","",null,null],[17,"VFIO_EEH_PE_DISABLE","","",null,null],[17,"VFIO_EEH_PE_ENABLE","","",null,null],[17,"VFIO_EEH_PE_UNFREEZE_IO","","",null,null],[17,"VFIO_EEH_PE_UNFREEZE_DMA","","",null,null],[17,"VFIO_EEH_PE_GET_STATE","","",null,null],[17,"VFIO_EEH_PE_STATE_NORMAL","","",null,null],[17,"VFIO_EEH_PE_STATE_RESET","","",null,null],[17,"VFIO_EEH_PE_STATE_STOPPED","","",null,null],[17,"VFIO_EEH_PE_STATE_STOPPED_DMA","","",null,null],[17,"VFIO_EEH_PE_STATE_UNAVAIL","","",null,null],[17,"VFIO_EEH_PE_RESET_DEACTIVATE","","",null,null],[17,"VFIO_EEH_PE_RESET_HOT","","",null,null],[17,"VFIO_EEH_PE_RESET_FUNDAMENTAL","","",null,null],[17,"VFIO_EEH_PE_CONFIGURE","","",null,null],[17,"VFIO_EEH_PE_INJECT_ERR","","",null,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[3,"__kernel_fd_set","","",null,null],[12,"fds_bits","","",5,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",6,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[3,"vfio_info_cap_header","","",null,null],[12,"id","","",7,null],[12,"version","","",7,null],[12,"next","","",7,null],[3,"vfio_group_status","","",null,null],[12,"argsz","","",8,null],[12,"flags","","",8,null],[3,"vfio_device_info","","",null,null],[12,"argsz","","",9,null],[12,"flags","","",9,null],[12,"num_regions","","",9,null],[12,"num_irqs","","",9,null],[3,"vfio_region_info","","",null,null],[12,"argsz","","",10,null],[12,"flags","","",10,null],[12,"index","","",10,null],[12,"cap_offset","","",10,null],[12,"size","","",10,null],[12,"offset","","",10,null],[3,"vfio_region_info_with_cap","","",null,null],[12,"region_info","","",11,null],[12,"cap_info","","",11,null],[3,"vfio_region_sparse_mmap_area","","",null,null],[12,"offset","","",12,null],[12,"size","","",12,null],[3,"vfio_region_info_cap_sparse_mmap","","",null,null],[12,"header","","",13,null],[12,"nr_areas","","",13,null],[12,"reserved","","",13,null],[12,"areas","","",13,null],[3,"vfio_region_info_cap_type","","",null,null],[12,"header","","",14,null],[12,"type_","","",14,null],[12,"subtype","","",14,null],[3,"vfio_irq_info","","",null,null],[12,"argsz","","",15,null],[12,"flags","","",15,null],[12,"index","","",15,null],[12,"count","","",15,null],[3,"vfio_irq_set","","",null,null],[12,"argsz","","",16,null],[12,"flags","","",16,null],[12,"index","","",16,null],[12,"start","","",16,null],[12,"count","","",16,null],[12,"data","","",16,null],[17,"VFIO_PCI_BAR0_REGION_INDEX","","",null,null],[17,"VFIO_PCI_BAR1_REGION_INDEX","","",null,null],[17,"VFIO_PCI_BAR2_REGION_INDEX","","",null,null],[17,"VFIO_PCI_BAR3_REGION_INDEX","","",null,null],[17,"VFIO_PCI_BAR4_REGION_INDEX","","",null,null],[17,"VFIO_PCI_BAR5_REGION_INDEX","","",null,null],[17,"VFIO_PCI_ROM_REGION_INDEX","","",null,null],[17,"VFIO_PCI_CONFIG_REGION_INDEX","","",null,null],[17,"VFIO_PCI_VGA_REGION_INDEX","","",null,null],[17,"VFIO_PCI_NUM_REGIONS","","",null,null],[6,"_bindgen_ty_1","","",null,null],[17,"VFIO_PCI_INTX_IRQ_INDEX","","",null,null],[17,"VFIO_PCI_MSI_IRQ_INDEX","","",null,null],[17,"VFIO_PCI_MSIX_IRQ_INDEX","","",null,null],[17,"VFIO_PCI_ERR_IRQ_INDEX","","",null,null],[17,"VFIO_PCI_REQ_IRQ_INDEX","","",null,null],[17,"VFIO_PCI_NUM_IRQS","","",null,null],[6,"_bindgen_ty_2","","",null,null],[17,"VFIO_CCW_CONFIG_REGION_INDEX","","",null,null],[17,"VFIO_CCW_NUM_REGIONS","","",null,null],[6,"_bindgen_ty_3","","",null,null],[17,"VFIO_CCW_IO_IRQ_INDEX","","",null,null],[17,"VFIO_CCW_NUM_IRQS","","",null,null],[6,"_bindgen_ty_4","","",null,null],[3,"vfio_pci_dependent_device","","",null,null],[12,"group_id","","",17,null],[12,"segment","","",17,null],[12,"bus","","",17,null],[12,"devfn","","",17,null],[3,"vfio_pci_hot_reset_info","","",null,null],[12,"argsz","","",18,null],[12,"flags","","",18,null],[12,"count","","",18,null],[12,"devices","","",18,null],[3,"vfio_pci_hot_reset","","",null,null],[12,"argsz","","",19,null],[12,"flags","","",19,null],[12,"count","","",19,null],[12,"group_fds","","",19,null],[3,"vfio_device_gfx_plane_info","","",null,null],[12,"argsz","","",20,null],[12,"flags","","",20,null],[12,"drm_plane_type","","",20,null],[12,"drm_format","","",20,null],[12,"drm_format_mod","","",20,null],[12,"width","","",20,null],[12,"height","","",20,null],[12,"stride","","",20,null],[12,"size","","",20,null],[12,"x_pos","","",20,null],[12,"y_pos","","",20,null],[12,"x_hot","","",20,null],[12,"y_hot","","",20,null],[12,"__bindgen_anon_1","","",20,null],[19,"vfio_device_gfx_plane_info__bindgen_ty_1","","",null,null],[12,"region_index","","",21,null],[12,"dmabuf_id","","",21,null],[3,"vfio_device_ioeventfd","","",null,null],[12,"argsz","","",22,null],[12,"flags","","",22,null],[12,"offset","","",22,null],[12,"data","","",22,null],[12,"fd","","",22,null],[3,"vfio_iommu_type1_info","","",null,null],[12,"argsz","","",23,null],[12,"flags","","",23,null],[12,"iova_pgsizes","","",23,null],[3,"vfio_iommu_type1_dma_map","","",null,null],[12,"argsz","","",24,null],[12,"flags","","",24,null],[12,"vaddr","","",24,null],[12,"iova","","",24,null],[12,"size","","",24,null],[3,"vfio_iommu_type1_dma_unmap","","",null,null],[12,"argsz","","",25,null],[12,"flags","","",25,null],[12,"iova","","",25,null],[12,"size","","",25,null],[3,"vfio_iommu_spapr_tce_ddw_info","","",null,null],[12,"pgsizes","","",26,null],[12,"max_dynamic_windows_supported","","",26,null],[12,"levels","","",26,null],[3,"vfio_iommu_spapr_tce_info","","",null,null],[12,"argsz","","",27,null],[12,"flags","","",27,null],[12,"dma32_window_start","","",27,null],[12,"dma32_window_size","","",27,null],[12,"ddw","","",27,null],[3,"vfio_eeh_pe_err","","",null,null],[12,"type_","","",28,null],[12,"func","","",28,null],[12,"addr","","",28,null],[12,"mask","","",28,null],[3,"vfio_eeh_pe_op","","",null,null],[12,"argsz","","",29,null],[12,"flags","","",29,null],[12,"op","","",29,null],[12,"__bindgen_anon_1","","",29,null],[19,"vfio_eeh_pe_op__bindgen_ty_1","","",null,null],[12,"err","","",30,null],[3,"vfio_iommu_spapr_register_memory","","",null,null],[12,"argsz","","",31,null],[12,"flags","","",31,null],[12,"vaddr","","",31,null],[12,"size","","",31,null],[3,"vfio_iommu_spapr_tce_create","","",null,null],[12,"argsz","","",32,null],[12,"flags","","",32,null],[12,"page_shift","","",32,null],[12,"__resv1","","",32,null],[12,"window_size","","",32,null],[12,"levels","","",32,null],[12,"__resv2","","",32,null],[12,"start_addr","","",32,null],[3,"vfio_iommu_spapr_tce_remove","","",null,null],[12,"argsz","","",33,null],[12,"flags","","",33,null],[12,"start_addr","","",33,null],[5,"VFIO_GET_API_VERSION","vfio_sys","",null,[[],["ioctlnr",6]]],[5,"VFIO_CHECK_EXTENSION","","",null,[[],["ioctlnr",6]]],[5,"VFIO_SET_IOMMU","","",null,[[],["ioctlnr",6]]],[5,"VFIO_GROUP_GET_STATUS","","",null,[[],["ioctlnr",6]]],[5,"VFIO_GROUP_SET_CONTAINER","","",null,[[],["ioctlnr",6]]],[5,"VFIO_GROUP_UNSET_CONTAINER","","",null,[[],["ioctlnr",6]]],[5,"VFIO_GROUP_GET_DEVICE_FD","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_GET_INFO","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_GET_REGION_INFO","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_GET_IRQ_INFO","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_SET_IRQS","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_RESET","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_GET_PCI_HOT_RESET_INFO","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_PCI_HOT_RESET","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_QUERY_GFX_PLANE","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_GET_GFX_DMABUF","","",null,[[],["ioctlnr",6]]],[5,"VFIO_DEVICE_IOEVENTFD","","",null,[[],["ioctlnr",6]]],[5,"VFIO_IOMMU_GET_INFO","","",null,[[],["ioctlnr",6]]],[5,"VFIO_IOMMU_MAP_DMA","","",null,[[],["ioctlnr",6]]],[5,"VFIO_IOMMU_UNMAP_DMA","","",null,[[],["ioctlnr",6]]],[5,"VFIO_IOMMU_ENABLE","","",null,[[],["ioctlnr",6]]],[5,"VFIO_IOMMU_DISABLE","","",null,[[],["ioctlnr",6]]],[5,"PLAT_IRQ_FORWARD_SET","","",null,[[],["ioctlnr",6]]],[11,"from","vfio_sys::plat","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","vfio_sys::vfio","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"clone","vfio_sys::plat","",1,[[],["__kernel_fd_set",3]]],[11,"clone","","",2,[[],["__kernel_fsid_t",3]]],[11,"clone","vfio_sys::vfio","",4,[[]]],[11,"clone","","",5,[[],["__kernel_fd_set",3]]],[11,"clone","","",6,[[],["__kernel_fsid_t",3]]],[11,"clone","","",7,[[],["vfio_info_cap_header",3]]],[11,"clone","","",8,[[],["vfio_group_status",3]]],[11,"clone","","",9,[[],["vfio_device_info",3]]],[11,"clone","","",10,[[],["vfio_region_info",3]]],[11,"clone","","",12,[[],["vfio_region_sparse_mmap_area",3]]],[11,"clone","","",14,[[],["vfio_region_info_cap_type",3]]],[11,"clone","","",15,[[],["vfio_irq_info",3]]],[11,"clone","","",17,[[],["vfio_pci_dependent_device",3]]],[11,"clone","","",20,[[],["vfio_device_gfx_plane_info",3]]],[11,"clone","","",21,[[],["vfio_device_gfx_plane_info__bindgen_ty_1",19]]],[11,"clone","","",22,[[],["vfio_device_ioeventfd",3]]],[11,"clone","","",23,[[],["vfio_iommu_type1_info",3]]],[11,"clone","","",24,[[],["vfio_iommu_type1_dma_map",3]]],[11,"clone","","",25,[[],["vfio_iommu_type1_dma_unmap",3]]],[11,"clone","","",26,[[],["vfio_iommu_spapr_tce_ddw_info",3]]],[11,"clone","","",27,[[],["vfio_iommu_spapr_tce_info",3]]],[11,"clone","","",28,[[],["vfio_eeh_pe_err",3]]],[11,"clone","","",29,[[],["vfio_eeh_pe_op",3]]],[11,"clone","","",30,[[],["vfio_eeh_pe_op__bindgen_ty_1",19]]],[11,"clone","","",31,[[],["vfio_iommu_spapr_register_memory",3]]],[11,"clone","","",32,[[],["vfio_iommu_spapr_tce_create",3]]],[11,"clone","","",33,[[],["vfio_iommu_spapr_tce_remove",3]]],[11,"default","vfio_sys::plat","",0,[[],["__incompletearrayfield",3]]],[11,"default","","",1,[[],["__kernel_fd_set",3]]],[11,"default","","",2,[[],["__kernel_fsid_t",3]]],[11,"default","","",3,[[],["plat_irq_forward_set",3]]],[11,"default","vfio_sys::vfio","",4,[[],["__incompletearrayfield",3]]],[11,"default","","",5,[[],["__kernel_fd_set",3]]],[11,"default","","",6,[[],["__kernel_fsid_t",3]]],[11,"default","","",7,[[],["vfio_info_cap_header",3]]],[11,"default","","",8,[[],["vfio_group_status",3]]],[11,"default","","",9,[[],["vfio_device_info",3]]],[11,"default","","",10,[[],["vfio_region_info",3]]],[11,"default","","",11,[[],["vfio_region_info_with_cap",3]]],[11,"default","","",12,[[],["vfio_region_sparse_mmap_area",3]]],[11,"default","","",13,[[],["vfio_region_info_cap_sparse_mmap",3]]],[11,"default","","",14,[[],["vfio_region_info_cap_type",3]]],[11,"default","","",15,[[],["vfio_irq_info",3]]],[11,"default","","",16,[[],["vfio_irq_set",3]]],[11,"default","","",17,[[],["vfio_pci_dependent_device",3]]],[11,"default","","",18,[[],["vfio_pci_hot_reset_info",3]]],[11,"default","","",19,[[],["vfio_pci_hot_reset",3]]],[11,"default","","",21,[[]]],[11,"default","","",20,[[]]],[11,"default","","",22,[[],["vfio_device_ioeventfd",3]]],[11,"default","","",23,[[],["vfio_iommu_type1_info",3]]],[11,"default","","",24,[[],["vfio_iommu_type1_dma_map",3]]],[11,"default","","",25,[[],["vfio_iommu_type1_dma_unmap",3]]],[11,"default","","",26,[[],["vfio_iommu_spapr_tce_ddw_info",3]]],[11,"default","","",27,[[],["vfio_iommu_spapr_tce_info",3]]],[11,"default","","",28,[[],["vfio_eeh_pe_err",3]]],[11,"default","","",30,[[]]],[11,"default","","",29,[[]]],[11,"default","","",31,[[],["vfio_iommu_spapr_register_memory",3]]],[11,"default","","",32,[[],["vfio_iommu_spapr_tce_create",3]]],[11,"default","","",33,[[],["vfio_iommu_spapr_tce_remove",3]]],[11,"fmt","vfio_sys::plat","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","vfio_sys::vfio","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]]],"p":[[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"plat_irq_forward_set"],[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"vfio_info_cap_header"],[3,"vfio_group_status"],[3,"vfio_device_info"],[3,"vfio_region_info"],[3,"vfio_region_info_with_cap"],[3,"vfio_region_sparse_mmap_area"],[3,"vfio_region_info_cap_sparse_mmap"],[3,"vfio_region_info_cap_type"],[3,"vfio_irq_info"],[3,"vfio_irq_set"],[3,"vfio_pci_dependent_device"],[3,"vfio_pci_hot_reset_info"],[3,"vfio_pci_hot_reset"],[3,"vfio_device_gfx_plane_info"],[19,"vfio_device_gfx_plane_info__bindgen_ty_1"],[3,"vfio_device_ioeventfd"],[3,"vfio_iommu_type1_info"],[3,"vfio_iommu_type1_dma_map"],[3,"vfio_iommu_type1_dma_unmap"],[3,"vfio_iommu_spapr_tce_ddw_info"],[3,"vfio_iommu_spapr_tce_info"],[3,"vfio_eeh_pe_err"],[3,"vfio_eeh_pe_op"],[19,"vfio_eeh_pe_op__bindgen_ty_1"],[3,"vfio_iommu_spapr_register_memory"],[3,"vfio_iommu_spapr_tce_create"],[3,"vfio_iommu_spapr_tce_remove"]]},\
"vhost":{"doc":"","i":[[0,"net","vhost","",null,null],[0,"fakes","vhost::net","",null,null],[3,"FakeNet","vhost::net::fakes","",null,null],[3,"Net","vhost::net","Handle to run VHOST_NET ioctls.",null,null],[8,"NetT","","",null,null],[10,"new","","Create a new NetT instance",0,[[["path",3]],["result",6]]],[10,"set_backend","","Set the tap file descriptor that will serve as the …",0,[[["usize",15],["option",4]],["result",6]]],[3,"Vsock","vhost","Handle for running VHOST_VSOCK ioctls.",null,null],[4,"Error","","",null,null],[13,"AvailAddress","","Invalid available address.",1,null],[13,"DescriptorTableAddress","","Invalid descriptor table address.",1,null],[13,"InvalidQueue","","Invalid queue.",1,null],[13,"IoctlError","","Error while running ioctl.",1,null],[13,"LogAddress","","Invalid log address.",1,null],[13,"UsedAddress","","Invalid used address.",1,null],[13,"VhostOpen","","Error opening vhost device.",1,null],[6,"Result","","",null,null],[8,"Vhost","","An interface for setting up vhost-based virtio devices.  …",null,null],[11,"set_owner","","Set the current process as the owner of this file …",2,[[],["result",6]]],[11,"reset_owner","","Give up ownership and reset the device to default values. …",2,[[],["result",6]]],[11,"get_features","","Get a bitmask of supported virtio/vhost features.",2,[[],[["result",6],["u64",15]]]],[11,"set_features","","Inform the vhost subsystem which features to enable. This …",2,[[["u64",15]],["result",6]]],[11,"set_mem_table","","Set the guest memory mappings for vhost to use.",2,[[["guestmemory",3]],["result",6]]],[11,"set_vring_num","","Set the number of descriptors in the vring.",2,[[["usize",15],["u16",15]],["result",6]]],[11,"is_valid","","",2,[[["guestmemory",3],["u16",15],["guestaddress",3]],["bool",15]]],[11,"set_vring_addr","","Set the addresses for a given vring.",2,[[["usize",15],["u32",15],["guestmemory",3],["u16",15],["guestaddress",3],["option",4]],["result",6]]],[11,"set_vring_base","","Set the first index to look for available descriptors.",2,[[["usize",15],["u16",15]],["result",6]]],[11,"get_vring_base","","Gets the index of the next available descriptor in the …",2,[[["usize",15]],[["u16",15],["result",6]]]],[11,"set_vring_call","","Set the event to trigger when buffers have been used by …",2,[[["usize",15],["event",3]],["result",6]]],[11,"set_vring_err","","Set the event to trigger to signal an error.",2,[[["usize",15],["event",3]],["result",6]]],[11,"set_vring_kick","","Set the event that will be signaled by the guest when …",2,[[["usize",15],["event",3]],["result",6]]],[11,"from","vhost::net::fakes","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"as_raw_descriptors","","",3,[[],[["i32",15],["global",3],["vec",3]]]],[11,"from","vhost::net","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"as_raw_descriptors","","",4,[[],[["i32",15],["global",3],["vec",3]]]],[11,"from","vhost","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"as_raw_descriptors","","",5,[[],[["i32",15],["global",3],["vec",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"new","vhost::net","Opens /dev/vhost-net and holds a file descriptor open for …",4,[[["path",3]],[["result",6],["net",3]]]],[11,"set_backend","","",4,[[["usize",15],["option",4]],["result",6]]],[11,"new","vhost::net::fakes","",3,[[["path",3]],[["result",6],["fakenet",3]]]],[11,"set_backend","","",3,[[["usize",15],["option",4]],["result",6]]],[11,"drop","","",3,[[]]],[11,"fmt","vhost","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"as_raw_descriptor","vhost::net","",4,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","vhost::net::fakes","",3,[[],["rawdescriptor",6]]],[11,"as_raw_descriptor","vhost","",5,[[],["rawdescriptor",6]]],[11,"new","","Open a handle to a new VHOST_VSOCK instance.",5,[[["path",3],["asref",8]],[["vsock",3],["result",6]]]],[11,"set_cid","","Set the CID for the guest.  This number is used for …",5,[[["u64",15]],["result",6]]],[11,"start","","Tell the VHOST driver to start performing data transfer.",5,[[],["result",6]]],[11,"stop","","Tell the VHOST driver to stop performing data transfer.",5,[[],["result",6]]]],"p":[[8,"NetT"],[4,"Error"],[8,"Vhost"],[3,"FakeNet"],[3,"Net"],[3,"Vsock"]]},\
"virtio_sys":{"doc":"","i":[[0,"vhost","virtio_sys","",null,null],[3,"__IncompleteArrayField","virtio_sys::vhost","",null,null],[11,"new","","",0,[[]]],[11,"as_ptr","","",0,[[]]],[11,"as_mut_ptr","","",0,[[]]],[11,"as_slice","","",0,[[["usize",15]]]],[11,"as_mut_slice","","",0,[[["usize",15]]]],[17,"__BITS_PER_LONG","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_IOC_NRBITS","","",null,null],[17,"_IOC_TYPEBITS","","",null,null],[17,"_IOC_SIZEBITS","","",null,null],[17,"_IOC_DIRBITS","","",null,null],[17,"_IOC_NRMASK","","",null,null],[17,"_IOC_TYPEMASK","","",null,null],[17,"_IOC_SIZEMASK","","",null,null],[17,"_IOC_DIRMASK","","",null,null],[17,"_IOC_NRSHIFT","","",null,null],[17,"_IOC_TYPESHIFT","","",null,null],[17,"_IOC_SIZESHIFT","","",null,null],[17,"_IOC_DIRSHIFT","","",null,null],[17,"_IOC_NONE","","",null,null],[17,"_IOC_WRITE","","",null,null],[17,"_IOC_READ","","",null,null],[17,"IOC_IN","","",null,null],[17,"IOC_OUT","","",null,null],[17,"IOC_INOUT","","",null,null],[17,"IOCSIZE_MASK","","",null,null],[17,"IOCSIZE_SHIFT","","",null,null],[17,"VIRTIO_CONFIG_S_ACKNOWLEDGE","","",null,null],[17,"VIRTIO_CONFIG_S_DRIVER","","",null,null],[17,"VIRTIO_CONFIG_S_DRIVER_OK","","",null,null],[17,"VIRTIO_CONFIG_S_FEATURES_OK","","",null,null],[17,"VIRTIO_CONFIG_S_FAILED","","",null,null],[17,"VIRTIO_TRANSPORT_F_START","","",null,null],[17,"VIRTIO_TRANSPORT_F_END","","",null,null],[17,"VIRTIO_F_NOTIFY_ON_EMPTY","","",null,null],[17,"VIRTIO_F_ANY_LAYOUT","","",null,null],[17,"VIRTIO_F_VERSION_1","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"VRING_DESC_F_NEXT","","",null,null],[17,"VRING_DESC_F_WRITE","","",null,null],[17,"VRING_DESC_F_INDIRECT","","",null,null],[17,"VRING_USED_F_NO_NOTIFY","","",null,null],[17,"VRING_AVAIL_F_NO_INTERRUPT","","",null,null],[17,"VIRTIO_RING_F_INDIRECT_DESC","","",null,null],[17,"VIRTIO_RING_F_EVENT_IDX","","",null,null],[17,"VRING_AVAIL_ALIGN_SIZE","","",null,null],[17,"VRING_USED_ALIGN_SIZE","","",null,null],[17,"VRING_DESC_ALIGN_SIZE","","",null,null],[17,"VHOST_VRING_F_LOG","","",null,null],[17,"VHOST_PAGE_SIZE","","",null,null],[17,"VHOST_VIRTIO","","",null,null],[17,"VHOST_VRING_LITTLE_ENDIAN","","",null,null],[17,"VHOST_VRING_BIG_ENDIAN","","",null,null],[17,"VHOST_F_LOG_ALL","","",null,null],[17,"VHOST_NET_F_VIRTIO_NET_HDR","","",null,null],[17,"VHOST_SCSI_ABI_VERSION","","",null,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[3,"__kernel_fd_set","","",null,null],[12,"fds_bits","","",1,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",2,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"__virtio16","","",null,null],[6,"__virtio32","","",null,null],[6,"__virtio64","","",null,null],[3,"vring_desc","","",null,null],[12,"addr","","",3,null],[12,"len","","",3,null],[12,"flags","","",3,null],[12,"next","","",3,null],[3,"vring_avail","","",null,null],[12,"flags","","",4,null],[12,"idx","","",4,null],[12,"ring","","",4,null],[3,"vring_used_elem","","",null,null],[12,"id","","",5,null],[12,"len","","",5,null],[3,"vring_used","","",null,null],[12,"flags","","",6,null],[12,"idx","","",6,null],[12,"ring","","",6,null],[12,"__bindgen_align","","",6,null],[3,"vring","","",null,null],[12,"num","","",7,null],[12,"desc","","",7,null],[12,"avail","","",7,null],[12,"used","","",7,null],[3,"vhost_vring_state","","",null,null],[12,"index","","",8,null],[12,"num","","",8,null],[3,"vhost_vring_file","","",null,null],[12,"index","","",9,null],[12,"event","","",9,null],[3,"vhost_vring_addr","","",null,null],[12,"index","","",10,null],[12,"flags","","",10,null],[12,"desc_user_addr","","",10,null],[12,"used_user_addr","","",10,null],[12,"avail_user_addr","","",10,null],[12,"log_guest_addr","","",10,null],[3,"vhost_memory_region","","",null,null],[12,"guest_phys_addr","","",11,null],[12,"memory_size","","",11,null],[12,"userspace_addr","","",11,null],[12,"flags_padding","","",11,null],[3,"vhost_memory","","",null,null],[12,"nregions","","",12,null],[12,"padding","","",12,null],[12,"regions","","",12,null],[12,"__force_alignment","","",12,null],[3,"vhost_scsi_target","","",null,null],[12,"abi_version","","",13,null],[12,"vhost_wwpn","","",13,null],[12,"vhost_tpgt","","",13,null],[12,"reserved","","",13,null],[0,"virtio_net","virtio_sys","",null,null],[3,"__IncompleteArrayField","virtio_sys::virtio_net","",null,null],[11,"new","","",14,[[]]],[11,"as_ptr","","",14,[[]]],[11,"as_mut_ptr","","",14,[[]]],[11,"as_slice","","",14,[[["usize",15]]]],[11,"as_mut_slice","","",14,[[["usize",15]]]],[17,"__BITS_PER_LONG","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"VIRTIO_ID_NET","","",null,null],[17,"VIRTIO_ID_BLOCK","","",null,null],[17,"VIRTIO_ID_CONSOLE","","",null,null],[17,"VIRTIO_ID_RNG","","",null,null],[17,"VIRTIO_ID_BALLOON","","",null,null],[17,"VIRTIO_ID_RPMSG","","",null,null],[17,"VIRTIO_ID_SCSI","","",null,null],[17,"VIRTIO_ID_9P","","",null,null],[17,"VIRTIO_ID_RPROC_SERIAL","","",null,null],[17,"VIRTIO_ID_CAIF","","",null,null],[17,"VIRTIO_ID_GPU","","",null,null],[17,"VIRTIO_ID_INPUT","","",null,null],[17,"VIRTIO_CONFIG_S_ACKNOWLEDGE","","",null,null],[17,"VIRTIO_CONFIG_S_DRIVER","","",null,null],[17,"VIRTIO_CONFIG_S_DRIVER_OK","","",null,null],[17,"VIRTIO_CONFIG_S_FEATURES_OK","","",null,null],[17,"VIRTIO_CONFIG_S_FAILED","","",null,null],[17,"VIRTIO_TRANSPORT_F_START","","",null,null],[17,"VIRTIO_TRANSPORT_F_END","","",null,null],[17,"VIRTIO_F_NOTIFY_ON_EMPTY","","",null,null],[17,"VIRTIO_F_ANY_LAYOUT","","",null,null],[17,"VIRTIO_F_VERSION_1","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_TSN","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CAN","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"ETH_P_XDSA","","",null,null],[17,"VIRTIO_NET_F_CSUM","","",null,null],[17,"VIRTIO_NET_F_GUEST_CSUM","","",null,null],[17,"VIRTIO_NET_F_CTRL_GUEST_OFFLOADS","","",null,null],[17,"VIRTIO_NET_F_MTU","","",null,null],[17,"VIRTIO_NET_F_MAC","","",null,null],[17,"VIRTIO_NET_F_GUEST_TSO4","","",null,null],[17,"VIRTIO_NET_F_GUEST_TSO6","","",null,null],[17,"VIRTIO_NET_F_GUEST_ECN","","",null,null],[17,"VIRTIO_NET_F_GUEST_UFO","","",null,null],[17,"VIRTIO_NET_F_HOST_TSO4","","",null,null],[17,"VIRTIO_NET_F_HOST_TSO6","","",null,null],[17,"VIRTIO_NET_F_HOST_ECN","","",null,null],[17,"VIRTIO_NET_F_HOST_UFO","","",null,null],[17,"VIRTIO_NET_F_MRG_RXBUF","","",null,null],[17,"VIRTIO_NET_F_STATUS","","",null,null],[17,"VIRTIO_NET_F_CTRL_VQ","","",null,null],[17,"VIRTIO_NET_F_CTRL_RX","","",null,null],[17,"VIRTIO_NET_F_CTRL_VLAN","","",null,null],[17,"VIRTIO_NET_F_CTRL_RX_EXTRA","","",null,null],[17,"VIRTIO_NET_F_GUEST_ANNOUNCE","","",null,null],[17,"VIRTIO_NET_F_MQ","","",null,null],[17,"VIRTIO_NET_F_CTRL_MAC_ADDR","","",null,null],[17,"VIRTIO_NET_F_GSO","","",null,null],[17,"VIRTIO_NET_S_LINK_UP","","",null,null],[17,"VIRTIO_NET_S_ANNOUNCE","","",null,null],[17,"VIRTIO_NET_HDR_F_NEEDS_CSUM","","",null,null],[17,"VIRTIO_NET_HDR_F_DATA_VALID","","",null,null],[17,"VIRTIO_NET_HDR_GSO_NONE","","",null,null],[17,"VIRTIO_NET_HDR_GSO_TCPV4","","",null,null],[17,"VIRTIO_NET_HDR_GSO_UDP","","",null,null],[17,"VIRTIO_NET_HDR_GSO_TCPV6","","",null,null],[17,"VIRTIO_NET_HDR_GSO_ECN","","",null,null],[17,"VIRTIO_NET_OK","","",null,null],[17,"VIRTIO_NET_ERR","","",null,null],[17,"VIRTIO_NET_CTRL_RX","","",null,null],[17,"VIRTIO_NET_CTRL_RX_PROMISC","","",null,null],[17,"VIRTIO_NET_CTRL_RX_ALLMULTI","","",null,null],[17,"VIRTIO_NET_CTRL_RX_ALLUNI","","",null,null],[17,"VIRTIO_NET_CTRL_RX_NOMULTI","","",null,null],[17,"VIRTIO_NET_CTRL_RX_NOUNI","","",null,null],[17,"VIRTIO_NET_CTRL_RX_NOBCAST","","",null,null],[17,"VIRTIO_NET_CTRL_MAC","","",null,null],[17,"VIRTIO_NET_CTRL_MAC_TABLE_SET","","",null,null],[17,"VIRTIO_NET_CTRL_MAC_ADDR_SET","","",null,null],[17,"VIRTIO_NET_CTRL_VLAN","","",null,null],[17,"VIRTIO_NET_CTRL_VLAN_ADD","","",null,null],[17,"VIRTIO_NET_CTRL_VLAN_DEL","","",null,null],[17,"VIRTIO_NET_CTRL_ANNOUNCE","","",null,null],[17,"VIRTIO_NET_CTRL_ANNOUNCE_ACK","","",null,null],[17,"VIRTIO_NET_CTRL_MQ","","",null,null],[17,"VIRTIO_NET_CTRL_MQ_VQ_PAIRS_SET","","",null,null],[17,"VIRTIO_NET_CTRL_MQ_VQ_PAIRS_MIN","","",null,null],[17,"VIRTIO_NET_CTRL_MQ_VQ_PAIRS_MAX","","",null,null],[17,"VIRTIO_NET_CTRL_GUEST_OFFLOADS","","",null,null],[17,"VIRTIO_NET_CTRL_GUEST_OFFLOADS_SET","","",null,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[3,"__kernel_fd_set","","",null,null],[12,"fds_bits","","",15,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",16,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[6,"__virtio16","","",null,null],[6,"__virtio32","","",null,null],[6,"__virtio64","","",null,null],[3,"ethhdr","","",null,null],[12,"h_dest","","",17,null],[12,"h_source","","",17,null],[12,"h_proto","","",17,null],[3,"virtio_net_config","","",null,null],[12,"mac","","",18,null],[12,"status","","",18,null],[12,"max_virtqueue_pairs","","",18,null],[12,"mtu","","",18,null],[3,"virtio_net_hdr_v1","","",null,null],[12,"flags","","",19,null],[12,"gso_type","","",19,null],[12,"hdr_len","","",19,null],[12,"gso_size","","",19,null],[12,"csum_start","","",19,null],[12,"csum_offset","","",19,null],[12,"num_buffers","","",19,null],[3,"virtio_net_hdr","","",null,null],[12,"flags","","",20,null],[12,"gso_type","","",20,null],[12,"hdr_len","","",20,null],[12,"gso_size","","",20,null],[12,"csum_start","","",20,null],[12,"csum_offset","","",20,null],[3,"virtio_net_hdr_mrg_rxbuf","","",null,null],[12,"hdr","","",21,null],[12,"num_buffers","","",21,null],[3,"virtio_net_ctrl_hdr","","",null,null],[12,"class","","",22,null],[12,"cmd","","",22,null],[6,"virtio_net_ctrl_ack","","",null,null],[3,"virtio_net_ctrl_mac","","",null,null],[12,"entries","","",23,null],[12,"macs","","",23,null],[3,"virtio_net_ctrl_mq","","",null,null],[12,"virtqueue_pairs","","",24,null],[0,"virtio_ring","virtio_sys","",null,null],[3,"__IncompleteArrayField","virtio_sys::virtio_ring","",null,null],[11,"new","","",25,[[]]],[11,"as_ptr","","",25,[[]]],[11,"as_mut_ptr","","",25,[[]]],[11,"as_slice","","",25,[[["usize",15]]]],[11,"as_mut_slice","","",25,[[["usize",15]]]],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"__BITS_PER_LONG","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"VRING_DESC_F_NEXT","","",null,null],[17,"VRING_DESC_F_WRITE","","",null,null],[17,"VRING_DESC_F_INDIRECT","","",null,null],[17,"VRING_USED_F_NO_NOTIFY","","",null,null],[17,"VRING_AVAIL_F_NO_INTERRUPT","","",null,null],[17,"VIRTIO_RING_F_INDIRECT_DESC","","",null,null],[17,"VIRTIO_RING_F_EVENT_IDX","","",null,null],[17,"VRING_AVAIL_ALIGN_SIZE","","",null,null],[17,"VRING_USED_ALIGN_SIZE","","",null,null],[17,"VRING_DESC_ALIGN_SIZE","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[3,"__kernel_fd_set","","",null,null],[12,"fds_bits","","",26,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",27,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[6,"__virtio16","","",null,null],[6,"__virtio32","","",null,null],[6,"__virtio64","","",null,null],[3,"vring_desc","","",null,null],[12,"addr","","",28,null],[12,"len","","",28,null],[12,"flags","","",28,null],[12,"next","","",28,null],[3,"vring_avail","","",null,null],[12,"flags","","",29,null],[12,"idx","","",29,null],[12,"ring","","",29,null],[3,"vring_used_elem","","",null,null],[12,"id","","",30,null],[12,"len","","",30,null],[3,"vring_used","","",null,null],[12,"flags","","",31,null],[12,"idx","","",31,null],[12,"ring","","",31,null],[12,"__bindgen_align","","",31,null],[3,"vring","","",null,null],[12,"num","","",32,null],[12,"desc","","",32,null],[12,"avail","","",32,null],[12,"used","","",32,null],[17,"VHOST","virtio_sys","",null,null],[5,"VHOST_GET_FEATURES","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_FEATURES","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_OWNER","","",null,[[],["ioctlnr",6]]],[5,"VHOST_RESET_OWNER","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_MEM_TABLE","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_LOG_BASE","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_LOG_FD","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_VRING_NUM","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_VRING_ADDR","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_VRING_BASE","","",null,[[],["ioctlnr",6]]],[5,"VHOST_GET_VRING_BASE","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_VRING_KICK","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_VRING_CALL","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SET_VRING_ERR","","",null,[[],["ioctlnr",6]]],[5,"VHOST_NET_SET_BACKEND","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SCSI_SET_ENDPOINT","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SCSI_CLEAR_ENDPOINT","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SCSI_GET_ABI_VERSION","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SCSI_SET_EVENTS_MISSED","","",null,[[],["ioctlnr",6]]],[5,"VHOST_SCSI_GET_EVENTS_MISSED","","",null,[[],["ioctlnr",6]]],[5,"VHOST_VSOCK_SET_GUEST_CID","","",null,[[],["ioctlnr",6]]],[5,"VHOST_VSOCK_SET_RUNNING","","",null,[[],["ioctlnr",6]]],[11,"from","virtio_sys::vhost","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","virtio_sys::virtio_net","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","virtio_sys::virtio_ring","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"clone","virtio_sys::vhost","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","virtio_sys::virtio_net","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","virtio_sys::virtio_ring","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"default","virtio_sys::vhost","",0,[[],["__incompletearrayfield",3]]],[11,"default","","",1,[[],["__kernel_fd_set",3]]],[11,"default","","",2,[[],["__kernel_fsid_t",3]]],[11,"default","","",3,[[],["vring_desc",3]]],[11,"default","","",4,[[],["vring_avail",3]]],[11,"default","","",5,[[],["vring_used_elem",3]]],[11,"default","","",6,[[],["vring_used",3]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[],["vhost_vring_state",3]]],[11,"default","","",9,[[],["vhost_vring_file",3]]],[11,"default","","",10,[[],["vhost_vring_addr",3]]],[11,"default","","",11,[[],["vhost_memory_region",3]]],[11,"default","","",12,[[],["vhost_memory",3]]],[11,"default","","",13,[[]]],[11,"default","virtio_sys::virtio_net","",14,[[],["__incompletearrayfield",3]]],[11,"default","virtio_sys::virtio_ring","",25,[[],["__incompletearrayfield",3]]],[11,"fmt","virtio_sys::vhost","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","virtio_sys::virtio_net","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","virtio_sys::virtio_ring","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]]],"p":[[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"vring_desc"],[3,"vring_avail"],[3,"vring_used_elem"],[3,"vring_used"],[3,"vring"],[3,"vhost_vring_state"],[3,"vhost_vring_file"],[3,"vhost_vring_addr"],[3,"vhost_memory_region"],[3,"vhost_memory"],[3,"vhost_scsi_target"],[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"ethhdr"],[3,"virtio_net_config"],[3,"virtio_net_hdr_v1"],[3,"virtio_net_hdr"],[3,"virtio_net_hdr_mrg_rxbuf"],[3,"virtio_net_ctrl_hdr"],[3,"virtio_net_ctrl_mac"],[3,"virtio_net_ctrl_mq"],[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"vring_desc"],[3,"vring_avail"],[3,"vring_used_elem"],[3,"vring_used"],[3,"vring"]]},\
"vm_control":{"doc":"Handles IPC for controlling the main VM process.","i":[[0,"gdb","vm_control","",null,null],[4,"VcpuDebug","vm_control::gdb","Messages that can be sent to a vCPU to set/get its state …",null,null],[13,"ReadMem","","",0,null],[13,"ReadRegs","","",0,null],[13,"WriteRegs","","",0,null],[13,"WriteMem","","",0,null],[13,"EnableSinglestep","","",0,null],[13,"SetHwBreakPoint","","",0,null],[4,"VcpuDebugStatus","","Messages that can be sent from a vCPU to update the state …",null,null],[13,"RegValues","","",1,null],[13,"MemoryRegion","","",1,null],[13,"CommandComplete","","",1,null],[13,"HitBreakPoint","","",1,null],[3,"VcpuDebugStatusMessage","","Pair of a vCPU ID and messages that can be sent from the …",null,null],[12,"cpu","","",2,null],[12,"msg","","",2,null],[0,"client","vm_control","",null,null],[4,"ModifyUsbError","vm_control::client","",null,null],[13,"ArgMissing","","",3,null],[13,"ArgParse","","",3,null],[13,"ArgParseInt","","",3,null],[13,"FailedDescriptorValidate","","",3,null],[13,"PathDoesNotExist","","",3,null],[13,"SocketFailed","","",3,null],[13,"UnexpectedResponse","","",3,null],[13,"UnknownCommand","","",3,null],[13,"UsbControl","","",3,null],[6,"ModifyUsbResult","","",null,null],[6,"VmsRequestResult","","",null,null],[5,"vms_request","","",null,[[["vmrequest",4],["path",3]],["vmsrequestresult",6]]],[5,"do_usb_attach","","",null,[[["u16",15],["u8",15],["path",3]],[["modifyusbresult",6],["usbcontrolresult",4]]]],[5,"do_usb_detach","","",null,[[["u8",15],["path",3]],[["modifyusbresult",6],["usbcontrolresult",4]]]],[5,"do_usb_list","","",null,[[["path",3]],[["modifyusbresult",6],["usbcontrolresult",4]]]],[6,"DoModifyBatteryResult","","",null,null],[5,"do_modify_battery","","",null,[[["str",15],["path",3]],["domodifybatteryresult",6]]],[6,"HandleRequestResult","","",null,null],[5,"handle_request","","",null,[[["vmrequest",4],["path",3]],["handlerequestresult",6]]],[3,"GpuMemoryPlaneDesc","vm_control","Struct that describes the offset and stride of a plane …",null,null],[12,"stride","","",4,null],[12,"offset","","",4,null],[3,"GpuMemoryDesc","","Struct that describes a GPU memory allocation that …",null,null],[12,"planes","","",5,null],[6,"MemSlot","","An index in the list of guest-mapped memory regions.",null,null],[4,"VcpuControl","","Control the state of a particular VM CPU.",null,null],[13,"Debug","","",6,null],[13,"RunState","","",6,null],[13,"MakeRT","","",6,null],[4,"VmRunMode","","Mode of execution for the VM.",null,null],[13,"Running","","The default run mode indicating the VCPUs are running.",7,null],[13,"Suspending","","Indicates that the VCPUs are suspending execution until …",7,null],[13,"Exiting","","Indicates that the VM is exiting all processes.",7,null],[13,"Breakpoint","","Indicates that the VM is in a breakpoint waiting for the …",7,null],[17,"USB_CONTROL_MAX_PORTS","","The maximum number of devices that can be listed in one …",null,null],[4,"BalloonControlCommand","","",null,null],[13,"Adjust","","Set the size of the VM\'s balloon.",8,null],[12,"num_bytes","vm_control::BalloonControlCommand","",9,null],[13,"Stats","vm_control","",8,null],[4,"BalloonTubeCommand","","",null,null],[13,"Adjust","","",10,null],[12,"num_bytes","vm_control::BalloonTubeCommand","",11,null],[13,"Stats","vm_control","",10,null],[12,"id","vm_control::BalloonTubeCommand","",12,null],[3,"BalloonStats","vm_control","",null,null],[12,"swap_in","","",13,null],[12,"swap_out","","",13,null],[12,"major_faults","","",13,null],[12,"minor_faults","","",13,null],[12,"free_memory","","",13,null],[12,"total_memory","","",13,null],[12,"available_memory","","",13,null],[12,"disk_caches","","",13,null],[12,"hugetlb_allocations","","",13,null],[12,"hugetlb_failures","","",13,null],[12,"shared_memory","","",13,null],[12,"unevictable_memory","","",13,null],[4,"BalloonControlResult","","",null,null],[13,"Stats","","",14,null],[12,"stats","vm_control::BalloonControlResult","",15,null],[12,"balloon_actual","","",15,null],[4,"BalloonTubeResult","vm_control","",null,null],[13,"Stats","","",16,null],[12,"stats","vm_control::BalloonTubeResult","",17,null],[12,"balloon_actual","","",17,null],[12,"id","","",17,null],[4,"DiskControlCommand","vm_control","",null,null],[13,"Resize","","Resize a disk to <code>new_size</code> in bytes.",18,null],[12,"new_size","vm_control::DiskControlCommand","",19,null],[4,"DiskControlResult","vm_control","",null,null],[13,"Ok","","",20,null],[13,"Err","","",20,null],[4,"UsbControlCommand","","",null,null],[13,"AttachDevice","","",21,null],[12,"bus","vm_control::UsbControlCommand","",22,null],[12,"addr","","",22,null],[12,"vid","","",22,null],[12,"pid","","",22,null],[12,"file","","",22,null],[13,"DetachDevice","vm_control","",21,null],[12,"port","vm_control::UsbControlCommand","",23,null],[13,"ListDevice","vm_control","",21,null],[12,"ports","vm_control::UsbControlCommand","",24,null],[3,"UsbControlAttachedDevice","vm_control","",null,null],[12,"port","","",25,null],[12,"vendor_id","","",25,null],[12,"product_id","","",25,null],[11,"valid","","",25,[[],["bool",15]]],[4,"UsbControlResult","","",null,null],[13,"Ok","","",26,null],[12,"port","vm_control::UsbControlResult","",27,null],[13,"NoAvailablePort","vm_control","",26,null],[13,"NoSuchDevice","","",26,null],[13,"NoSuchPort","","",26,null],[13,"FailedToOpenDevice","","",26,null],[13,"Devices","","",26,null],[13,"FailedToInitHostDevice","","",26,null],[4,"VmMemoryRequest","","",null,null],[13,"RegisterMemory","","Register shared memory represented by the given …",28,null],[13,"RegisterFdAtPciBarOffset","","Similiar to <code>VmMemoryRequest::RegisterMemory</code>, but doesn\'t …",28,null],[13,"RegisterHostPointerAtPciBarOffset","","Similar to RegisterFdAtPciBarOffset, but is for buffers …",28,null],[13,"RegisterVulkanMemoryAtPciBarOffset","","Similiar to <code>RegisterFdAtPciBarOffset</code>, but uses Vulkano to …",28,null],[12,"alloc","vm_control::VmMemoryRequest","",29,null],[12,"descriptor","","",29,null],[12,"handle_type","","",29,null],[12,"memory_idx","","",29,null],[12,"physical_device_idx","","",29,null],[12,"offset","","",29,null],[12,"size","","",29,null],[13,"UnregisterMemory","vm_control","Unregister the given memory slot that was previously …",28,null],[13,"AllocateAndRegisterGpuMemory","","Allocate GPU buffer of a given size/format and register …",28,null],[12,"width","vm_control::VmMemoryRequest","",30,null],[12,"height","","",30,null],[12,"format","","",30,null],[13,"RegisterMmapMemory","vm_control","Register mmaped memory into the hypervisor\'s EPT.",28,null],[12,"descriptor","vm_control::VmMemoryRequest","",31,null],[12,"size","","",31,null],[12,"offset","","",31,null],[12,"gpa","","",31,null],[11,"execute","vm_control","Executes this request on the given Vm.",28,[[["rutabagagralloc",3],["systemallocator",3],["arc",3],["mutex",3]],["vmmemoryresponse",4]]],[4,"VmMemoryResponse","","",null,null],[13,"RegisterMemory","","The request to register memory into guest address space …",32,null],[12,"pfn","vm_control::VmMemoryResponse","",33,null],[12,"slot","","",33,null],[13,"AllocateAndRegisterGpuMemory","vm_control","The request to allocate and register GPU memory into …",32,null],[12,"descriptor","vm_control::VmMemoryResponse","",34,null],[12,"pfn","","",34,null],[12,"slot","","",34,null],[12,"desc","","",34,null],[13,"Ok","vm_control","",32,null],[13,"Err","","",32,null],[4,"VmIrqRequest","","",null,null],[13,"AllocateOneMsi","","Allocate one gsi, and associate gsi to irqfd with …",35,null],[12,"irqfd","vm_control::VmIrqRequest","",36,null],[13,"AddMsiRoute","vm_control","Add one msi route entry into the IRQ chip.",35,null],[12,"gsi","vm_control::VmIrqRequest","",37,null],[12,"msi_address","","",37,null],[12,"msi_data","","",37,null],[4,"IrqSetup","vm_control","Data to set up an IRQ event or IRQ route on the IRQ chip. …",null,null],[13,"Event","","",38,null],[13,"Route","","",38,null],[11,"execute","","Executes this request on the given Vm.",35,[[["systemallocator",3]],["vmirqresponse",4]]],[4,"VmIrqResponse","","",null,null],[13,"AllocateOneMsi","","",39,null],[12,"gsi","vm_control::VmIrqResponse","",40,null],[13,"Ok","vm_control","",39,null],[13,"Err","","",39,null],[4,"VmMsyncRequest","","",null,null],[13,"MsyncArena","","Flush the content of a memory mapping to its backing file.…",41,null],[12,"slot","vm_control::VmMsyncRequest","",42,null],[12,"offset","","",42,null],[12,"size","","",42,null],[4,"VmMsyncResponse","vm_control","",null,null],[13,"Ok","","",43,null],[13,"Err","","",43,null],[11,"execute","","Executes this request on the given Vm.",41,[[],["vmmsyncresponse",4]]],[4,"BatControlResult","","",null,null],[13,"Ok","","",44,null],[13,"NoBatDevice","","",44,null],[13,"NoSuchHealth","","",44,null],[13,"NoSuchProperty","","",44,null],[13,"NoSuchStatus","","",44,null],[13,"NoSuchBatType","","",44,null],[13,"StringParseIntErr","","",44,null],[4,"BatteryType","","",null,null],[13,"Goldfish","","",45,null],[4,"BatProperty","","",null,null],[13,"Status","","",46,null],[13,"Health","","",46,null],[13,"Present","","",46,null],[13,"Capacity","","",46,null],[13,"ACOnline","","",46,null],[4,"BatStatus","","",null,null],[13,"Unknown","","",47,null],[13,"Charging","","",47,null],[13,"DisCharging","","",47,null],[13,"NotCharging","","",47,null],[13,"Full","","",47,null],[11,"new","","",47,[[["string",3]],[["result",4],["batcontrolresult",4]]]],[4,"BatHealth","","",null,null],[13,"Unknown","","",48,null],[13,"Good","","",48,null],[13,"Overheat","","",48,null],[13,"Dead","","",48,null],[13,"OverVoltage","","",48,null],[13,"UnexpectedFailure","","",48,null],[13,"Cold","","",48,null],[13,"WatchdogTimerExpire","","",48,null],[13,"SafetyTimerExpire","","",48,null],[13,"OverCurrent","","",48,null],[4,"BatControlCommand","","",null,null],[13,"SetStatus","","",49,null],[13,"SetHealth","","",49,null],[13,"SetPresent","","",49,null],[13,"SetCapacity","","",49,null],[13,"SetACOnline","","",49,null],[11,"new","","",49,[[["string",3]],[["result",4],["batcontrolresult",4]]]],[3,"BatControl","","Used for VM to control battery properties.",null,null],[12,"type_","","",50,null],[12,"control_tube","","",50,null],[4,"FsMappingRequest","","",null,null],[13,"AllocateSharedMemoryRegion","","Create an anonymous memory mapping that spans the entire …",51,null],[13,"CreateMemoryMapping","","Create a memory mapping.",51,null],[12,"slot","vm_control::FsMappingRequest","The slot for a MemoryMappingArena, previously returned by …",52,null],[12,"fd","","The file descriptor that should be mapped.",52,null],[12,"size","","The size of the mapping.",52,null],[12,"file_offset","","The offset into the file from where the mapping should …",52,null],[12,"prot","","The memory protection to be used for the mapping.  …",52,null],[12,"mem_offset","","The offset into the shared memory region where the …",52,null],[13,"RemoveMemoryMapping","vm_control","Remove a memory mapping.",51,null],[12,"slot","vm_control::FsMappingRequest","The slot for a MemoryMappingArena.",53,null],[12,"offset","","The offset into the shared memory region.",53,null],[12,"size","","The size of the mapping.",53,null],[11,"execute","vm_control","",51,[[["vm",8],["systemallocator",3]],["vmresponse",4]]],[4,"VmRequest","","A request to the main process to perform some operation …",null,null],[13,"Exit","","Break the VM\'s run loop and exit.",54,null],[13,"Suspend","","Suspend the VM\'s VCPUs until resume.",54,null],[13,"Resume","","Resume the VM\'s VCPUs that were previously suspended.",54,null],[13,"MakeRT","","Make the VM\'s RT VCPU real-time.",54,null],[13,"BalloonCommand","","Command for balloon driver.",54,null],[13,"DiskCommand","","Send a command to a disk chosen by <code>disk_index</code>. <code>disk_index</code> …",54,null],[12,"disk_index","vm_control::VmRequest","",55,null],[12,"command","","",55,null],[13,"UsbCommand","vm_control","Command to use controller.",54,null],[13,"BatCommand","","Command to set battery.",54,null],[11,"execute","","Executes this request on the given Vm and other mutable …",54,[[["option",4],["option",4],["tube",3],["u64",15],["option",4]],["vmresponse",4]]],[4,"VmResponse","","Indication of success or failure of a <code>VmRequest</code>.",null,null],[13,"Ok","","Indicates the request was executed successfully.",56,null],[13,"Err","","Indicates the request encountered some error during …",56,null],[13,"RegisterMemory","","The request to register memory into guest address space …",56,null],[12,"pfn","vm_control::VmResponse","",57,null],[12,"slot","","",57,null],[13,"AllocateAndRegisterGpuMemory","vm_control","The request to allocate and register GPU memory into …",56,null],[12,"descriptor","vm_control::VmResponse","",58,null],[12,"pfn","","",58,null],[12,"slot","","",58,null],[12,"desc","","",58,null],[13,"BalloonStats","vm_control","Results of balloon control commands.",56,null],[12,"stats","vm_control::VmResponse","",59,null],[12,"balloon_actual","","",59,null],[13,"UsbResponse","vm_control","Results of usb control commands.",56,null],[13,"BatResponse","","Results of battery control commands.",56,null],[11,"from","vm_control::gdb","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","vm_control::client","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","vm_control","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any","","",18,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any","","",26,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_any","","",28,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_any","","",32,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_any","","",35,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_any","","",38,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"into_any_arc","","",38,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_any","","",39,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"into_any_arc","","",39,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any","","",41,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_any","","",43,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_any","","",44,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any_arc","","",44,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_any","","",45,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"into_any_arc","","",45,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any","","",46,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_any","","",47,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_any","","",48,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_any","","",49,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_any","","",50,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any","","",51,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any","","",54,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any","","",56,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["arc",3],["any",8]]]],[11,"clone","vm_control::gdb","",0,[[],["vcpudebug",4]]],[11,"clone","vm_control","",4,[[],["gpumemoryplanedesc",3]]],[11,"clone","","",5,[[],["gpumemorydesc",3]]],[11,"clone","","",6,[[],["vcpucontrol",4]]],[11,"clone","","",7,[[],["vmrunmode",4]]],[11,"clone","","",25,[[],["usbcontrolattacheddevice",3]]],[11,"clone","","",45,[[],["batterytype",4]]],[11,"default","","",4,[[],["gpumemoryplanedesc",3]]],[11,"default","","",5,[[],["gpumemorydesc",3]]],[11,"default","","",7,[[]]],[11,"default","","",13,[[],["balloonstats",3]]],[11,"default","","",25,[[],["usbcontrolattacheddevice",3]]],[11,"default","","",45,[[]]],[11,"eq","","",4,[[["gpumemoryplanedesc",3]],["bool",15]]],[11,"ne","","",4,[[["gpumemoryplanedesc",3]],["bool",15]]],[11,"eq","","",7,[[["vmrunmode",4]],["bool",15]]],[11,"eq","","",45,[[["batterytype",4]],["bool",15]]],[11,"fmt","vm_control::gdb","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","vm_control::client","",3,[[["formatter",3]],["result",6]]],[11,"fmt","vm_control","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","vm_control::client","",3,[[["formatter",3]],["result",6]]],[11,"fmt","vm_control","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"from_str","","",45,[[["str",15]],["stdresult",4]]],[11,"from_str","","",46,[[["str",15]],["stdresult",4]]],[11,"from_str","","",47,[[["str",15]],["stdresult",4]]],[11,"from_str","","",48,[[["str",15]],["stdresult",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]]],"p":[[4,"VcpuDebug"],[4,"VcpuDebugStatus"],[3,"VcpuDebugStatusMessage"],[4,"ModifyUsbError"],[3,"GpuMemoryPlaneDesc"],[3,"GpuMemoryDesc"],[4,"VcpuControl"],[4,"VmRunMode"],[4,"BalloonControlCommand"],[13,"Adjust"],[4,"BalloonTubeCommand"],[13,"Adjust"],[13,"Stats"],[3,"BalloonStats"],[4,"BalloonControlResult"],[13,"Stats"],[4,"BalloonTubeResult"],[13,"Stats"],[4,"DiskControlCommand"],[13,"Resize"],[4,"DiskControlResult"],[4,"UsbControlCommand"],[13,"AttachDevice"],[13,"DetachDevice"],[13,"ListDevice"],[3,"UsbControlAttachedDevice"],[4,"UsbControlResult"],[13,"Ok"],[4,"VmMemoryRequest"],[13,"RegisterVulkanMemoryAtPciBarOffset"],[13,"AllocateAndRegisterGpuMemory"],[13,"RegisterMmapMemory"],[4,"VmMemoryResponse"],[13,"RegisterMemory"],[13,"AllocateAndRegisterGpuMemory"],[4,"VmIrqRequest"],[13,"AllocateOneMsi"],[13,"AddMsiRoute"],[4,"IrqSetup"],[4,"VmIrqResponse"],[13,"AllocateOneMsi"],[4,"VmMsyncRequest"],[13,"MsyncArena"],[4,"VmMsyncResponse"],[4,"BatControlResult"],[4,"BatteryType"],[4,"BatProperty"],[4,"BatStatus"],[4,"BatHealth"],[4,"BatControlCommand"],[3,"BatControl"],[4,"FsMappingRequest"],[13,"CreateMemoryMapping"],[13,"RemoveMemoryMapping"],[4,"VmRequest"],[13,"DiskCommand"],[4,"VmResponse"],[13,"RegisterMemory"],[13,"AllocateAndRegisterGpuMemory"],[13,"BalloonStats"]]},\
"vm_memory":{"doc":"","i":[[0,"guest_memory","vm_memory","Track memory regions that are mapped to the guest VM.",null,null],[4,"Error","vm_memory::guest_memory","",null,null],[13,"InvalidGuestAddress","","",0,null],[13,"InvalidOffset","","",0,null],[13,"InvalidSize","","",0,null],[13,"MemoryAccess","","",0,null],[13,"MemoryAddSealsFailed","","",0,null],[13,"MemoryCreationFailed","","",0,null],[13,"MemoryMappingFailed","","",0,null],[13,"MemoryNotAligned","","",0,null],[13,"MemoryRegionOverlap","","",0,null],[13,"MemoryRegionTooLarge","","",0,null],[13,"ShortRead","","",0,null],[12,"expected","vm_memory::guest_memory::Error","",1,null],[12,"completed","","",1,null],[13,"ShortWrite","vm_memory::guest_memory","",0,null],[12,"expected","vm_memory::guest_memory::Error","",2,null],[12,"completed","","",2,null],[13,"SplitOutOfBounds","vm_memory::guest_memory","",0,null],[13,"VolatileMemoryAccess","","",0,null],[6,"Result","","",null,null],[3,"MemoryPolicy","","",null,null],[18,"USE_HUGEPAGES","","",3,null],[11,"empty","","Returns an empty set of flags.",3,[[]]],[11,"all","","Returns the set containing all flags.",3,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",3,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",3,[[["u32",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",3,[[["u32",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",3,[[["u32",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",3,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",3,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",3,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",3,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",3,[[]]],[11,"remove","","Removes the specified flags in-place.",3,[[]]],[11,"toggle","","Toggles the specified flags in-place.",3,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",3,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",3,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",3,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",3,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",3,[[]]],[11,"complement","","Returns the complement of this set of flags.",3,[[]]],[3,"MemoryRegion","","A regions of memory mapped memory. Holds the memory …",null,null],[11,"new","","Creates a new MemoryRegion using the given SharedMemory …",4,[[["sharedmemory",3],["u64",15],["arc",3],["guestaddress",3]],["result",6]]],[3,"GuestMemory","","Tracks memory regions and where they are mapped in the …",null,null],[11,"new","","Creates a container for guest memory regions. Valid …",5,[[],[["guestmemory",3],["result",6]]]],[11,"from_regions","","Creates a <code>GuestMemory</code> from a collection of MemoryRegions.",5,[[["vec",3],["memoryregion",3]],["result",6]]],[11,"end_addr","","Returns the end address of memory.",5,[[],["guestaddress",3]]],[11,"memory_size","","Returns the total size of memory in bytes.",5,[[],["u64",15]]],[11,"address_in_range","","Returns true if the given address is within the memory …",5,[[["guestaddress",3]],["bool",15]]],[11,"range_overlap","","Returns true if the given range (start, end) is overlap …",5,[[["guestaddress",3]],["bool",15]]],[11,"checked_offset","","Returns the address plus the offset if it is in range.",5,[[["guestaddress",3],["u64",15]],[["guestaddress",3],["option",4]]]],[11,"num_regions","","Returns the size of the memory region in bytes.",5,[[],["u64",15]]],[11,"remove_range","","Madvise away the address range in the host that is …",5,[[["guestaddress",3],["u64",15]],["result",6]]],[11,"set_memory_policy","","Handles guest memory policy hints/advices.",5,[[["memorypolicy",3]]]],[11,"with_regions","","Perform the specified action on each region\'s addresses.",5,[[],["result",4]]],[11,"write_at_addr","","Writes a slice to guest memory at the specified guest …",5,[[["guestaddress",3]],[["usize",15],["result",6]]]],[11,"write_all_at_addr","","Writes the entire contents of a slice to guest memory at …",5,[[["guestaddress",3]],["result",6]]],[11,"read_at_addr","","Reads to a slice from guest memory at the specified guest …",5,[[["guestaddress",3]],[["usize",15],["result",6]]]],[11,"read_exact_at_addr","","Reads from guest memory at the specified address to fill …",5,[[["guestaddress",3]],["result",6]]],[11,"read_obj_from_addr","","Reads an object from guest memory at the given guest …",5,[[["guestaddress",3]],[["result",6],["datainit",8]]]],[11,"write_obj_at_addr","","Writes an object to the memory region at the specified …",5,[[["guestaddress",3],["datainit",8]],["result",6]]],[11,"get_slice_at_addr","","Returns a <code>VolatileSlice</code> of <code>len</code> bytes starting at <code>addr</code>. …",5,[[["usize",15],["guestaddress",3]],[["volatileslice",3],["result",6]]]],[11,"get_ref_at_addr","","Returns a <code>VolatileRef</code> to an object at <code>addr</code>. Returns …",5,[[["guestaddress",3]],[["volatileref",3],["result",6]]]],[11,"read_to_memory","","Reads data from a file descriptor and writes it to guest …",5,[[["usize",15],["guestaddress",3],["asrawdescriptor",8]],["result",6]]],[11,"write_from_memory","","Writes data from memory to a file descriptor.",5,[[["usize",15],["guestaddress",3],["asrawdescriptor",8]],["result",6]]],[11,"get_host_address","","Convert a GuestAddress into a pointer in the address …",5,[[["guestaddress",3]],["result",6]]],[11,"get_host_address_range","","Convert a GuestAddress into a pointer in the address …",5,[[["usize",15],["guestaddress",3]],["result",6]]],[11,"shm_region","","Returns a reference to the SharedMemory region that backs …",5,[[["guestaddress",3]],[["result",6],["sharedmemory",3]]]],[11,"offset_region","","Returns the region that contains the memory at <code>offset</code> …",5,[[["u64",15]],[["result",6],["sharedmemory",3]]]],[11,"do_in_region","","Loops over all guest memory regions of <code>self</code>, and performs …",5,[[["guestaddress",3]],["result",6]]],[11,"offset_from_base","","Convert a GuestAddress into an offset within the …",5,[[["guestaddress",3]],[["u64",15],["result",6]]]],[3,"GuestAddress","vm_memory","Represents an Address in the guest\'s memory.",null,null],[12,"0","","",6,null],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","vm_memory::guest_memory","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"clone","vm_memory","",6,[[],["guestaddress",3]]],[11,"clone","vm_memory::guest_memory","",3,[[],["memorypolicy",3]]],[11,"clone","","",5,[[],["guestmemory",3]]],[11,"cmp","vm_memory","",6,[[["guestaddress",3]],["ordering",4]]],[11,"cmp","vm_memory::guest_memory","",3,[[["memorypolicy",3]],["ordering",4]]],[11,"eq","vm_memory","",6,[[["guestaddress",3]],["bool",15]]],[11,"eq","vm_memory::guest_memory","",3,[[["memorypolicy",3]],["bool",15]]],[11,"ne","","",3,[[["memorypolicy",3]],["bool",15]]],[11,"partial_cmp","vm_memory","",6,[[["guestaddress",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","vm_memory::guest_memory","",3,[[["memorypolicy",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["memorypolicy",3]],["bool",15]]],[11,"le","","",3,[[["memorypolicy",3]],["bool",15]]],[11,"gt","","",3,[[["memorypolicy",3]],["bool",15]]],[11,"ge","","",3,[[["memorypolicy",3]],["bool",15]]],[11,"fmt","vm_memory","",6,[[["formatter",3]],["result",6]]],[11,"fmt","vm_memory::guest_memory","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","vm_memory","",6,[[["formatter",3]],["result",6]]],[11,"fmt","vm_memory::guest_memory","",0,[[["formatter",3]],["result",6]]],[11,"sub","","Returns the set difference of the two sets of flags.",3,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",3,[[]]],[11,"not","","Returns the complement of this set of flags.",3,[[]]],[11,"bitand","vm_memory","",6,[[["u64",15]],["guestaddress",3]]],[11,"bitand","vm_memory::guest_memory","Returns the intersection between the two sets of flags.",3,[[]]],[11,"bitor","vm_memory","",6,[[["u64",15]],["guestaddress",3]]],[11,"bitor","vm_memory::guest_memory","Returns the union of the two sets of flags.",3,[[["memorypolicy",3]]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",3,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",3,[[]]],[11,"bitor_assign","","Adds the set of flags.",3,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",3,[[]]],[11,"hash","","",3,[[]]],[11,"from_iter","","",3,[[["intoiterator",8]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"as_raw_descriptors","","",5,[[],[["rawdescriptor",6],["vec",3]]]],[11,"get_volatile_slice","","",5,[[["memregion",3]],[["volatileslice",3],["result",6]]]],[11,"offset_from","vm_memory","Returns the offset from this address to the given base …",6,[[["guestaddress",3]],["u64",15]]],[11,"offset","","Returns the address as a u64 offset from 0x0. Use this …",6,[[],["u64",15]]],[11,"checked_add","","Returns the result of the add or None if there is …",6,[[["u64",15]],[["guestaddress",3],["option",4]]]],[11,"unchecked_add","","Returns the result of the base address + the size. Only …",6,[[["u64",15]],["guestaddress",3]]],[11,"checked_sub","","Returns the result of the subtraction of None if there is …",6,[[["u64",15]],[["guestaddress",3],["option",4]]]],[11,"mask","","Returns the bitwise and of the address with the given …",6,[[["u64",15]],["guestaddress",3]]]],"p":[[4,"Error"],[13,"ShortRead"],[13,"ShortWrite"],[3,"MemoryPolicy"],[3,"MemoryRegion"],[3,"GuestMemory"],[3,"GuestAddress"]]},\
"vmm_vhost":{"doc":"Virtio Vhost Backend Drivers","i":[[0,"vhost_user","vmm_vhost","The protocol for vhost-user is based on the existing …",null,null],[0,"message","vmm_vhost::vhost_user","Define communication messages for the vhost-user protocol.",null,null],[17,"MAX_MSG_SIZE","vmm_vhost::vhost_user::message","The vhost-user specification uses a field of u32 to store …",null,null],[17,"MAX_ATTACHED_FD_ENTRIES","","The VhostUserMemory message has variable message size and …",null,null],[17,"VHOST_USER_CONFIG_OFFSET","","Starting position (inclusion) of the device configuration …",null,null],[17,"VHOST_USER_CONFIG_SIZE","","Ending position (exclusion) of the device configuration …",null,null],[17,"VHOST_USER_MAX_VRINGS","","Maximum number of vrings supported.",null,null],[4,"MasterReq","","Type of requests sending from masters to slaves.",null,null],[13,"NOOP","","Null operation.",0,null],[13,"GET_FEATURES","","Get from the underlying vhost implementation the features …",0,null],[13,"SET_FEATURES","","Enable features in the underlying vhost implementation …",0,null],[13,"SET_OWNER","","Set the current Master as an owner of the session.",0,null],[13,"RESET_OWNER","","No longer used.",0,null],[13,"SET_MEM_TABLE","","Set the memory map regions on the slave so it can …",0,null],[13,"SET_LOG_BASE","","Set logging shared memory space.",0,null],[13,"SET_LOG_FD","","Set the logging file descriptor, which is passed as …",0,null],[13,"SET_VRING_NUM","","Set the size of the queue.",0,null],[13,"SET_VRING_ADDR","","Set the addresses of the different aspects of the vring.",0,null],[13,"SET_VRING_BASE","","Set the base offset in the available vring.",0,null],[13,"GET_VRING_BASE","","Get the available vring base offset.",0,null],[13,"SET_VRING_KICK","","Set the event file descriptor for adding buffers to the …",0,null],[13,"SET_VRING_CALL","","Set the event file descriptor to signal when buffers are …",0,null],[13,"SET_VRING_ERR","","Set the event file descriptor to signal when error occurs.",0,null],[13,"GET_PROTOCOL_FEATURES","","Get the protocol feature bit mask from the underlying …",0,null],[13,"SET_PROTOCOL_FEATURES","","Enable protocol features in the underlying vhost …",0,null],[13,"GET_QUEUE_NUM","","Query how many queues the backend supports.",0,null],[13,"SET_VRING_ENABLE","","Signal slave to enable or disable corresponding vring.",0,null],[13,"SEND_RARP","","Ask vhost user backend to broadcast a fake RARP to notify …",0,null],[13,"NET_SET_MTU","","Set host MTU value exposed to the guest.",0,null],[13,"SET_SLAVE_REQ_FD","","Set the socket file descriptor for slave initiated …",0,null],[13,"IOTLB_MSG","","Send IOTLB messages with struct vhost_iotlb_msg as …",0,null],[13,"SET_VRING_ENDIAN","","Set the endianness of a VQ for legacy devices.",0,null],[13,"GET_CONFIG","","Fetch the contents of the virtio device configuration …",0,null],[13,"SET_CONFIG","","Change the contents of the virtio device configuration …",0,null],[13,"CREATE_CRYPTO_SESSION","","Create a session for crypto operation.",0,null],[13,"CLOSE_CRYPTO_SESSION","","Close a session for crypto operation.",0,null],[13,"POSTCOPY_ADVISE","","Advise slave that a migration with postcopy enabled is …",0,null],[13,"POSTCOPY_LISTEN","","Advise slave that a transition to postcopy mode has …",0,null],[13,"POSTCOPY_END","","Advise that postcopy migration has now completed.",0,null],[13,"GET_INFLIGHT_FD","","Get a shared buffer from slave.",0,null],[13,"SET_INFLIGHT_FD","","Send the shared inflight buffer back to slave.",0,null],[13,"GPU_SET_SOCKET","","Sets the GPU protocol socket file descriptor.",0,null],[13,"RESET_DEVICE","","Ask the vhost user backend to disable all rings and reset …",0,null],[13,"VRING_KICK","","Indicate that a buffer was added to the vring instead of …",0,null],[13,"GET_MAX_MEM_SLOTS","","Return a u64 payload containing the maximum number of …",0,null],[13,"ADD_MEM_REG","","Update the memory tables by adding the region described.",0,null],[13,"REM_MEM_REG","","Update the memory tables by removing the region described.",0,null],[13,"SET_STATUS","","Notify the backend with updated device status as defined …",0,null],[13,"GET_STATUS","","Query the backend for its device status as defined in the …",0,null],[13,"MAX_CMD","","Upper bound of valid commands.",0,null],[4,"SlaveReq","","Type of requests sending from slaves to masters.",null,null],[13,"NOOP","","Null operation.",1,null],[13,"IOTLB_MSG","","Send IOTLB messages with struct vhost_iotlb_msg as …",1,null],[13,"CONFIG_CHANGE_MSG","","Notify that the virtio device\'s configuration space has …",1,null],[13,"VRING_HOST_NOTIFIER_MSG","","Set host notifier for a specified queue.",1,null],[13,"VRING_CALL","","Indicate that a buffer was used from the vring.",1,null],[13,"VRING_ERR","","Indicate that an error occurred on the specific vring.",1,null],[13,"FS_MAP","","Virtio-fs draft: map file content into the window.",1,null],[13,"FS_UNMAP","","Virtio-fs draft: unmap file content from the window.",1,null],[13,"FS_SYNC","","Virtio-fs draft: sync file content.",1,null],[13,"FS_IO","","Virtio-fs draft: perform a read/write from an fd directly …",1,null],[13,"MAX_CMD","","Upper bound of valid commands.",1,null],[8,"VhostUserMsgValidator","","Vhost message Validator.",null,null],[11,"is_valid","","Validate message syntax only. It doesn\'t validate message …",2,[[],["bool",15]]],[3,"VhostUserHeaderFlag","","Common message flags for vhost-user requests and replies.",null,null],[18,"VERSION","","Bits[0..2] is message version number.",3,null],[18,"REPLY","","Mark message as reply.",3,null],[18,"NEED_REPLY","","Sender anticipates a reply message from the peer.",3,null],[18,"ALL_FLAGS","","All valid bits.",3,null],[18,"RESERVED_BITS","","All reserved bits.",3,null],[11,"empty","","Returns an empty set of flags.",3,[[]]],[11,"all","","Returns the set containing all flags.",3,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",3,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",3,[[["u32",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",3,[[["u32",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",3,[[["u32",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",3,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",3,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",3,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",3,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",3,[[]]],[11,"remove","","Removes the specified flags in-place.",3,[[]]],[11,"toggle","","Toggles the specified flags in-place.",3,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",3,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",3,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",3,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",3,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",3,[[]]],[11,"complement","","Returns the complement of this set of flags.",3,[[]]],[3,"VhostUserVirtioFeatures","","Transport specific flags in VirtIO feature set defined by …",null,null],[18,"PROTOCOL_FEATURES","","Feature flag for the protocol feature.",4,null],[11,"empty","","Returns an empty set of flags.",4,[[]]],[11,"all","","Returns the set containing all flags.",4,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",4,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",4,[[["u64",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",4,[[["u64",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",4,[[["u64",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",4,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",4,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",4,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",4,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",4,[[]]],[11,"remove","","Removes the specified flags in-place.",4,[[]]],[11,"toggle","","Toggles the specified flags in-place.",4,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",4,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",4,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",4,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",4,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",4,[[]]],[11,"complement","","Returns the complement of this set of flags.",4,[[]]],[3,"VhostUserProtocolFeatures","","Vhost-user protocol feature flags.",null,null],[18,"MQ","","Support multiple queues.",5,null],[18,"LOG_SHMFD","","Support logging through shared memory fd.",5,null],[18,"RARP","","Support broadcasting fake RARP packet.",5,null],[18,"REPLY_ACK","","Support sending reply messages for requests with …",5,null],[18,"MTU","","Support setting MTU for virtio-net devices.",5,null],[18,"SLAVE_REQ","","Allow the slave to send requests to the master by an …",5,null],[18,"CROSS_ENDIAN","","Support setting slave endian by SET_VRING_ENDIAN.",5,null],[18,"CRYPTO_SESSION","","Support crypto operations.",5,null],[18,"PAGEFAULT","","Support sending userfault_fd from slaves to masters.",5,null],[18,"CONFIG","","Support Virtio device configuration.",5,null],[18,"SLAVE_SEND_FD","","Allow the slave to send fds (at most 8 descriptors in …",5,null],[18,"HOST_NOTIFIER","","Allow the slave to register a host notifier.",5,null],[18,"INFLIGHT_SHMFD","","Support inflight shmfd.",5,null],[18,"RESET_DEVICE","","Support resetting the device.",5,null],[18,"INBAND_NOTIFICATIONS","","Support inband notifications.",5,null],[18,"CONFIGURE_MEM_SLOTS","","Support configuring memory slots.",5,null],[18,"STATUS","","Support reporting status.",5,null],[11,"empty","","Returns an empty set of flags.",5,[[]]],[11,"all","","Returns the set containing all flags.",5,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",5,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",5,[[["u64",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",5,[[["u64",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",5,[[["u64",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",5,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",5,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",5,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",5,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",5,[[]]],[11,"remove","","Removes the specified flags in-place.",5,[[]]],[11,"toggle","","Toggles the specified flags in-place.",5,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",5,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",5,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",5,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",5,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",5,[[]]],[11,"complement","","Returns the complement of this set of flags.",5,[[]]],[3,"VhostUserU64","","A generic message to encapsulate a 64-bit value.",null,null],[12,"value","","The encapsulated 64-bit common value.",6,null],[11,"new","","Create a new instance.",6,[[["u64",15]]]],[3,"VhostUserMemory","","Memory region descriptor for the SET_MEM_TABLE request.",null,null],[12,"num_regions","","Number of memory regions in the payload.",7,null],[12,"padding1","","Padding for alignment.",7,null],[11,"new","","Create a new instance.",7,[[["u32",15]]]],[3,"VhostUserMemoryRegion","","Memory region descriptors as payload for the …",null,null],[12,"guest_phys_addr","","Guest physical address of the memory region.",8,null],[12,"memory_size","","Size of the memory region.",8,null],[12,"user_addr","","Virtual address in the current process.",8,null],[12,"mmap_offset","","Offset where region starts in the mapped memory.",8,null],[11,"new","","Create a new instance.",8,[[["u64",15]]]],[6,"VhostUserMemoryPayload","","Payload of the VhostUserMemory message.",null,null],[3,"VhostUserSingleMemoryRegion","","Single memory region descriptor as payload for …",null,null],[12,"guest_phys_addr","","Guest physical address of the memory region.",9,null],[12,"memory_size","","Size of the memory region.",9,null],[12,"user_addr","","Virtual address in the current process.",9,null],[12,"mmap_offset","","Offset where region starts in the mapped memory.",9,null],[11,"new","","Create a new instance.",9,[[["u64",15]]]],[3,"VhostUserVringState","","Vring state descriptor.",null,null],[12,"index","","Vring index.",10,null],[12,"num","","A common 32bit value to encapsulate vring state etc.",10,null],[11,"new","","Create a new instance.",10,[[["u32",15]]]],[3,"VhostUserVringAddrFlags","","Flags for vring address.",null,null],[18,"VHOST_VRING_F_LOG","","Support log of vring operations. Modifications to \\\"used\\\" …",11,null],[11,"empty","","Returns an empty set of flags.",11,[[]]],[11,"all","","Returns the set containing all flags.",11,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",11,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",11,[[["u32",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",11,[[["u32",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",11,[[["u32",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",11,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",11,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",11,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",11,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",11,[[]]],[11,"remove","","Removes the specified flags in-place.",11,[[]]],[11,"toggle","","Toggles the specified flags in-place.",11,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",11,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",11,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",11,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",11,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",11,[[]]],[11,"complement","","Returns the complement of this set of flags.",11,[[]]],[3,"VhostUserVringAddr","","Vring address descriptor.",null,null],[12,"index","","Vring index.",12,null],[12,"flags","","Vring flags defined by VhostUserVringAddrFlags.",12,null],[12,"descriptor","","Ring address of the vring descriptor table.",12,null],[12,"used","","Ring address of the vring used ring.",12,null],[12,"available","","Ring address of the vring available ring.",12,null],[12,"log","","Guest address for logging.",12,null],[11,"new","","Create a new instance.",12,[[["u32",15],["u64",15],["vhostuservringaddrflags",3]]]],[11,"from_config_data","","Create a new instance from <code>VringConfigData</code>.",12,[[["u32",15],["vringconfigdata",3]]]],[3,"VhostUserConfigFlags","","Flags for the device configuration message.",null,null],[18,"WRITABLE","","Vhost master messages used for writeable fields.",13,null],[18,"LIVE_MIGRATION","","Vhost master messages used for live migration.",13,null],[11,"empty","","Returns an empty set of flags.",13,[[]]],[11,"all","","Returns the set containing all flags.",13,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",13,[[["u32",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",13,[[["u32",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[["u32",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",13,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",13,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",13,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",13,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",13,[[]]],[11,"remove","","Removes the specified flags in-place.",13,[[]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",13,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",13,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",13,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",13,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",13,[[]]],[11,"complement","","Returns the complement of this set of flags.",13,[[]]],[3,"VhostUserConfig","","Message to read/write device configuration space.",null,null],[12,"offset","","Offset of virtio device\'s configuration space.",14,null],[12,"size","","Configuration space access size in bytes.",14,null],[12,"flags","","Flags for the device configuration operation.",14,null],[11,"new","","Create a new instance.",14,[[["u32",15],["vhostuserconfigflags",3]]]],[6,"VhostUserConfigPayload","","Payload for the VhostUserConfig message.",null,null],[3,"VhostUserInflight","","Single memory region descriptor as payload for …",null,null],[12,"mmap_size","","Size of the area to track inflight I/O.",15,null],[12,"mmap_offset","","Offset of this area from the start of the supplied file …",15,null],[12,"num_queues","","Number of virtqueues.",15,null],[12,"queue_size","","Size of virtqueues.",15,null],[11,"new","","Create a new instance.",15,[[["u16",15],["u64",15]]]],[3,"VhostUserFSSlaveMsgFlags","","Flags for virtio-fs slave messages.",null,null],[18,"EMPTY","","Empty permission.",16,null],[18,"MAP_R","","Read permission.",16,null],[18,"MAP_W","","Write permission.",16,null],[11,"empty","","Returns an empty set of flags.",16,[[]]],[11,"all","","Returns the set containing all flags.",16,[[]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",16,[[["u64",15]],["option",4]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",16,[[["u64",15]]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",16,[[["u64",15]]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",16,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",16,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",16,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …",16,[[],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",16,[[]]],[11,"remove","","Removes the specified flags in-place.",16,[[]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[]]],[11,"set","","Inserts or removes the specified flags depending on the …",16,[[["bool",15]]]],[11,"intersection","","Returns the intersection between the flags in <code>self</code> and …",16,[[]]],[11,"union","","Returns the union of between the flags in <code>self</code> and <code>other</code>.",16,[[]]],[11,"difference","","Returns the difference between the flags in <code>self</code> and <code>other</code>…",16,[[]]],[11,"symmetric_difference","","Returns the symmetric difference between the flags in <code>self</code>…",16,[[]]],[11,"complement","","Returns the complement of this set of flags.",16,[[]]],[17,"VHOST_USER_FS_SLAVE_ENTRIES","","Max entries in one virtio-fs slave request.",null,null],[3,"VhostUserFSSlaveMsg","","Slave request message to update the MMIO window.",null,null],[12,"fd_offset","","File offset.",17,null],[12,"cache_offset","","Offset into the DAX window.",17,null],[12,"len","","Size of region to map.",17,null],[12,"flags","","Flags for the mmap operation",17,null],[3,"DescStateSplit","","Inflight I/O descriptor state for split virtqueues",null,null],[12,"inflight","","Indicate whether this descriptor (only head) is inflight …",18,null],[12,"next","","List of last batch of used descriptors, only when …",18,null],[12,"counter","","Preserve order of fetching available descriptors, only …",18,null],[11,"new","","New instance of DescStateSplit struct",18,[[]]],[3,"QueueRegionSplit","","Inflight I/O queue region for split virtqueues",null,null],[12,"features","","Features flags of this region",19,null],[12,"version","","Version of this region",19,null],[12,"desc_num","","Number of DescStateSplit entries",19,null],[12,"last_batch_head","","List to track last batch of used descriptors",19,null],[12,"used_idx","","Idx value of used ring",19,null],[12,"desc","","Pointer to an array of DescStateSplit entries",19,null],[11,"new","","New instance of QueueRegionSplit struct",19,[[["u16",15],["u64",15]]]],[3,"DescStatePacked","","Inflight I/O descriptor state for packed virtqueues",null,null],[12,"inflight","","Indicate whether this descriptor (only head) is inflight …",20,null],[12,"next","","Link to next free entry",20,null],[12,"last","","Link to last entry of descriptor list, only for head",20,null],[12,"num","","Length of descriptor list, only for head",20,null],[12,"counter","","Preserve order of fetching avail descriptors, only for …",20,null],[12,"id","","Buffer ID",20,null],[12,"flags","","Descriptor flags",20,null],[12,"len","","Buffer length",20,null],[12,"addr","","Buffer address",20,null],[11,"new","","New instance of DescStatePacked struct",20,[[]]],[3,"QueueRegionPacked","","Inflight I/O queue region for packed virtqueues",null,null],[12,"features","","Features flags of this region",21,null],[12,"version","","version of this region",21,null],[12,"desc_num","","size of descriptor state array",21,null],[12,"free_head","","head of free DescStatePacked entry list",21,null],[12,"old_free_head","","old head of free DescStatePacked entry list",21,null],[12,"used_idx","","used idx of descriptor ring",21,null],[12,"old_used_idx","","old used idx of descriptor ring",21,null],[12,"used_wrap_counter","","device ring wrap counter",21,null],[12,"old_used_wrap_counter","","old device ring wrap counter",21,null],[12,"desc","","Pointer to array tracking state of each descriptor from …",21,null],[11,"new","","New instance of QueueRegionPacked struct",21,[[["u16",15],["u64",15]]]],[3,"Listener","vmm_vhost::vhost_user","Unix domain socket listener for accepting incoming …",null,null],[3,"Master","","Struct for the vhost-user master endpoint.",null,null],[8,"VhostUserMaster","","Trait for vhost-user master to provide extra methods not …",null,null],[10,"get_protocol_features","","Get the protocol feature bitmask from the underlying …",22,[[],[["result",6],["vhostuserprotocolfeatures",3]]]],[10,"set_protocol_features","","Enable protocol features in the underlying vhost …",22,[[["vhostuserprotocolfeatures",3]],["result",6]]],[10,"get_queue_num","","Query how many queues the backend supports.",22,[[],[["u64",15],["result",6]]]],[10,"set_vring_enable","","Signal slave to enable or disable corresponding vring.",22,[[["usize",15],["bool",15]],["result",6]]],[10,"get_config","","Fetch the contents of the virtio device configuration …",22,[[["u32",15],["vhostuserconfigflags",3]],["result",6]]],[10,"set_config","","Change the virtio device configuration space. It also can …",22,[[["u32",15],["vhostuserconfigflags",3]],["result",6]]],[10,"set_slave_request_fd","","Setup slave communication channel.",22,[[["asrawfd",8]],["result",6]]],[10,"get_inflight_fd","","Retrieve shared buffer for inflight I/O tracking.",22,[[["vhostuserinflight",3]],["result",6]]],[10,"set_inflight_fd","","Set shared buffer for inflight I/O tracking.",22,[[["vhostuserinflight",3],["rawfd",6]],["result",6]]],[10,"get_max_mem_slots","","Query the maximum amount of memory slots supported by the …",22,[[],[["u64",15],["result",6]]]],[10,"add_mem_region","","Add a new guest memory mapping for vhost to use.",22,[[["vhostusermemoryregioninfo",3]],["result",6]]],[10,"remove_mem_region","","Remove a guest memory mapping from vhost.",22,[[["vhostusermemoryregioninfo",3]],["result",6]]],[3,"MasterReqHandler","","Server to handle service requests from slaves from the …",null,null],[8,"VhostUserMasterReqHandler","","Define services provided by masters for the slave …",null,null],[11,"handle_config_change","","Handle device configuration change notifications.",23,[[],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_map","","Handle virtio-fs map file requests.",23,[[["asrawfd",8],["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_unmap","","Handle virtio-fs unmap file requests.",23,[[["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_sync","","Handle virtio-fs sync file requests.",23,[[["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_io","","Handle virtio-fs file IO requests.",23,[[["asrawfd",8],["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[8,"VhostUserMasterReqHandlerMut","","A helper trait mirroring VhostUserMasterReqHandler but …",null,null],[11,"handle_config_change","","Handle device configuration change notifications.",24,[[],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_map","","Handle virtio-fs map file requests.",24,[[["asrawfd",8],["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_unmap","","Handle virtio-fs unmap file requests.",24,[[["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_sync","","Handle virtio-fs sync file requests.",24,[[["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_io","","Handle virtio-fs file IO requests.",24,[[["asrawfd",8],["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[3,"SlaveListener","","Vhost-user slave side connection listener.",null,null],[3,"SlaveReqHandler","","Server to handle service requests from masters from the …",null,null],[8,"VhostUserSlaveReqHandler","","Services provided to the master by the slave with …",null,null],[10,"set_owner","","",25,[[],["result",6]]],[10,"reset_owner","","",25,[[],["result",6]]],[10,"get_features","","",25,[[],[["result",6],["u64",15]]]],[10,"set_features","","",25,[[["u64",15]],["result",6]]],[10,"set_mem_table","","",25,[[["vec",3],["file",3]],["result",6]]],[10,"set_vring_num","","",25,[[["u32",15]],["result",6]]],[10,"set_vring_addr","","",25,[[["u32",15],["u64",15],["vhostuservringaddrflags",3]],["result",6]]],[10,"set_vring_base","","",25,[[["u32",15]],["result",6]]],[10,"get_vring_base","","",25,[[["u32",15]],[["result",6],["vhostuservringstate",3]]]],[10,"set_vring_kick","","",25,[[["option",4],["file",3],["u8",15]],["result",6]]],[10,"set_vring_call","","",25,[[["option",4],["file",3],["u8",15]],["result",6]]],[10,"set_vring_err","","",25,[[["option",4],["file",3],["u8",15]],["result",6]]],[10,"get_protocol_features","","",25,[[],[["result",6],["vhostuserprotocolfeatures",3]]]],[10,"set_protocol_features","","",25,[[["u64",15]],["result",6]]],[10,"get_queue_num","","",25,[[],[["result",6],["u64",15]]]],[10,"set_vring_enable","","",25,[[["u32",15],["bool",15]],["result",6]]],[10,"get_config","","",25,[[["u32",15],["vhostuserconfigflags",3]],[["vec",3],["result",6]]]],[10,"set_config","","",25,[[["u32",15],["vhostuserconfigflags",3]],["result",6]]],[11,"set_slave_req_fd","","",25,[[["file",3]]]],[10,"get_inflight_fd","","",25,[[["vhostuserinflight",3]],["result",6]]],[10,"set_inflight_fd","","",25,[[["vhostuserinflight",3],["file",3]],["result",6]]],[10,"get_max_mem_slots","","",25,[[],[["result",6],["u64",15]]]],[10,"add_mem_region","","",25,[[["file",3],["vhostusersinglememoryregion",3]],["result",6]]],[10,"remove_mem_region","","",25,[[["vhostusersinglememoryregion",3]],["result",6]]],[8,"VhostUserSlaveReqHandlerMut","","Services provided to the master by the slave without …",null,null],[10,"set_owner","","",26,[[],["result",6]]],[10,"reset_owner","","",26,[[],["result",6]]],[10,"get_features","","",26,[[],[["result",6],["u64",15]]]],[10,"set_features","","",26,[[["u64",15]],["result",6]]],[10,"set_mem_table","","",26,[[["vec",3],["file",3]],["result",6]]],[10,"set_vring_num","","",26,[[["u32",15]],["result",6]]],[10,"set_vring_addr","","",26,[[["u32",15],["u64",15],["vhostuservringaddrflags",3]],["result",6]]],[10,"set_vring_base","","",26,[[["u32",15]],["result",6]]],[10,"get_vring_base","","",26,[[["u32",15]],[["result",6],["vhostuservringstate",3]]]],[10,"set_vring_kick","","",26,[[["option",4],["file",3],["u8",15]],["result",6]]],[10,"set_vring_call","","",26,[[["option",4],["file",3],["u8",15]],["result",6]]],[10,"set_vring_err","","",26,[[["option",4],["file",3],["u8",15]],["result",6]]],[10,"get_protocol_features","","",26,[[],[["result",6],["vhostuserprotocolfeatures",3]]]],[10,"set_protocol_features","","",26,[[["u64",15]],["result",6]]],[10,"get_queue_num","","",26,[[],[["result",6],["u64",15]]]],[10,"set_vring_enable","","",26,[[["u32",15],["bool",15]],["result",6]]],[10,"get_config","","",26,[[["u32",15],["vhostuserconfigflags",3]],[["vec",3],["result",6]]]],[10,"set_config","","",26,[[["u32",15],["vhostuserconfigflags",3]],["result",6]]],[11,"set_slave_req_fd","","",26,[[["file",3]]]],[10,"get_inflight_fd","","",26,[[["vhostuserinflight",3]],["result",6]]],[10,"set_inflight_fd","","",26,[[["vhostuserinflight",3],["file",3]],["result",6]]],[10,"get_max_mem_slots","","",26,[[],[["result",6],["u64",15]]]],[10,"add_mem_region","","",26,[[["file",3],["vhostusersinglememoryregion",3]],["result",6]]],[10,"remove_mem_region","","",26,[[["vhostusersinglememoryregion",3]],["result",6]]],[3,"SlaveFsCacheReq","","Request proxy to send vhost-user-fs slave requests to the …",null,null],[4,"Error","","Errors for vhost-user operations",null,null],[13,"InvalidParam","","Invalid parameters.",27,null],[13,"InvalidOperation","","Unsupported operations due to that the protocol feature …",27,null],[13,"InvalidMessage","","Invalid message format, flag or content.",27,null],[13,"PartialMessage","","Only part of a message have been sent or received …",27,null],[13,"OversizedMsg","","Message is too large",27,null],[13,"IncorrectFds","","Fd array in question is too big or too small",27,null],[13,"SocketConnect","","Can\'t connect to peer.",27,null],[13,"SocketError","","Generic socket errors.",27,null],[13,"SocketBroken","","The socket is broken or has been closed.",27,null],[13,"SocketRetry","","Should retry the socket operation again.",27,null],[13,"SlaveInternalError","","Failure from the slave side.",27,null],[13,"MasterInternalError","","Failure from the master side.",27,null],[13,"FeatureMismatch","","Virtio/protocol features mismatch.",27,null],[13,"ReqHandlerError","","Error from request handler",27,null],[11,"should_reconnect","","Determine whether to rebuild the underline communication …",27,[[],["bool",15]]],[6,"Result","","Result of vhost-user operations",null,null],[6,"HandlerResult","","Result of request handler.",null,null],[17,"VHOST_MAX_MEMORY_REGIONS","vmm_vhost","Maximum number of memory regions supported.",null,null],[3,"VringConfigData","","Vring configuration data.",null,null],[12,"queue_max_size","","Maximum queue size supported by the driver.",28,null],[12,"queue_size","","Actual queue size negotiated by the driver.",28,null],[12,"flags","","Bitmask of vring flags.",28,null],[12,"desc_table_addr","","Descriptor table address.",28,null],[12,"used_ring_addr","","Used ring buffer address.",28,null],[12,"avail_ring_addr","","Available ring buffer address.",28,null],[12,"log_addr","","Optional address for logging.",28,null],[3,"VhostUserMemoryRegionInfo","","Memory region configuration data.",null,null],[12,"guest_phys_addr","","Guest physical address of the memory region.",29,null],[12,"memory_size","","Size of the memory region.",29,null],[12,"userspace_addr","","Virtual address in the current process.",29,null],[12,"mmap_offset","","Optional offset where region starts in the mapped memory.",29,null],[12,"mmap_handle","","Optional file descriptor for mmap.",29,null],[8,"VhostBackend","","An interface for setting up vhost-based backend drivers …",null,null],[10,"get_features","","Get a bitmask of supported virtio/vhost features.",30,[[],[["u64",15],["result",6]]]],[10,"set_features","","Inform the vhost subsystem which features to enable. This …",30,[[["u64",15]],["result",6]]],[10,"set_owner","","Set the current process as the owner of the vhost backend.…",30,[[],["result",6]]],[10,"reset_owner","","Used to be sent to request disabling all rings This is no …",30,[[],["result",6]]],[10,"set_mem_table","","Set the guest memory mappings for vhost to use.",30,[[],["result",6]]],[10,"set_log_base","","Set base address for page modification logging.",30,[[["option",4],["rawfd",6],["u64",15]],["result",6]]],[10,"set_log_fd","","Specify an eventfd file descriptor to signal on log write.",30,[[["rawfd",6]],["result",6]]],[10,"set_vring_num","","Set the number of descriptors in the vring.",30,[[["usize",15],["u16",15]],["result",6]]],[10,"set_vring_addr","","Set the addresses for a given vring.",30,[[["usize",15],["vringconfigdata",3]],["result",6]]],[10,"set_vring_base","","Set the first index to look for available descriptors.",30,[[["usize",15],["u16",15]],["result",6]]],[10,"get_vring_base","","Get the available vring base offset.",30,[[["usize",15]],[["u32",15],["result",6]]]],[10,"set_vring_call","","Set the eventfd to trigger when buffers have been used by …",30,[[["usize",15],["eventfd",3]],["result",6]]],[10,"set_vring_kick","","Set the eventfd that will be signaled by the guest when …",30,[[["usize",15],["eventfd",3]],["result",6]]],[10,"set_vring_err","","Set the eventfd that will be signaled by the guest when …",30,[[["usize",15],["eventfd",3]],["result",6]]],[8,"VhostBackendMut","","An interface for setting up vhost-based backend drivers.",null,null],[10,"get_features","","Get a bitmask of supported virtio/vhost features.",31,[[],[["u64",15],["result",6]]]],[10,"set_features","","Inform the vhost subsystem which features to enable. This …",31,[[["u64",15]],["result",6]]],[10,"set_owner","","Set the current process as the owner of the vhost backend.…",31,[[],["result",6]]],[10,"reset_owner","","Used to be sent to request disabling all rings This is no …",31,[[],["result",6]]],[10,"set_mem_table","","Set the guest memory mappings for vhost to use.",31,[[],["result",6]]],[10,"set_log_base","","Set base address for page modification logging.",31,[[["option",4],["rawfd",6],["u64",15]],["result",6]]],[10,"set_log_fd","","Specify an eventfd file descriptor to signal on log write.",31,[[["rawfd",6]],["result",6]]],[10,"set_vring_num","","Set the number of descriptors in the vring.",31,[[["usize",15],["u16",15]],["result",6]]],[10,"set_vring_addr","","Set the addresses for a given vring.",31,[[["usize",15],["vringconfigdata",3]],["result",6]]],[10,"set_vring_base","","Set the first index to look for available descriptors.",31,[[["usize",15],["u16",15]],["result",6]]],[10,"get_vring_base","","Get the available vring base offset.",31,[[["usize",15]],[["u32",15],["result",6]]]],[10,"set_vring_call","","Set the eventfd to trigger when buffers have been used by …",31,[[["usize",15],["eventfd",3]],["result",6]]],[10,"set_vring_kick","","Set the eventfd that will be signaled by the guest when …",31,[[["usize",15],["eventfd",3]],["result",6]]],[10,"set_vring_err","","Set the eventfd that will be signaled by the guest when …",31,[[["usize",15],["eventfd",3]],["result",6]]],[4,"Error","","Error codes for vhost operations",null,null],[13,"InvalidOperation","","Invalid operations.",32,null],[13,"InvalidGuestMemory","","Invalid guest memory.",32,null],[13,"InvalidGuestMemoryRegion","","Invalid guest memory region.",32,null],[13,"InvalidQueue","","Invalid queue.",32,null],[13,"DescriptorTableAddress","","Invalid descriptor table address.",32,null],[13,"UsedAddress","","Invalid used address.",32,null],[13,"AvailAddress","","Invalid available address.",32,null],[13,"LogAddress","","Invalid log address.",32,null],[13,"IOError","","Error from IO subsystem.",32,null],[13,"VhostUserProtocol","","Error from the vhost-user subsystem.",32,null],[6,"Result","","Result of vhost operations",null,null],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","vmm_vhost::vhost_user::message","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","vmm_vhost::vhost_user","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"as_raw_fds","","",33,[[],[["vec",3],["global",3],["i32",15]]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"as_raw_fds","","",34,[[],[["vec",3],["global",3],["i32",15]]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"as_raw_fds","","",35,[[],[["vec",3],["global",3],["i32",15]]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"as_raw_fds","","",37,[[],[["vec",3],["global",3],["i32",15]]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","vmm_vhost","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"get_features","vmm_vhost::vhost_user","Get from the underlying vhost implementation the feature …",34,[[],[["u64",15],["result",6]]]],[11,"set_features","","Enable features in the underlying vhost implementation …",34,[[["u64",15]],["result",6]]],[11,"set_owner","","Set the current Master as an owner of the session.",34,[[],["result",6]]],[11,"reset_owner","","",34,[[],["result",6]]],[11,"set_mem_table","","Set the memory map regions on the slave so it can …",34,[[],["result",6]]],[11,"set_log_base","","",34,[[["option",4],["rawfd",6],["u64",15]],["result",6]]],[11,"set_log_fd","","",34,[[["rawfd",6]],["result",6]]],[11,"set_vring_num","","Set the size of the queue.",34,[[["usize",15],["u16",15]],["result",6]]],[11,"set_vring_addr","","Sets the addresses of the different aspects of the vring.",34,[[["usize",15],["vringconfigdata",3]],["result",6]]],[11,"set_vring_base","","Sets the base offset in the available vring.",34,[[["usize",15],["u16",15]],["result",6]]],[11,"get_vring_base","","",34,[[["usize",15]],[["u32",15],["result",6]]]],[11,"set_vring_call","","Set the event file descriptor to signal when buffers are …",34,[[["usize",15],["eventfd",3]],["result",6]]],[11,"set_vring_kick","","Set the event file descriptor for adding buffers to the …",34,[[["usize",15],["eventfd",3]],["result",6]]],[11,"set_vring_err","","Set the event file descriptor to signal when error occurs.…",34,[[["usize",15],["eventfd",3]],["result",6]]],[11,"is_valid","vmm_vhost::vhost_user::message","",7,[[],["bool",15]]],[11,"is_valid","","",8,[[],["bool",15]]],[11,"is_valid","","",9,[[],["bool",15]]],[11,"is_valid","","",12,[[],["bool",15]]],[11,"is_valid","","",14,[[],["bool",15]]],[11,"is_valid","","",15,[[],["bool",15]]],[11,"is_valid","","",17,[[],["bool",15]]],[11,"get_protocol_features","vmm_vhost::vhost_user","",34,[[],[["result",6],["vhostuserprotocolfeatures",3]]]],[11,"set_protocol_features","","",34,[[["vhostuserprotocolfeatures",3]],["result",6]]],[11,"get_queue_num","","",34,[[],[["u64",15],["result",6]]]],[11,"set_vring_enable","","",34,[[["usize",15],["bool",15]],["result",6]]],[11,"get_config","","",34,[[["u32",15],["vhostuserconfigflags",3]],["result",6]]],[11,"set_config","","",34,[[["u32",15],["vhostuserconfigflags",3]],["result",6]]],[11,"set_slave_request_fd","","",34,[[["asrawfd",8]],["result",6]]],[11,"get_inflight_fd","","",34,[[["vhostuserinflight",3]],["result",6]]],[11,"set_inflight_fd","","",34,[[["vhostuserinflight",3],["rawfd",6]],["result",6]]],[11,"get_max_mem_slots","","",34,[[],[["u64",15],["result",6]]]],[11,"add_mem_region","","",34,[[["vhostusermemoryregioninfo",3]],["result",6]]],[11,"remove_mem_region","","",34,[[["vhostusermemoryregioninfo",3]],["result",6]]],[11,"fs_slave_map","","Forward vhost-user-fs map file requests to the slave.",38,[[["asrawfd",8],["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_unmap","","Forward vhost-user-fs unmap file requests to the master.",38,[[["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"drop","","",33,[[]]],[11,"from","","Convert raw socket errors into meaningful vhost-user …",27,[[["error",3]]]],[11,"from","vmm_vhost","",32,[[["error",4]]]],[11,"extend","vmm_vhost::vhost_user::message","",3,[[["intoiterator",8]]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"extend","","",5,[[["intoiterator",8]]]],[11,"extend","","",11,[[["intoiterator",8]]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","","",16,[[["intoiterator",8]]]],[11,"clone","vmm_vhost","",29,[[],["vhostusermemoryregioninfo",3]]],[11,"clone","vmm_vhost::vhost_user::message","",0,[[],["masterreq",4]]],[11,"clone","","",1,[[],["slavereq",4]]],[11,"clone","","",3,[[],["vhostuserheaderflag",3]]],[11,"clone","","",4,[[],["vhostuservirtiofeatures",3]]],[11,"clone","","",5,[[],["vhostuserprotocolfeatures",3]]],[11,"clone","","",8,[[],["vhostusermemoryregion",3]]],[11,"clone","","",9,[[],["vhostusersinglememoryregion",3]]],[11,"clone","","",11,[[],["vhostuservringaddrflags",3]]],[11,"clone","","",13,[[],["vhostuserconfigflags",3]]],[11,"clone","","",15,[[],["vhostuserinflight",3]]],[11,"clone","","",16,[[],["vhostuserfsslavemsgflags",3]]],[11,"clone","","",18,[[],["descstatesplit",3]]],[11,"clone","","",20,[[],["descstatepacked",3]]],[11,"clone","vmm_vhost::vhost_user","",34,[[],["master",3]]],[11,"clone","","",38,[[],["slavefscachereq",3]]],[11,"default","vmm_vhost","",29,[[],["vhostusermemoryregioninfo",3]]],[11,"default","vmm_vhost::vhost_user::message","",6,[[],["vhostuseru64",3]]],[11,"default","","",7,[[],["vhostusermemory",3]]],[11,"default","","",8,[[],["vhostusermemoryregion",3]]],[11,"default","","",9,[[],["vhostusersinglememoryregion",3]]],[11,"default","","",10,[[],["vhostuservringstate",3]]],[11,"default","","",12,[[],["vhostuservringaddr",3]]],[11,"default","","",14,[[],["vhostuserconfig",3]]],[11,"default","","",15,[[],["vhostuserinflight",3]]],[11,"default","","",16,[[],["vhostuserfsslavemsgflags",3]]],[11,"default","","",17,[[],["vhostuserfsslavemsg",3]]],[11,"default","","",18,[[],["descstatesplit",3]]],[11,"default","","",20,[[],["descstatepacked",3]]],[11,"cmp","","",0,[[["masterreq",4]],["ordering",4]]],[11,"cmp","","",1,[[["slavereq",4]],["ordering",4]]],[11,"cmp","","",3,[[["vhostuserheaderflag",3]],["ordering",4]]],[11,"cmp","","",4,[[["vhostuservirtiofeatures",3]],["ordering",4]]],[11,"cmp","","",5,[[["vhostuserprotocolfeatures",3]],["ordering",4]]],[11,"cmp","","",11,[[["vhostuservringaddrflags",3]],["ordering",4]]],[11,"cmp","","",13,[[["vhostuserconfigflags",3]],["ordering",4]]],[11,"cmp","","",16,[[["vhostuserfsslavemsgflags",3]],["ordering",4]]],[11,"eq","","",0,[[["masterreq",4]],["bool",15]]],[11,"eq","","",1,[[["slavereq",4]],["bool",15]]],[11,"eq","","",3,[[["vhostuserheaderflag",3]],["bool",15]]],[11,"ne","","",3,[[["vhostuserheaderflag",3]],["bool",15]]],[11,"eq","","",4,[[["vhostuservirtiofeatures",3]],["bool",15]]],[11,"ne","","",4,[[["vhostuservirtiofeatures",3]],["bool",15]]],[11,"eq","","",5,[[["vhostuserprotocolfeatures",3]],["bool",15]]],[11,"ne","","",5,[[["vhostuserprotocolfeatures",3]],["bool",15]]],[11,"eq","","",11,[[["vhostuservringaddrflags",3]],["bool",15]]],[11,"ne","","",11,[[["vhostuservringaddrflags",3]],["bool",15]]],[11,"eq","","",13,[[["vhostuserconfigflags",3]],["bool",15]]],[11,"ne","","",13,[[["vhostuserconfigflags",3]],["bool",15]]],[11,"eq","","",16,[[["vhostuserfsslavemsgflags",3]],["bool",15]]],[11,"ne","","",16,[[["vhostuserfsslavemsgflags",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["masterreq",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["slavereq",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["vhostuserheaderflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["vhostuserheaderflag",3]],["bool",15]]],[11,"le","","",3,[[["vhostuserheaderflag",3]],["bool",15]]],[11,"gt","","",3,[[["vhostuserheaderflag",3]],["bool",15]]],[11,"ge","","",3,[[["vhostuserheaderflag",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["vhostuservirtiofeatures",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["vhostuservirtiofeatures",3]],["bool",15]]],[11,"le","","",4,[[["vhostuservirtiofeatures",3]],["bool",15]]],[11,"gt","","",4,[[["vhostuservirtiofeatures",3]],["bool",15]]],[11,"ge","","",4,[[["vhostuservirtiofeatures",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["vhostuserprotocolfeatures",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["vhostuserprotocolfeatures",3]],["bool",15]]],[11,"le","","",5,[[["vhostuserprotocolfeatures",3]],["bool",15]]],[11,"gt","","",5,[[["vhostuserprotocolfeatures",3]],["bool",15]]],[11,"ge","","",5,[[["vhostuserprotocolfeatures",3]],["bool",15]]],[11,"partial_cmp","","",11,[[["vhostuservringaddrflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["vhostuservringaddrflags",3]],["bool",15]]],[11,"le","","",11,[[["vhostuservringaddrflags",3]],["bool",15]]],[11,"gt","","",11,[[["vhostuservringaddrflags",3]],["bool",15]]],[11,"ge","","",11,[[["vhostuservringaddrflags",3]],["bool",15]]],[11,"partial_cmp","","",13,[[["vhostuserconfigflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["vhostuserconfigflags",3]],["bool",15]]],[11,"le","","",13,[[["vhostuserconfigflags",3]],["bool",15]]],[11,"gt","","",13,[[["vhostuserconfigflags",3]],["bool",15]]],[11,"ge","","",13,[[["vhostuserconfigflags",3]],["bool",15]]],[11,"partial_cmp","","",16,[[["vhostuserfsslavemsgflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["vhostuserfsslavemsgflags",3]],["bool",15]]],[11,"le","","",16,[[["vhostuserfsslavemsgflags",3]],["bool",15]]],[11,"gt","","",16,[[["vhostuserfsslavemsgflags",3]],["bool",15]]],[11,"ge","","",16,[[["vhostuserfsslavemsgflags",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","vmm_vhost::vhost_user","",27,[[["formatter",3]],["result",6]]],[11,"fmt","vmm_vhost","",32,[[["formatter",3]],["result",6]]],[11,"fmt","vmm_vhost::vhost_user","",27,[[["formatter",3]],["result",6]]],[11,"fmt","vmm_vhost","",32,[[["formatter",3]],["result",6]]],[11,"sub","vmm_vhost::vhost_user::message","Returns the set difference of the two sets of flags.",3,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",4,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",5,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",11,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",3,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",4,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",5,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",11,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[]]],[11,"not","","Returns the complement of this set of flags.",3,[[]]],[11,"not","","Returns the complement of this set of flags.",4,[[]]],[11,"not","","Returns the complement of this set of flags.",5,[[]]],[11,"not","","Returns the complement of this set of flags.",11,[[]]],[11,"not","","Returns the complement of this set of flags.",13,[[]]],[11,"not","","Returns the complement of this set of flags.",16,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",3,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",4,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",5,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",11,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[]]],[11,"bitor","","Returns the union of the two sets of flags.",3,[[["vhostuserheaderflag",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",4,[[["vhostuservirtiofeatures",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",5,[[["vhostuserprotocolfeatures",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",11,[[["vhostuservringaddrflags",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["vhostuserconfigflags",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["vhostuserfsslavemsgflags",3]]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",3,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",4,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",5,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",11,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",13,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",16,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",3,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",4,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",5,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",11,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[]]],[11,"bitor_assign","","Adds the set of flags.",3,[[]]],[11,"bitor_assign","","Adds the set of flags.",4,[[]]],[11,"bitor_assign","","Adds the set of flags.",5,[[]]],[11,"bitor_assign","","Adds the set of flags.",11,[[]]],[11,"bitor_assign","","Adds the set of flags.",13,[[]]],[11,"bitor_assign","","Adds the set of flags.",16,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",3,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",4,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",5,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",11,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",16,[[]]],[11,"from_iter","","",3,[[["intoiterator",8]]]],[11,"from_iter","","",4,[[["intoiterator",8]]]],[11,"from_iter","","",5,[[["intoiterator",8]]]],[11,"from_iter","","",11,[[["intoiterator",8]]]],[11,"from_iter","","",13,[[["intoiterator",8]]]],[11,"from_iter","","",16,[[["intoiterator",8]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"as_raw_fd","vmm_vhost::vhost_user","",33,[[],["rawfd",6]]],[11,"as_raw_fd","","",34,[[],["rawfd",6]]],[11,"as_raw_fd","","",35,[[],["rawfd",6]]],[11,"as_raw_fd","","",37,[[],["rawfd",6]]],[11,"is_log_addr_valid","vmm_vhost","Check whether the log (flag, address) pair is valid.",28,[[],["bool",15]]],[11,"get_log_addr","","Get the log address, default to zero if not available.",28,[[],["u64",15]]],[11,"new","vmm_vhost::vhost_user","Create a unix domain socket listener.",33,[[["bool",15],["path",3],["asref",8]],["result",6]]],[11,"accept","","Accept an incoming connection.",33,[[],[["option",4],["result",6]]]],[11,"set_nonblocking","","Change blocking status on the listener.",33,[[["bool",15]],["result",6]]],[11,"from_stream","","Create a new instance from a Unix stream socket.",34,[[["u64",15],["unixstream",3]]]],[11,"connect","","Create a new vhost-user master endpoint.",34,[[["u64",15],["path",3],["asref",8]],["result",6]]],[11,"set_hdr_flags","","Set the header flags that should be applied to all …",34,[[["vhostuserheaderflag",3]]]],[11,"handle_config_change","","Handle device configuration change notifications.",23,[[],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_map","","Handle virtio-fs map file requests.",23,[[["asrawfd",8],["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_unmap","","Handle virtio-fs unmap file requests.",23,[[["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_sync","","Handle virtio-fs sync file requests.",23,[[["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_io","","Handle virtio-fs file IO requests.",23,[[["asrawfd",8],["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"handle_config_change","","Handle device configuration change notifications.",24,[[],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_map","","Handle virtio-fs map file requests.",24,[[["asrawfd",8],["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_unmap","","Handle virtio-fs unmap file requests.",24,[[["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_sync","","Handle virtio-fs sync file requests.",24,[[["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"fs_slave_io","","Handle virtio-fs file IO requests.",24,[[["asrawfd",8],["vhostuserfsslavemsg",3]],[["u64",15],["handlerresult",6]]]],[11,"new","","Create a server to handle service requests from slaves on …",35,[[["arc",3]],["result",6]]],[11,"get_tx_raw_fd","","Get the socket fd for the slave to communication with the …",35,[[],["rawfd",6]]],[11,"set_reply_ack_flag","","Set the negotiation state of the …",35,[[["bool",15]]]],[11,"set_failed","","Mark endpoint as failed or in normal state.",35,[[["i32",15]]]],[11,"handle_request","","Main entrance to server slave request from the slave …",35,[[],[["result",6],["u64",15]]]],[11,"new","","Create a unix domain socket for incoming master …",36,[[["arc",3],["listener",3]],["result",6]]],[11,"accept","","Accept an incoming connection from the master, returning …",36,[[],[["option",4],["result",6]]]],[11,"set_nonblocking","","Change blocking status on the listener.",36,[[["bool",15]],["result",6]]],[11,"set_slave_req_fd","","",25,[[["file",3]]]],[11,"set_slave_req_fd","","",26,[[["file",3]]]],[11,"from_stream","","Create a vhost-user slave endpoint from a connected …",37,[[["arc",3],["unixstream",3]]]],[11,"connect","","Create a new vhost-user slave endpoint.",37,[[["arc",3],["str",15]],["result",6]]],[11,"set_failed","","Mark endpoint as failed with specified error code.",37,[[["i32",15]]]],[11,"handle_request","","Main entrance to server slave request from the slave …",37,[[],["result",6]]],[11,"from_stream","","Create a new instance from a <code>UnixStream</code> object.",38,[[["unixstream",3]]]],[11,"set_reply_ack_flag","","Set the negotiation state of the …",38,[[["bool",15]]]],[11,"set_failed","","Mark endpoint as failed with specified error code.",38,[[["i32",15]]]]],"p":[[4,"MasterReq"],[4,"SlaveReq"],[8,"VhostUserMsgValidator"],[3,"VhostUserHeaderFlag"],[3,"VhostUserVirtioFeatures"],[3,"VhostUserProtocolFeatures"],[3,"VhostUserU64"],[3,"VhostUserMemory"],[3,"VhostUserMemoryRegion"],[3,"VhostUserSingleMemoryRegion"],[3,"VhostUserVringState"],[3,"VhostUserVringAddrFlags"],[3,"VhostUserVringAddr"],[3,"VhostUserConfigFlags"],[3,"VhostUserConfig"],[3,"VhostUserInflight"],[3,"VhostUserFSSlaveMsgFlags"],[3,"VhostUserFSSlaveMsg"],[3,"DescStateSplit"],[3,"QueueRegionSplit"],[3,"DescStatePacked"],[3,"QueueRegionPacked"],[8,"VhostUserMaster"],[8,"VhostUserMasterReqHandler"],[8,"VhostUserMasterReqHandlerMut"],[8,"VhostUserSlaveReqHandler"],[8,"VhostUserSlaveReqHandlerMut"],[4,"Error"],[3,"VringConfigData"],[3,"VhostUserMemoryRegionInfo"],[8,"VhostBackend"],[8,"VhostBackendMut"],[4,"Error"],[3,"Listener"],[3,"Master"],[3,"MasterReqHandler"],[3,"SlaveListener"],[3,"SlaveReqHandler"],[3,"SlaveFsCacheReq"]]},\
"wire_format_derive":{"doc":"Derives a 9P wire format encoding for a struct by …","i":[[24,"P9WireFormat","wire_format_derive","The function that derives the actual implementation.",null,null]],"p":[]},\
"x86_64":{"doc":"","i":[[4,"Error","x86_64","",null,null],[13,"AllocateIOResouce","","",0,null],[13,"AllocateIrq","","",0,null],[13,"CloneEvent","","",0,null],[13,"CloneIrqChip","","",0,null],[13,"Cmdline","","",0,null],[13,"ConfigurePciDevice","","",0,null],[13,"ConfigureSystem","","",0,null],[13,"CreateBatDevices","","",0,null],[13,"CreateDevices","","",0,null],[13,"CreateEvent","","",0,null],[13,"CreateFdt","","",0,null],[13,"CreateIoapicDevice","","",0,null],[13,"CreatePciRoot","","",0,null],[13,"CreatePit","","",0,null],[13,"CreatePitDevice","","",0,null],[13,"CreateSerialDevices","","",0,null],[13,"CreateSocket","","",0,null],[13,"CreateVcpu","","",0,null],[13,"CreateVm","","",0,null],[13,"E820Configuration","","",0,null],[13,"EnableSinglestep","","",0,null],[13,"EnableSplitIrqchip","","",0,null],[13,"GetSerialCmdline","","",0,null],[13,"KernelOffsetPastEnd","","",0,null],[13,"LoadBios","","",0,null],[13,"LoadBzImage","","",0,null],[13,"LoadCmdline","","",0,null],[13,"LoadInitrd","","",0,null],[13,"LoadKernel","","",0,null],[13,"PageNotPresent","","",0,null],[13,"Pstore","","",0,null],[13,"ReadingGuestMemory","","",0,null],[13,"ReadRegs","","",0,null],[13,"RegisterIrqfd","","",0,null],[13,"RegisterVsock","","",0,null],[13,"SetHwBreakpoint","","",0,null],[13,"SetLint","","",0,null],[13,"SetTssAddr","","",0,null],[13,"SetupCpuid","","",0,null],[13,"SetupFpu","","",0,null],[13,"SetupGuestMemory","","",0,null],[13,"SetupMptable","","",0,null],[13,"SetupMsrs","","",0,null],[13,"SetupRegs","","",0,null],[13,"SetupSmbios","","",0,null],[13,"SetupSregs","","",0,null],[13,"TranslatingVirtAddr","","",0,null],[13,"UnsupportedProtectionType","","",0,null],[13,"WriteRegs","","",0,null],[13,"WritingGuestMemory","","",0,null],[13,"ZeroPagePastRamEnd","","",0,null],[13,"ZeroPageSetup","","",0,null],[6,"Result","","",null,null],[3,"X8664arch","","",null,null],[17,"X86_64_SCI_IRQ","","",null,null],[17,"X86_64_IRQ_BASE","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"guest_memory_layout","","",1,[[["vmcomponents",3]],[["result",4],["vec",3]]]],[11,"get_phys_max_addr","","",1,[[],["u64",15]]],[11,"create_system_allocator","","",1,[[["guestmemory",3]],["systemallocator",3]]],[11,"build_vm","","",1,[[["vmcomponents",3],["option",4],["ramoopsregion",3],["option",4],["event",3],["vec",3],["irqchipx86_64",8],["minijail",3],["systemallocator",3],["btreemap",3]],[["result",4],["runnablelinuxvm",3]]]],[11,"configure_vcpu","","",1,[[["hypervisorx86_64",8],["irqchipx86_64",8],["vcpux86_64",8],["guestmemory",3],["usize",15],["bool",15]],["result",6]]],[11,"register_pci_device","","",1,[[["option",4],["minijail",3],["systemallocator",3],["runnablelinuxvm",3],["box",3],["pcidevice",8]],[["result",6],["pciaddress",3]]]],[11,"debug_read_registers","","",1,[[],[["result",6],["x86_64coreregs",3]]]],[11,"debug_write_registers","","",1,[[["x86_64coreregs",3]],["result",6]]],[11,"debug_read_memory","","",1,[[["guestaddress",3],["usize",15],["guestmemory",3]],[["result",6],["vec",3]]]],[11,"debug_write_memory","","",1,[[["guestaddress",3],["guestmemory",3]],["result",6]]],[11,"debug_enable_singlestep","","",1,[[],["result",6]]],[11,"debug_set_hw_breakpoints","","",1,[[],["result",6]]]],"p":[[4,"Error"],[3,"X8664arch"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);